[["index.html", "醫學統計學 前言", " 醫學統計學 王 超辰 Chaochen Wang 2023-09-04 前言 We are drowning in information and starving for knowledge. — Rutherford D. Roger 尚未想好寫什麼作前言。我只是默默地想留下一些筆記和思考。本書用了兩個 R 包編譯，分別是 knitr (Xie 2015) 和 bookdown (Xie 2018)。 在開始倒計時離開倫敦的時刻，我再次翻閱這些思考過的，痛苦過的，糾結過的，忐忑過的，這一年的學習筆記，感慨良多。倫敦衛生與熱帶醫學院 曾經是，現在依然還是我魂牽夢繞的學院，它的歷史積澱，它的小巧精緻，在它的樓道里度過的每一天都是那麼的充實而值得感動。這本書不僅僅是我的統計學學習的心路歷程，還傾注了這裡每一位老師，每一個一起奮鬥過的同學，我們的歡聲笑語，我們的喜怒哀樂。如果你的電腦/手機/iPad屏幕上打開了這本書，說明你將要或者已經是我的同仁，如果此生有幸相聚，我一定會敬你一杯。祝你學業有成，和我一起用數據科學解開這個世界的奧秘。為更平等的醫療，為了更自由的人類社會，奮鬥永不停止。 王超辰 2017年9月於倫敦 2018年7月於倫敦衛生與熱帶醫學院 本著作係採用創用 CC 姓名標示-非商業性-相同方式分享 4.0 國際 授權條款授權. References "],["author.html", "我是誰", " 我是誰 歡迎參觀我的個人主頁。 喜歡這本（未完成的）筆記嗎？如果想早點看到沒有寫完的筆記部分，歡迎充值/打賞: Paypal "],["prob-intro.html", "第 1 章 概率論入門：定義與公理 1.1 三個概率公理： 1.2 條件概率 Conditional probability 1.3 獨立 (independence) 的定義 1.4 賭博問題 1.5 賭博問題的答案", " 第 1 章 概率論入門：定義與公理 Statistics - A subject which most statisticians find difficult but which many physicians are experts on. Stephen S. Senn The Probability lectures were orgainised and taught by Professor Elizabeth Williamson. 1.1 三個概率公理： 對於任意事件 \\(A\\)，它發生的概率 \\(P(A)\\) 滿足這樣的不等式： \\(0 \\leqslant P(A) \\leqslant 1\\) \\(P(\\Omega)=1\\) , \\(\\Omega\\) 是全樣本空間 (total sample space) 對於互斥（相互獨立）的事件 \\(A_1, A_2, \\dots, A_n\\) 有如下的等式關係： \\(P(A_1\\cup A_2 \\cup \\cdots \\cup A_n)=P(A_1)+P(A_2)+\\cdots+P(A_n)\\) 你是不是覺得上面三條公理都是廢話。 不用擔心，我也是這麼覺得的。因爲所有人都認同的道理，才能成爲公理 (axiom)，因爲它們是不需要證明的自然而然形成的人人都接受的觀念。(axiom: a saying that is widely accepted on its own merits; its truth is assumed to be self-evident) 然而，正是這樣顯而易見的道理，確是拿來建築理論的基石，千萬不能小看了他們。例如，我們看下面這個看似也應該成爲公理的公式，你能證明嗎： \\[ P(A_1\\cup A_2) = P(A_1) + P(A_2) - P(A_1 \\cap A_2) \\] 證明： 先考慮 \\(A_1 \\cup A_2\\) 是什麼（拆分成三個互斥事件） \\(A_1 \\cup A_2 = (A_1\\cap \\bar{A_2})\\cup(\\bar{A_1}\\cap A_2)\\cup(A_1\\cap A_2)\\) 運用上面的公理2 3 \\(\\therefore P(A_1 \\cup A_2) = P(A_1\\cap \\bar{A_2}) + P(\\bar{A_1}\\cap A_2) + P(A_1\\cap A_2) \\;\\;\\;\\;\\;\\;(1)\\) 再考慮 \\(A_1=(A_1\\cap A_2)\\cup(A_1\\cap\\bar{A_2})\\) 繼續拆分成兩個互斥事件 \\(\\therefore P(A_1)=P(A_1\\cap A_2)+P(A_1\\cap\\bar{A_2})\\) 整理一下： \\(P(A_1\\cap\\bar{A_2})=P(A_1)-P(A_1\\cap A_2)\\) 同理可得: \\(P(\\bar{A_1}\\cap A_2)=P(A_2)-P(A_1\\cap A_2)\\) 代入上面第(1)式可得： \\[ \\begin{aligned} P(A_1 \\cup A_2) &amp;= P(A_1)-P(A_1\\cap A_2)\\\\ &amp;\\;\\;+ P(A_2)-P(A_1\\cap A_2)\\\\ &amp;\\;\\;+P(A_1\\cap A_2)\\\\ &amp;=P(A_1) + P(A_2) - P(A_1 \\cap A_2) \\end{aligned} \\] 1.2 條件概率 Conditional probability \\(P(A|S)=\\frac{P(A\\cap S)}{P(S)}\\) \\(P(A\\cap S) = P(A|S)P(S)\\) 1.3 獨立 (independence) 的定義 兩個事件定義爲互爲獨立時 (\\(A\\) and \\(B\\) are said to be independent if and only if) \\[P(A\\cap B)=P(A)P(B)\\] 因爲從條件概率的概念我們已知 \\(P(A\\cap B) = P(A|B)P(B)\\) 所以\\(P(A|B)=P(A)\\) 即：事件 \\(B\\) 無法提供事件 \\(A\\) 的任何有效訊息 (\\(A, B\\) 互相獨立) 1.4 賭博問題 終於來到本次話題的”重點”了。 假設你在一個電視遊戲節目。有上圖一樣的三扇門。其中一扇門後面有一輛保時捷，另兩扇門後面則是(味道奇特的)山羊。遊戲規則是主持人會讓你先選擇其中一扇門（先不打開你選的這扇門）。主持人隨後打開另外兩扇門中的一扇沒有保時捷的門。主持人問你，你要堅持選擇之前選中的那扇門，還是要改變主意換一扇門去猜是否可以猜中保時捷。 請問，堅持選擇之前選中的門猜中保時捷的概率高，還是主持人打開一扇門以後改變主意猜中保時捷的概率更高呢？ 1.5 賭博問題的答案 答案是：必須改變主意才能提高中獎概率。 上述情況下，最簡單的是用概率樹 (probability tree) 來做決定： 解說一下： 假定保時捷在1號門後，你第一次選擇了1號門，那麼此時主持人可以任意打開2號或者三號門（因爲他們後面都沒有保時捷）。 假定保時捷在1號門後，你第一次選了2號門，那麼此時主持人只能打開3號門（因爲一號門後是保時捷，按照遊戲規則主持人不能打開）。 假定保時捷在1號門後，你第一次選了3號門，那麼此時主持人只能打開2號門（因爲一號門後是保時捷，按照遊戲規則主持人不能打開）。 所以按照圖中給出的計算概率樹的過程可以得到: \\[P[\\text{change}]=\\frac{1}{3}+\\frac{1}{3}=\\frac{2}{3}\\\\ P[\\text{not change}]=\\frac{1}{6}+\\frac{1}{6}=\\frac{1}{3}\\] 你是否選擇了改變主意了呢？ "],["Bayes-Definition.html", "第 2 章 Bayes 貝葉斯理論的概念", " 第 2 章 Bayes 貝葉斯理論的概念 許多時候，我們需要將概率中的條件相互對調。 例如： 在已知該人羣中有20%的人有吸菸習慣(\\(P(S)\\))，吸菸的人有9%的概率有哮喘(\\(P(A|S)\\))，不吸菸的人有7%的概率有哮喘(\\(P(A|\\bar{S})\\))的前提下，有個人前來門診，發現是哮喘患者，那麼這個人有多大的概率是一個菸民？也就是要求 \\(P(S|A)\\) 這裏先引入貝葉斯的概念： 我們可以將 \\(P(A\\cap S)\\) 寫成： \\[P(A\\cap S)=P(A|S)P(S)\\\\or\\\\ P(A\\cap S)=P(S|A)P(A)\\] 這兩個等式是完全等價的。我們將他們連起來： \\[P(S|A)P(A)=P(A|S)P(S)\\\\ \\Rightarrow P(S|A)=\\frac{P(A|S)P(S)}{P(A)}\\] 是不是看起來又像是寫了一堆廢話？ 沒錯，你看出來是一堆廢話的時候，證明你也同意這背後的簡單邏輯。 再繼續，我們可以利用另外一個廢話： \\[ \\because S+\\bar{S}=1\\\\ \\therefore P(A)=P(A\\cap S)+P(A\\cap\\bar{S}) \\] 用上面的公式替換掉 \\[ P(A\\cap S)+P(A\\cap\\bar{S}） \\\\ \\therefore P(A)=P(A|S)P(S)+P(A|\\bar{S})P(\\bar{S}) \\] 可以得到貝葉斯理論公式： \\[ P(S|A)=\\frac{P(A|S)P(S)}{P(A|S)P(S)+P(A|\\bar{S})P(\\bar{S})} \\] 回到上面說到的哮喘人中有多少比例吸菸的問題。可以繼續使用概率樹來方便的計算： \\[ \\begin{aligned} P(S|A) &amp;= \\frac{P(A|S)P(S)}{P(A|S)P(S)+P(A|\\bar{S})P(\\bar{S})} \\\\ &amp;= \\frac{0.09\\times0.2}{0.09\\times0.2+0.07\\times0.8} \\\\ &amp;= 0.24 \\end{aligned} \\] 所以我們的結論就是，在已知該人羣中有20%的人有吸菸習慣(\\(P(S)\\))，吸菸的人有9%的概率有哮喘(\\(P(A|S)\\))，不吸菸的人有7%的概率有哮喘(\\(P(A|\\bar{S})\\))的前提下，有個人前來門診，發現是哮喘患者，那麼這個人有24% 的概率是一個菸民(\\(P(S|A)\\))。 "],["expectation.html", "第 3 章 期望 Expectation (或均值 or mean) 和 方差 Variance 3.1 方差的性質：", " 第 3 章 期望 Expectation (或均值 or mean) 和 方差 Variance 期望（或均值）是用來描述一組數據中心位置的指標（另一個是中位數 Median）。 對於離散型隨機變量 \\(X\\) (discrete random variables)，它的期望被定義爲： \\[E(X)=\\sum_x xP(X=x)\\] 所以就是將所有 \\(X\\) 可能取到的值乘以相應的概率後求和。這個期望（或均值）常常用希臘字母 \\(\\mu\\) 來標記。 方差 Variance 是衡量一組數據變化幅度(dispersion/variability)的指標之一。 方差的定義是： \\[Var(X)=E((X-\\mu)^2)\\\\\\text{Where, }\\mu=E(x)\\] 實際上我們更加常用的是它的另外一個公式： \\[Var(X)=E(X^2)-E(X)^2\\] 證明 上面兩個方差公式相等 \\[ \\begin{align} Var(x) &amp;= E((X-\\mu)^2) \\\\ &amp;= E(X^2-2X\\mu+\\mu^2)\\\\ &amp;= E(X^2) - 2\\mu E(X) + \\mu^2\\\\ &amp;= E(X^2) - 2\\mu^2 + \\mu^2 \\\\ &amp;= E(X^2) - \\mu^2 \\\\ &amp;= E(X^2) - E(X)^2 \\end{align} \\] 3.1 方差的性質： \\(Var(X+b)=Var(X)\\) \\(Var(aX)=a^2Var(X)\\) \\(Var(aX+b)=a^2Var(X)\\) "],["bernoulli.html", "第 4 章 伯努利分佈 Bernoulli distribution", " 第 4 章 伯努利分佈 Bernoulli distribution 伯努利分佈，說的就是一個簡單的二分變量 (1, 0)，它取1時的概率如果是 \\(\\pi\\)。那麼我們可以計算這個分佈的期望值: \\[ \\begin{align} E(X) &amp;=\\sum_x xP(X=x) \\\\ &amp;=1\\times\\pi + 0\\times(1-\\pi)\\\\ &amp;=\\pi \\end{align} \\] 由於 \\(x=x^2\\)，因爲 \\(x=0,1\\), 所以 \\(E[X^2]=E[X]\\)，那麼方差爲： \\[ \\begin{align} Var(X) &amp;=E[X^2]-E[X]^2 \\\\ &amp;=E[X]-E[X]^2 \\\\ &amp;=\\pi - \\pi^2 \\\\ &amp;=\\pi(1-\\pi) \\end{align} \\] 證明，\\(X,Y\\) 爲互爲獨立的隨機離散變量時，a) \\(E(XY)=E(X)E(Y)\\) ; b) \\(Var(X+Y)=Var(X)+Var(Y)\\) 證明 \\[ \\begin{align} E(XY) &amp;= \\sum_x\\sum_y xyP(X=x, Y=y) \\\\ \\because &amp;\\; X,Y \\text{are independent to each other} \\\\ \\therefore &amp;= \\sum_x\\sum_y xyP(X=x)P(Y=y)\\\\ &amp;=\\sum_x xP(X=x)\\sum_y yP(Y=y)\\\\ &amp;=E(X)E(Y) \\end{align} \\] 證明 根據方差的定義： \\[ \\begin{align} Var(X+Y) &amp;= E((X+Y)^2)-E(X+Y)^2 \\\\ &amp; \\; \\text{Expand} \\\\ &amp;=E(X^2+2XY+Y^2)-(E(X)+E(Y))^2\\\\ &amp;=E(X^2)+E(Y^2)+2E(XY)\\\\ &amp;\\;\\;\\; - E(X)^2-E(Y)^2-2E(X)E(Y)\\\\ &amp;\\; \\text{We just showed}\\; E(XY)=E(X)E(Y)\\\\ &amp;=E(X^2)-E(X)^2+E(Y^2)-E(Y)^2 \\\\ &amp;=Var(X)+Var(Y) \\end{align} \\] "],["binomial.html", "第 5 章 二項分佈的概念 Binomial distribution 5.1 二項分佈的期望和方差 5.2 超幾何分佈 hypergeometric distribution 5.3 樂透中獎概率問題：", " 第 5 章 二項分佈的概念 Binomial distribution 二項分佈在醫學研究中至關重要，一組二項分佈的數據，指的通常是 \\(n\\) 次相互獨立的成功率爲 \\(\\pi\\) 的伯努利實驗 (\\(n\\) independent Bernoulli trials) 中成功的次數。 當 \\(X\\) 服從二項分佈，記爲 \\(X \\sim binomial(n, \\pi)\\) 或\\(X \\sim bin(n, \\pi)\\)。它的(第 \\(x\\) 次實驗的)概率被定義爲： \\[ \\begin{align} P(X=x) &amp;= ^nC_x\\pi^x(1-\\pi)^{n-x} \\\\ &amp;= \\binom{n}{x}\\pi^x(1-\\pi)^{n-x} \\\\ &amp; for\\;\\; x = 0,1,2,\\dots,n \\end{align} \\] 5.1 二項分佈的期望和方差 期望 \\(E(X)\\) 若 \\(X \\sim bin(n,\\pi)\\)，那麼 \\(X\\) 就是這一系列獨立伯努利實驗中成功的次數。 用 \\(X_i, i =1,\\dots, n\\) 標記每個相互獨立的伯努利實驗。 那麼我們可以知道 \\(X=\\sum_{i=1}^nX_i\\)。 \\[ \\begin{align} E(X) &amp;= E(\\sum_{i=1}^nX_i)\\\\ &amp;= E(X_1+X_2+\\cdots+X_n) \\\\ &amp;= E(X_1)+E(X_2)+\\cdots+E(X_n)\\\\ &amp;= \\sum_{i=1}^nE(X_i)\\\\ &amp;= \\sum_{i=1}^n\\pi \\\\ &amp;= n\\pi \\end{align} \\] 方差 \\(Var(X)\\) \\[ \\begin{align} Var(X) &amp;= Var(\\sum_{i=1}^nX_i) \\\\ &amp;= Var(X_i+X_2+\\cdots+X_n) \\\\ &amp;= Var(X_i)+Var(X_2)+\\cdots+Var(X_n) \\\\ &amp;= \\sum_{i=1}^nVar(X_i) \\\\ &amp;= n\\pi(1-\\pi) \\\\ \\end{align} \\] 5.2 超幾何分佈 hypergeometric distribution 假設我們從總人數爲 \\(N\\) 的人羣中，採集一個樣本 \\(n\\)。假如已知在總體人羣中(\\(N\\))有 \\(M\\) 人患有某種疾病。請問採集的樣本 \\(X=n\\) 中患有這種疾病的人，服從怎樣的分佈？ 從人羣(\\(N\\))中取出樣本(\\(n\\))，有 \\(^NC_n\\) 種方法。 從患病人羣(\\(M\\))中取出患有該病的人(\\(x\\))有 \\(^MC_x\\) 種方法。 樣本中不患病的人(\\(n-x\\))被採樣的方法有 \\(^{N-M}C_{n-x}\\) 種。 採集一次 \\(n\\) 人作爲樣本的概率都一樣。因此： \\[P(X=x)=\\frac{\\binom{M}{x}\\binom{N-M}{n-x}}{\\binom{N}{n}}\\] 5.3 樂透中獎概率問題： 從數字 \\(1\\sim59\\) 中選取 \\(6\\) 個任意號碼 開獎時從 \\(59\\) 個號碼球中隨機抽取 \\(6\\) 個 如果六個號碼全部猜中(不分順序)，你可以成爲百萬富翁。請問一次猜中全部 \\(6\\) 個號碼的概率是多少？ 從 \\(59\\) 個號碼中隨機取出任意 \\(6\\) 個號碼的方法有 \\(^{59}C_6\\) 種。 \\[^{59}C_6=\\frac{59!}{6!(59-6)!}=45,057,474\\] 每次選取六個號碼做爲一組的可能性相同，所以，你買了一組樂透號碼，能中獎的概率就是 \\(1/45,057,474 = 0.00000002219\\)。你還會再去買彩票麼？ 5.3.1 如果我只想中其中的 \\(3\\) 個號碼，概率有多大？ 用超幾何分佈的概率公式： \\[ \\begin{align} P(X=3) &amp;= \\frac{^6C_3\\times ^{53}C_3}{^{59}C_6} \\\\ &amp;= 0.010 \\end{align} \\] 你有 \\(1\\%\\) 的可能中獎。換句話說，如果中三個以上的數字算中獎的話，你買的彩票中獎的概率低於 \\(1\\%\\)。是不是覺得下次送錢給博彩公司的時候還不如跟我一起喝一杯咖啡划算？ "],["poisson.html", "第 6 章 泊松分佈 Poisson Distribution", " 第 6 章 泊松分佈 Poisson Distribution 當一個事件，在一段時間 (\\(T\\)) 中可能發生的次數是 \\(\\lambda\\) 。那麼我們可以認爲，經過時間 \\(T\\)，該事件發生的期望次數是 \\(E(X)=\\lambda T\\)。 利用微分思想，將這段時間 \\(T\\) 等分成 \\(n\\) 個時間段，當 \\(n\\rightarrow\\infty\\) 直到每個微小的時間段內最多發生一次該事件。 那麼 每個微小的時間段，可以視爲是一個伯努利實驗（有事件發生或者沒有） 那麼這整段時間 \\(T\\) 內發生的事件可以視爲是一個二項分佈實驗。 令 \\(X=\\) 一次事件發生時所經過的所有時間段。 \\(X \\sim Bin(n, \\pi)\\)，其中 \\(n\\rightarrow\\infty\\)，\\(n\\) 爲時間段。 在每個分割好的時間段內，事件發生的概率都是：\\(\\pi=\\frac{\\lambda T}{n}\\) 期望 \\(\\mu=\\lambda T \\Rightarrow \\pi=\\mu/n\\) 所以 \\(X\\) 的概率方程就是： \\[ \\begin{align} P(X=x) &amp;= \\binom{n}{x}\\pi^x(1-\\pi)^{n-x} \\\\ &amp;= \\binom{n}{x}(\\frac{\\mu}{n})^x(1-\\frac{\\mu}{n})^{n-x} \\\\ &amp;= \\frac{n!}{x!(n-x)!}(\\frac{\\mu}{n})^x(1-\\frac{\\mu}{n})^{n-x} \\\\ &amp;=\\frac{n!}{n^x(n-x)!}\\frac{\\mu^x}{x!}(1-\\frac{\\mu}{n})^{n-x}\\\\ \\text{when}\\; n\\rightarrow\\infty &amp;\\; x \\ll n\\\\ \\frac{n!}{n^x(n-x)!} &amp;=\\frac{n(n-1)\\dots(n-x+1)}{n^x} \\rightarrow 1\\\\ (1-\\frac{\\mu}{n})^{n-x} &amp;\\approx (1-\\frac{\\mu}{n})^n \\rightarrow e^{-\\mu}\\\\ \\text{the probability function } &amp; \\text{ of a Poisson distribution} \\\\ P(X=x) &amp;\\rightarrow \\frac{\\mu^x}{x!}e^{-\\mu} \\end{align} \\] 當數據服從泊松分佈時，記爲 \\(X\\sim Poisson(\\mu=\\lambda T)\\;\\; or\\;\\; X\\sim Poi(\\mu)\\) 證明泊松分佈的參數特徵： \\(E(X)=\\mu\\) \\[ \\begin{align} E(X) &amp;= \\sum_{x=0}^\\infty xP(X=x) \\\\ &amp;= \\sum_{x=0}^\\infty x\\frac{\\mu^x}{x!}e^{-\\mu} \\\\ &amp;= 0+ \\sum_{x=1}^\\infty x\\frac{\\mu^x}{x!}e^{-\\mu} \\\\ &amp;= \\sum_{x=1}^\\infty \\frac{\\mu^x}{(x-1)!}e^{-\\mu} \\\\ &amp;= \\mu\\sum_{x=1}^\\infty \\frac{\\mu^{x-1}}{(x-1)!}e^{-\\mu} \\\\ \\text{replace}\\; &amp;x\\; \\text{with all}\\; i=x-1 \\\\ &amp;= \\mu\\sum_{i=0}^\\infty \\frac{\\mu^{i}}{i!}e^{-\\mu} \\\\ \\text{notice that}\\; &amp; \\text{the right side} \\sum_{i=0}^\\infty \\frac{\\mu^{i}}{i!}e^{-\\mu}=1 is \\\\ \\text{the sum of all}\\;&amp; \\text{probability of a Poisson distribution}\\\\ &amp;= \\mu \\end{align} \\] \\(Var(x)=\\mu\\) 爲了找到 \\(Var(X)\\)，我們用公式 \\(Var(X)=E(X^2)-E(X)^2\\) 我們需要找到 \\(E(X^2)\\) \\[ \\begin{align} E(X^2) &amp;= \\sum_{x=0}^\\infty x^2\\frac{\\mu^x}{x!}e^{-\\mu} \\\\ &amp;= \\mu \\sum_{x=1}^\\infty x\\frac{\\mu^{x-1}}{(x-1)!}e^{-\\mu} \\\\ \\text{replace}\\; &amp;x\\; \\text{with all}\\; i=x-1 \\\\ &amp;= \\mu \\sum_{i=0}^\\infty (i+1)\\frac{\\mu^{i}}{i!}e^{-\\mu} \\\\ &amp;= \\mu(\\sum_{i=0}^\\infty i\\frac{\\mu^i}{i!}e^{-\\mu} + \\sum_{i=0}^\\infty \\frac{\\mu^i}{i!}e^{-\\mu}) \\\\ &amp;= \\mu(E(X)+1) \\\\ &amp;= \\mu^2+\\mu \\\\ Var(X) &amp;= E(X^2) - E(X)^2 \\\\ &amp;= \\mu^2 + \\mu -\\mu^2 \\\\ &amp;= \\mu \\end{align} \\] "],["normaldistr.html", "第 7 章 正（常）態分佈 Normal Distribution 7.1 概率密度曲線 probability density function， PDF 7.2 正（常）態分佈 7.3 標準正（常）態分佈", " 第 7 章 正（常）態分佈 Normal Distribution 7.1 概率密度曲線 probability density function， PDF 一個隨機連續型變量 \\(X\\) 它的性質由一個對應的概率密度方程 (probability density function, PDF) 決定。 在給定的範圍區間內，如 \\(a\\sim b, (a &lt; b)\\)，它的概率滿足: \\[P(a\\leqslant X \\leqslant b) = \\int_a^bf(x)dx\\] 這個相關的方程，在 \\(a\\sim b\\) 區間內的積分，就是這個連續變量在這個區間內取值的概率。 # R codes for drawing a standard normal distribution by using ggplot2 p &lt;- ggplot(data.frame(x=c(-3,3)), aes(x=x)) + stat_function(fun = dnorm) p + annotate(&quot;text&quot;, x=2, y=0.3, parse=TRUE, label=&quot;frac(1, sqrt(2*pi)) * e ^(-z^2/2)&quot;) + theme(plot.subtitle = element_text(vjust = 1), plot.caption = element_text(vjust = 1), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), plot.title = element_text(size = 10, face = &quot;bold&quot;, hjust = 0.5), panel.background = element_rect(fill = &quot;ivory&quot;)) + labs(title = &quot;Probability density functions \\n for standard normal distribution&quot;, x = NULL, y = NULL) + stat_function(fun = dnorm, xlim = c(-1.3,0.4), geom = &quot;area&quot;,fill=&quot;#00688B&quot;, alpha= 0.2) 圖 7.1: Probability Density Function of a Standard Normal Distribution 注意：整個方程的曲線下面積等於 \\(1\\)： \\[\\int_{-\\infty}^\\infty f(x)dx=1\\] 期望 \\(E(X)=\\int_{-\\infty}^\\infty xf(x)dx\\) 方差 \\(Var(X)=\\int_{-\\infty}^\\infty (x-\\mu)^2f(x)dx\\) 7.2 正（常）態分佈 如果一組數據服從正（常）態分佈，我們通常用它的期望（或者叫平均值）\\(\\mu\\)，和它的方差 \\(\\sigma^2\\)，來描述這組數據。記爲： \\[X \\sim N(\\mu, \\sigma^2)\\] 它的概率密度方程可以表述爲： \\[f(x)=\\frac{1}{\\sqrt{2\\pi\\sigma^2}}exp(-\\frac{(x-\\mu)^2}{2\\sigma^2})\\] \\(E(x) =\\mu\\) \\(Var(x)=\\sigma^2\\) 7.3 標準正（常）態分佈 標準正（常）態分佈的期望（或者均值）爲 \\(0\\)，方差爲 \\(1\\) 記爲：\\(Z \\sim N(0,1)\\) 它的概率密度方程表述爲： \\[\\frac{1}{\\sqrt{2\\pi}}exp(-\\frac{z^2}{2})\\] 它的累積分佈方程 (cumulative distribution function， CDF)，是將概率密度方程 (PDF) 積分以後獲得的方程。通常我們記爲 \\(\\Phi(z)\\) 再看一下標準正（常）態分佈的概率密度方程曲線： 圖 7.2: Probability Density function of a Standard Normal Distribution 95% 的曲線下面積在標準差 standard deviation \\(-1.96\\sim1.96\\) 之間的區域。 而且，\\(\\phi(-x)=1-\\phi(x)\\) 任何一個正（常）態分佈都可以通過下面的公式，標準化成爲標準正（常）態分佈： \\[Z=\\frac{X-\\mu}{\\sigma}\\] "],["CLT.html", "第 8 章 中心極限定理 the Central Limit Theorem 8.1 協方差 Covariance 8.2 相關 Correlation 8.3 中心極限定理 the Central Limit Theorem 8.4 二項分佈的正（常）態分佈近似 8.5 泊松分佈的正（常）態分佈近似 8.6 正（常）態分佈模擬的校正：continuity corrections 8.7 兩個連續隨機變量 8.8 兩個連續隨機變量 例子： 8.9 條件分佈和邊緣分佈的概念 8.10 條件分佈和邊緣分佈的例子", " 第 8 章 中心極限定理 the Central Limit Theorem 最近明顯可以感覺到課程的步驟開始加速。看我的課表： 手機畫面太小了。早上都是9點半開始，下午基本都是到5點。週一更慘，到7點。週二-週五中午都被統計中心的講座佔據。簡直是非人的生活。 這周概率論基礎結束。中心極限定理講完以後我們正式進入了 Inference 統計推斷的課程。我們花了一天時間講什麼是樣本估計 (Estimation)，什麼是參數精確度 (Precision)，什麼是自由度 (degree of freedom)，怎樣進行不偏的估計 (unbiased inference)。然後還有似然方程 (likelihood function)。 今天的更新還是簡單的把概率論掃尾一下。感受一下中心極限定理的偉大。 8.1 協方差 Covariance 之前我們定義過，兩個獨立連續隨機變量 \\(X,Y\\) 之和的方差 Variance ： \\[\\text{Var}(X+Y)=\\text{Var}(X)+\\text{Var}(Y)\\] 然而如果他們並不相互獨立的話： \\[ \\begin{aligned} \\text{Var}(X+Y) &amp;= E[((X+Y)-E(X+Y))^2] \\\\ &amp;= E[(X+Y)-(E(X)+E(Y))^2] \\\\ &amp;= E[(X-E(X)) - (Y-E(Y))^2] \\\\ &amp;= E[(X-E(X))^2+(Y-E(Y))^2 \\\\ &amp; \\;\\;\\; +2(X-E(X))(Y-E(Y))] \\\\ &amp;= \\text{Var}(X)+\\text{Var}(Y)+2E[(X-E(X))(Y-E(Y))] \\end{aligned} \\] 可以發現在兩者和的方差公式展開之後多了一部分 \\(E[(X-E(X))(Y-E(Y))]\\)。 這個多出來的一部分就說明了二者 \\((X, Y)\\) 之間的關係。它被定義爲協方差 (Covariance): \\[\\text{Cov}(X,Y) = E[(X-E(X))(Y-E(Y))]\\] 所以： \\[\\text{Var}(X+Y)=\\text{Var}(X)+\\text{Var}(Y)+2Cov(X,Y)\\] 要記住，協方差只能用於評價\\(X,Y\\)之間的線性關係 (Linear Association)。 以下是協方差 (Covariance) 的一些特殊性質： \\(\\text{Cov}(X,X)=\\text{Var}(X)\\) \\(\\text{Cov}(X,Y)=\\text{Cov}(Y,X)\\) \\(\\text{Cov}(aX,bY)=ab\\:\\text{Cov}(X,Y)\\) \\[\\text{Cov}(aR+bS,cX+dY)=ac\\:\\text{Cov}(R,X)+ad\\:\\text{Cov}(R,Y)\\\\ \\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;+bc\\:\\text{Cov}(S,X)+bd\\:\\text{Cov}(S,Y)\\] \\[\\text{Cov}(aX+bY,cX+dY)=ac\\:\\text{Var}(X)+ad\\:\\text{Var}(Y)\\\\ \\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;+(ad+bc)\\text{Cov}(X,Y)\\] \\(\\text{Cov}(X+Y,X-Y)=\\text{Var}(X)-\\text{Var}(Y)\\) If \\(X, Y\\) are independent. \\(\\text{Cov}(X,Y)=0\\) But not vise-versa ! 8.2 相關 Correlation 協方差雖然\\(\\text{Cov}(X,Y)\\) 的大小很大程度上會被他們各自的單位和波動大小左右。 我們將協方差標準化(除以各自的標準差 s.d.) (standardization) 之後，就可以得到相關係數 Corr (\\(-1\\sim1\\)): \\[\\text{Corr}(X,Y)=\\frac{\\text{Cov}(X,Y)}{\\text{SD}(X)\\text{SD}(Y)}=\\frac{\\text{Cov}(X,Y)}{\\sqrt{\\text{Var}(X)\\text{Var}(Y)}}\\] 8.3 中心極限定理 the Central Limit Theorem 如果從人羣中多次選出樣本量爲 \\(n\\) 的樣本，並計算樣本均值, \\(\\bar{X}_n\\)。那麼這個樣本均值 \\(\\bar{X}_n\\) 的分佈，會隨着樣本量增加 \\(n\\rightarrow\\infty\\)，而接近正（常）態分佈。 偉大的中心極限定理告訴我們： 當樣本量足夠大時，樣本均值 \\(\\bar{X}_n\\) 的分佈爲正（常）態分佈，這個特性與樣本來自的人羣的分佈 \\(X_i\\) 無關。 再說一遍： 如果對象是獨立同分佈 i.i.d (identically and independently distributed)。那麼它的總體期望和方差分別是: \\(E(X)=\\mu;\\;Var(X)=\\sigma^2\\)。 根據中心極限定理，可以得到： 當樣本量增加，樣本均值的分佈服從正（常）態分佈： \\[\\bar{X}_n\\sim N(\\mu, \\frac{\\sigma^2}{n})\\] 也可以寫作，當樣本量增加： \\[\\sum_{i=1}^nX_i \\sim N(n\\mu,n\\sigma^2)\\] 有了這個定理，我們可以拋開樣本空間(\\(X\\))的分佈，也不用假定它服從正（常）態分佈。 但是樣本的均值，卻總是服從正（常）態分佈的。簡直是太完美了！！！！！！ 8.4 二項分佈的正（常）態分佈近似 假設我們有大量(\\(n\\rightarrow\\infty\\))的二項分佈實驗 \\(X\\sim Bin(n, \\pi)\\) 根據二項分佈的概率公式，計算將會變得很繁瑣複雜。 解決辦法：應用中心極限定理。 中心極限定理告訴我們，當樣本量足夠大時: \\[X\\sim N(n\\pi, n\\pi(1-\\pi))\\] 問題在於，多大的 \\(n\\) 才能算大樣本呢？ 當且僅當 (only and if only) \\(n&gt;20\\) AND \\(n\\pi&gt;5\\) AND \\(n(1-\\pi)&gt;5\\) 8.5 泊松分佈的正（常）態分佈近似 假設時間 \\(t\\) 內某事件的發生次數服從泊松分佈 \\(X\\sim Po(\\mu)\\)。 考慮將這段時間 \\(t\\) 等分成 \\(n\\) 個時間段。那麼第 \\(i\\) 時間段內事件發生次數依舊服從泊松分佈 \\(X_i\\sim Po(\\frac{\\mu}{n})\\)。且 \\(E(X_i)=\\mu/n, Var(X_i)=\\mu/n\\)。 那麼原先的 \\(X\\) 可以被視爲是將這無數的小時間段的 \\(X_i\\) 相加。應用中心極限定理： \\[X=\\sum_{i=1}^nX_i\\sim N(\\frac{n\\mu}{n}, \\frac{n\\mu}{n})\\] 需要注意的是，這段時間 (\\(t\\)) 內發生的事件次數 (\\(\\lambda\\)) : \\(\\lambda t =\\mu&gt;10\\) ，這樣的正（常）態分佈模擬才能成立。 8.6 正（常）態分佈模擬的校正：continuity corrections 如果我們使用正（常）態分佈來模擬離散變量的分佈，常常需要用到正（常）態分佈模擬的矯正。 例如：我們如果用正（常）態分佈模擬來計算 \\(P(X=15)\\)，那麼實際上我們應該計算的是 \\(P(14.5&lt;X&lt;15.5)\\)。 8.6.1 例題 已知 \\(X\\sim Bin(100,0.5)\\)，求 \\(P(X&gt;60)\\) 解 \\[ \\begin{aligned} \\because X&amp;\\sim Bin(100, 0.5) \\\\ \\therefore E(X) &amp;=n\\pi=50 \\\\ Var(X) &amp;= n\\pi(1-\\pi) =25=5^2\\\\ P(X&gt;60) &amp;= 1-P(X\\leqslant60) \\\\ &amp;= 1-P(Z\\leqslant\\frac{60.5-50}{\\sqrt{25}}) \\\\ &amp;= 1-P(Z\\leqslant2.1) \\\\ &amp;= 1-\\Phi(2.1) \\\\ &amp;= 1-0.982 = 0.018 \\end{aligned} \\] # 快來看實際用傻瓜算法計算獲得的概率： 1-pbinom(60, size=100, prob=0.5) ## [1] 0.0176 # 快來看用中心極限定理模擬正（常）態分佈獲得的概率： 1-pnorm((60.5-50)/sqrt(25)) ## [1] 0.01786 圖 8.1: Probability of 60 successes out of 100 Binomial trials, probability of success = 0.75 已知 \\(X\\sim Bin(48, 0.75)\\), 求 \\(P(30&lt;X&lt;39)\\) 解 \\[ \\begin{aligned} \\because B &amp;\\; \\sim Bin(48, 0.75) \\\\ \\therefore E(X) &amp;\\; =n\\pi=36 \\\\ \\text{Var}(X) &amp;\\; =n\\pi(1-\\pi)=9=3^2 \\\\ P(30&lt;X&lt;39) &amp;\\; = P(31\\leqslant X\\leqslant 38)\\\\ &amp;\\; = P(30.5\\leqslant Y \\leqslant 38.5) \\\\ Y\\text{ is the }&amp; \\text{ normal approximation} \\\\ &amp;\\;= P(Y&lt;38.5) - P(Y&lt;30.5) \\\\ &amp;\\;= P(Z\\leqslant\\frac{38.5-36}{3})- P(Z\\leqslant\\frac{30.5-36}{3}) \\\\ &amp;\\;= P(Z\\leqslant0.833) - P(Z\\leqslant-1.833) \\\\ &amp;\\;= \\Phi(0.833)-\\Phi(-1.833) \\\\ &amp;\\;= 0.798-0.033 = 0.764 \\end{aligned} \\] # 快來看實際用傻瓜算法計算獲得的概率： pbinom(38, size=48, prob=0.75)-pbinom(30, size=48, prob=0.75) ## [1] 0.7578 # 快來看用中心極限定理模擬正（常）態分佈獲得的概率： pnorm((38.5-36)/sqrt(9)) - pnorm((30.5-36)/sqrt(9)) ## [1] 0.7643 圖 8.2: Probability of 30-39 successes out of 48 Binomial trials, probability of success = 0.75 從上面兩個例題也能看出，\\(n\\) 越小，正（常）態分佈模擬的誤差就越大。 已知 \\(X \\sim Poisson(30)\\) 求 \\(P(X\\leqslant20)\\)。 解 \\[ \\because E(X)=\\mu=30, \\;Var(X)=\\mu=30=(\\sqrt{30})^2 \\\\ \\begin{aligned} Pr(X\\leqslant20) &amp;= P(Z\\leqslant\\frac{20.5-30}{\\sqrt{30}}) \\\\ &amp;= P(Z\\leqslant-1.734) \\\\ &amp;= \\Phi(-1.734) \\\\ &amp;= 0.0414 \\end{aligned} \\] # 快來看實際用傻瓜算法計算獲得的概率： ppois(20, lambda=30) ## [1] 0.03528 # 快來看用中心極限定理模擬正（常）態分佈獲得的概率： pnorm((20.5-30)/sqrt(30)) ## [1] 0.04142 這兩個其實有些小差距。不過看下圖，其模擬還是很到位的。只是正（常）態分佈的面積明顯確實比泊松分佈的小柱子面積要大一些。 圖 8.3: Probability of less than 20 events happen when the expectation is 30 已知 \\(X_1, X_2 \\stackrel{i.i.d}{\\sim} Poi(30)\\) 求 \\(P(X_1+X_2\\leqslant40)\\)。 解 \\[ \\begin{aligned} E(X_1+X_2) &amp;\\;= E(X_1)+E(X_2) = 30+30 = 60\\\\ Var(X_1+X_2) &amp;\\;= Var(X_1)+Var(X_2) = 30+30 \\\\ &amp;\\;= (\\sqrt{60})^2 \\\\ P(X_1+X_2\\leqslant 40) &amp;\\;= P(Z \\leqslant \\frac{40.5-60}{\\sqrt{60}}) \\\\ &amp;\\;= P(Z\\leqslant-2.517) \\\\ &amp;\\;= \\Phi(-2.517) \\\\ &amp;\\;= 0.006 \\end{aligned} \\] # 快來看實際用傻瓜算法計算獲得的概率： ppois(40, lambda=60) ## [1] 0.003983 # 快來看用中心極限定理模擬正（常）態分佈獲得的概率： pnorm((40.5-60)/sqrt(60)) ## [1] 0.005911 圖 8.4: Probability of 2 identically and independently observed results of less or equal to 40 events happen in total when the expectation of each observation is 30 又一次，正（常）態分佈的面積比泊松分佈的小柱子面積要大一些。 8.7 兩個連續隨機變量 假定 \\(X_1, X_2\\) 是兩個連續隨機變量： \\[ E(X_1)=\\mu_1, \\text{Var}(X_1)=\\sigma_1^2 \\\\ E(X_2)=\\mu_2, Var(X_2)=\\sigma_2^2 \\\\ Corr(X_1, X_2)=\\rho \\Rightarrow \\text{Cov}(X_1, X_2)=\\rho\\sigma_1\\sigma_2=\\sigma_{12} \\] 利用矩陣的標記法，可以將 \\(X_1, X_2\\) 標記爲 \\(\\textbf{X}=(X_1, X_2)^T\\), 即： \\[ \\textbf{X}=\\left( \\begin{array}{c} X_1\\\\ X_2\\\\ \\end{array} \\right) \\] 上面的所有內容都可以標記爲： \\[ E(\\textbf{X})=\\mathbf{\\mu}=\\left( \\begin{array}{c} \\mu_1\\\\ \\mu_2\\\\ \\end{array} \\right)\\\\ Covariance \\;matrix: \\\\ Var(\\textbf{X})=\\mathbf{\\Sigma}=\\left( \\begin{array}{c} \\sigma_1^2 &amp; \\sigma_{12}\\\\ \\sigma_{12} &amp; \\sigma_2^2\\\\ \\end{array} \\right) \\] 8.8 兩個連續隨機變量 例子： 假如要看收縮期血壓 (\\(SBP\\)) 和舒張期血壓 (\\(DBP\\)) 之間的關係： 下列爲已知條件： \\(SBP\\) 的均值爲 \\(130\\), 標準差爲 \\(15\\); \\(DBP\\) 的均值爲 \\(90\\), 標準差爲 \\(10\\); \\(SBP\\) 和 \\(DBP\\) 之間的相關係數爲 \\(0.75\\)。 那麼， 我們可以把這些信息用下面的方法來標記： \\[ E(\\textbf{X})=\\mathbf{\\mu}=\\left( \\begin{array}{c} 130\\\\ 90\\\\ \\end{array} \\right)\\\\ Var(\\textbf{X})=\\mathbf{\\Sigma}=\\left( \\begin{array}{c} 15^2 = 225 &amp; 0.75 \\times 15 \\times 10 = 112.5\\\\ 0.75 \\times 15 \\times 10 = 112.5 &amp; 10^2 = 100\\\\ \\end{array} \\right) \\] 8.9 條件分佈和邊緣分佈的概念 如果 \\(\\textbf{X}=(X_1, X_2)^T\\) 的兩個變量都服從正（常）態分佈； 那麼這兩個變量的邊緣分佈 (marginal distribution) 也服從正（常）態分佈: \\[X_1\\sim N(\\mu_1,\\sigma_1^2), X_2\\sim N(\\mu, \\sigma_2^2)\\] 同樣的，\\(X_1\\) 的給出 \\(X_2\\) 的條件分佈 (condition distribution) 也服從正（常）態分佈： \\[E(X_1|X_2)=\\mu_1+\\frac{\\rho\\sigma_1}{\\sigma_2}(X_2-\\mu_2) \\\\ \\text{Var}(X_1|X_2)=\\sigma_1^2(1-\\rho^2)\\] 反之亦然。 8.10 條件分佈和邊緣分佈的例子 上面的概念過於抽象，用血壓的例子： 收縮期血壓和舒張期血壓各自服從正（常）態分佈。那麼可以用上面的概念來寫出已知舒張期血壓時，收縮期血壓的分佈。 條件期望: \\[E(\\text{SBP|DBP})=130+\\frac{0.75\\times15}{10}(\\text{DBP}-90)\\] 實際如果來了一個病人，他說他只記得自己測的舒張期血壓是95： 他的收縮期血壓的期望值就可以用上面的式子計算： \\[E(\\text{SBP|DBP}=95)=136\\] 條件方差爲： \\[\\text{Var}(\\text{SBP|DBP})=15^2(1-0.75^2)=98.4\\approx9.92^2&lt;15^2\\] 所以當我們知道了這個人的一部分信息以後，推測他的另一個相關連的變量變得更加準確(方差變小)了。 8.10.1 例題 有 (閒) 人記錄了 \\(1494\\) 名兒童在 \\(2, 4, 6\\) 歲時的腿長度。已知在記錄的這三個年齡時的平均腿長度分別爲 \\(85 \\text{ cm}, 103 { cm}, 114 { cm}\\)。協方差矩陣如下: \\[ \\left( \\begin{array}{c} 22.2 &amp; 11.8 &amp; 13.7\\\\ 11.8 &amp; 26.3 &amp; 21.5\\\\ 13.7 &amp; 21.5 &amp; 29.0 \\end{array} \\right) \\] 假定，這三個年齡記錄的這些兒童的腿長度數據（聯合分佈, joint distribution）服從三個變量正（常）態分佈。 求 \\(2\\) 歲時這些兒童的腿長度的邊緣分佈 (marginal distribution) 解 \\[X_{\\text{age}=2} \\sim N(85, \\sigma_{\\text{age}=2}^2=22.2)\\] 求他們 \\(6\\) 歲時腿長度的 \\(2\\) 歲時的條件分佈。(Find the distribution of leg length age 6 conditional on leg length at age 2.) 解 \\(6\\) 歲時和 \\(2\\) 歲時腿長的相關係數 (correlation, \\(\\rho_{6,2}\\)) 爲： \\[ \\begin{aligned} \\rho_{6,2} &amp;= \\frac{Cov_{6,2}}{\\sqrt{\\text{Var}(\\text{length}_6)}\\sqrt{\\text{Var}(\\text{length}_2)}}\\\\ &amp;= \\frac{13.7}{\\sqrt{22.2}\\sqrt{29}}=0.54 \\end{aligned} \\] 條件分佈套用上面提到的公式： \\[ \\begin{aligned} E({\\text{length}_6 | \\text{length}_2}) &amp;= \\mu_6+\\frac{\\rho_{6,2}\\sigma_6}{\\sigma_2}(\\text{length}_2-\\mu_2) \\\\ &amp;= 114+\\frac{0.54\\times\\sqrt{29.0}}{\\sqrt{22.2}}(\\text{length}_2-85)\\\\ \\text{Var}(\\text{length}_6 | \\text{length}_2) &amp;= \\sigma_6^2(1-\\rho_{6,2}^2) \\\\ &amp;= 29.0\\times(1-0.54^2) =20.5 \\end{aligned} \\] "],["inference-basic.html", "第 9 章 統計推斷的概念 9.1 人羣與樣本 (population and sample) 9.2 樣本和統計量 (sample and statistic) 9.3 估計 Estimation 9.4 信賴區間 confidence intervals", " 第 9 章 統計推斷的概念 If people do not believe that mathematics is simple, it is only because they do not realize how complicated life is. John von Neumann The Inference lectures were orgainised and taught by Professor Daniel Altmann, Professor John Gregson, and Dr. Katy Morgan. 9.1 人羣與樣本 (population and sample) 討論樣本時，需考慮下面幾個問題： 樣本是否具有代表性？ 人羣被準確定義了嗎？ 我們感興趣的“人羣”是否可以是無限大 (多) 的？ 我們研究的樣本，是僅僅用來觀察，亦或是計劃對之進行某種干預呢？ 我們從所有可能的人羣中抽樣了嗎？ 9.2 樣本和統計量 (sample and statistic) 通常我們在進行實驗或觀察時只是獲得了樣本的數據。而希望從樣本數據去推斷 (inference) 總體 (或人羣) 的一些特徵。我們也許只是想用樣本的平均值來估計整體人羣的某個特徵的平均值。不管是何種估計和推斷，都是基於對樣本數據的計算，從樣本中獲得想要推斷總體的統計量 (statistics)。我們用已知樣本去推斷未知總體的過程就叫做估計 (estimate)。這個想要被推斷的總體或人羣的值，被叫做參數 (parameter)，常常使用希臘字母來標記。用來估計總體或人羣的，從樣本數據計算得來的統計量，叫做估計量 (estimator)。 所有的統計量，都有樣本分佈 (sampling distributions，意爲重複無限次取樣後獲得的無限次統計量的分佈)。推斷的過程歸納如下： 從總體或人羣中抽樣 (樣本量 \\(n\\)) 計算這個樣本的合適統計量，從而用於估計它在整體或人羣中的值。 我們還需要決定計算獲得的統計量的樣本分佈 (假定會抽樣無數次) 。 一旦可以精確地確認樣本分佈，我們就可以定量地計算出使用步驟2中獲得的統計量估計總體或人羣的參數時的準確度。 9.3 估計 Estimation 從樣本的均值，推斷總體或人羣的均值是一種估計。我們的目的是，從已知樣本中計算一個儘可能接近那個未知的總體或人羣參數的值。一個估計量有兩個與生俱來的性質 (properties)：1) 偏倚 (bias); 2) 精確度 (precision)。這兩個性質都可以從樣本分佈和估計量獲得。 偏倚： 偏倚簡單說就是樣本分佈的均值，也就是我們從樣本中計算獲得的估計量，和我們想要拿它來估計的總體或人羣的參數之間的差距。(The bias is the difference between the mean of the sampling distribution – the expected or average value of the estimator – and the population parameter being estimated.) 一個小的偏倚，確保了我們從樣本中計算獲得的估計值 (假設我們抽樣無數次，計算無數個樣本估計值) 均勻地分佈在總體或人羣參數的左右兩邊。偏倚本身並不是太大的問題，但是假如樣本量增加，偏倚依然存在 (估計量不一致, inconsistent) ，那常常意味着是抽樣過程出現了問題。例如：用簡單隨機抽樣法獲得的樣本均值，就是總體或人羣均值的無偏估計 (unbiased estimator)。如果抽樣時由於某些主觀客觀的原因導致較小的樣本很少被抽樣 (抽樣過程出了問題，脫離了簡單隨機抽樣原則) ，那麼此時得到的樣本均值就會是一個過高的估計值 (upward biased estimator)。 精確度：估計值的精確度可以通過樣本分佈的方差或標準差來評價 (簡單說是樣本分佈的方差越低，波動越小，精確度越高) 。樣本分佈的標準差被定義爲估計值的標準誤。假如估計量是樣本均值，那麼樣本分佈的標準差 (估計量的標準誤) 和樣本數據之間有如下的關係： \\[\\text{true standard error of the mean} = \\frac{\\text{true standard deviation}}{\\sqrt{\\text{sample size}}}\\] 在一些簡單的情況下，通常估計值的選用不言自明 (例如均值，或者百分比) 。但是在複雜的情況下，我們可能可以有多個不同類型的估計量可以選擇，他們也常常各有利弊，需要我們做出取捨。 9.4 信賴區間 confidence intervals 從樣本中計算估計量獲得的一個估計值，只是一個點估計 (point estimate)。對比之下，信賴區間就是一個對這個點估計的精確度的體現。信賴區間越窄，說明我們對於總體或人羣的參數的可能取值的範圍估計越精確。 信賴區間通常是成對成對的出現的，即有上限和下限。這樣的一對從樣本數據中計算得來的統計量，同樣也是有樣本分佈的。每次我們重新從總體或人羣中抽樣，計算獲得的信賴區間都不同，這些信賴區間就組成了信賴區間的樣本分佈。總體和人羣的參數落在這些信賴區間範圍內的概率，就是我們常說的信賴區間的水平 (\\(95\\%\\)) 。 常用的這個概率值就是 \\(95\\%, 90\\%, 99\\%\\)。 當從樣本數據計算獲得的估計量的信賴區間很寬，說明了這個收集來的數據提供了很少的參數信息，導致估計變得很不精確。 看到這裏的都是好漢一條啊！ 我不知道你暈了麼有，反正我是已經暈了。。。 "],["estimation-and-precision.html", "第 10 章 估計和精確度 Estimation and Precision 10.1 估計量和他們的樣本分佈 10.2 估計量的特質 10.3 總體方差的估計，自由度 10.4 樣本方差的樣本分佈", " 第 10 章 估計和精確度 Estimation and Precision 10.1 估計量和他們的樣本分佈 例子： 最大呼氣量 (Forced Expoiratory Volume in one second, FEV1) 用於測量一個人的肺功能，它的測量值是連續的。我們從前來門診的人中隨機抽取 \\(n\\) 人作爲樣本，用這個樣本的 FEV1 平均值來估計這個診所的患者的平均肺功能。 模型假設： 在這個例子中，我們的假設有如下：每個隨機抽取的 FEV1 測量值都是從同一個總體 (人羣) 中抽取，每一個觀察值 \\(Y_i\\) 都互相獨立互不影響。我們用縮寫 iid 表示這些隨機抽取的樣本是服從獨立同分佈 (independent and identically distributed)。另外，總體的分佈也假定爲正態分佈，且總體均值爲 \\(\\mu\\)，總體方差爲 \\(\\sigma^2\\)。那麼這個模型可以簡單的被寫成： \\[ Y_i \\stackrel{i.i.d}{\\sim} N(\\mu, \\sigma^2), i=1,2,\\dots,n \\] 總體均值 \\(\\mu\\) 的估計量： 顯然算術平均值: \\(\\bar{Y}=\\frac{1}{n}\\sum_{i=1}^ny_i\\) 是我們用於估計總體均值的估計量。 估計量的樣本分佈： \\[ \\bar{Y}\\stackrel{i.i.d}{\\sim}N(\\mu, \\frac{\\sigma^2}{n}) \\] 證明 \\[ \\begin{aligned} E(\\bar{Y}) &amp;= E(\\frac{1}{n}\\sum Y_i) \\\\ &amp;= \\frac{1}{n}E(\\sum Y_i) \\\\ &amp;= \\frac{1}{n}\\sum E(Y_i) \\\\ &amp;= \\frac{1}{n}n\\mu = \\mu \\\\ \\text{Var}(\\bar{Y}) &amp;= \\text{Var}(\\frac{1}{n}\\sum Y_i) \\\\ \\because Y_i \\;\\text{are} &amp;\\; \\text{independent} \\\\ &amp;= \\frac{1}{n^2}\\sum \\text{Var}(Y_i) \\\\ &amp;= \\frac{1}{n^2} n \\text{Var}(Y_i) \\\\ &amp;= \\frac{\\sigma^2}{n} \\end{aligned} \\] 證明當 \\(Z=\\frac{\\bar{Y}-\\mu}{\\sqrt{\\text{Var}(\\bar{Y})}}\\) 時， \\(Z\\sim N(0,1)\\): 由式子可知， \\(Z\\) 只是由一組服從正態分佈的數據 \\(\\bar{Y}\\) 線性轉換 (linear transformation) 而來，所以 \\(Z\\) 本身也服從正態分佈 \\[ \\begin{aligned} E(Z) &amp;= \\frac{1}{\\sqrt{\\text{Var}(\\bar{Y})}}E[\\bar{Y}-\\mu] \\\\ &amp;= \\frac{1}{\\sqrt{\\text{Var}(\\bar{Y})}}[\\mu-\\mu] = 0 \\\\ \\text{Var}(Z) &amp;= \\frac{1}{\\text{Var}(\\bar{Y})}\\text{Var}[\\bar{Y}-\\mu] \\\\ &amp;= \\frac{1}{\\text{Var}(\\bar{Y})}\\text{Var}(\\bar{Y}) =1 \\\\ \\therefore Z \\;&amp;\\sim N(0,1) \\end{aligned} \\] 均值 \\(\\mu\\) 的信賴區間： 上節說道， 信賴區間通常是成對成對的出現的，即有上限和下限。這樣的一對從樣本數據中計算得來的統計量，同樣也是有樣本分佈的。每次我們重新從總體或人羣中抽樣，計算獲得的信賴區間都不同，這些信賴區間就組成了信賴區間的樣本分佈。總體和人羣的參數落在這些信賴區間範圍內的概率，就是我們常說的信賴區間的水平(\\(95\\%\\)) 。 常用的這個概率值就是 \\(95\\%, 90\\%, 99\\%\\)。 假定我們用 \\(95\\%\\) 作爲信賴區間的水平。那麼下面我們嘗試推導一下信賴區間的計算公式。從長遠來說 (也就是假設我們從總體中抽樣無數次，每次都進行信賴區間的計算，也獲得無數個信賴區間) ，這些信賴區間中有 \\(95\\%\\) 是包含了總體的真實均值 (但是卻是未知) 的，而且這些信賴區間由於是從一個服從正態分佈的數據而來，它們也服從正態分佈 (對真實均值左右對稱) 。所以我們有理由相信，可以找到一個數值 \\(c\\)： \\[ \\text{Prob}(\\bar{Y} &gt; \\mu+c) = 0.025 \\\\ \\text{Prob}(\\bar{Y} &lt; \\mu-c) = 0.025 \\] 因此，我們可以定義 \\(95\\%\\) 信賴區間的上限和下限分別是： \\[ L=\\bar{Y}-c \\Rightarrow \\text{Prob}(L&gt;\\mu)=0.025 \\\\ U=\\bar{Y}+c \\Rightarrow \\text{Prob}(U&lt;\\mu)=0.025 \\] 接下來就是推倒 (故意的) \\(c\\) 的過程啦： \\[ \\begin{aligned} \\text{Prob}(\\bar{Y}&gt;\\mu+c)=\\text{Prob}(\\bar{Y}-\\mu&gt;c) \\;&amp;= 0.025 \\\\ \\Rightarrow \\text{Prob}(\\frac{\\bar{Y}-\\mu}{\\sqrt{\\text{Var}(\\bar{Y})}} &gt; \\frac{c}{\\sqrt{\\text{Var}(\\bar{Y})}}) \\;&amp;= 0.025 \\\\ \\Rightarrow \\text{Prob}(Z&gt;\\frac{c}{\\sqrt{\\text{Var}(\\bar{Y})}}) \\;&amp;= 0.025 \\\\ \\text{we have proved}\\; Z\\sim N(0,1) \\\\ \\text{we also know}\\; \\text{Prob}(Z&gt;1.96) \\;&amp;= 0.025 \\\\ \\text{so let}\\; \\frac{c}{\\sqrt{\\text{Var}(\\bar{Y})}} =1.96 \\\\ \\Rightarrow c=1.96\\sqrt{\\text{Var}(\\bar{Y})} \\\\ \\text{the 95% confidence interval of}\\; &amp;\\text{ the population mean is}\\\\ \\mu = \\bar{Y}\\pm1.96\\sqrt{\\text{Var}(\\bar{Y})}=\\bar{Y}\\pm &amp; 1.96\\frac{\\sigma}{\\sqrt{n}} \\end{aligned} \\] 其中，\\(\\sqrt{\\text{Var}(\\bar{Y})}\\) 就是我們熟知的估計量 \\(\\bar{Y}\\) 的標準誤。 10.2 估計量的特質 考慮以下的問題： 什麼因素決定了一個估計量 (estimator) 的好壞，是否實用？ 如果有其他的可選擇估計量，該如何取捨呢？ 當情況複雜的時候，我們該如何尋找合適的估計量？ 10.2.1 偏倚 假設 \\(T\\) 是我們估計總體參數 \\(\\theta\\) 的一個估計量。一般來說我們希望估計量的樣本分佈可以在 “正確的位置” 左右均勻分佈。換句話說我們希望： \\[ E(T)=\\theta \\] 如果實現了這個條件，我們說這樣的估計量是無偏的 (unbiased)。然而，天下哪有這等好事，我們叫真實值和估計量之間的差距爲偏倚： \\[ bias(T) = E(T)-\\theta \\] 其實偏倚完全等於零並不是最重要，許多常見的估計量都是有偏倚的。重要的是，這個偏倚會隨着樣本量的增加而逐漸趨近於零。所以我們就可以認爲這樣的估計量是漸進無偏的 (asymptotically unbiased)： \\[ T \\text{ is an }\\textbf{unbiased}\\;\\text{estimator for}\\;\\theta\\;\\text{if}\\;\\\\ E(T)=\\theta\\\\ T\\;\\text{is an}\\;\\textbf{asymptotically unbiased}\\;\\text{estimator for}\\;\\theta\\;if\\;\\\\ lim_{n\\rightarrow\\infty}E(T)=\\theta \\] 10.2.2 估計量的效能 Efficiency 通常，我們希望一個估計量 (estimator) 的偏倚要小，同時，它的樣本分佈也希望能儘可能的不要波動太大。換句話說，我們還希望估計量的方差越小越好。 如果說，兩個估計量有相同的偏倚，均可以選擇來推斷總體，我們說，其中樣本分佈的方差小的那個 (波動幅度小) 的那個估計量是相對更好的。因爲樣本分佈方差越小，說明可以更加精確的估計總體參數。這兩個估計量的方差之比：\\(\\text{Var}(S)/\\text{Var}(T)\\) 被叫做這兩個估計量的相對效能 (relative efficiency)。所以我們用估計量去推斷總體時，需要選用效能最高，精確度最好的估計量 (the minimum variance unbiased estimator/an efficient estimator)。 10.2.3 均值和中位數的相對效能 在一個服從 \\(N(\\mu,\\sigma^2)\\) 正態分佈的數據中，中位數和均值是一樣的，也都同時等於總體均值參數 \\(\\mu\\)。而且，樣本均數 \\(\\bar{Y}\\) 和樣本中位數 \\(\\dot{Y}\\) 都是對總體均值的無偏估計量。那麼應該選用中位數還是平均值呢？ 之前證明過當 \\(Y_i \\sim N(\\mu,\\sigma^2)\\) 時， \\(\\text{Var}(\\bar{Y})=\\sigma^2/n\\)。然而，當 \\(n\\) 較大的時候，可以證明的是： \\[ \\text{\\text{Var}}(\\dot{Y})=\\frac{\\pi}{2}\\frac{\\sigma^2}{n}\\approx1.571\\frac{\\sigma^2}{n} \\] 因此，這兩個估計量的相對效能就是： \\[ \\frac{\\text{Var}(\\dot{Y})}{\\text{Var}(\\bar{Y})}\\approx1.571 \\] 所以總體是正態分佈時，平均值就是較中位數更適合用來估計總體的估計量。 10.2.4 均方差 mean square error (MSE) 兩個估計量的偏倚不同時，可以比較他們和總體參數之間的差距，這被叫做均方差, Mean Square Error ()。 \\[\\text{MSE}(T)=E[(T-\\theta)^2]\\] 這裏用一個數學技巧，將式子中的估計量和總體參數之間的差，分成兩個部分：一是估計量本身的方差 (\\(T-E(T)\\))，一是估計量的偏倚 (\\(E(T)-\\theta\\))。 \\[ \\begin{aligned} \\text{MSE}(T) &amp;= E[(T-\\theta)^2] \\\\ &amp;= E\\{[T-E(T)+E(T)-\\theta]^2\\} \\\\ &amp;= E\\{[T-E(T)]^2+[E(T)-\\theta]^2 \\\\ &amp; \\;\\;\\;\\;\\; \\;\\;+2[T-E(T)][E(T)-\\theta]\\} \\\\ &amp;= E\\{[T-E(T)]^2\\}+E\\{[E(T)-\\theta]^2\\} + 0\\\\ &amp;= \\text{Var}(T) + [bias(T)^2] \\end{aligned} \\] 10.3 總體方差的估計，自由度 如果 \\(Y_i \\sim (\\mu, \\sigma^2)\\)，並不需要默認或者假定它服從正態分佈或者任何分佈。那麼它的方差我們會用： \\[ V_{\\mu}=\\frac{1}{n}\\sum_{i=1}^n(Y_i-\\mu)^2 \\] 證明 \\(V_{\\mu}\\) 是 \\(\\sigma^2\\) 的無偏估計： \\[ \\begin{aligned} V_{\\mu} &amp;= \\frac{1}{n}\\sum_{i=1}^n(Y_i-\\mu)^2 \\\\ \\text{we need to prove } &amp;E(V_{\\mu}) = \\sigma^2 \\\\ \\Rightarrow E(V_{\\mu}) &amp;= \\frac{1}{n}\\sum_{i=1}^nE(Y_i-\\mu)^2 \\\\ &amp;= \\frac{1}{n}\\sum_{i=1}^nVar(Y_i) \\\\ &amp;= \\frac{1}{n}\\sum_{i=1}^n\\sigma^2 \\\\ &amp;= \\sigma^2 \\end{aligned} \\] 然而通常情況下，我們並不知道總體的均值 \\(\\mu\\)。因此，只好用樣本的均值 \\(\\bar{Y}\\) 來估計 \\(\\mu\\)。所以上面的方程就變成了： \\[ V_{\\mu}=\\frac{1}{n}\\sum_{i=1}^n(Y_i-\\bar{Y})^2 \\] 你如果仔細觀察認真思考，就會發現，上面這個式子是有問題的。這個大問題就在於，\\(Y_i-\\bar{Y}\\) 中我們忽略掉了樣本均值 \\(\\bar{Y}\\) 和總體均值 \\(\\mu\\) 之間的差 (\\(\\bar{Y}-\\mu\\))。因此上面的計算式來估計總體方差時，很顯然是會低估平均平方差，從而低估了總體方差。 這裏需要引入自由度 (degree of freedom) 在參數估計中的概念。 字面上可以理解爲：自由度是估計過程中使用了多少互相獨立的信息。所以在上面第一個公式中：\\(V_{\\mu}=\\frac{1}{n}\\sum_{i=1}^n(Y_i-\\mu)^2\\)。所有的 \\(n\\) 個觀察值互相獨立，不僅如此，他們還對總體均值獨立。然而在第二個我們用 \\(\\bar{Y}\\) 取代了 \\(\\mu\\) 的公式中，樣本均數則與觀察值不互相獨立。因爲樣本均數必然總是落在觀察值的中間。然而總體均數並不一定就會落在觀察值中間。總體均數，和觀察值之間是自由，獨立的。因此，當我們觀察到 \\(n-1\\) 個觀察值時，剩下的最後一個觀察值，決定了樣本均值的大小。所以說，樣本均值的自由度，是 \\(n-1\\)。 所以，加入了自由度的討論，我們可以相信，用樣本估計總體的方差時，使用下面的公式將會是總體方差的無偏估計： \\[ V_{n-1}=\\frac{1}{n-1}\\sum_{i=1}^n(Y_i-\\bar{Y})=\\frac{n}{n-1}V_n \\] 證明 利用上面也用到過的證明方法 – 把樣本和總體均值之間的差分成兩部分： \\[ \\begin{aligned} V_{\\mu} &amp;= \\frac{1}{n}\\sum_{i=1}^n(Y_i-\\mu)^2 \\\\ &amp;= \\frac{1}{n}\\sum_{i=1}^n[(Y_i-\\bar{Y})+(\\bar{Y}-\\mu)]^2 \\\\ &amp;= \\frac{1}{n}\\sum_{i=1}^n[(Y_i-\\bar{Y})^2+(\\bar{Y}-\\mu)^2\\\\ &amp;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;+2(Y_i-\\bar{Y})(\\bar{Y}-\\mu)]\\\\ &amp;=\\frac{1}{n}\\sum_{i=1}^n(Y_i-\\bar{Y})^2+\\frac{1}{n}\\sum_{i=1}^n(\\bar{Y}-\\mu)^2\\\\ &amp;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;+\\frac{2}{n}(\\bar{Y}-\\mu)\\sum_{i=1}^n(Y_i-\\bar{Y}) \\\\ &amp;= V_n+(\\bar{Y}-\\mu)^2 \\\\ &amp;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;(\\text{note that}\\;\\sum_{i=1}^n(Y_i-\\bar{Y})=0) \\\\ \\Rightarrow V_n &amp;= V_{\\mu}-(\\bar{Y}-\\mu)^2 \\\\ \\therefore E(V_n)&amp;= E(V_{\\mu}) - E[(\\bar{Y}-\\mu)^2] \\\\ &amp;= \\text{Var}(Y)-\\text{Var}(\\bar{Y}) \\\\ &amp;= \\sigma^2-\\frac{\\sigma^2}{n} \\\\ &amp;= \\sigma^2(\\frac{n-1}{n}) \\end{aligned} \\] 因此，我們看見 \\(V_n\\) 正如上面討論的那樣，是低估了總體方差的。雖然當 \\(n\\rightarrow\\infty\\) 時無限接近 \\(\\sigma^2\\) 但是依然是低估了的。所以，我們可以對之進行修正： \\[ \\begin{aligned} E[\\frac{n}{n-1}V_n] &amp;= \\frac{n}{n-1}E[V_n] =\\sigma^2 \\\\ \\Rightarrow E[V_{n-1}] &amp;= \\sigma^2 \\end{aligned} \\] 10.4 樣本方差的樣本分佈 \\(S^2\\) 常用來標記樣本方差，取代上面我們用到的 \\(V_{n-1}\\)： \\[ S^2=\\frac{1}{n-1}\\sum_{i=1}^n(Y_i-\\bar{Y})^2 \\] 而且上面也證明了，\\(E(S^2)=\\sigma^2\\) 是總體方差的無偏估計。然而，要注意的是，樣本標準差 \\(\\sqrt{S^2}\\) 卻不是總體標準差 \\(\\sigma\\) 的無偏估計(因爲並不是線性變換，而是開了根號) 。 證明樣本標準差 \\(S\\) 不是總體標準差 \\(\\sigma\\) 的無偏估計 \\[ \\begin{aligned} \\text{Var}(S) &amp;=E(S^2)-[E(S)]^2 \\\\ \\Rightarrow [E(S)]^2 &amp;=E(S^2)-\\text{Var}(S) \\\\ \\because E(S^2) &amp;=\\sigma^2 \\\\ \\therefore [E(S)]^2 &amp;=\\sigma^2-\\text{Var}(S) \\\\ E(S) &amp;=\\sqrt{\\sigma^2-\\text{Var}(S)} \\\\ \\end{aligned} \\] 可見樣本標準差是低估了總體標準差的。 另外可以被證明的是： \\[ \\frac{n-1}{\\sigma^2}S^2\\sim \\mathcal{X}_{n-1}^2\\\\ \\text{Var}(S^2)=\\frac{2\\sigma^4}{n-1} \\] \\(\\mathcal{X}^2_m\\)： 自由度爲 \\(m\\) 的卡方分佈 (Section 11)。是在圖形上向右歪曲的分佈。當自由度增加時，會越來越接近正態分佈。 "],["chi-square-distribution.html", "第 11 章 卡方分佈 Chi-square distribution 11.1 卡方分佈的期望和方差的證明 11.2 卡方分佈的期望 11.3 卡方分佈的方差 11.4 把上面的推導擴展", " 第 11 章 卡方分佈 Chi-square distribution 11.1 卡方分佈的期望和方差的證明 當 \\(X\\sim N(0,1)\\) 時， \\(X^2\\sim \\mathcal{X}_1^2\\) 如果 \\(X_1, \\dots, X_n\\stackrel{i.i.d}{\\sim} N(0,1)\\)， 那麼 \\(\\sum_{i=1}^nX_i^2\\sim\\mathcal{X}_n^2\\) 其中： \\(\\mathcal{X}_n^2\\) 表示自由度爲 \\(n\\) 的卡方分佈。 且 \\(X_m^2+X_n^2=\\mathcal{X}_{m+n}^2\\) 11.2 卡方分佈的期望 \\[E(X_1^2)=Var(X)+[E(X)]^2=1+0=1\\] \\[\\Rightarrow E(X_n^2)=n\\] 11.3 卡方分佈的方差 \\[ \\begin{aligned} Var(X_1^2) &amp;= E(X_1^{2^2}) - E(X_1^2)^2 \\\\ &amp;= E(X_1^4)-1 \\end{aligned} \\] 11.3.1 下面來求 \\(E(X_1^4)\\) \\[ \\begin{aligned} \\because E(X_1) &amp;= \\int_{-\\infty}^{+\\infty} xf(x)dx \\\\ \\therefore E(X_1^4) &amp;= \\int_{-\\infty}^{+\\infty} x^4f(x)dx \\end{aligned}\\] 已知： \\(f(x)=\\frac{1}{\\sqrt{2\\pi}}e^{(-\\frac{x^2}{2})}\\) 代入上式： \\[ \\begin{aligned} E(X_1^4) &amp;= \\int_{-\\infty}^{+\\infty} x^4f(x)dx \\\\ &amp;= \\int_{-\\infty}^{+\\infty} x^4\\frac{1}{\\sqrt{2\\pi}}e^{(-\\frac{x^2}{2})}dx\\\\ &amp;=\\frac{1}{\\sqrt{2\\pi}}\\int_{-\\infty}^{+\\infty}x^4e^{(-\\frac{x^2}{2})}dx\\\\ &amp;=\\frac{-1}{\\sqrt{2\\pi}}\\int_{-\\infty}^{+\\infty}x^3(-x)e^{(-\\frac{x^2}{2})}dx \\end{aligned} \\] 令 \\(u=x^3, v=e^{(-\\frac{x^2}{2})},t=-\\frac{x^2}{2}\\) 可以推導： \\[ \\begin{aligned} \\frac{dv}{dx} &amp;= \\frac{dv}{dt}\\frac{dt}{dx} \\\\ &amp;= e^t(-\\frac{1}{2}\\times2x) \\\\ &amp;= (-x)e^{(-\\frac{x^2}{2})} \\\\ \\Rightarrow dv &amp;= (-x)e^{(-\\frac{x^2}{2})}dx \\end{aligned} \\] 再代入上面的式子： \\[ \\begin{aligned} E(X_1^4) &amp;= \\frac{-1}{\\sqrt{2\\pi}}\\int_{-\\infty}^{+\\infty}u\\:dv \\\\ integrate\\; &amp;by\\; parts:\\\\ E(X_1^4) &amp;= \\frac{-1}{\\sqrt{2\\pi}}\\{[u\\:v] \\rvert_{-\\infty}^{+\\infty}-\\int_{-\\infty}^{+\\infty}v\\:du\\} \\\\ &amp;= \\frac{-1}{\\sqrt{2\\pi}}\\{[x^3e^{(-\\frac{x^2}{2})}]\\rvert_{-\\infty}^{+\\infty} -\\int_{-\\infty}^{+\\infty}v\\:du\\} \\\\ &amp;=\\frac{-1}{\\sqrt{2\\pi}}\\{0-0-\\int_{-\\infty}^{+\\infty}e^{(-\\frac{x^2}{2})}dx^3\\} \\\\ &amp;=\\frac{-1}{\\sqrt{2\\pi}}[-3\\int_{-\\infty}^{+\\infty}x^2e^{(-\\frac{x^2}{2})}dx] \\\\ &amp;=\\frac{-3}{\\sqrt{2\\pi}}[\\int_{-\\infty}^{+\\infty}x(-x)e^{(-\\frac{x^2}{2})}dx] \\\\ \\end{aligned} \\] 再來一次分部積分： 令 \\(a=x,b=e^{(-\\frac{x^2}{2})},d\\:b = (-x)e^{(-\\frac{x^2}{2})}dx\\) \\[ \\begin{aligned} E(X_1^4) &amp;= \\frac{-3}{\\sqrt{2\\pi}}\\{[a\\:b] \\rvert_{-\\infty}^{+\\infty} - \\int_{-\\infty}^{+\\infty}b\\:da\\} \\\\ &amp;=\\frac{-3}{\\sqrt{2\\pi}}\\{[xe^{(-\\frac{x^2}{2})}]\\rvert_{-\\infty}^{+\\infty} -\\int_{-\\infty}^{+\\infty}b\\:da\\} \\\\ &amp;=\\frac{-3}{\\sqrt{2\\pi}}\\{0-0-\\int_{-\\infty}^{+\\infty}e^{(-\\frac{x^2}{2})}dx\\} \\\\ &amp;=\\frac{-3}{\\sqrt{2\\pi}}[-\\int_{-\\infty}^{+\\infty}e^{(-\\frac{x^2}{2})}dx] \\\\ &amp;=\\frac{3}{\\sqrt{2\\pi}}\\int_{-\\infty}^{+\\infty}e^{(-\\frac{x^2}{2})}dx \\end{aligned} \\] 下面令 \\(I=\\int_{-\\infty}^{+\\infty}e^{(-\\frac{x^2}{2})}dx\\\\ \\Rightarrow I^2=\\int_{-\\infty}^{+\\infty}\\int_{-\\infty}^{+\\infty}e^{(-\\frac{x^2+y^2}{2})}dxdy\\) 接下來需要用到 座標轉換的知識，將 \\(x,y\\) 表示的笛卡爾座標，轉換爲用角度 \\(\\theta\\) 和半徑 \\(r\\) 表示的形式。之後的證明可以在油管上看到，但是我還是繼續證明下去。 直角座標系 (cartesian coordinators) 和 極座標系 (polar coordinators) 之間轉換的關係如下： \\[ \\begin{aligned} x&amp;=r\\:cos\\theta\\\\ y&amp;=r\\:sin\\theta\\\\ r^2&amp;=x^2+y^2\\\\ \\end{aligned} \\] 座標轉換以後可以繼續求 \\(E(X_1^4)\\)。 在那之前我們先求 \\(I^2\\)。 注意轉換座標系統以後，\\(\\theta\\in[0,2\\pi], r\\in[0,+\\infty]\\) \\[ \\begin{aligned} I^2 &amp;= \\int_{-\\infty}^{+\\infty}\\int_{-\\infty}^{+\\infty}e^{(-\\frac{x^2+y^2}{2})}dxdy \\\\ &amp;= \\int_{0}^{+\\infty}\\int_{0}^{2\\pi}e^{(-\\frac{r^2}{2})}rd\\theta dr \\\\ \\end{aligned} \\] 由於先從中間的 \\(\\int_{0}^{2\\pi}e^{(-\\frac{r^2}{2})}rd\\theta\\) 開始積分，\\(\\theta\\) 以外都可以視爲常數，那麼這個 \\([0,2\\pi]\\) 上的積分就的等於 \\(2\\pi e^{(-\\frac{r^2}{2})}r\\)。 因此上面的式子又變爲： \\[ \\begin{aligned} I^2 &amp;= 2\\pi\\int_{0}^{+\\infty}e^{(-\\frac{r^2}{2})}r\\:dr \\\\ \\because \\frac{d(e^{\\frac{-r^2}{2}})}{dr} &amp;= -e^{(-\\frac{r^2}{2})}r \\\\ \\therefore I^2 &amp;= 2\\pi(-e^{\\frac{-r^2}{2}})\\rvert_0^{+\\infty} \\\\ &amp;= 0-(2\\pi\\times(-1)) \\\\ &amp;= 2\\pi\\\\ \\Rightarrow I &amp;= \\sqrt{2\\pi} \\end{aligned} \\] 所以， \\[ \\begin{aligned} E(X_1^4) &amp;= \\frac{3}{\\sqrt{2\\pi}}\\int_{-\\infty}^{+\\infty}e^{(-\\frac{x^2}{2})}dx \\\\ &amp;= \\frac{3}{\\sqrt{2\\pi}}\\times I \\\\ &amp;= 3 \\\\ \\Rightarrow Var(X_1^2) &amp;= E(X_1^4) - 1 \\\\ &amp;= 3-1 =2 \\end{aligned} \\] 11.4 把上面的推導擴展 \\[ \\text{Suppose } \\mathcal{X}^2_1, \\cdots \\mathcal{X}^2_k \\stackrel{i.i.d}{\\sim} \\mathcal{X}^2_1 \\\\ \\Rightarrow \\sum_{i=1}^k \\mathcal{X}^2_i \\sim \\mathcal{X}^2_k \\\\ \\Rightarrow \\text{E}(\\sum_{i=1}^n\\mathcal{X}^2_i)=\\sum_{i-1}^n\\text{E}(\\mathcal{X}^2_i)=n\\times1=n\\\\ \\text{Var}(\\sum_{i=1}^n\\mathcal{X}^2_i)=\\sum_{i=1}^n\\text{Var}(\\mathcal{X}^2_i) = n\\times2=2n \\] 結論：\\(X_1, \\dots, X_n\\stackrel{i.i.d}{\\sim} N(0,1)\\) 時，\\(\\sum_{i=1}^nX_i^2\\sim\\mathcal{X}_n^2\\) 服從卡方分佈，其期望 \\(E(X_n^2)=n\\)，方差 \\(Var(X_n^2)=2n\\)。 根據中心極限定理(Section 8) \\[n\\rightarrow \\infty, X_n^2\\sim N(n, 2n)\\] "],["likelihood-definition.html", "第 12 章 似然 Likelihood 12.1 概率 vs. 推斷 Probability vs. Inference 12.2 似然和極大似然估計 Likelihood and maximum likelihood estimators 12.3 似然方程的一般化定義 12.4 對數似然方程 log-likelihood 12.5 極大似然估計 (maximum likelihood estimator, MLE) 的性質： 12.6 率的似然估計 Likelihood for a rate 12.7 有 \\(n\\) 個獨立觀察時的似然方程和對數似然方程", " 第 12 章 似然 Likelihood 12.1 概率 vs. 推斷 Probability vs. Inference 在概率論的環境下，我們常常被告知的前提是：某某事件發生的概率是多少。例如： 一枚硬幣正面朝上的概率是 \\(0.5\\; \\text{Prob}(\\text{coin landing heads})=0.5\\)。然後在這個前提下，我們又繼續去計算複雜的事件發生的概率(例如，10次投擲硬幣以後4次正面朝上的概率是多少？) 。 \\[ \\binom{10}{4}\\times(0.5^4)\\times(0.5^{10-4}) = 0.205 \\] dbinom(4, 10, 0.5) ## [1] 0.2051 # or you can calculate by hand: factorial(10)*(0.5^10)/(factorial(4)*(factorial(6))) ## [1] 0.2051 在統計推斷的理論中，我們考慮實際的情況，這樣的實際情況就是，我們通過觀察獲得數據，然而我們並不知道某事件發生的概率到底是多少(神如果存在話，只有神知道) 。故這個 \\(\\text{Prob}(\\text{coin landing heads})\\) 的概率大小對於“人類”來說是未知的。我們可能觀察到投擲了10次硬幣，其中有4次是正面朝上的。那麼我們從這一次觀察實驗中，需要計算的是能夠符合觀察結果的“最佳”概率估計 (best estimate)。在這種情況下，似然法 (likelihood) 就是我們進行參數估計的最佳手段。 12.2 似然和極大似然估計 Likelihood and maximum likelihood estimators 此處用二項分佈的例子來理解似然法的概念：假設我們觀察到10個對象中有4個患中二病，我們假定這個患病的概率爲 \\(\\pi\\)。於是我們就有了下面的模型： 模型： 我們假定患病與否是一個服從二項分佈的隨機變量，\\(X\\sim Bin(10,\\pi)\\)。同時也默認每個人之間是否患病是相互獨立的。 數據： 觀察到的數據是，10人中有4人患病。於是 \\(x=4\\)。 現在按照觀察到的數據，參數 \\(\\pi\\) 變成了未知數： \\[ \\text{Prob}(X=4|\\pi)=\\binom{10}{4}\\pi^4(1-\\pi)^{10-4} \\] 此時我們會很自然的考慮，當 \\(\\pi\\) 是未知數的時候，它取值爲多大的時候才能讓這個事件(即：10人中4人患病) 發生的概率最大？ 所以我們可以將不同的數值代入 \\(\\pi\\) 來計算該事件在不同概率的情況下發生的可能性到底是多少： Table 12.1: The ability of observing \\(X=4\\) \\(\\pi\\) 事件 \\(X=4\\) 發生的概率 0.0 0.000 0.2 0.088 0.4 0.251 0.5 0.205 0.6 0.111 0.8 0.006 1.0 0.000 很顯然，如果 \\(\\pi=0.4\\) 時，我們觀察到的事件發生的概率要比 \\(\\pi\\) 取其它值時更大。於是小總結一下目前爲止的步驟如下： 觀察到實驗數據(10人中4個患病) ； 假定這數據服從二項分佈的概率模型，計算不同(\\(\\pi\\) 的取值不同的) 情況下，該事件按照假定模型發生的概率； 通過比較，我們選擇了能夠讓觀察事件發生概率最高的參數取值 (\\(\\pi=0.4\\))。 至此，我們可以知道，似然方程，是一個關於未知參數 \\(\\pi\\) 的函數，我們目前位置做的就是找到這個函數的最大值 (maximised)，和使之成爲最大值時的 \\(\\pi\\) ： \\[ L(\\pi|X=4)=\\binom{10}{4}\\pi^4(1-\\pi)^{10-4} \\] 我們可以畫出這個似然方程的形狀， \\(\\pi\\in[0,1]\\) x &lt;- seq(0,1,by=0.001) y &lt;- (factorial(10)/(factorial(4)*(factorial(6))))*(x^4)*((1-x)^6) plot(x, y, type = &quot;l&quot;, ylim = c(0,0.3), ylab = &quot;L(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) #title(&quot;Figure 1. Binomial Likelihood&quot;) abline(h=0.251, lty=2) abline(v=0.4, lty=2) 圖 12.1: Binomial Likelihood 從圖形上我們也能確認，\\(\\pi=0.4\\) 時能夠讓這個似然方程取得最大值。 12.3 似然方程的一般化定義 對於一個概率模型，如果其參數爲 \\(\\theta\\)，那麼在給定觀察數據 \\(\\underline{x}\\) 時，該參數的似然方程被定義爲： \\[ L(\\theta|\\underline{x})=P(\\underline{x}|\\theta) \\] 注意： \\(P(\\underline{x}|\\theta)\\) 可以是概率(離散分佈) 方程，也可以是概率密度(連續型變量) 方程。對於此方程，\\(\\theta\\) 是給定的，然後再計算某些事件發生的概率。 \\(L(\\theta|\\underline{x})\\) 是一個關於參數 \\(\\theta\\) 的方程，此時，\\(\\underline{x}\\) 是固定不變的(觀察值) 。我們希望通過這個方程求出能夠使觀察到的事件發生概率最大的參數值。 似然方程不是一個概率密度方程。 另一個例子： 有一組觀察數據是離散型隨機變量 \\(X\\)，它符合概率方程 \\(f(x|\\theta)\\)。下表羅列了當 \\(\\theta\\) 分別取值 \\(1,2,3\\) 時的概率方程的值，試求每個觀察值 \\(X = 0,1,2,3,4\\) 的最大似然參數估計： Exercise 12.3 \\(x\\) \\(f(x|1)\\) \\(f(x|2)\\) \\(f(x|3)\\) 0 1/3 1/4 0 1 1/3 1/4 0 2 0 1/4 1/6 3 1/6 1/4 1/2 4 1/6 0 1/3 Exercise 12.3 answer \\(x\\) \\(f(x|1)\\) \\(f(x|2)\\) \\(f(x|3)\\) \\(\\theta\\) 0 1/3 1/4 0 1 1 1/3 1/4 0 1 2 0 1/4 1/6 2 3 1/6 1/4 1/2 3 4 1/6 0 1/3 3 12.4 對數似然方程 log-likelihood 似然方程的最大值，可通過求 \\(L(\\theta|data)\\) 的最大值獲得，也可以通過求該方程的對數方程 \\(\\ell(\\theta|data)\\) 的最大值獲得。傳統上，我們估計最大方程的最大值的時候，會給參數戴一頂“帽子”(因爲這是觀察獲得的數據告訴我們的參數) ： \\(\\hat{\\theta}\\)。並且我們發現對數似然方程比一般的似然方程更加容易微分，因此求似然方程的最大值就變成了求對數似然方程的最大值： \\[ \\frac{d\\ell}{d\\theta}=\\ell^\\prime(\\theta)=0\\\\ \\text{AND}\\\\ \\frac{d^2\\ell}{d\\theta^2}&lt;0 \\] 要注意的是，微分不一定總是能幫助我們求得似然方程的最大值。如果說參數本身的定義域是有界限的話，微分就行不通了： x &lt;- seq(0,3,by=0.001) y &lt;- (x-1)^2-5 plot(x, y, type = &quot;l&quot;, ylim = c(-5,0-1), ylab = &quot;L(\\U03B8)&quot;, xlab = &quot;\\U03B8&quot;) #title(&quot;Figure 2. Likelihood function with \\n a limited domain&quot;) abline(v=3, lty=2) 圖 12.2: Likelihood function with a limited domain 證明：當 \\(L(\\theta|data)\\) 取最大值時，該方程的對數方程 \\(\\ell(\\theta|data)\\) 也是最大值： 如果似然方程是連續可導，只有一個最大值，且可以二次求導，假設 \\(\\hat{\\theta}\\) 使該方程取最大值，那麼： \\[ \\frac{dL}{d\\theta}=0, \\frac{d^2L}{d\\theta^2}&lt;0 \\Rightarrow \\theta=\\hat{\\theta} \\] 令 \\(\\ell=\\logL\\) 那麼 \\(\\frac{d\\ell}{dL}=\\ell^\\prime=\\frac{1}{L}\\)： \\[ \\frac{d\\ell}{d\\theta}=\\frac{d\\ell}{dL}\\cdot\\frac{dL}{d\\theta}=\\frac{1}{L}\\cdot\\frac{dL}{d\\theta} \\] 當 \\(\\ell(\\theta|data)\\) 取最大值時： \\[ \\frac{d\\ell}{d\\theta}=0\\Leftrightarrow\\frac{1}{L}\\cdot\\frac{dL}{d\\theta}=0\\\\ \\because \\frac{1}{L}\\neq0 \\\\ \\therefore \\frac{dL}{d\\theta}=0\\\\ \\Leftrightarrow \\theta=\\hat{\\theta} \\] \\[ \\begin{aligned} \\frac{d^2\\ell}{d\\theta^2} &amp;= \\frac{d}{d\\theta}(\\frac{d\\ell}{dL}\\cdot\\frac{dL}{d\\theta})\\\\ &amp;= \\frac{d\\ell}{dL}\\cdot\\frac{d^2L}{d\\theta^2} + \\frac{dL}{d\\theta}\\cdot\\frac{d}{d\\theta}(\\frac{d\\ell}{dL}) \\end{aligned} \\] 當 \\(\\theta=\\hat{\\theta}\\) 時，\\(\\frac{dL}{d\\theta}=0\\) 且 \\(\\frac{d^2L}{d\\theta^2}&lt;0 \\Rightarrow \\frac{d^2\\ell}{d\\theta^2}&lt;0\\) 所以，求獲得 \\(\\ell(\\theta|data)\\) 最大值的 \\(\\theta\\) 即可令 \\(L(\\theta|data)\\) 獲得最大值。 12.5 極大似然估計 (maximum likelihood estimator, MLE) 的性質： 漸進無偏 Asymptotically unbiased: \\(n\\rightarrow \\infty \\Rightarrow E(\\hat{\\Theta}) \\rightarrow \\theta\\) 漸進最高效能 Asymptotically efficient: \\(n\\rightarrow \\infty \\Rightarrow Var(\\hat{\\Theta})\\) 是所有參數中方差最小的估計 漸進正態分佈 Asymptotically normal: \\(n\\rightarrow \\infty \\Rightarrow \\hat{\\Theta} \\sim N(\\theta, Var(\\hat{\\Theta}))\\) 變形後依然保持不變 Transformation invariant: \\(\\hat{\\Theta}\\) 是 \\(\\theta\\) 的MLE時 \\(\\Rightarrow g(\\hat{\\Theta})\\) 是 \\(g(\\theta)\\) 的 MLE 信息足夠充分 Sufficient： \\(\\hat{\\Theta}\\) 包含了觀察數據中所有的能夠用於估計參數的信息 始終不變 consistent: \\(n\\rightarrow\\infty\\Rightarrow\\hat{\\Theta}\\rightarrow\\theta\\) 或者可以寫成：\\(\\varepsilon&gt;0, lim_{n\\rightarrow\\infty}P(|\\hat{\\Theta}-\\theta|&gt;\\varepsilon)=0\\) 12.6 率的似然估計 Likelihood for a rate 如果在一項研究中，參與者有各自不同的追蹤隨訪時間(長度) ，那麼我們應該把事件(疾病) 的發病率用率的形式(多少事件每單位人年, e.g. per person year of observation) 。如果這個發病率的參數用 \\(\\lambda\\) 來表示，所有參與對象的隨訪時間之和爲 \\(p\\) 人年。那麼這段時間內的期望事件(疾病發病) 次數爲：\\(\\mu=\\lambda p\\)。假設事件(疾病發病) 發生是相互獨立的，可以使用泊松分佈來模擬期望事件(疾病發病) 次數 \\(D\\)： \\[ D\\sim \\text{Poi}(\\mu) \\] 假設我們觀察到了 \\(D=d\\) 個事件，我們獲得這個觀察值的概率應該用以下的模型： \\[ \\text{Prob}(D=d)=e^{-\\mu}\\frac{\\mu^d}{d!}=e^{-\\lambda p}\\frac{\\lambda^dp^d}{d!} \\] 因此，\\(\\lambda\\) 的似然方程是： \\[ L(\\lambda|observed \\;data)=e^{-\\lambda p}\\frac{\\lambda^dp^d}{d!} \\] 所以，\\(\\lambda\\) 的對數似然方程是： \\[ \\begin{aligned} \\ell(\\lambda|\\text{observed data}) &amp;= \\log(e^{-\\lambda p}\\frac{\\lambda^dp^d}{d!}) \\\\ &amp;= -\\lambda p+d\\:\\log(\\lambda)+d\\:\\log(p)-\\log(d!) \\\\ \\end{aligned} \\] 解 \\(\\ell^\\prime(\\lambda|\\text{data})=0\\): \\[ \\begin{aligned} \\ell^\\prime(\\lambda|\\text{data}) &amp;= -p+\\frac{d}{\\lambda}=0\\\\ \\Rightarrow \\hat{\\lambda} &amp;= \\frac{d}{p} \\\\ \\end{aligned} \\] 注意： 在對數似然方程中，不包含參數的部分，對與似然方程的形狀不產生任何影響，我們在微分對數似然方程的時候，這部分也都自動消失。所以不包含參數的部分，與我們如何獲得極大似然估計是無關的。因此，我們常常在寫對數似然方程的時候就把其中沒有參數的部分直接忽略了。例如上面泊松分佈的似然方程中，\\(d\\:\\log(p)-\\log(d!)\\) 不包含參數 \\(\\lambda\\) 可以直接不寫出來。 12.7 有 \\(n\\) 個獨立觀察時的似然方程和對數似然方程 當有多個獨立觀察時，總體的似然方程等於各個觀察值的似然方程之乘積。如果 \\(X_1,\\dots,X_n\\stackrel{i.i.d}{\\sim}f(\\cdot|\\theta)\\) \\[ L(\\theta|x_1,\\cdots,x_n)=f(x_1,\\cdots,x_n|\\theta)=\\prod_{i=1}^nf(x_i|\\theta)\\\\ \\Rightarrow \\ell(\\theta|x_1,\\cdots,x_n)=\\sum_{i=1}^n\\log(f(x_i|\\theta)) \\] "],["llr.html", "第 13 章 對數似然比 Log-likelihood ratio 13.1 正態分佈數據的極大似然和對數似然比 13.2 \\(n\\) 個獨立正態分佈樣本的對數似然比 13.3 \\(n\\) 個獨立正態分佈樣本的對數似然比的分佈 13.4 似然比信賴區間 13.5 Inference Practical 05", " 第 13 章 對數似然比 Log-likelihood ratio 對數似然比的想法來自於將對數似然方程圖形的 \\(y\\) 軸重新調節 (rescale) 使之最大值爲零。這可以通過計算該分佈方程的對數似然比 (log-likelihood ratio) 來獲得： \\[llr(\\theta)=\\ell(\\theta|data)-\\ell(\\hat{\\theta}|data)\\] 由於 \\(\\ell(\\theta)\\) 的最大值在 \\(\\hat{\\theta}\\) 時， 所以，\\(llr(\\theta)\\) 就是個當 \\(\\theta=\\hat{\\theta}\\) 時取最大值，且最大值爲零的方程。很容易理解我們叫這個方程爲對數似然比，因爲這個方程就是將似然比 \\(LR(\\theta)=\\frac{L(\\theta)}{L(\\hat{\\theta})}\\) 取對數而已。 之前我們也確證了，不包含我們感興趣的參數的方程部分可以忽略掉。還是用上一節 10人中4人患病的例子： \\[ L(\\pi|X=4)=\\binom{10}{4}\\pi^4(1-\\pi)^{10-4}\\\\ \\Rightarrow \\ell(\\pi)=\\log[\\pi^4(1-\\pi)^{10-4}]\\\\ \\Rightarrow llr(\\pi)=\\ell(\\pi)-\\ell(\\hat{\\pi})=\\log\\frac{\\pi^4(1-\\pi)^{10-4}}{0.4^4(1-0.4)^{10-4}} \\] 其實由上也可以看出 \\(llr(\\theta)\\) 只是將對應的似然方程的 \\(y\\) 軸重新調節了一下而已。形狀是沒有改變的： par(mfrow=c(1,2)) x &lt;- seq(0,1,by=0.001) y &lt;- (x^4)*((1-x)^6)/(0.4^4*0.6^6) z &lt;- log((x^4)*((1-x)^6))-log(0.4^4*0.6^6) plot(x, y, type = &quot;l&quot;, ylim = c(0,1.1),yaxt=&quot;n&quot;, frame.plot = FALSE, ylab = &quot;LR(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) axis(2, at=seq(0,1, 0.2), las=2) title(main = &quot;Binomial likelihood ratio&quot;) abline(h=1.0, lty=2) segments(x0=0.4, y0=0, x1=0.4, y1=1, lty = 2) plot(x, z, type = &quot;l&quot;, ylim = c(-10, 1), yaxt=&quot;n&quot;, frame.plot = FALSE, ylab = &quot;llr(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot; ) axis(2, at=seq(-10, 0, 2), las=2) title(main = &quot;Binomial log-likelihood ratio&quot;) abline(h=0, lty=2) segments(x0=0.4, y0=-10, x1=0.4, y1=0, lty = 2) 圖 13.1: Binomial likelihood ratio and log-likelihood ratio 13.1 正態分佈數據的極大似然和對數似然比 假設單個樣本 \\(y\\) 是來自一組服從正態分佈數據的觀察值：\\(Y\\sim N(\\mu, \\tau^2)\\) 那麼有： \\[ \\begin{aligned} f(y|\\mu) &amp;= \\frac{1}{\\sqrt{2\\pi\\tau^2}}e^{(-\\frac{1}{2}(\\frac{y-\\mu}{\\tau})^2)} \\\\ \\Rightarrow L(\\mu|y) &amp;=\\frac{1}{\\sqrt{2\\pi\\tau^2}}e^{(-\\frac{1}{2}(\\frac{y-\\mu}{\\tau})^2)} \\\\ \\Rightarrow \\ell(\\mu)&amp;=\\log(\\frac{1}{\\sqrt{2\\pi\\tau^2}})-\\frac{1}{2}(\\frac{y-\\mu}{\\tau})^2\\\\ \\text{omitting }&amp;\\;\\text{terms not in}\\;\\mu \\\\ &amp;= -\\frac{1}{2}(\\frac{y-\\mu}{\\tau})^2 \\\\ \\Rightarrow \\ell^\\prime(\\mu) &amp;= 2\\cdot[-\\frac{1}{2}(\\frac{y-\\mu}{\\tau})\\cdot\\frac{-1}{\\tau}] \\\\ &amp;=\\frac{y-\\mu}{\\tau^2} \\\\ let \\; \\ell^\\prime(\\mu) &amp;= 0 \\\\ \\Rightarrow \\frac{y-\\mu}{\\tau^2} &amp;= 0 \\Rightarrow \\hat{\\mu} = y\\\\ \\because \\ell^{\\prime\\prime}(\\mu) &amp;= \\frac{-1}{\\tau^2} &lt; 0 \\\\ \\therefore \\hat{\\mu} &amp;= y \\Rightarrow \\ell(\\hat{\\mu}=y)_{max}=0 \\\\ llr(\\mu)&amp;=\\ell(\\mu)-\\ell(\\hat{\\mu})=\\ell(\\mu)\\\\ &amp;=-\\frac{1}{2}(\\frac{y-\\mu}{\\tau})^2 \\end{aligned} \\] 13.2 \\(n\\) 個獨立正態分佈樣本的對數似然比 假設一組觀察值來自正態分佈 \\(X_1,\\cdots,X_n\\stackrel{i.i.d}{\\sim}N(\\mu,\\sigma^2)\\)，先假設 \\(\\sigma^2\\) 已知。將觀察數據 \\(x_1,\\cdots, x_n\\) 標記爲 \\(\\underline{x}\\)。 那麼： \\[ \\begin{aligned} L(\\mu|\\underline{x}) &amp;=\\prod_{i=1}^nf(x_i|\\mu)\\\\ \\Rightarrow \\ell(\\mu|\\underline{x}) &amp;=\\sum_{i=1}^n\\text{log}f(x_i|\\mu)\\\\ &amp;=\\sum_{i=1}^n[-\\frac{1}{2}(\\frac{x_i-\\mu}{\\sigma})^2]\\\\ &amp;=-\\frac{1}{2\\sigma^2}\\sum_{i=1}^n(x_i-\\mu)^2\\\\ &amp;=-\\frac{1}{2\\sigma^2}[\\sum_{i=1}^n(x_i-\\bar{x})^2+\\sum_{i=1}^n(\\bar{x}-\\mu)^2]\\\\ \\text{omitting }&amp;\\;\\text{terms not in}\\;\\mu \\\\ &amp;=-\\frac{1}{2\\sigma^2}\\sum_{i=1}^n(\\bar{x}-\\mu)^2\\\\ &amp;=-\\frac{n}{2\\sigma^2}(\\bar{x}-\\mu)^2 \\\\ &amp;=-\\frac{1}{2}(\\frac{\\bar{x}-\\mu}{\\sigma/\\sqrt{n}})^2\\\\ \\because \\ell(\\hat{\\mu}) &amp;= 0 \\\\ \\therefore llr(\\mu) &amp;= \\ell(\\mu)-\\ell(\\hat{\\mu}) = \\ell(\\mu) \\end{aligned} \\] 13.3 \\(n\\) 個獨立正態分佈樣本的對數似然比的分佈 假設我們用 \\(\\mu_0\\) 表示總體均數這一參數的值。要注意的是，每當樣本被重新取樣，似然，對數似然方程，對數似然比都隨着觀察值而變 (即有自己的分佈)。 考慮一個服從正態分佈的單樣本 \\(Y\\): \\(Y\\sim N(\\mu_0,\\tau^2)\\)。那麼它的對數似然比： \\[llr(\\mu_0|Y)=\\ell(\\mu_0)-\\ell(\\hat{\\mu})=-\\frac{1}{2}(\\frac{Y-\\mu_0}{\\tau})^2\\] 根據卡方分佈 (Section 11) 的定義： \\[\\because \\frac{Y-\\mu_0}{\\tau}\\sim N(0,1)\\\\ \\Rightarrow (\\frac{Y-\\mu_0}{\\tau})^2 \\sim \\mathcal{X}_1^2\\\\ \\therefore -2llr(\\mu_0|Y) \\sim \\mathcal{X}_1^2\\] 所以，如果有一組服從正態分佈的觀察值：\\(X_1,\\cdots,X_n\\stackrel{i.i.d}{\\sim}N(\\mu_0,\\sigma^2)\\)，且 \\(\\sigma^2\\) 已知的話： \\[-2llr(\\mu_0|\\bar{X})\\sim \\mathcal{X}_1^2\\] 根據中心極限定理 (Section 8)，可以將上面的結論一般化： Theorem 13.1 如果 \\(X_1,\\cdots,X_n\\stackrel{i.i.d}{\\sim}f(x|\\theta)\\)。 那麼當重複多次從參數爲 \\(\\theta_0\\) 的總體中取樣時，那麼統計量 \\(-2llr(\\theta_0)\\) 會漸進於自由度爲 \\(1\\) 的卡方分佈： \\[-2llr(\\theta_0)=-2\\{\\ell(\\theta_0)-\\ell(\\hat{\\theta})\\}\\xrightarrow[n\\rightarrow\\infty]{}\\;\\sim \\mathcal{X}_1^2\\] 13.4 似然比信賴區間 如果樣本量 \\(n\\) 足夠大 (通常應該大於 \\(30\\))，根據上面的定理： \\[-2llr(\\theta_0)=-2\\{\\ell(\\theta_0)-\\ell(\\hat{\\theta})\\}\\sim \\mathcal{X}_1^2\\] 所以： \\[Prob(-2llr(\\theta_0)\\leqslant \\mathcal{X}_{1,0.95}^2=3.84) = 0.95\\\\ \\Rightarrow Prob(llr(\\theta_0)\\geqslant-3.84/2=-1.92) = 0.95\\] 故似然比的 \\(95\\%\\) 信賴區間就是能夠滿足 \\(llr(\\theta)=-1.92\\) 的兩個 \\(\\theta\\) 值。 13.4.1 以二項分佈數據爲例 繼續用本文開頭的例子： \\[llr(\\pi)=\\ell(\\pi)-\\ell(\\hat{\\pi})=\\log\\frac{\\pi^4(1-\\pi)^{10-4}}{0.4^4(1-0.4)^{10-4}}\\] 如果令 \\(llr(\\pi)=-1.92\\) 在代數上可能較難獲得答案。然而從圖形上，如果我們在 \\(y=-1.92\\) 畫一條橫線，和該似然比方程曲線相交的兩個點就是我們想要求的信賴區間的上限和下限： x &lt;- seq(0,1,by=0.001) z &lt;- log((x^4)*((1-x)^6))-log(0.4^4*0.6^6) plot(x, z, type = &quot;l&quot;, ylim = c(-10, 1), yaxt=&quot;n&quot;, frame.plot = FALSE, ylab = &quot;llr(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot; ) axis(2, at=seq(-10, 0, 2), las=2) abline(h=0, lty=2) abline(h=-1.92, lty=2) segments(x0=0.15, y0=-12, x1=0.15, y1=-1.92, lty = 2) segments(x0=0.7, y0=-12, x1=0.7, y1=-1.92, lty = 2) axis(1, at=c(0.15,0.7)) text(0.9, -1, &quot;-1.92&quot;) arrows(0.8, -1.92, 0.8, 0, lty = 1, length = 0.08) arrows( 0.8, 0, 0.8, -1.92, lty = 1, length = 0.08) 圖 13.2: Log-likelihood ratio for binomial example, with 95% confidence intervals shown 從上圖中可以讀出，\\(95\\%\\) 對數似然比信賴區間就是 \\((0.15, 0.7)\\) 13.4.2 以正態分佈數據爲例 本文前半部分證明過， \\(X_1,\\cdots,X_n\\stackrel{i.i.d}{\\sim}N(\\mu,\\sigma^2)\\)，先假設 \\(\\sigma^2\\) 已知。將觀察數據 \\(x_1,\\cdots, x_n\\) 標記爲 \\(\\underline{x}\\)。 那麼： \\[llr(\\mu|\\underline{x}) = \\ell(\\mu|\\underline{x})-\\ell(\\hat{\\mu}) = \\ell(\\mu|\\underline{x}) \\\\ =-\\frac{1}{2}(\\frac{\\bar{x}-\\mu}{\\sigma/\\sqrt{n}})^2\\] 很顯然，這是一個關於 \\(\\mu\\) 的二次方程，且最大值在 MLE \\(\\hat{\\mu}=\\bar{x}\\) 時取值 \\(0\\)。所以可以通過對數似然比法求出均值的 \\(95\\%\\) 信賴區間公式： \\[-2\\times[-\\frac{1}{2}(\\frac{\\bar{x}-\\mu}{\\sigma/\\sqrt{n}})^2]=3.84\\\\ \\Rightarrow L=\\bar{x}-\\sqrt{3.84}\\frac{\\sigma}{\\sqrt{n}} \\\\ U=\\bar{x}+\\sqrt{3.84}\\frac{\\sigma}{\\sqrt{n}} \\\\ \\text{note}: \\;\\sqrt{3.84}=1.96\\] 注意到這和我們之前求的正態分佈均值的信賴區間公式 (Section 10.1) 完全一致。 13.5 Inference Practical 05 13.5.1 Q1 假設十個對象中有三人死亡，用二項分佈模型來模擬這個例子，求這個例子中參數 \\(\\pi\\) 的似然方程和圖形 (likelihood) ? 解 \\[\\begin{aligned} L(\\pi|3) &amp;= \\binom{10}{3}\\pi^3(1-\\pi)^{10-3} \\\\ \\text{omitting } &amp; \\text{terms not in } \\pi\\\\ \\Rightarrow \\ell(\\pi|3) &amp;= \\log[\\pi^3(1-\\pi)^7] \\\\ &amp;= 3\\log\\pi+7\\log(1-\\pi)\\\\ \\Rightarrow \\ell^\\prime(\\pi|3)&amp;= \\frac{3}{\\pi}-\\frac{7}{1-\\pi} \\\\ \\text{let} \\; \\ell^\\prime&amp; =0\\\\ &amp;\\frac{3}{\\pi}-\\frac{7}{1-\\pi} = 0 \\\\ &amp;\\frac{3-10\\pi}{\\pi(1-\\pi)} = 0 \\\\ \\Rightarrow \\text{MLE} &amp;= \\hat\\pi = 0.3 \\end{aligned}\\] 圖 13.3: Binomial likelihood function 3 out of 10 subjects 計算似然比，並作圖，注意方程圖形未變，\\(y\\) 軸的變化；取對數似然比，並作圖 LR &lt;- L/max(L) ; head(LR) ## [1] 0.0000000 0.0004192 0.0031234 0.0098111 0.0216286 0.0392577 plot(pi, LR, type = &quot;l&quot;, ylim = c(0, 1),yaxt=&quot;n&quot;, col=&quot;darkblue&quot;, frame.plot = FALSE, ylab = &quot;&quot;, xlab = &quot;\\U03C0&quot;) grid(NA, 5, lwd = 1) axis(2, at=seq(0,1,0.2), las=2) title(main = &quot;Binomial likelihood ratio function\\n 3 out of 10 subjects&quot;) 圖 13.4: Binomial likelihood ratio function 3 out of 10 subjects logLR &lt;- log(L/max(L)) plot(pi, logLR, type = &quot;l&quot;, ylim = c(-4, 0),yaxt=&quot;n&quot;, col=&quot;darkblue&quot;, frame.plot = FALSE, ylab = &quot;&quot;, xlab = &quot;\\U03C0&quot;) grid(NA, 5, lwd = 1) axis(2, at=seq(-4,0,1), las=2) #title(main = &quot;Binomial log-likelihood ratio function\\n 3 out of 10 subjects&quot;) abline(h=-1.92, lty=1, col=&quot;red&quot;) axis(4, at=-1.92, las=0) 圖 13.5: Binomial log-likelihood ratio function 3 out of 10 subjects 13.5.2 Q2 與上面用同樣的模型，但是觀察人數變爲 \\(100\\) 人 患病人數爲 \\(30\\) 人，試作對數似然比方程之圖形，與上圖對比： 圖 13.6: Binomial log-likelihood ratio function 3 out of 10 and 30 out of 100 subjects 可以看出，兩組數據的 MLE 都是一致的， \\(\\hat\\pi=0.3\\)，但是對數似然比方程圖形在 樣本量爲 \\(n=100\\) 時比 \\(n=10\\) 時窄很多，由此產生的似然比信賴區間也就窄很多(精確很多) 。所以對數似然比方程的曲率(二階導數) ，反映了觀察獲得數據提供的對總體參數 \\(\\pi\\) 推斷過程中的信息量。而且當樣本量較大時，對數似然比方程也更加接近左右對稱的二次方程曲線。 13.5.3 Q3 在一個實施了160人年的追蹤調查中，觀察到8個死亡案例。使用泊松分佈模型，繪製對數似然比方程圖形，從圖形上目視推測極大似然比的 \\(95\\%\\) 信賴區間。 解 \\[\\begin{aligned} d = 8, \\;p &amp;= 160\\; \\text{person}\\cdot \\text{year} \\\\ \\Rightarrow \\text{D}\\sim \\text{Poi}(\\mu &amp;=\\lambda p) \\\\ L(\\lambda|\\text{data}) &amp;= \\text{Prob}(D=d=8) \\\\ &amp;= e^{-\\mu}\\frac{\\mu^d}{d!} \\\\ &amp;= e^{-\\lambda p}\\frac{\\lambda^d p^d}{d!} \\\\ \\text{omitting}&amp;\\; \\text{terms not in }\\lambda \\\\ &amp;= e^{-\\lambda p}\\lambda^d \\\\ \\Rightarrow \\ell(\\lambda|\\text{data})&amp;= \\log(e^{-\\lambda p}\\lambda^d) \\\\ &amp;= d\\cdot \\log(\\lambda)-\\lambda p \\\\ &amp; = 8\\times \\log(\\lambda) - 160\\times\\lambda \\end{aligned}\\] 圖 13.7: Poisson log-likelihood ratio function 8 events in 160 person-years lambda LogLR 0.010 -6.4755 0.011 -5.8730 0.012 -5.3369 0.013 -4.8566 0.014 -4.4237 0.015 -4.0318 0.016 -3.6755 0.017 -3.3505 0.018 -3.0532 0.019 -2.7807 0.020 -2.5303 0.021 -2.3000 0.022 -2.0878 0.023 -1.8922 0.024 -1.7118 0.025 -1.5452 0.026 -1.3914 0.027 -1.2495 0.028 -1.1185 0.029 -0.9978 0.030 -0.8866 0.031 -0.7843 0.032 -0.6903 0.033 -0.6041 0.034 -0.5253 0.035 -0.4534 0.036 -0.3880 0.037 -0.3288 0.038 -0.2755 0.039 -0.2277 0.040 -0.1851 0.041 -0.1476 0.042 -0.1148 0.043 -0.0866 0.044 -0.0627 0.045 -0.0429 0.046 -0.0271 0.047 -0.0150 0.048 -0.0066 0.049 -0.0016 0.050 0.0000 0.051 -0.0016 0.052 -0.0062 0.053 -0.0138 0.054 -0.0243 0.055 -0.0375 0.056 -0.0534 0.057 -0.0718 0.058 -0.0926 0.059 -0.1159 0.060 -0.1414 0.061 -0.1692 0.062 -0.1991 0.063 -0.2311 0.064 -0.2651 0.065 -0.3011 0.066 -0.3389 0.067 -0.3786 0.068 -0.4201 0.069 -0.4633 0.070 -0.5082 0.071 -0.5547 0.072 -0.6029 0.073 -0.6525 0.074 -0.7037 0.075 -0.7563 0.076 -0.8103 0.077 -0.8657 0.078 -0.9225 0.079 -0.9806 0.080 -1.0400 0.081 -1.1006 0.082 -1.1624 0.083 -1.2255 0.084 -1.2896 0.085 -1.3550 0.086 -1.4214 0.087 -1.4889 0.088 -1.5575 0.089 -1.6271 0.090 -1.6977 0.091 -1.7693 0.092 -1.8419 0.093 -1.9154 0.094 -1.9898 0.095 -2.0652 0.096 -2.1414 0.097 -2.2185 0.098 -2.2964 0.099 -2.3752 0.100 -2.4548 所以從列表數據結合圖形， 可以找到信賴區間的下限在 0.022~0.023 之間， 上限在 0.093～0.094 之間。 "],["quadratic-llr.html", "第 14 章 二次方程近似法求對數似然比 approximate log-likelihood ratios 14.1 正態近似法求對數似然 Normal approximation to the log-likelihood 14.2 參數转换 parameter transformations 14.3 Inference Practical 06", " 第 14 章 二次方程近似法求對數似然比 approximate log-likelihood ratios 爲什麼要用二次方程近似對數似然比方程？ 上節也看到，我們會碰上難以用代數學計算獲得對數似然比信賴區間的情況 (Section 13.4.1: binomial example)。 我們同時知道，對數似然比方程會隨着樣本量增加而越來越漸進於二次方程，且左右對稱。 所以，我們考慮當樣本量足夠大時，用二次方程來近似對數似然比方程從而獲得參數估計的信賴區間。 14.1 正態近似法求對數似然 Normal approximation to the log-likelihood 根據前一節 (Section 13.4.2)，如果樣本均數的分佈符合正態分佈：\\(\\bar{X}\\sim N(\\mu, \\sigma^2/n)\\)。那麼樣本均數的對數似然比爲： \\[ llr(\\mu|\\bar{X})=\\ell(\\mu|\\bar{X})=-\\frac{1}{2}(\\frac{\\bar{x}-\\mu}{\\sigma/\\sqrt{n}})^2 \\] 其中， \\(\\bar{x}\\) 是正態分佈總體均數 \\(\\mu\\) 的極大似然估計 (maximum likelihood estimator, MLE)。如果已知總體的方差參數，那麼 \\(\\sigma/\\sqrt{n}\\) 是 \\(\\bar{x}\\) 的標準誤 (standard error)。 因此，假設 \\(\\theta\\) 是我們想尋找的總體參數。有些人提議可以使用下面的關於 \\(\\theta\\) 的二次方程來做近似： \\[ f(\\theta|data)=-\\frac{1}{2}(\\frac{\\theta-M}{S})^2 \\] 上述方程具有一個正態二次對數似然 (比) 的形式，而且該方程的極大似然估計(MLE)， \\(M\\) 的標準誤爲 \\(S\\)。如果我們正確地選用 \\(M\\) 和 \\(S\\)，那我們就可以用這樣的方程來近似求真實觀察數據的似然 \\(\\ell(\\theta|data)\\)。 通過近似正態對數似然比，\\(M\\) 應當選用使方程取最大值時，參數 \\(\\theta\\) 的極大似然估計 \\(M=\\hat{\\Theta}\\)。 但是在選用標準誤 \\(S\\) 上必須滿足下列條件： \\(S\\) 是極大似然估計 \\(\\hat{\\Theta}\\) 的標準誤。 被選擇的 \\(S\\) 必須儘可能的使該二次方程形成一個十分接近真實的對數似然比方程。特別是在最大值的部分必須與之無限接近或者一致。所以二者在 MLE 的位置應當有相同的曲率(二階導數) 。 由於，一個方程的曲率是該方程的二階導數(斜線斜率變化的速度) 。所以對數似然比方程在 MLE 取最大值時的曲率(二階導數) 爲： \\[ \\left.\\frac{d^2}{d\\theta^2}\\ell(\\theta)\\right\\vert_{\\theta=\\hat{\\theta}}=\\ell^{\\prime\\prime}(\\hat{\\theta})=-\\frac{1}{S^2}\\\\ \\Rightarrow S^2=\\left.-\\frac{1}{\\ell^{\\prime\\prime}(\\theta)}\\right\\vert_{\\theta=\\hat{\\theta}} \\] 在正態分佈的例子下，\\(M=\\bar{x}, S=\\sigma/\\sqrt{n}\\)。對數似然比方程最大值時的曲率(二階導數) 恰好就爲標準誤的平方的負倒數： \\(\\ell^{\\prime\\prime}(\\theta)=-\\frac{1}{SE^2}\\) \\(\\Rightarrow\\) 被叫做 Fisher information。 稍微總結一下： 任意的對數似然比方程 \\(llr(\\theta)\\) 都可以考慮用一個二次方程來近似： \\[f(\\theta|data)=-\\frac{1}{2}(\\frac{\\theta-M}{S})^2\\] 其中 \\[ \\begin{aligned} &amp;M=\\hat\\theta\\\\ &amp;S^2=\\left.-\\frac{1}{\\ell^{\\prime\\prime}(\\theta)}\\right\\vert_{\\theta=\\hat{\\theta}}\\\\ &amp;\\text{when} \\\\ &amp; n\\rightarrow\\infty \\Rightarrow \\begin{cases} S^2\\rightarrow \\text{Var}(\\hat\\theta) \\\\ S\\rightarrow \\text{SE}(\\hat\\theta) \\end{cases} \\end{aligned} \\] 14.1.1 近似法估算對數似然比的信賴區間 一旦我們決定了使用正態近似法來模擬對數似然比方程，對數似然比的信賴區間算法就回到了前一節中我們算過的方法，也就是： \\[ -2f(\\theta)&lt;\\mathcal{X}_{1,(1-\\alpha)}^2 \\] 故信賴區間爲： \\(m\\pm\\sqrt{\\mathcal{X}_{1,(1-\\alpha)}^2}S\\)。求\\(95\\%\\) 水平的信賴區間時，\\(\\mathcal{X}_{1,0.95}^2=3.84\\)，所以就又看到了熟悉的 \\(M\\pm1.96S\\)。 14.1.2 以泊松分佈爲例 一個被追蹤的樣本，經過了 \\(p\\) 人年的觀察，記錄到了 \\(d\\) 個我們要研究的事件： \\[ D\\sim \\text{Poisson}(\\mu), \\text{ where } \\mu=\\lambda p \\] Step 1. 找極大似然估計 (MLE)，之前介紹似然方程時推導過的泊松分佈的似然方程 (Section 12.6)： \\[ \\begin{aligned} P(D=d|\\lambda) &amp;= \\frac{e^{-\\mu}\\cdot\\mu^d}{d!} \\\\ &amp;=\\frac{e^{-\\lambda p}\\cdot\\lambda^d p^d}{d!} \\\\ \\text{omitting}&amp;\\;\\text{terms not in }\\mu \\\\ &amp;\\Rightarrow \\ell(\\lambda) = d\\log\\lambda - \\lambda p \\\\ &amp;\\Rightarrow \\ell^\\prime(\\lambda) = \\frac{d}{\\lambda} -p \\\\ &amp;\\Rightarrow \\hat\\lambda=\\frac{d}{p} = \\textbf{M} \\end{aligned} \\] Step 2. 求似然方程的二階導數，確認 MLE 是使方程獲得最大值的點，然後確定 \\(S^2\\)： \\[ \\begin{aligned} &amp; \\ell^\\prime(\\lambda) = \\frac{d}{\\lambda} -p \\\\ &amp; \\Rightarrow \\ell^{\\prime\\prime}(\\lambda) = -\\frac{d}{\\lambda^2}&lt;0 \\Rightarrow \\textbf{MLE is maximum} \\\\ &amp; S^2 = \\left.-\\frac{1}{\\ell^{\\prime\\prime}(\\lambda)}\\right\\vert_{\\lambda=\\hat{\\lambda}=d/p} = -\\frac{1}{-d/\\hat\\lambda^2} = -\\frac{1}{-d/(d/p)^2} \\\\ &amp;\\Rightarrow S^2 = \\frac{d}{p^2} \\\\ \\end{aligned} \\] Step 3. 把前兩部求得的 \\(MLE\\) 和 \\(S^2\\) 代入近似的二次方程： \\[ \\begin{aligned} &amp; \\hat\\lambda=\\frac{d}{p}=M,\\; S^2 = \\frac{d}{p^2} \\\\ &amp; \\text{using approximate quadratic}\\;llr \\\\ &amp; q(\\lambda) = -\\frac{1}{2}(\\frac{\\lambda-M}{S})^2\\\\ &amp;\\Rightarrow q(\\lambda) = -\\frac{1}{2}(\\frac{\\lambda-\\frac{d}{p}}{\\frac{\\sqrt{d}}{p}})^2\\\\ &amp; let \\; q(\\lambda)=-1.92\\\\ &amp;\\Rightarrow -\\frac{1}{2}(\\frac{\\lambda-\\frac{d}{p}}{\\frac{\\sqrt{d}}{p}})^2=-1.92\\\\ &amp;(\\frac{\\lambda-\\frac{d}{p}}{\\frac{\\sqrt{d}}{p}})^2=3.84\\\\ &amp;\\frac{\\lambda-\\frac{d}{p}}{\\frac{\\sqrt{d}}{p}} = \\pm1.96\\\\ &amp;\\Rightarrow 95\\%\\text{CI for }\\;\\lambda = \\frac{d}{p}\\pm1.96\\frac{\\sqrt{d}}{p} \\end{aligned} \\] 結論就是： 發病(死亡) 率 \\(\\lambda\\) 的 \\(95\\%\\) 信賴區間爲： \\(M\\pm1.96S\\)。所以我們不需要每次都代入對數似然比方程，只要算出 \\(MLE = M\\) 和 \\(S\\) 之後代入這個公式就可以用二次方程近似法算出信賴區間。 14.1.3 以二項分佈爲例 \\[K\\sim Bin(n,\\pi)\\] Step 1. 找極大似然估計 (MLE)： \\[ \\begin{aligned} &amp; Prob(K=k) = \\pi^k(1-\\pi)\\binom{n}{k}\\\\ &amp;\\Rightarrow L(\\pi|k) = \\pi^k(1-\\pi)\\binom{n}{k}\\\\ &amp;\\text{omitting terms not in }\\pi \\\\ &amp;\\Rightarrow \\ell(\\pi) = k\\:\\log\\pi+(n-k)\\log(1-\\pi) \\\\ &amp;\\ell^\\prime(\\pi) = \\frac{k}{\\pi}-\\frac{n-k}{1-\\pi} \\\\ &amp; \\text{let}\\;\\ell^\\prime(\\hat\\pi) =0 \\\\ &amp;\\Rightarrow \\frac{k}{\\hat\\pi}-\\frac{n-k}{1-\\hat\\pi}=0\\\\ &amp;\\Rightarrow \\frac{\\hat\\pi}{1-\\hat\\pi}=\\frac{k}{n-k}\\\\ &amp;\\Rightarrow \\frac{\\hat\\pi}{1-\\hat\\pi}=\\frac{k/n}{1-k/n}\\\\ &amp;\\Rightarrow \\hat\\pi=\\frac{k}{n} = p = \\textbf{M} \\end{aligned} \\] Step 2. 將對數似然方程的二次微分 (二階導數)，確認在 MLE 爲極大值，並確認 \\(S^2\\)： \\[ \\begin{aligned} &amp;\\ell^\\prime(\\pi) = \\frac{k}{\\pi}-\\frac{n-k}{1-\\pi} \\\\ &amp;\\ell^{\\prime\\prime}(\\pi)=\\frac{-k}{\\pi^2}-\\frac{n-k}{(1-\\pi)^2} &lt;0 \\\\ &amp;\\therefore \\text{at}\\;\\textbf{MLE}\\;\\ell(\\pi)\\;\\text{ has maximum} \\\\ S^2&amp;=\\left.-\\frac{1}{\\ell^{\\prime\\prime}(\\pi)}\\right\\vert_{\\pi=\\hat\\pi=k/n=p}\\\\ &amp;=\\frac{1}{\\frac{k}{\\hat\\pi^2}+\\frac{n-k}{(1-\\hat\\pi)^2}}\\\\ &amp;=\\frac{\\hat\\pi^2(1-\\hat\\pi)^2}{k(1-\\hat\\pi)^2+(n-k)\\hat\\pi^2}\\\\ &amp;=\\frac{P^2(1-P)^2}{np(1-p)^2+(n-np)p^2}\\\\ &amp;=\\frac{p(1-p)}{n(1-p)+np}\\\\ &amp;=\\frac{p(1-p)}{n}\\\\ &amp;\\Rightarrow S=\\sqrt{\\frac{p(1-p)}{n}} \\end{aligned} \\] Step 3. 將求得的 MLE 和 \\(S^2\\) 代入近似信賴區間： \\[ 95\\% \\text{CI} \\;\\text{for} \\; \\pi:\\\\ M\\pm1.96S=p\\pm1.96\\sqrt{\\frac{p(1-p)}{n}}\\\\ \\] 14.2 參數转换 parameter transformations 如果將參數 \\(\\theta\\) 通過某種數學方程轉化成 \\(g(\\theta)\\)，那麼我們可以認爲，轉化後的方程的 MLE 爲 \\(g(\\hat\\theta)\\)，其中 \\(\\hat\\theta\\) 是參數 \\(\\theta\\) 的 MLE。 類似地，如果 \\(\\theta_1 \\sim \\theta_2\\) 是參數 \\(\\theta\\) 的似然比信賴區間，那麼 \\(g(\\theta_1)\\sim g(\\theta_2)\\) 就是 \\(g(\\theta)\\) 的似然比信賴區間。 以下爲轉換參數以後獲取信賴區間的步驟： 將參數通過某些數學方程(通常是取對數) 轉化，使新的對數似然比方程更加接近二次方程的對稱圖形。 Transform parameter so that \\(llr\\) is closer to a quadratic shape. 用本節學到的二次方程近似法，求得轉化後的參數的似然比信賴區間。 Use our quadratic approximation on the transformed parameter to calculate our likelihood ratio confidence intervals. 將第2步計算獲得的似然比信賴區間再通過轉化參數時的逆函數轉換回去，以獲得原參數的似然比信賴區間。 Transform the confidence intervals back, or to any scale we wish – they remain valid. 14.2.1 以泊松分佈爲例 當我們用泊松分佈模擬事件在某段時間內發生率 \\(\\lambda\\) 時，注意到這個事件發生率必須滿足 \\(\\lambda&gt;0\\)。當事件發生次數較低時，會讓似然方程的圖形被擠壓在低值附近。如果嘗試用對數轉換 \\(\\lambda \\rightarrow \\log(\\lambda)\\) 此時 \\(\\log(\\lambda)\\) 就不再被限制與 \\(&gt;0\\)。下面我們嘗試尋找對數轉換過後的 \\(M\\) 和 \\(S\\)。 令 \\(\\beta=\\log(\\lambda), \\Rightarrow e^\\beta=\\lambda\\) 從本文上半部分中我們已知 \\(\\hat\\lambda=\\frac{d}{p}\\)。 對數轉換以後的 \\(M\\) 是什麼? 根據定義，\\(MLE(\\beta)=MLE[\\log(\\lambda)]=\\log(\\hat\\lambda)\\) \\(\\Rightarrow M=\\hat\\beta=\\log(\\frac{d}{p})\\) 對數轉換以後的 \\(S\\) 是什麼? 泊松分佈的對數似然方程是：\\(\\ell(\\lambda|d)=d \\log(\\lambda) - \\lambda p\\) 用 \\(\\beta\\) 替換掉 \\(\\lambda\\) \\[ \\begin{aligned} &amp; \\ell(\\beta|d)=d \\beta - pe^\\beta\\\\ &amp; \\Rightarrow \\ell^\\prime(\\beta)=d-pe^\\beta \\Rightarrow \\ell^{\\prime\\prime}(\\beta)=-pe^\\beta \\\\ &amp; S^2 = \\left.-\\frac{1}{\\ell^{\\prime\\prime}(\\beta)}\\right\\vert_{\\beta=\\hat{\\beta}} = \\left.\\frac{1}{pe^\\beta}\\right\\vert_{\\beta=\\hat{\\beta}} = \\frac{1}{pe^{\\log(d/p)}}\\\\ &amp;\\Rightarrow S^2=\\frac{1}{d} \\therefore S=\\frac{1}{\\sqrt{d}} \\end{aligned} \\] 轉換後的近似二次方程： \\[ \\begin{aligned} &amp; q(\\beta) = -\\frac{1}{2}(\\frac{\\beta-M}{S})^2 = -\\frac{1}{2}(\\frac{\\beta-\\log(\\frac{d}{p})}{\\frac{1}{\\sqrt{d}}})^2 \\end{aligned} \\] \\(\\beta\\) 的 \\(95\\%\\) 信賴區間 \\(=\\log(\\frac{d}{p})\\pm1.96\\frac{1}{\\sqrt{d}}\\) \\(\\lambda\\) 的 \\(95\\%\\) 信賴區間 \\(=exp(\\log(\\frac{d}{p})\\pm1.96\\frac{1}{\\sqrt{d}})\\) 14.2.2 以二項分佈爲例 在研究對象 \\(n\\) 人中觀察到 \\(k\\) 個人患有某種中二疾病。 令 \\(\\beta=\\log(\\pi) \\Rightarrow \\pi=e^\\beta\\) 從上文的推倒也已知 \\(\\hat\\pi=\\frac{k}{n}=p\\) \\[ \\begin{aligned} &amp;\\Rightarrow \\ell(\\beta)=k\\log\\pi+(n-k)\\log(1-\\pi)=k\\beta+(n-k)\\log(1-e^\\beta) \\\\ &amp;\\Rightarrow \\ell^{\\prime}(\\beta)=k-\\frac{(n-k)(e^\\beta)}{1-e^\\beta} \\\\ &amp;\\Rightarrow \\ell^{\\prime\\prime}(\\beta)=-(n-k)\\frac{e^\\beta(1-e^\\beta)+e^{2\\beta}}{(1-e^\\beta)^2} \\\\ &amp; \\ell^{\\prime\\prime}(\\beta)= -(n-k)\\frac{e^\\beta}{(1-e^\\beta)^2}\\\\ &amp;\\Rightarrow S^2 = \\left.-\\frac{1}{\\ell^{\\prime\\prime}(\\beta)}\\right\\vert_{\\beta=\\hat{\\beta}} = \\frac{(1-e^{\\hat\\beta})^2}{(n-k)e^{\\hat\\beta}} \\\\ &amp;\\because \\hat\\beta=\\log(\\hat\\pi) \\\\ &amp;\\therefore e^{\\hat\\beta} = \\frac{k}{n}\\\\ &amp;\\Rightarrow S^2=\\frac{(1-\\frac{k}{n})^2}{(n-k)\\frac{k}{n}}=\\frac{n-k}{nk}=\\frac{1}{k}-\\frac{1}{n}\\\\ &amp; \\Rightarrow S=\\sqrt{\\frac{1}{k}-\\frac{1}{n}}\\\\ \\end{aligned} \\] 14.3 Inference Practical 06 14.3.1 Q1 在\\(n=100\\)人中觀察到有\\(k=40\\)人患病，假設每個人只有患病，不患病兩個狀態，用二項分佈來模擬這個數據，\\(\\pi\\) 爲患病的概率。下面是 \\(\\pi \\in [0.2,0.6]\\) 區間的對數似然比方程曲線。 pi &lt;- seq(0.2, 0.6, by=0.01) L &lt;- (pi^40)*((1-pi)^60) Lmax &lt;- rep(max(L), 41) LR &lt;- L/Lmax logLR &lt;- log(LR) plot(pi, logLR, type = &quot;l&quot;, ylim = c(-11, 0),yaxt=&quot;n&quot;, frame.plot = FALSE, ylab = &quot;logLR(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) grid(NA, 5, lwd = 2) # add some horizontal grid on the background axis(2, at=seq(-12,0,2), las=2) 圖 14.1: Binomial log-likelihood ratio between 0.2-0.6 #title(main = &quot;Figure 1. Binomial log-likelihood ratio&quot;) 用一個二次方程來模擬上面的對數似然比曲線：\\(f(\\pi)=-\\frac{(\\pi-M)^2}{2S^2}\\)，其中 \\(M=\\hat\\pi=\\frac{k}{n}=0.4\\)，\\(S^2=\\frac{p(1-p)}{n}=0.0024\\) par(mai = c(1.2, 0.5, 1, 0.7)) quad &lt;- -(pi-0.4)^2/(2*0.0024) plot(pi, quad, type = &quot;l&quot;, ylim = c(-4, 0),yaxt=&quot;n&quot;, col=&quot;red&quot;, frame.plot = FALSE, ylab = &quot;&quot;, xlab = &quot;\\U03C0&quot;) lines(pi, logLR, col=&quot;black&quot;) grid(NA, 4, lwd = 1) # add some horizontal grid on the background axis(2, at=seq(-4,0,1), las=2) #title(main = &quot;Figure 2. Quadratic approximation\\n of binomial log-likelihood ratio \\n 40 out of 100 subjects&quot;) abline(h=-1.92, lty=1, col=&quot;red&quot;) axis(4, at=-1.92, las=2) legend(x=0.27, y= -5.5 ,xpd = TRUE, legend=c(&quot;logLR&quot;,&quot;Quadratic&quot;), bty = &quot;n&quot;, col=c(&quot;black&quot;,&quot;red&quot;), lty=c(1,1), horiz = TRUE) #the legend is below the graph 圖 14.2: Quadratic approximation of binomial log-likelihood ratio 40 out of 100 subjects 14.3.2 Q2 依舊使用二項分佈數據來模擬，觀察不同的事件數量和樣本量對近似計算的影響。 類比上面的問題，用同樣的 \\(\\hat\\pi=0.4\\)，但是 \\(n=10, k=4\\) 時的圖形： par(mai = c(1.2, 0.5, 1, 0.7)) pi &lt;- seq(0.0, 0.85, by=0.01) L &lt;- (pi^4)*((1-pi)^6) logLR &lt;- log(L/max(L)) quad &lt;- -(pi-0.4)^2/(2*0.4*0.6/10) plot(pi, quad, type = &quot;l&quot;, ylim = c(-5, 0),yaxt=&quot;n&quot;, col=&quot;red&quot;, frame.plot = FALSE, ylab = &quot;&quot;, xlab = &quot;\\U03C0&quot;) lines(pi, logLR, col=&quot;black&quot;) grid(NA, 4, lwd = 1) axis(2, at=seq(-5,0,1), las=2) #title(main = &quot;Figure 3. Quadratic approximation\\n of binomial log-likelihood ratio\\n 4 out of 10 subjects&quot;) abline(h=-1.92, lty=1, col=&quot;red&quot;) axis(4, at=-1.92, las=2) legend(x=0.17, y= -6.5 ,xpd = TRUE, legend=c(&quot;logLR&quot;,&quot;Quadratic&quot;), bty = &quot;n&quot;, col=c(&quot;black&quot;,&quot;red&quot;), lty=c(1,1), horiz = TRUE) #the legend is below the graph 圖 14.3: Quadratic approximation of binomial log-likelihood ratio 4 out of 10 subjects \\(\\hat\\pi=0.4, n=1000, k=400\\) 圖 14.4: Quadratic approximation of binomial log-likelihood ratio 400 out of 1000 subjects \\(\\hat\\pi=0.01, n=100, k=1\\) 注意此圖中紅線提示的近似二次曲線，信賴區間的下限已經低於0，是無法接受的近似。 圖 14.5: Quadratic approximation of binomial log-likelihood ratio 1 out of 100 subjects \\(\\hat\\pi=0.01, n=1000, k=10\\) 圖 14.6: Quadratic approximation of binomial log-likelihood ratio 10 out of 1000 subjects \\(\\hat\\pi=0.01, n=10000, k=100\\) 圖 14.7: Quadratic approximation of binomial log-likelihood ratio 100 out of 10000 subjects \\(\\hat\\pi=0.99, n=100, k=99\\) 注意此圖中紅線提示的近似二次曲線，信賴區間的上限已經大於1，和上面的 Figure 5. 一樣也是無法接受的近似。 圖 14.8: Quadratic approximation of binomial log-likelihood ratio 99 out of 100 subjects 總結： 二次方程近似時，在二項分佈的情況下，隨着 \\(n, k\\) 增加，近似越理想。 "],["hypothesis-test.html", "第 15 章 假設檢驗的構建 Construction of a hypothesis test 15.1 什麼是假設檢驗 Hypothesis testing 15.2 錯誤概率和效能方程 error probabilities and the power function 15.3 如何選擇要檢驗的統計量 15.4 複合假設 composite hypotheses 15.5 爲反對零假設 \\(H_0\\) 的證據定量 15.6 雙側替代假設情況下，雙側 \\(p\\) 值的定量方法 15.7 假設檢驗構建之總結 15.8 Inference Practical 07", " 第 15 章 假設檢驗的構建 Construction of a hypothesis test 15.1 什麼是假設檢驗 Hypothesis testing 一般來說，我們的假設(或者叫假說) 是對與我們實驗觀察數據來自的總體(或人羣) 的概率分佈的描述。在參數檢驗的背景下，就是要檢驗描述這個總體(或人羣) 的概率分佈的參數 (parameters)。最典型的情況是，我們提出兩個互補的假設，一個叫作零假設(或者叫原假設) ，null hypothesis (\\(H_0\\))；另一個是與之對應的(互補的) 替代假設，althernative hypothesis (\\(H_1/H_A\\))。 例如，若 \\(X\\) 是一個服從二項分佈的隨機離散變量 \\(X\\sim Bin(5, \\theta)\\)。可以考慮如下的零假設和替代假設：\\(H_0: \\theta=\\frac{1}{2}; H_1: \\theta=\\frac{2}{3}\\)。 當建立了零假設和替代假設以後，假設檢驗就是要建立如下的規則以確定： 從樣本中計算所得的參數估計值爲多少時，拒絕零假設。(接受替代假設爲“真”) 從樣本中計算所得的參數估計值爲多少時，零假設不被拒絕。(接受零假設爲“真”) 注意：(這一段很繞) 上面的例子是零假設和替代假設均爲簡單假設的情況，實際操作中常常會設計更加複雜的(不對稱的) 假設：即簡單的 \\(H_0\\)，複雜的 \\(H_1\\)。如此一來當零假設 \\(H_0\\) 不被拒絕時，我們並不一定就接受之。因爲無證據證明 \\(H_1\\) 不等於有證據證明 \\(H_0\\)。(Absence of evidence is not evidence of absence). 換句話說，無證據讓我們拒絕 \\(H_0\\) 本身並不成爲支持 \\(H_0\\) 爲“真”的證據。因爲在實際操作中，當我們設定的簡單的零假設沒有被拒絕，可能還存在其他符合樣本數據的零假設；相反地，當樣本數據的計算結果拒絕了零假設，我們只能接受替代假設。所以，反對零假設的證據，同時就是支持替代假設的證據。 在樣本空間 sample space 中，決定了零假設 \\(H_0\\) 會被拒絕的子集 subset，被命名爲拒絕域 rejection region 或者 判別區域 critical region，用 \\(\\mathfrak{R}\\) 來標記。 15.2 錯誤概率和效能方程 error probabilities and the power function 這一部分也可以參考本書臨牀試驗樣本量計算 (Section 34) 部分。 表 15.1 : Definition of Type I and Type II error SAMPLE \\(\\underline{x} \\notin \\mathfrak{R}\\) Accept \\(H_0\\) \\(\\underline{x} \\in \\mathfrak{R}\\) Reject \\(H_0\\) TRUTH \\(H_0\\) is true \\(\\checkmark\\) \\(\\alpha\\) Type I error \\(H_1\\) is true \\(\\beta\\) Type II error \\(\\checkmark\\) 假如一個假設檢驗是關於總體參數 \\(\\theta\\) 的： \\[H_0: \\theta=\\theta_0 \\text{ v.s. } H_1: \\theta=\\theta_1 \\] 這個檢驗的效能被定義爲當替代假設爲“真”時，拒絕零假設的概率(該檢驗方法能夠檢驗出有真實差別的能力) ： \\[\\text{Power}=\\text{Prob}(\\underline{x}\\in\\mathfrak{R}|H_1\\text{ is true}) = 1-\\text{Prob}(\\text{Type II error})\\] 觀察數據只有兩種可能：落在拒絕域內，或者落在拒絕域之外。第二類錯誤我們常常使用 \\(\\beta\\) 來表示，所以 \\(\\text{Power}=1-\\beta\\)。 檢驗的顯著性水平用 \\(\\alpha\\) 來表示。\\(\\alpha\\) 的直觀意義就是，檢驗結果錯誤的拒絕了零假設 \\(H_0\\)，接受了替代假設 \\(H_1\\)，即假陽性的概率。 \\[\\text{Prob}(\\underline{x}\\in \\mathfrak{R} |H_0 \\text{ is true})=\\text{Prob(Type I error)}\\] 15.2.1 以二項分佈爲例 用本文開頭的例子： \\(X\\sim Bin(5,\\theta)\\)。和我們建立的零假設和替代假設：\\(H_0: \\theta=\\frac{1}{2}; H_1: \\theta=\\frac{2}{3}\\)： 考慮兩種檢驗方法： A 方法：當且僅當5次觀察都爲“成功”時才拒絕 \\(H_0 (\\text{i.e.}\\; X=5)\\)。所以此時判別區域 \\(\\mathfrak{R}\\) 爲 \\(5\\)。檢驗效能 \\(\\text{Power}=1-\\beta\\) 爲：\\(Prob(X=5|H_1 \\text{ is true})=(\\frac{2}{3})^5=0.1317\\)。顯著性水平 \\(\\alpha\\) 爲 \\(Prob(X=5|H_0 \\text{ is true})=(\\frac{1}{2})^5=0.03125\\)。 B 方法：當觀察到3,4,5次“成功”時，拒絕 \\(H_0 (\\text{i.e.} X=3,4,5)\\)。此時判別區域 \\(\\mathfrak{R}\\) 爲 \\(3,4,5\\)。檢驗效能 \\(Power\\) 爲：\\(Prob(X=3,4,\\text{ or }5|H_1 \\text{ is ture})=\\sum_{i=3}^5(\\frac{2}{3})^i(\\frac{1}{3})^{5-i}\\approx0.7901\\)；顯著性水平 \\(\\alpha\\) 爲：\\(Prob(X=3,4,5|H_0 \\text{ is true})=\\sum_{i=3}^5(\\frac{1}{2})^i(\\frac{1}{2})^{5-i}=0.5\\) # the power in test B dbinom(3,5,2/3)+dbinom(4,5,2/3)+dbinom(5,5,2/3) ## [1] 0.7901 # the size in test B dbinom(3,5,0.5)+dbinom(4,5,0.5)+dbinom(5,5,0.5) ## [1] 0.5 比較上面兩種檢驗方法，可以看到，用B方法時，我們有更高的概率獲得假陽性結果(犯第一類錯誤，錯誤地拒絕 \\(H_0\\)，接受 \\(H_1\\))，但是也有更高的檢驗效能 \\(1-\\beta\\)(真陽性更高) 。這個例子就說明了，試圖提高檢驗效能的同時，會提高犯第一類錯誤的概率。實際操作中我們常常將第一類錯誤的概率固定，例如 \\(\\alpha=0.05\\)，然後儘可能選擇檢驗效能最高的檢驗方法。 15.3 如何選擇要檢驗的統計量 在上面的二項分佈的實驗中，“成功的次數” 是我們感興趣的要檢驗的統計量。但也可能是第一次出現 “成功” 之前的實驗次數，或者，任何與假設相關的統計量。相似的，如果觀察不是離散變量而是連續的，可以拿來檢驗的指標就有很多，如均值，中位數，衆數，幾何平均值等。 幸運地是，當明確了零假設和替代假設後，我們可以利用 Neyman-Pearson lemma 似然比公式1: 來決定使用哪個統計量做檢驗最有效： \\[\\text{Neyman-Pearson lemma}=\\frac{L_{H_0}}{L_{H_1}}\\] 這公式很直觀，因爲當觀察數據更加支持 \\(H_1\\) 時 (\\(L_{H_1}\\) 更大)，\\(H_0\\) 的可能性相對更小，就更應該被拒絕。而且，由於似然比越小，他的對數就越小，實際計算時我們常使用對數似然比：\\(\\ell_{H_0}-\\ell_{H_1}\\)。 問題來了，那到底要多小才算小？這個進入拒絕域的閾值由兩個指標來決定： 被檢驗統計量的樣本分佈 (the sampling distribution of the test statistic) 第一類錯誤概率 \\(\\alpha\\) (the required value of \\(\\alpha\\)) 15.3.1 以已知方差的正態分佈爲例 假如已知 \\(X_1, \\cdots, X_n \\stackrel{i.i.d}{\\sim} N(\\mu, \\sigma^2)\\) 而且方差 \\(\\sigma^2\\) 也是已知的。如果令 \\(H_0: \\mu=5\\; ;H_1: \\mu=10\\) 可以通過如下的方法找到我們需要的最佳檢驗統計量 best statistic 根據之前的推導 (Section 13) 可知正態分佈的似然方程如下： \\[\\ell(\\mu|\\underline{x}) =-\\frac{1}{2\\sigma^2}\\sum_{i=1}^n(x_i-\\mu)^2\\] 所以已知 \\(\\sigma^2\\) 時，我們的零假設和替代假設之間的對數似然比 \\(\\ell_{H_0}-\\ell_{H_1}\\) 爲: \\[\\ell_{H_0}-\\ell_{H_1}=-\\frac{1}{2\\sigma^2}(\\sum_{i=1}^n(x_i-5)^2-\\sum_{i=1}^n(x_i-10)^2)\\] 然而，我們只需要考慮隨着數據變化的部分，所以忽略掉不變的部分2： \\[ \\begin{aligned} \\ell_{H_0}-\\ell_{H_1} &amp; = -(\\sum_{i=1}^n(x_i-5)^2-\\sum_{i=i}^n(x_i-10)^2)\\\\ &amp; = 75n - 2\\times(10-5)\\sum_{i=1}^nx_i \\\\ \\end{aligned} \\] 所以只要樣本和 (sum of sample) \\(\\sum_{i=1}^nx_i\\) (最佳統計量 best statistic) 足夠大，零假設就會被拒絕。而且注意到最佳統計量可以乘以任何常數用作新的最佳統計量。爲了方便我們就用樣本均數 \\(\\frac{1}{n}\\sum_{i=1}^nx_i\\) 作此處的最佳統計量。所以此時，我們的最佳檢驗就是當樣本均值足夠大，超過某個閾值時，我們拒絕零假設。而且，樣本均值的樣本分佈是可以知道的，這樣就便於我們繼續計算下一步：拒絕域 (判別區域) 。 15.4 複合假設 composite hypotheses 目前爲止我們討論的假設檢驗限制太多，實際操作時，我們多考慮類似如下的假設： \\(H_0: \\theta=\\theta_0 \\;\\text{v.s.}\\; H_1: \\theta&gt;\\theta_0\\) [單側的替代假設] \\(H_0: \\theta=\\theta_0 \\;\\text{v.s.}\\; H_1: \\theta\\neq\\theta_0\\) [雙側的替代假設] 所以我們面臨的問題是簡單假設中用於判定的最佳統計量，是始終如一地適用？我們一一來看： 15.4.1 單側替代假設 本章目前爲止的推導中我們發現，樣本均值越大，零假設和替代假設的對數似然比 \\(\\ell_{H_0}-\\ell_{H_1}\\) 越小。所以我們在樣本均值較大時，拒絕零假設，那麼就可以把原來使用的簡單替代假設 \\(H_1: \\mu=10\\) 擴展爲，任意大於 \\(5\\) 的 \\(\\mu\\) ，即 \\(\\mu&gt;5\\) 。因爲大於 \\(5\\) 的任何均值，都提供了更小的對數似然比，都會讓我們拒絕零假設。所以在正態分佈時，單側替代假設的最佳檢驗統計量還是樣本均值。 15.4.2 雙側替代假設 雙側替代假設的情況下，我們無法繼續使用樣本均值作爲最佳統計量。因爲當我們想檢驗：\\(H_0: \\mu=5 \\;\\text{v.s.}\\; H_1: \\mu&lt;5\\) 時，必須獲得足夠小的樣本均值才能讓我們拒絕零假設。此處暫且先按下不表。 15.5 爲反對零假設 \\(H_0\\) 的證據定量 重新再考慮複合假設：\\(H_0: \\theta=\\theta_0\\;\\text{v.s.}\\;H_1: \\theta&gt;\\theta_0\\) 假如存在一個總是可用的最佳檢驗統計量，用 \\(T\\) 來標記 (或 \\(T(x)\\))， 這個統計量足夠大時，我們拒絕 \\(H_0\\)。 別忘了我們還要給事先固定好的顯著性水平 \\(\\alpha\\) 定義與之相關的判別區域： \\[\\text{Prob}(\\underline{x}\\in\\mathfrak{R}|H_0)=\\alpha\\] 如果我們知道 \\(T\\) 的樣本分佈，我們就可以使用一個閾值 \\(c\\) 來定義這個判別區域： \\[Prob(T\\geqslant c|H_0)=\\alpha\\] 更加正式的，我們定義判別區域 \\(\\mathfrak{R}\\) 爲： \\[\\{\\underline{x}:\\text{Prob}(T(x)\\geqslant c|H_0)=\\alpha\\}\\] 換句話說，當統計量 \\(T&gt;c\\) 時，我們拒絕 \\(H_0\\) 。如果先不考慮拒絕或不拒絕的二元判定，我們可以用一個連續型測量值來量化反對零假設 \\(H_0\\) 的證據。再考慮從觀察數據中獲得的 \\(T\\) ，即數據告訴我們的 \\(t\\) 。所以，當 \\(t\\) 值越大，說明觀察值相對零假設 \\(H_0\\) 越往極端的方向走。因此我們可以用 \\(T\\) 的樣本分佈來計算觀察值大大於等於這個閾值(極端值) 時的概率： \\[p=\\text{Prob}(T\\geqslant t|H_0)\\] 這個概率公式被稱爲是單側 \\(p\\) 值 (one-side p-value)。單側 \\(p\\) 值越小，統計量 \\(T\\) 的樣本空間就有越小比例(越強) 的證據支持零假設 \\(H_0\\)。 我們把這以思想用到假設檢驗中時，就可以認爲： \\[p&lt;\\alpha \\Leftrightarrow t&gt;c\\] 所以用我們一貫的設定 \\(\\alpha=0.05\\)，所以如果計算獲得 \\(p&lt;0.05\\) 我們就認爲獲得了足夠強的拒絕零假設 \\(H_0\\) 的證據。 15.5.1 回到正態分佈的均值比較問題上來(單側替代假設) 繼續考慮 \\(X_1,\\cdots,X_n\\stackrel{i.i.d}{\\sim} N(\\mu, \\sigma^2)\\)，假設 \\(\\sigma^2=10\\)，我們要檢驗的是 \\(H_0: \\mu=5 \\;\\text{v.s}.\\; H_1: \\mu&gt;5\\) 確定最佳檢驗統計量：已經證明過，單側替代假設的最佳檢驗統計量是樣本均值 \\(\\bar{x}\\)。 確定該統計量的樣本分佈：已知樣本均數的樣本分佈是 \\(\\bar{X}\\sim N(\\mu,\\sigma^2/n)\\) 。\\(\\Rightarrow Z=\\frac{\\bar{X}-\\mu}{\\sigma/\\sqrt{n}} \\sim N(0,1)\\)，所以在 \\(H_0\\) 條件下，\\(\\Rightarrow Z=\\frac{\\bar{X}-5}{\\sqrt{10}/\\sqrt{n}} \\sim N(0,1)\\) 所以當一個檢驗的顯著性水平設定爲 \\(\\alpha=0.05\\) 時，我們用判別區域 \\(\\mathfrak{R}\\)，使統計量據落在該判別區域內的概率爲 \\(0.05\\)： \\(\\text{Prob}(\\bar{X}\\geqslant c|H_0) = 0.05\\) 已知在標準正態分佈時，\\(\\text{Prob}(Z\\geqslant1.64)=0.05=\\text{Prob}(\\frac{\\bar{X}-5}{\\sqrt{10}/\\sqrt{n}}\\geqslant1.64)\\) 假設樣本量是 \\(10\\)，那麼數據的判別區域 \\(\\mathfrak{R}\\) 就是 \\(\\bar{X}\\geqslant6.64\\)。 假設觀察數據告訴我們，\\(\\bar{X}=7.76\\) 。那麼這一組觀察數據計算得到的統計量落在了判別區域內，就提供了足夠的證據拒絕接受 \\(H_0\\)。 我們可以給這個觀察數據計算相應的單側 \\(p\\) 值： \\(p=\\text{Prob}(\\bar{X}\\geqslant7.76|H_0)=\\text{Prob}(Z+5\\geqslant7.76)\\\\=\\text{Prob}(Z\\geqslant2.76)=0.003\\) 所以，觀察數據告訴我們，在 \\(H_0\\) 的前提下，觀察值出現的概率是 \\(0.3\\%\\) 。即，在無數次重複取樣實驗中，僅有 \\(0.3\\%\\) 的結果可以給出支持 \\(H_0\\) 的證據。因此我們拒絕 \\(H_0\\) 接受 \\(H_1\\)。 15.6 雙側替代假設情況下，雙側 \\(p\\) 值的定量方法 圖 15.1: Deliberately use an assymmetrical distribution to highlight the issues 此處故意使用一個左右不對稱的概率密度分佈來解釋。 現在的替代假設是雙側的： \\[H_0: \\theta=\\theta_0 \\;\\text{v.s.}\\; H_1: \\theta\\neq\\theta_0\\] 正常來說，雙側的假設檢驗應該分成兩個單側檢驗。即： \\(H_1: \\theta&gt;\\theta_0\\); \\(H_1: \\theta&lt;\\theta_0\\). 每個單側檢驗都有自己的最佳檢驗統計量。令 \\(T\\) 是 1. 的最佳檢驗統計量，該統計量的樣本分佈如上圖 15.1 所示(左右不對稱) 。假如觀察數據給出的統計量爲 \\(t_{\\text{obs}}\\)，那麼在概率上反對零假設的情況可以有兩種： \\(T\\geqslant t_{\\text{obs}}\\) 其中， \\(\\text{Prob}(T\\geqslant t_{\\text{obs}}|H_0)=\\tilde p\\); \\(T\\leqslant t^\\prime\\) 其中，\\(t^\\prime\\) 滿足： \\(\\text{Prob}(T\\leqslant t^\\prime|H_0) =\\tilde p\\)。(圖15.1) 所以概率密度分佈兩側的距離可以不對稱，但是只要左右兩側概率密度分佈的面積(\\(=\\tilde p\\))相同，那麼就可以直接認爲，雙側 \\(p\\) 值是兩側面積之和 (\\(p=2\\times \\tilde p\\))，且觀察數據提供的統計量落在這兩個面積內的話，都足以提供證據拒絕零假設 \\(H_0\\)。 注意： 被選中的 \\(t^\\prime\\) 值大小不大可能滿足：\\(|t^\\prime - E(T|\\theta_0)|=|t_{obs}-E(T|\\theta_0)|\\)。因爲那只有在完全左右對稱的分佈中才會出現。但是，此處我們關心的是面積左右兩邊的尾部要相等即可，所以我們只需要知道右半邊，較大的那個 \\(t_{obs}\\) 就完全足夠了。 回到上面的均值比較問題 (Section 15.5.1)。現在我們要進行雙側假設檢驗，即： \\(H_0: \\mu=5 \\text{ v.s. } H_1: \\mu\\neq5\\)，最佳統計量依然還是樣本均數 \\(\\bar{X}\\)。數據告訴我們說 \\(\\bar{X}=7.76\\)，因此雙側 \\(p\\) 值就是將已求得的單側 \\(\\tilde p\\) 值乘以 \\(2\\)： \\(\\text{two-sided } p=2\\tilde p= 0.006\\) 當然，實際操作中我們很少進行這樣繁瑣的論證，多數情況下就直接報告雙側 \\(p\\) 值。 15.7 假設檢驗構建之總結 按照如下的步驟一一構建我們的假設檢驗過程： 先建立零假設，和替代假設 (Section 15.1)； 定義最佳檢驗統計量 (用 Neyman-Pearson lemma) (Section 15.3)； 取得零假設條件下，最佳統計量的樣本分佈(通常都較爲困難，有時候我們會傾向於使用“不太理想”，但是計算較爲簡便的過程。) ； 定義拒絕域(判別區域) (常用 \\(\\alpha=0.05\\)) ； 計算觀察數據的檢驗統計量； 如果觀察數據的檢驗統計量落在了提前定義好的拒絕域內，那麼我們的檢驗結論就是：觀察數據拒絕了零假設支持替代假設。然而在實際操作時，如果發現數據的檢驗統計量不在拒絕域內，我們僅僅只能下結論說：觀察數據無法拒絕零假設(而不是接受零假設！) ； 報告計算得到的反對零假設的定量 \\(p\\) 值。 作爲統計學家，我們的任務是評價數據提供的證據，而不是簡單的去接受或者拒絕一個假設。 15.8 Inference Practical 07 15.8.1 Q1 某種藥物有兩種使用方法：可以口服，也可以注射。兩種方法都被認爲可以使血漿中藥物濃度在24小時候達到相似的平均水平，\\(3 \\mu \\text{g/L}\\)。已知口服該藥物後，濃度的方差爲 \\(1\\)，而如果是注射的話方差只有 \\(1/4\\)。因此設計了一個口服臨牀實驗，觀察到24小時後血漿中藥物濃度數據爲：2.54, 0.93, 2.75, 4.51, 3.71, 1.62, 3.01, 4.13, 2.08, 3.33。假設這組觀察數據獨立同分佈 \\(\\stackrel{i.i.d}{\\sim} N(3, \\sigma^2)\\) 證明以下的假設的最佳檢驗統計量是 \\(\\sum_{i=1}^{10}(x_i-3)^2\\)： \\[H_0: \\sigma^2=1/4 \\text{ v.s. } H_1: \\sigma^2=1\\] 解 根據 Neyman-Pearson lemma (Section 15.3) 來判斷最佳檢驗統計量： 下面用 \\(\\sigma^2_0, \\sigma^2_1\\) 分別標記零假設和替代假設時的方差。 \\[ \\begin{aligned} L(\\sigma^2|\\underline{x},\\mu=3) &amp;= \\prod_{i=1}^n\\frac{1}{\\sqrt{2\\pi\\sigma^2}}\\text{exp}(-\\frac{1}{2}(\\frac{x_i-3}{\\sigma})^2) \\\\ \\Rightarrow \\ell(\\sigma^2) &amp;=-\\frac{1}{2}\\sum_{i=1}^n\\text{log}\\sigma^2-\\frac{1}{2\\sigma^2}\\sum_{i=1}^n(x_i-3)^2 \\\\ &amp;= -\\frac{n}{2}\\text{log}\\sigma^2-\\frac{1}{2\\sigma^2}\\sum_{i=1}^n(x_i-3)^2 \\\\ \\Rightarrow \\ell(\\sigma_0^2)-\\ell(\\sigma_1^2)&amp;= \\frac{n}{2}\\text{log}\\sigma_1^2+\\frac{1}{2\\sigma_1^2}\\sum_{i=1}^n(x_i-3)^2\\\\ &amp;\\;\\;\\;\\;\\;\\;-\\frac{n}{2}\\text{log}\\sigma_0^2-\\frac{1}{2\\sigma_0^2}\\sum_{i=1}^n(x_i-3)^2\\\\ &amp;=\\frac{n}{2}(\\text{log}\\sigma_1^2-\\text{log}\\sigma_0^2)+\\frac{1}{2}(\\frac{1}{\\sigma_1^2}-\\frac{1}{\\sigma_0^2})\\sum_{i=1}^n(x_i-3)^2\\\\ &amp;=\\frac{n}{2}\\text{log}\\frac{\\sigma_1^2}{\\sigma_0^2}+\\frac{1}{2}(\\frac{1}{\\sigma_1^2}-\\frac{1}{\\sigma_0^2})\\sum_{i=1}^n(x_i-3)^2 \\end{aligned} \\] 觀察上面的式子就會發現，當實驗重複後唯一會發生變化的就是後面的 \\(\\sum_{i=1}^n(x_i-3)^2\\)。 由於，\\(\\sigma_0^2=1/4, \\; \\sigma_1^2=1\\)，所以 \\((\\frac{1}{\\sigma_1^2}-\\frac{1}{\\sigma_0^2})&lt;0\\)。那麼當 \\(\\sum_{i=1}^n(x_i-3)^2\\) 越大，\\(\\ell(\\sigma_0^2)-\\ell(\\sigma_1^2)\\) 就越小。因此，這就是我們尋找的最佳檢驗統計量。 證明上面的檢驗統計量總是可以作爲最佳檢驗統計量，用於檢驗單側替代假設：\\(H_1: \\sigma^2&gt;1/4\\)。 上面的替代假設中 \\(\\sigma_1^2=1\\)，如果將替代假設改成 \\(\\sigma_1^2&gt;1/4\\)，那麼 \\((\\frac{1}{\\sigma_1^2}-\\frac{1}{\\sigma_0^2})&lt;0\\) 依然成立。所以，\\(\\sum_{i=1}^n(x_i-3)^2\\)，或者這部分乘以任何一個不變的常數依然是替代假設爲 \\(H_1: \\sigma^2&gt;1/4\\) 時的最佳檢驗統計量。 在 \\(H_0\\) 條件下，樣本分佈 \\(\\sum_{i=1}^{10}(x_i-3)^2\\) 是怎樣的分佈？利用這個分佈來定義顯著性水平爲 \\(\\alpha=0.05\\) 時的拒絕域。 在\\(H_0\\) 條件下，有： \\[X_1,\\cdots,X_n\\stackrel{i.i.d}{\\sim}N(3,1/4)\\\\ \\Rightarrow \\frac{X_i-3}{\\sqrt{1/4}}\\sim N(0,1)\\\\ \\Rightarrow (\\frac{X_i-3}{\\sqrt{1/4}})^2 \\sim \\mathcal{X}_1^2\\\\ \\Rightarrow \\sum_{i=1}^{10}(\\frac{X_i-3}{\\sqrt{1/4}})^2 \\sim \\mathcal{X}_{10}^2\\\\ \\Rightarrow 4\\sum_{i=1}^{10}(X_i-3)^2\\sim \\mathcal{X}_{10}^2\\\\ \\text{Let } T=\\sum_{i=1}^{10}(X_i-3)^2\\\\ \\Rightarrow 4T \\sim \\mathcal{X}_{10}^2\\] 拒絕域被定義爲檢驗統計量取大於等於某個臨界值時概率爲 \\(0.05\\)，即 \\(\\text{Prob}(T\\geqslant t)=0.05\\) \\[\\text{Prob}(4T\\geqslant \\mathcal{X}^2_{10,0.95})=0.05\\\\ \\Rightarrow \\text{Prob}(T\\geqslant 1/4\\mathcal{X}^2_{10,0.95})=0.05\\] 所以，此處當顯著性水平定爲 \\(\\alpha=0.05\\) 時，拒絕域就是要大於自由度爲 \\(10\\) 的卡方分佈的 \\(95\\%\\) 分位點。 在 \\(H_0\\) 條件下，該檢驗統計量的正態分佈模擬是怎樣的？ 根據中心極限定理(Section 8) 和 卡方分佈的性質 (Section 11) \\[n\\rightarrow \\infty, X_n^2\\sim N(n, 2n)\\] 所以近似地， \\[\\mathcal{X}_{10}^2\\sim N(\\text{E}(\\mathcal{X}_{10}^2)=10,\\text{Var}(\\mathcal{X}_{10}^2)=20)\\\\ \\Rightarrow 4T\\sim \\text{approx} N(10,20)\\\\ \\Rightarrow \\frac{4T-10}{\\sqrt{20}} \\stackrel{\\cdot}{\\sim} N(0,1)\\] 用上面的正態分佈模擬，和觀察嘗試對單側替代假設作統計檢驗並依據所得結果作出結論：\\[H_0: \\sigma^2=1/4 \\text{ v.s. } H_1: \\sigma^2&gt;1/4\\] 用上面的正態分佈近似法，我們可以計算拒絕域： \\[\\text{Prob}(\\frac{4T-10}{\\sqrt{20}}\\geqslant Z_{0.95})=0.05\\] 已知標準正態分佈的 \\(95\\%\\) 分位點取值 \\(1.64\\)，所以拒絕域： \\[\\frac{4T-10}{\\sqrt{20}}\\geqslant 1.64\\\\ \\Rightarrow T\\geqslant1/4(10+1.64\\sqrt{20})=1/4\\times17.33\\] 由觀察數據可得：\\(T=11.5\\) ，所以觀察數據的檢驗統計量落在了拒絕域內。我們的結論是：觀察數據提供了極強的證據證明在顯著性水平爲 \\(5\\%\\) 時，口服該藥物24小時後的血漿藥物濃度的方差大於 \\(1/4\\)。 區分與之前討論的對數似然比 (Section 13)，之前討論的對數似然比指的是所有的似然和極大似然之間的比，此處的似然比只是純粹在探討兩個假設之間的似然比，與極大似然無關。↩︎ Rememer that \\(\\ell_{H_0}-\\ell_{H_1}\\) is a random variable: the data varies each time we sample, with consequently varying relative support for the hypotheses, and so we are only interested in that part of \\(\\ell_{H_0}-\\ell_{H_1}\\) which depends on the results, the data, which vary with each sample (i.e. which contains the random part); the constant part provides no information on the relative support the data give to the hypotheses, so we ignore it.↩︎ "],["approximation-hypo-test.html", "第 16 章 假設檢驗的近似方法 16.1 近似和精確檢驗 approximate and exact tests 16.2 精確檢驗法之 – 似然比檢驗法 Likelihood ratio test 16.3 練習題 16.4 近似檢驗法之 – Wald 檢驗 16.5 近似檢驗法之 – Score 检验 16.6 LRT, Wald, Score 檢驗三者的比較 16.7 Inference Practical 08", " 第 16 章 假設檢驗的近似方法 本章教你怎麼徒手搞似然比檢驗 (likelihood ratio test)，Wald 檢驗 (Wald test)，和 Score 檢驗 (Score test)。 16.1 近似和精確檢驗 approximate and exact tests 前一章描述了如何用對數似然比尋找最佳檢驗統計量 (Section 15.3)。一旦找到並確定了最佳檢驗統計量，接下去還需要確定這個最佳檢驗統計量的樣本分佈，用定好的顯著性水平(\\(\\alpha=0.05\\))確定拒絕域，再使用觀察數據計算數據本身的統計量，然後對反對零假設的證據定量(計算 \\(p\\) 值) 。前一章用的例子均來自於正態分佈，所以我們都能夠不太複雜地獲得樣本均值，樣本方差等較容易取得樣本分佈的檢驗統計量。正如我們在前一章最後部分 (Section 15.7) 總結的那樣，大多數情況下我們沒有那麼幸運。最佳檢驗統計量的樣本分佈會很難確定。所以另一個進行假設檢驗的途徑就是近似檢驗法 (approximate tests)。 16.2 精確檢驗法之 – 似然比檢驗法 Likelihood ratio test 記得我們之前說到，簡單假設 \\(H_0: \\theta=\\theta_0\\text{ v.s. } H_1: \\theta=\\theta_1\\) 的檢驗的最佳檢驗統計量可以使用 Neyman-Pearson lemma (尼曼皮爾森輔助定理) (Section 15.3) 來確定： \\[\\ell_{H_0}-\\ell_{H_1} = \\ell(\\theta_0)-\\ell(\\theta_1)\\] 如果假設變成了複合型假設：\\(H_0: \\theta\\in\\omega_0 \\text{ v.s. } H_1: \\theta\\in\\omega_1\\)。此時，\\(\\omega_0, \\omega_1\\) 分別指兩種假設條件下我們關心的總體參數的可能取值範圍。那麼可以把上面的定理擴展成，在 \\(\\omega_0, \\omega_1\\) 兩個取值範圍內，零假設和對立假設在給出的觀察數據條件下的極大似然之比： \\[\\text{log}\\frac{\\text{max}_{H_0}[L(\\theta|data)]}{\\text{max}_{H_1}[L(\\theta|data)]}=\\text{max}_{H_0}[\\ell(\\theta|data)]-\\text{max}_{H_1}[\\ell(\\theta|data)]\\\\ =\\text{max}_{\\theta\\in\\omega_0}[\\ell(\\theta|data)]-\\text{max}_{\\theta\\in\\omega_1}[\\ell(\\theta|data)]\\] 典型的假設檢驗情況下，我們面對的是簡單的零假設和複合型的替代假設： \\[H_0: \\theta=\\theta_0 \\text{ v.s. } H_1: \\theta\\neq\\theta_0\\] 所以在這個情況下，套用擴展以後的 Neyman-Pearson lemma： \\[\\text{max}_{H_0}[\\ell(\\theta)]-\\text{max}_{H_1}[\\ell(\\theta)]=\\ell(\\theta_0) - \\ell(\\hat\\theta)=llr(\\theta_0)\\] 之前討論對數似然比 (Section 13.3) 時我們已知： \\[\\text{Under }H_0: \\theta=\\theta_0\\Rightarrow -2llr(\\theta_0)\\stackrel{\\cdot}{\\sim}\\mathcal{X}_1^2\\] 於是利用自由度爲 \\(1\\) 的卡方檢驗的特徵我們就可以爲反對零假設的證據定量，計算關鍵的拒絕域。如果說顯著性水平爲 \\(\\alpha\\) 那麼，我們拒絕零假設 \\(H_0:\\theta=\\theta_0\\) 的拒絕域是： \\[-2llr(\\theta_0)&gt;\\mathcal{X}^2_{1,1-\\alpha}\\] 當使用 \\(\\alpha=0.05\\) 時，這個關鍵的拒絕域就是：\\(-2llr(\\theta_0)&gt;3.84\\)。 這就是傳說中的 (對數) 似然比檢驗，(log-)Likelihood ratio test (LRT)。 LRT 的優點： 簡單； \\(p\\) 值不會被參數尺度 (parameter scale) 左右，也就是說如果我們對參數進行了數學轉換 (Section 14.2) 也不會影響似然比檢驗計算得到的 \\(p\\) 值大小。 LRT 的缺點： 非正態分佈的數據時，LRT 只能算是漸進有效 (asymptotic valid)，即樣本量要足夠大時結果才能令人滿意； 無法總是保證這是最佳檢驗統計量； 需要計算兩次對數似然 (MLE 和 零假設時)。 16.3 練習題 假設有在觀察對象 \\(n=100\\) 人中發生了 \\(k=40\\) 個事件。假定數據服從二項分佈，已知人羣中每個人發生該事件的概率爲 \\(\\pi_0=0.5\\)。嘗試計算似然比檢驗統計量：\\(-2llr(\\pi_0)\\)，並進行顯著性水平爲 \\(\\alpha=0.05\\) 的假設檢驗：\\(H_0: \\pi=\\pi_0 \\text{ v.s. }H_1: \\pi\\neq\\pi_0\\) 解 \\[ \\begin{aligned} &amp;\\because f(k=40|\\pi) = \\binom{100}{40}\\pi^{40}(1-\\pi)^{100-40} \\\\ &amp;\\text{Ignoring terms} \\text{ not with } \\pi \\\\ &amp;\\therefore \\ell(\\pi|k=40) = 40\\text{log}\\pi+60\\text{log}(1-\\pi) \\\\ &amp;\\Rightarrow \\ell^\\prime(\\pi|k=40) = \\frac{40}{\\pi}-\\frac{60}{1-\\pi} \\\\ &amp;\\text{Let } \\ell^\\prime(\\pi|k=40) = 0 \\\\ &amp;\\Rightarrow \\frac{40}{\\pi}-\\frac{60}{1-\\pi} =0 \\\\ &amp;\\Rightarrow \\text{ MLE } \\hat\\pi=0.4 \\\\ &amp;\\Rightarrow llr(\\pi_0)=\\ell(\\pi_0)-\\ell(\\hat\\pi) \\\\ &amp;\\;\\;\\;\\;\\;\\;\\;\\;\\;=40\\text{log}0.5+60\\text{log}(1-0.5)-40\\text{log}0.4-60\\text{log}(1-0.4)\\\\ &amp;\\;\\;\\;\\;\\;\\;\\;\\;\\;=-2.013\\\\ &amp;\\Rightarrow -2llr=4.026 &gt; \\text{Pr}(\\mathcal{X}^2_{1,0.95})=3.84 \\end{aligned} \\] 所以當顯著性水平爲 \\(\\alpha=0.05\\) 時，數據提供了足夠拒絕零假設的證據。該事件在此人羣中發生的概率要低於人羣的 \\(0.5\\)。 16.4 近似檢驗法之 – Wald 檢驗 和 LRT 一樣， Wald 檢驗也適用於檢驗 \\(H_0: \\theta=\\theta_0 \\text{ v.s. } H_1: \\theta\\neq\\theta_0\\)。但是本方法其實是使用對數似然比方程的近似二次方程 (Section 14)。相比之下，LRT 使用的是精確的對數似然比，只對檢驗統計量 \\(-2llr\\) 進行了自由度爲 \\(1\\) 的卡方分佈 \\(\\mathcal{X}_1^2\\) 近似。本節介紹的 Wald 檢驗過程中使用了兩次近似，一次是計算對數似然比時使用了二次方程，一次則是和 LRT 一樣對檢驗統計量進行 \\(\\mathcal{X}_1^2\\) 近似。 根據之前的對數似然比近似結論 (Section 14.1) ： \\[llr(\\theta)\\approx-\\frac{1}{2}(\\frac{M-\\theta}{S})^2\\text{ asymptotically}\\] 其中，\\(M\\) 是 \\(\\text{MLE }\\hat\\theta\\)，\\(S=\\sqrt{\\left.-\\frac{1}{\\ell^{\\prime\\prime}(\\theta)}\\right\\vert_{\\theta=\\hat{\\theta}}}\\) 而且前一節我們也看到， \\[ \\text{Under }H_0: \\theta=\\theta_0\\Rightarrow -2llr(\\theta_0) \\stackrel{\\cdot}{\\sim}\\mathcal{X}_1^2\\\\ \\Rightarrow -2\\times-\\frac{1}{2}(\\frac{M-\\theta_0}{S})^2 \\stackrel{\\cdot}{\\sim}\\mathcal{X}_1^2 \\\\ \\Rightarrow (\\frac{M-\\theta_0}{S}) \\stackrel{\\cdot}{\\sim} N(0,1)\\\\ \\text{Let } W=(\\frac{M-\\theta_0}{S}) \\] \\(W\\) 就是我們在 Wald 檢驗中用到的檢驗統計量。接下來就可以計算給定顯著水平 \\(\\alpha\\) 時的拒絕域，給 \\(p\\) 值定量： 當 \\(W&gt;N(0,1)_{1-\\alpha/2}\\) 或 \\(W&lt;N(0,1)_{\\alpha/2}\\)時，拒絕 \\(H_0: \\theta=\\theta_0\\)； 或者，當 \\(W^2&gt;\\mathcal{X}^2_{1,1-\\alpha}\\) 時，拒絕 \\(H_0: \\theta=\\theta_0\\)。 這就是我們心心念念的 Wald 檢驗。 圖 16.1: Likelihood ratio and Wald tests: solid (green) line is log-likelihood ratio, dashed (red) is quadratic approximation 上圖 16.1 解釋了 LRT 和 Wald 檢驗的不同之處。紅色虛線是二次方程，用於近似似然比方程(綠色實線) 。二者在 \\(\\text{MLE}=\\hat\\theta\\) 時同時取極大值。Wald 檢驗的是，數據提供的 \\(\\hat\\theta\\) 和我們想要比較的零假設 \\(\\theta_0\\) 之間的橫軸差距。在檢驗量 \\(W\\) 中我們還把這個差除以觀察數據均值的標準差(數據的標準誤) 。 如果數據本身波動大，\\(W\\) 的分母(標準誤) 較大，那麼即使 \\(\\hat\\theta - \\theta_0\\) 保持不變，統計量變小，反對零假設的證據也就越小。反觀，LRT 檢驗的檢驗統計量就是上圖 16.1 顯示的縱軸差 \\(\\ell(\\theta_0)-\\ell(\\hat\\theta)\\) 的大小。二者之間的關係被直觀的顯示在圖中。 Wald 檢驗優點： 比 LRT 略簡單； 不必再計算零假設時的對數似然，只需要 \\(MLE\\) 和它的標準誤。 Wald 檢驗缺點： 兩次近似(LRT只用了一次近似) ； 無法總是保證這是最佳檢驗統計量； 參數如果被數學轉換 (Section 14.2)，\\(p\\) 值會跟着變化。 16.4.1 再以二項分佈爲例 在 \\(n\\) 個實驗對象中觀察到 \\(k\\) 個事件，使用參數爲 \\(\\pi\\) 的二項分佈模型來模擬。使用 Wald 檢驗法對下列假設做出統計檢驗： \\(H_0: \\pi=\\pi_0 \\text{ v.s. } H1: \\pi\\neq\\pi_0\\)。將參數 logit 轉換 (log-odds) 之後，對轉換後的新參數再做一次 Wald 檢驗。 解 根據之前的二次方程近似法推導 (Section 14.1.3)： \\[ \\begin{aligned} &amp; M=\\text{MLE}=\\hat\\pi=\\frac{k}{n}=p\\\\ &amp; S=se(\\hat\\pi)=\\sqrt{\\frac{p(1-p)}{n}}\\\\ &amp; \\Rightarrow \\text{Under } H_0: \\pi=\\pi_0\\\\ &amp; W=(\\frac{p-\\pi_0}{\\sqrt{\\frac{p(1-p)}{n}}})\\stackrel{\\cdot}{\\sim} N(0,1) \\end{aligned} \\] 根據參數數學轉換的性質 (Section 14.2) \\[ \\begin{aligned} &amp;\\text{New parameter } \\beta=g(\\pi)=\\text{logit}(\\pi)=\\text{log}\\frac{\\pi}{1-\\pi}\\\\ &amp; \\text{MLE}=\\text{logit}(\\hat\\pi)=\\text{log}\\frac{\\hat\\pi}{1-\\hat\\pi} \\\\ &amp; \\text{Here we need to use delta-method to approximate standard error of } g(\\pi)\\\\ &amp; S=se[g(\\hat\\pi)]\\approx g^\\prime(\\pi)\\times se(\\hat\\pi) \\\\ &amp; = \\frac{1}{\\hat\\pi(1-\\hat\\pi)}\\sqrt{\\frac{p(1-p)}{n}}\\\\ &amp; =\\sqrt{\\frac{1}{k}+\\frac{1}{n-k}} \\\\ &amp; \\text{So the Wald test becomes}\\\\ &amp; H_0: \\beta=\\beta_0\\\\ &amp; \\Rightarrow W=\\frac{\\text{log}(\\frac{\\hat\\pi}{1-\\hat\\pi})-\\text{log}(\\frac{\\pi_0}{1-\\pi_0})}{\\sqrt{\\frac{1}{k}+\\frac{1}{n-k}}}\\stackrel{\\cdot}{\\sim} N(0,1) \\end{aligned} \\] 可見對參數進行了數學轉換之後，檢驗統計量的計算式發生了變化。因此 \\(p\\) 值也會不同。 16.5 近似檢驗法之 – Score 检验 注意到 Wald 檢驗使用的近似二次方程是在 MLE， 也就是極大似然比時的點 \\(\\hat\\theta\\) 和對數似然比方程取相同的值和相同曲率 (二次導數)。 可以類比的是，Score 检验是基于另一種二次方程模擬，Score 檢驗的近似二次方程和對數似然比方程在零假設 (\\(\\theta_0\\)) 時取相同的曲率。所以，Score 檢驗使用的近似方程在 \\(\\theta_0\\) 時和對數似然比方程在相同位置時的傾斜度 (一階導數)，和曲率 (坡度的變化程度，二階導數) 相同。所以令 \\(U\\) 爲對數似然比方程在 \\(\\theta_0\\) 時的坡度，定義 \\(V\\) 是對數似然比方程在 \\(\\theta_0\\) 時的曲率的負數： \\[ \\begin{aligned} &amp; U=\\ell^\\prime(\\theta)|_{\\theta=\\theta_0}=\\ell^\\prime(\\theta_0)\\\\ &amp; V=-E[\\ell^{\\prime\\prime}(\\theta)]|_{\\theta=\\theta_0}=-E[\\ell^{\\prime\\prime}(\\theta_0)] \\end{aligned} \\] 注：此處的 \\(V=-E[l^{\\prime\\prime}(\\theta_0)]\\) 又常常被叫做 Expected Fisher information。 記得在 Wald 檢驗中使用的近似方程： \\[llr(\\theta)\\approx-\\frac{1}{2}(\\frac{M-\\theta}{S})^2\\text{ asymptotically}\\] 令 \\(q(\\theta)=-\\frac{1}{2}(\\frac{M-\\theta}{S})^2\\) 就有： \\[ \\begin{aligned} &amp; q^\\prime(\\theta) =\\frac{M-\\theta}{S^2}\\\\ &amp; \\Rightarrow q^\\prime(\\theta_0) =\\frac{M-\\theta_0}{S^2}\\\\ &amp; q^{\\prime\\prime}(\\theta) =-\\frac{1}{S^2}\\\\ &amp; \\Rightarrow q^{\\prime\\prime}(\\theta_0)=E[l^{\\prime\\prime}(\\theta_0)]\\\\ &amp; \\Rightarrow \\frac{1}{S^2} =-E[l^{\\prime\\prime}(\\theta_0)]\\\\ &amp; q^\\prime(\\theta_0) = \\frac{M-\\theta_0}{S^2} = -E[l^{\\prime\\prime}(\\theta_0)](M-\\theta_0)\\\\ &amp; = \\ell^\\prime(\\theta_0)\\\\ &amp; \\Rightarrow M-\\theta_0 = -\\frac{\\ell^\\prime(\\theta_0)}{E[l^{\\prime\\prime}(\\theta_0)]}\\\\ &amp; \\Rightarrow M = -\\frac{\\ell^\\prime(\\theta_0)}{E[l^{\\prime\\prime}(\\theta_0)]}+\\theta_0\\\\ &amp; q(\\theta)=-\\frac{1}{2}(\\frac{M-\\theta}{S})^2=\\frac{E[l^{\\prime\\prime}(\\theta_0)]}{2}(-\\frac{\\ell^\\prime(\\theta_0)}{E[l^{\\prime\\prime}(\\theta_0)]}+\\theta_0-\\theta)^2\\\\ &amp; q(\\theta)=-\\frac{V}{2}(\\frac{U}{V}+\\theta_0-\\theta)^2\\\\ &amp; \\Rightarrow \\text{ Under } H_0: \\theta=\\theta_0\\\\ &amp; \\Rightarrow q(\\theta_0)=-\\frac{V}{2}(\\frac{U}{V})^2=-\\frac{U^2}{2V}\\\\ &amp; \\Rightarrow -2q(\\theta_0)=\\frac{U^2}{V} \\stackrel{\\cdot}{\\sim}\\mathcal{X}_1^2\\\\ &amp; \\text{Or equivalently} \\frac{U}{\\sqrt{V}} \\stackrel{\\cdot}{\\sim} N(0,1) \\end{aligned} \\] 這就是 Score 檢驗時使用的檢驗統計量。相應的拒絕域就可以被定義爲： 當 \\(\\frac{U^2}{V}&gt;\\mathcal{X}_{1,1-\\alpha}^2\\) 時，拒絕 \\(H_0\\) 如下面的示意圖 16.2 所示，Score 檢驗，比較的是 \\(\\theta_0\\) 時的校正後似然方程的坡度 (一階導數/二階導數)，和極大似然時的坡度 (一階導數=0) 的差別。如果這個值越大，說明零假設時的似然和極大似然 (觀察數據的信息) 的距離越遠，拒絕零假設的證據就越有力。 圖 16.2: Score test: solid (green) line is log-likelihood ratio, dashed (red) is quadratic approximation Score 檢驗優點： 比 LRT 簡單； 不需要計算 MLE，只需要計算零假設時的對數似然比方程之坡度和曲率； 在流行病學用到的檢驗方法中最常用，也最容易擴展 (Mantel-Haenszel test, log rank test, generalised linear models such as logistic, Poisson, Cox regressions)。 Score 檢驗缺點： 和 Wald 檢驗一樣用到了兩次近似； 無法總是保證這是最佳檢驗統計量； 參數如果被數學轉換 (Section 14.2)，\\(p\\) 值會跟着變化。 16.5.1 再再以二項分佈爲例 \\(K\\sim Bin(n, \\pi)\\) 假如已知人羣中事件發生的概率是 \\(\\pi_0\\)。試推導此時的 Score 檢驗的檢驗統計量。 解 對二項分佈數據進行 Score 檢驗的時候我們需要計算 \\(U, V\\)，然後計算統計量 \\(\\frac{U^2}{V}\\) 和 \\(\\mathcal{X}_1^2\\) 比較即可。 \\[ \\begin{aligned} &amp; \\text{Let } p=\\frac{k}{n} \\\\ &amp; \\ell(\\pi|k) = k\\text{log}(\\pi)+(n-k)\\text{log}(1-\\pi)\\\\ &amp; \\ell^\\prime(\\pi)=\\frac{k}{\\pi}-\\frac{n-k}{1-\\pi}=\\frac{k-n\\pi}{\\pi(1-\\pi)}\\\\ &amp; = \\frac{p-\\pi}{\\pi(1-\\pi)/n}\\\\ &amp; \\Rightarrow U = \\ell^\\prime(\\pi_0)=\\frac{p-\\pi_0}{\\pi_0(1-\\pi_0)/n}\\\\ &amp; \\ell^{\\prime\\prime}(\\pi|K)=-\\frac{K}{\\pi^2}-\\frac{n-K}{(1-\\pi)^2}\\\\ &amp; \\Rightarrow -\\ell^{\\prime\\prime}(\\pi|K)=\\frac{K}{\\pi^2}+\\frac{n-K}{(1-\\pi)^2}\\\\ &amp; \\because E(K)=n\\pi\\\\ &amp; \\therefore -E[\\ell^{\\prime\\prime}(\\pi|K)]=\\frac{n\\pi}{\\pi^2}+\\frac{n-n\\pi}{(1-\\pi)^2}\\\\ &amp; =\\frac{n}{\\pi}+\\frac{n}{1-\\pi}=\\frac{n}{\\pi(1-\\pi)}\\\\ &amp; \\text{ Under } H_0: \\pi=\\pi_0 \\Rightarrow V=-E[\\ell^{\\prime\\prime}(\\pi_0)]=\\frac{n}{\\pi_0(1-\\pi_0)}\\\\ &amp; \\Rightarrow \\frac{U^2}{V}=\\frac{(p-\\pi_0)^2}{\\pi_0(1-\\pi_0)/n} \\stackrel{\\cdot}{\\sim}\\mathcal{X}_1^2\\\\ &amp; \\text{OR } \\frac{U}{\\sqrt{V}} = \\frac{p-\\pi_0}{\\sqrt{\\pi_0(1-\\pi_0)/n}} \\stackrel{\\cdot}{\\sim} N(0,1) \\end{aligned} \\] 16.6 LRT, Wald, Score 檢驗三者的比較 LRT 比較的是對數似然方程在零假設 \\(H_0\\) 和極大似然估計 (MLE) 時之間的縱軸差 (圖 16.1)；Wald 檢驗試圖直接比較 MLE 和 \\(H_0\\) 的橫軸差 (二次方程近似法，並用標準誤校正) (圖 16.1)；Score 檢驗比較的是對數似然方程在 \\(H_0\\) 時的切線斜率 (二次方程近似法，用曲率也就是二階導數校正) (圖 16.2)。三種檢驗比較的東西各不相同，但是這種差距大到進入拒絕域時，數據就會拒絕零假設。其中 Score 檢驗的計算過程最爲簡便，只需要計算 \\(H_0\\) 時對數似然方程的一階和二階導數，而不用去計算 MLE，因此更多的被應用在流行病學數據計算中。 如果對數似然方程本身就是左右對稱的 (正態分佈的情況下)，這三個檢驗方法計算的所有結果都是完全一致的。如果對數似然方程只是近似左右對稱，那麼三者的計算結果會十分接近。可以說，三種檢驗方法是漸進等價的。 如果對觀測值進行了數學轉換，三者中只有 LRT 的計算結果保持不變。如果對參數的數學轉換使得對數似然方程更加接近左右對稱的二次方程，那麼 Wald 和 Score 檢驗的計算結果可以得到改善。 如果說，MLE 和 零假設之間的差距很大，那麼 Wald 或者 Score 檢驗所使用的二次方程近似法的誤差會增加，此時傾向於使用 LRT 來進行精確檢驗。當然如果當樣本量較大，要檢驗的差距也很大，三種檢驗方案都能夠提供證據拒絕零假設 (\\(p\\) 值都會很小)。 如果三種檢驗方案給出的計算結果迥異，即使使用了數學轉換結果也沒有明顯改善的話，那麼最大的問題是樣本量太小。這時候還是老老實實用 LRT 吧。 幾乎所有的參數檢驗都歸類與這章節介紹的三種檢驗方法。比如說 \\(Z\\) 檢驗， \\(t\\) 檢驗， \\(F\\) 檢驗都是 LRT。在流行病學研究中最常用的還是 Score 檢驗。 我們的結論是，當條件允許的情況下，統計檢驗都推薦儘量使用精確檢驗 LRT。 16.7 Inference Practical 08 16.7.1 Q1 在對數似然比章節 (Section 13.2)，我們曾經證明過，已知方差時： \\[ \\begin{aligned} &amp; llr(\\mu|\\underline{x})=\\ell(\\mu|\\underline{x})=-\\frac{1}{2}(\\frac{\\bar{x}-\\mu}{\\sigma/\\sqrt{n}})^2\\\\ &amp; \\Rightarrow -2llr(\\mu|\\underline{x})=-2\\ell(\\mu|\\underline{x})=(\\frac{\\bar{x}-\\mu}{\\sigma/\\sqrt{n}})^2 \\end{aligned} \\] 當觀察數據 \\(X_1,\\cdots,X_n\\sim N(\\mu,1^2)\\) ，求 LRT, Wald, Score 三種檢驗方法對下列假設進行檢驗時的檢驗統計量： \\(H_0: \\mu=\\mu_0 \\text{ v.s. } H_1: \\mu\\neq\\mu_0\\) 解 \\[ \\begin{aligned} &amp; \\text{Model: } X_1, \\cdots, X_n \\stackrel{i.i.d}{\\sim} N(\\mu, 1)\\\\ &amp; H_0: \\mu=\\mu_0 \\text{ v.s. } H_1: \\mu\\neq\\mu_0\\\\ &amp; \\text{Model } \\Rightarrow \\bar{X} \\sim N(\\mu, \\frac{1}{n}) \\\\ &amp; \\text{If we observe } \\bar{X} = \\bar{x}\\\\ &amp; \\ell(\\mu|\\bar{x})=-\\frac{1}{2}(\\frac{\\bar{x}-\\mu}{1/\\sqrt{n}})^2\\\\ &amp; \\textbf{For LRT, under } H_0: \\mu=\\mu_0 \\Rightarrow -2llr(\\mu_0) \\stackrel{\\cdot}{\\sim}\\mathcal{X}_1^2\\\\ &amp; \\Rightarrow \\frac{\\bar{x}-\\mu}{1/\\sqrt{n}} \\sim N(0,1)\\\\ &amp; \\textbf{For Wald test, under } H_0: \\mu=\\mu_0 \\Rightarrow \\frac{M-\\mu_0}{S}\\sim N(0,1) \\\\ &amp; \\Rightarrow \\frac{\\bar{x}-\\mu}{1/\\sqrt{n}} \\sim N(0,1)\\\\ &amp; \\textbf{For Score test, under } H_0: \\mu=\\mu_0 \\Rightarrow U=\\ell^\\prime(\\mu_0), V=-E[\\ell^{\\prime\\prime}(\\mu_0)]\\\\ &amp; U=\\ell^\\prime(\\mu_0)=(\\frac{\\bar{x}-\\mu_0}{1/\\sqrt{n}})\\sqrt{n}=\\frac{\\bar{x}-\\mu_0}{1/n}\\\\ &amp; \\ell^{\\prime\\prime}(\\mu_0)=-\\frac{1}{1/n}=-n \\Rightarrow V=-E[n]=n\\\\ &amp; \\frac{U^2}{V}=(\\frac{\\bar{x}-\\mu_0}{1/n})^2/n=(\\frac{\\bar{x}-\\mu_0}{1/\\sqrt{n}})^2\\\\ &amp; \\Rightarrow \\frac{U^2}{V} \\sim \\mathcal{X}_1^2 \\Rightarrow \\frac{U}{\\sqrt{V}}=\\frac{\\bar{x}-\\mu_0}{1/\\sqrt{n}} \\sim N(0,1) \\end{aligned} \\] 本題證明了，當數據服從正態分佈時，三種檢驗方法使用的檢驗統計量，是完全一致的。 16.7.2 Q2 根據醫生的觀察，某種癌症患者的生存時間服從平均值爲 \\(1/\\beta_0\\) 的指數分佈 (exponentially distributed)。有一種新藥物可以改善平均生存時間 (仍然服從指數分佈)。已知指數分佈的密度方程是：\\(f(x|\\beta)=\\beta \\text{exp} (-\\beta x), \\text{ where } \\beta, x&gt;0\\)。 證明指數分佈的均值是 \\(1/\\beta\\) 解 \\[ \\begin{aligned} &amp; X\\sim f(x|\\beta), x&gt;0 \\Rightarrow E(X)=\\int_0^\\infty x\\cdot f(x)\\text{d} x = \\int_0^\\infty x\\cdot \\beta \\cdot e^{-\\beta x} \\text{d}x\\\\ &amp; E(x)= - \\int_0^\\infty x\\cdot \\frac{\\text{d}e^{-\\beta x}}{\\text{d}x} \\cdot \\text{d}x\\\\ &amp; \\text{We can now integrate by parts, using } \\int_a^b u \\frac{\\text{d}v}{\\text{d}x} \\text{d}x = [uv]_a^b-\\int_a^b v \\frac{\\text{d}u}{\\text{d}x} \\text{d}x \\\\ &amp; E(X) = -[x\\cdot e^{-\\beta x}]_0^\\infty + \\int_0^\\infty e^{-\\beta x} \\text{d} x \\\\ &amp; \\;\\;\\;\\; = -0+\\int_0^\\infty e^{-\\beta x} \\text{d} x\\\\ &amp; \\;\\;\\;\\; = \\int_0^\\infty\\frac{\\text{d}}{\\text{d}x} \\frac{e^{-\\beta x}}{-\\beta} \\text{d} x\\\\ &amp; \\;\\;\\;\\; = [\\frac{e^{-\\beta x}}{-\\beta}]_0^\\infty = \\frac{1}{-\\beta}[0-1]=\\frac{1}{\\beta} \\end{aligned} \\] 請寫下本題設定條件下的數學模型，零假設和替代假設 解： 假設患者人數爲 \\(n\\)，他們的生存時間爲相互獨立的隨機變量： \\(X_1,\\cdots,X_n\\)。那麼本例中的數學模型爲：\\(\\text{Model: } X_1,\\cdots,X_n\\stackrel{i.i.d}{\\sim}f(x|\\beta)=\\beta e^{-\\beta x}\\)。我們可以提出如下的零假設和替代假設：\\(H_0: \\beta=\\beta_0 \\text{ v.s. } H_1: \\beta\\neq\\beta_0\\)。 推導此模型參數 \\(\\beta\\) 的極大似然估計 (MLE)，試使用似然比檢驗法來推導進行假設檢驗時使用的檢驗統計量。 解 \\[ \\begin{aligned} &amp; L(\\beta|\\underline{x}) = \\prod_{i=1}^n f(x_i|\\beta)=\\prod_{i=1}^n\\beta e^{-\\beta x_i} \\\\ &amp; \\ell(\\beta)=\\sum_{i=1}^n\\text{log}(\\beta e^{-\\beta x_i})=\\sum\\text{log}\\beta-\\sum\\beta x_i=n\\text{log}\\beta-\\beta\\sum x_i \\\\ &amp; \\;\\;\\;\\; = n\\text{log}\\beta-\\beta n \\bar{x} \\\\ &amp; \\Rightarrow \\ell^\\prime(\\beta)=\\frac{n}{\\beta}-n\\bar{x}\\text{ MLE solves } \\ell^\\prime(\\beta)=0 \\text{ when }\\ell^{\\prime\\prime}(\\beta) &lt; 0 \\\\ &amp; \\ell^\\prime(\\beta)=0 \\Rightarrow \\hat\\beta=\\frac{1}{\\bar{x}}, \\text{ and } \\ell^{\\prime\\prime}(\\beta)=-n\\frac{1}{\\beta^2} &lt; 0\\\\ &amp; \\Rightarrow \\text{ LRT test statistic: Under } H_0: \\beta=\\beta_0 \\Rightarrow -2llr(\\beta_0) \\sim \\mathcal{X}_1^2\\\\ &amp; llr(\\beta_0)=\\ell(\\beta_0)-\\ell(\\hat\\beta)=n\\text{log}\\beta_0-\\beta_0n\\bar{x}-n\\text{log}\\hat\\beta+\\hat\\beta n \\bar{x}\\\\ &amp; \\text{ Substituting with MLE } \\hat\\beta=\\frac{1}{\\bar{x}}\\\\ &amp; \\;\\;\\;\\;\\;\\;\\;\\;\\;\\; = n\\text{log}\\beta_0-\\beta_0n\\bar{x}+n\\text{log}\\bar{x}+ n\\\\ &amp; \\;\\;\\;\\;\\;\\;\\;\\;\\;\\; = n(\\text{log}\\beta_0\\bar{x}-\\beta_0\\bar{x}+1) \\textbf{ this is the statistic for LRT} \\end{aligned} \\] 推導 Score 和 Wald 檢驗法時的檢驗統計量 解 \\[ \\begin{aligned} &amp; \\textbf{Score test: under } H_0 \\Rightarrow \\frac{U^2}{V}\\sim \\mathcal{X}_1^2 \\text{ where } U=\\ell^\\prime(\\beta_0), V=-E[\\ell^{\\prime\\prime}(\\beta_0)]\\\\ &amp; \\Rightarrow U=\\frac{n}{\\beta_0}-n\\bar{x}; V = -E[-n\\frac{1}{\\beta_0^2}] = n\\frac{1}{\\beta_0^2} \\\\ &amp; \\Rightarrow \\frac{U^2}{V}=(\\frac{n}{\\beta_0}-n\\bar{x})^2\\cdot\\frac{\\beta_0^2}{n} = (\\frac{(\\frac{n}{\\beta_0}-n\\bar{x})\\beta_0}{\\sqrt{n}})^2\\\\ &amp; \\;\\;\\;\\;\\;\\;\\;\\;\\; = n(1-\\bar{x}\\beta_0)^2\\\\ &amp; \\textbf{This is the statistic for Score test}\\\\ &amp; \\textbf{Wald test: under } H_0: \\beta=\\beta_0 \\Rightarrow W=(\\frac{M-\\beta_0}{S})^2 \\sim \\mathcal{X}_1^2, \\\\ &amp; \\text{ where } M=\\hat\\beta=\\frac{1}{\\bar{x}}, \\text{ and } S^2=-\\frac{1}{\\ell^{\\prime\\prime}(\\hat\\beta)}\\\\ &amp; \\ell^{\\prime\\prime}(\\beta)=-n\\frac{1}{\\beta^2}\\Rightarrow \\ell^{\\prime\\prime}(\\hat\\beta)=-n\\bar{x}^2\\Rightarrow S^2=\\frac{1}{n\\bar{x}^2}\\\\ &amp; \\Rightarrow W=(\\frac{M-\\beta_0}{S})^2=\\frac{(\\frac{1}{\\bar{x}}-\\beta_0)^2}{\\frac{1}{n\\bar{x}^2}}=n(1-\\beta_0\\bar{x})^2\\\\ &amp; \\textbf{This is the statistic for Wald test} \\end{aligned} \\] 注意到在這個特例中， Score 和 Wald 檢驗的統計量竟然不謀而合。 觀察5名患者，獲得診斷後的生存數據 (年)： \\(0.5,1,1.25,1.5,0.75\\)。用上面推導的統計量對這個數據進行假設檢驗：\\(H_0: \\beta=0.5 \\text{ v.s. } \\beta\\neq0.5\\)，你如何下結論？ 解 \\[ \\begin{aligned} &amp;\\text{Data: } x_1,\\cdots,x_n=0.5,1,1.25,1.5,0.75. \\Rightarrow \\bar{x}=1\\\\ &amp;H_0: \\beta=0.5 \\text{ v.s. } \\beta\\neq0.5\\\\ &amp;\\textbf{LRT test: } \\\\ &amp; llr(\\beta_0) = n(\\text{log}\\beta_0\\bar{x}-\\beta_0\\bar{x}+1) = 5\\times(\\text{log}0.5-0.5\\times1+1) = -0.966\\\\ &amp;\\Rightarrow -2llr=1.93 &lt; \\text{Prob}(\\mathcal{X}^2_{1,0.95}) = 3.84 \\\\ &amp; \\text{There is no evidence that } \\beta\\neq0.5.\\\\ &amp;\\textbf{Score test: } \\\\ &amp; \\frac{U^2}{V} = n(1-\\bar{x}\\beta_0)^2 = 5\\times(1-1\\times0.5)^2=1.25 &lt; \\text{Prob}(\\mathcal{X}^2_{1,0.95}) = 3.84 \\\\ &amp; \\text{There is no evidence that } \\beta\\neq0.5.\\\\ &amp;\\textbf{Wald test: } \\\\ &amp; W=n(1-\\beta_0\\bar{x})^2=5\\times(1-0.5\\times1)^2=1.25&lt; \\text{Prob}(\\mathcal{X}^2_{1,0.95}) = 3.84 \\\\ &amp; \\text{There is no evidence that } \\beta\\neq0.5.\\\\ \\end{aligned} \\] 16.7.3 Q3 隨機變量 \\(X_1,\\cdots,X_n\\) 互相獨立且在區間 \\([0,\\alpha]\\) 內服從相同的恆定概率分佈 (identical uniform distribution)。 試着畫出參數 \\(\\alpha\\) 的似然方程示意圖。不進行任何數學計算，試着想象一下如果對 \\(\\alpha\\) 進行某種假設檢驗會出現什麼問題嗎？ "],["normal-error-models.html", "第 17 章 正態誤差模型 Normal error models 17.1 服從正態分佈的隨機變量 17.2 \\(F\\) 分佈和 \\(t\\) 分佈的概念 17.3 兩個參數的模型 17.4 正態分佈概率密度方程中總體均值和方差都未知 (單樣本 \\(t\\) 檢驗 one sample \\(t\\) test 的統計學推導) 17.5 比較兩組獨立數據的均值 two sample \\(t\\) test with equal unknown \\(\\sigma^2\\) 17.6 各個統計分佈之間的關係 17.7 Inference Practical 09", " 第 17 章 正態誤差模型 Normal error models 正態誤差模型，其實沒有其名字那麼複雜，就是討論在正態分布條件下，均值和方差都需要被估計 (都是未知狀態) 的模型。 本章還介紹 \\(F\\) 分佈和 \\(t\\) 分佈，試着闡述如何將 \\(t\\) 分佈應用於兩個獨立樣本均值的比較； \\(\\chi^2\\) 分佈在統計學中各種常用分佈中的中心位置。 17.1 服從正態分佈的隨機變量 \\[ X_1,\\cdots,X_n \\stackrel{i.i.d}{\\sim} N(\\mu,\\sigma^2) \\Leftrightarrow \\bar{X} \\sim N(\\mu, \\frac{\\sigma^2}{n}) \\] 如果總體方差 \\(\\sigma^2\\) 已知 (理想狀態，現實中不太可能)： \\[ \\begin{aligned} &amp; Z=\\frac{\\bar{X}-\\mu}{\\sigma/\\sqrt{n}} \\sim N(0,1) \\\\ &amp; 95\\% \\text{CI for } \\mu = \\bar{X} \\pm Z_{0.975}\\frac{\\sigma}{\\sqrt{n}} \\\\ &amp; \\text{H}_0: \\mu=\\mu_0 \\Rightarrow \\frac{\\bar{X}-\\mu_0}{\\sigma/\\sqrt{n}} \\sim N(0,1) \\end{aligned} \\] 如果總體方差 \\(\\sigma^2\\) 是未知的，腫麼辦？ (模型中出現了兩個參數 \\(\\mu \\;\\&amp;\\; \\sigma^2\\)) \\[ T=\\frac{\\bar{X}-\\mu_0}{\\hat\\sigma/\\sqrt{n}} \\sim ????????? \\] 17.2 \\(F\\) 分佈和 \\(t\\) 分佈的概念 如果 \\(X\\sim N(0,1)\\)，那麼 \\(X^2 \\sim \\chi^2_1\\) (Section 11)。類似地，如果 \\(X_1,\\cdots,X_n \\stackrel{i.i.d}{\\sim} N(0,1)\\) 那麼 \\(\\sum_{i=1}^n X^2_i \\sim \\chi^2_k\\)。 \\(F\\) 分佈和 \\(t\\) 分佈是建立在 \\(\\chi^2\\) 分佈的基礎上的： \\(F\\) 分佈： \\(Y_1, Y_2\\) 是獨立的兩個隨機變量，且 \\(Y_1 \\sim \\chi^2_{k_1}; Y_2 \\sim \\chi^2_{k_2}\\)，那麼 \\[ F=\\frac{Y_1/k_1}{Y_2/k_2} \\sim F_{k_1, k_2} \\] \\(t\\) 分佈，是 \\(F\\) 分佈的特殊情況 \\((k_1=1)\\)： \\[ T\\sim t_{k_2} \\Rightarrow T^2 = \\frac{Y_1/1}{Y_2/k_2} \\sim F_{1,k_2} \\] 此時我們再來考慮正態分佈模型中有兩個參數 \\(\\mu, \\sigma^2\\) 需要被估計的模型： \\[ Y_i \\stackrel{i.i.d}{\\sim} N(\\mu,\\sigma^2) \\text{ where } i = 1, \\cdots, n \\] 其實可以改寫爲 \\[ \\begin{aligned} &amp; Y_i = \\mu + \\varepsilon_i \\\\ &amp; \\text{Where } \\varepsilon_i \\stackrel{i.i.d}{\\sim} N(0,\\sigma^2) \\end{aligned} \\] 其中 \\(\\varepsilon_i \\stackrel{i.i.d}{\\sim} N(0,\\sigma^2)\\) 就是正態誤差 normal (random) error。\\(Y_i = \\mu + \\varepsilon_i\\) 就是正態誤差模型 normal error model。誤差的含義就是統計模型中的隨機誤差 (模型不能解釋的部分)。如果一個正態誤差模型像前面的式子這樣沒有其他變量，那麼所有的觀察值 \\(Y_i\\)，就是由總體均值 \\(\\mu\\) population mean，和隨機誤差 \\(\\varepsilon\\) random error 來說明 (就是這個式子 \\(Y_i = \\mu + \\varepsilon_i\\))。 如果觀察值 \\(Y_i\\) 的一部分除了可以用均值解釋，還可以由某個變量 \\(x\\) 來說明 (叫做解釋變量 explanatory variable 詳見線性迴歸部分 Section 27.3.3)，即： \\[ \\begin{aligned} &amp;Y_i | x \\stackrel{i.i.d}{\\sim} N(\\mu+\\beta x_i, \\sigma^2)\\\\ &amp; E(Y|x) = \\mu+\\beta x, \\text{Var}(Y|x) = \\sigma^2 \\\\ &amp; \\text{ or } Y_i|x = \\mu + \\beta x_i + \\varepsilon_i ; \\text{ where } \\varepsilon_i \\stackrel{i.i.d}{\\sim} N(0, \\sigma^2) \\end{aligned} \\] 上面的模型會在後面講線性迴歸的部分深入探討，此處簡單用下面的圖形來輔助理解。圖 17.1 中繪製的是 \\(Y_i|x = \\mu + \\beta x_i + \\varepsilon_i ; \\text{ where } \\varepsilon_i \\stackrel{i.i.d}{\\sim} N(0, \\sigma^2)\\) 的示意圖，用 \\(x_i\\) 標記兩個組，其中 \\(x_i = 0\\) 時爲組 A 的人的觀察值，\\(x_i=1\\) 時爲組 B 的人的觀察值。兩組的平均值如 Y 軸顯示的那樣，組 A 是 \\(\\mu\\)，組 B 是 \\(\\mu+\\beta\\)。所以，這裏可以看到，正態誤差模型是假定兩組具有相同的方差的 common variance，如圖 17.2。如果解釋變量 (explanatory variable) 是一個連續型變量，則解釋爲在 X 軸上的任意一點對應的 Y 值的誤差都服從相同的方差，如圖 17.3 圖 17.1: Normal error models with categorical explanatory variable 圖 17.2: Normal error models shown with common error variance 圖 17.3: Normal error models shown with continuous variable and common error variance 17.3 兩個參數的模型 17.3.1 一組數據兩個參數 如果觀察數據 \\(\\underline{x} = x_1, \\cdots, x_n\\) 是互相獨立的，該觀察數據的模型可以用一個包含兩個參數 \\(\\theta,\\phi\\) 的概率方程 \\(f\\) 來描述，那麼這個包含兩個參數的概率方程的似然和對數似然分別是： \\[ \\begin{aligned} L(\\theta, \\phi | \\underline{x}) &amp;= \\prod_{i=1}^nf(x_i | \\theta, \\phi) \\\\ \\ell(\\theta, \\phi | \\underline{x}) &amp;= \\sum_{i=1}^n\\text{log}f(x_i | \\theta, \\phi) \\end{aligned} \\] 兩個參數的 \\(\\text{MLE}\\) 可以通過對對數似然方程進行兩次偏微分，然後解連立方程組： \\[ \\left\\{ \\begin{array}{ll} \\frac{\\partial\\ell}{\\partial\\theta} = 0\\\\ \\frac{\\partial\\ell}{\\partial\\phi} = 0 \\\\ \\end{array} \\right. \\] 17.3.2 兩組數據各一個參數 如果是兩組獨立數據，各由一個參數描述他們各自的概率方程： \\[ X_1, \\cdots, X_n \\stackrel{i.i.d}\\sim f(\\theta_1) \\\\ Y_1, \\cdots, Y_m \\stackrel{i.i.d}\\sim f(\\theta_2) \\] 那麼以兩組數據爲聯合條件 (應該可以理解爲同時觀察到時的) 的聯合似然 (joint likelihood)： We describe the likelihood as the joint likelihood, conditional on jointly observing both datasets: \\[ L(\\theta_1, \\theta_2|\\underline{x},\\underline{y}) = \\prod_{i=1}^nf_1(x_{1i}|\\theta_1) \\times \\prod_{i=1}^mf_2(y_{i}|\\theta_2) \\] 所以，聯合之後的對數似然方程就是兩個對數似然方程之和： \\[ \\ell(\\theta_1,\\theta_2|\\underline{x},\\underline{y}) = \\sum_{i=1}^n\\text{log} f(x_i|\\theta_1) + \\sum_{i=1}^m\\text{log} f(y_i|\\theta_2) \\] 你會發現，分成兩組數據兩個獨立的概率方程之後的聯合對數似然方程求 \\(\\text{MLE}\\) 時需要用偏微分。可是偏微分之後的結果，和兩組數據合二爲一，用含有兩個參數的概率方程，計算其 \\(\\text{MLE}\\) 的結果會完全相同。 17.4 正態分佈概率密度方程中總體均值和方差都未知 (單樣本 \\(t\\) 檢驗 one sample \\(t\\) test 的統計學推導) 此時的情況如同前面的把兩組數據合二爲一的情況，用正態分佈的概率方程，然後有兩個參數 \\(\\mu, \\sigma^2\\)。 \\[ Y_1,\\cdots,Y_n \\stackrel{i.i.d}{\\sim} N(\\mu, \\sigma^2) \\\\ \\ell(\\mu, \\sigma^2 | \\underline{y}) = -\\frac{n}{2}\\text{log}\\sigma^2 - \\frac{1}{2\\sigma^2}\\sum^n_{i=1} (x_i - \\mu)^2 \\] \\[ \\begin{aligned} &amp; \\mu: \\frac{\\partial \\ell}{\\partial \\mu} = \\frac{\\sum^n_{i=1}(y_i-\\mu)}{2\\sigma^2} = 0 \\Rightarrow \\hat\\mu = \\bar{y}\\\\ &amp; \\sigma^2: \\frac{\\partial \\ell}{\\partial (\\sigma^2)} = -\\frac{n}{2\\sigma^2} + \\frac{1}{2(\\sigma^2)^2}\\sum^n_{i=1}(y_i-\\mu)^2 \\\\ &amp; \\text{ Substituting } \\mu=\\hat\\mu = \\bar{y} \\text{ and set equal to } 0\\\\ &amp; \\frac{n}{2\\sigma^2} + \\frac{1}{2(\\sigma^2)^2}\\sum^n_{i=1}(y_i-\\bar{y})^2 = 0 \\\\ &amp; \\Rightarrow \\hat\\sigma^2 = \\frac{1}{n}\\sum^n_{i=1}(y_i - \\bar{y})^2 \\end{aligned} \\] 有沒有覺得這裏的方差的極大似然估計似曾相識 (Section 10.3)。在早期的章節中，我們學到了分部法 (“把樣本和總體均值之間的差的平方和分成兩部分”)： \\[ \\begin{aligned} \\sum^n_{i=1}(y_i-\\mu)^2 &amp; = \\sum^n_{i=1}(y_i - \\bar{y} + \\bar{y} -\\mu)^2 \\\\ &amp; = \\sum^n_{i=1}(y_i - \\bar{y})^2 + \\sum^n_{i=1}(\\bar{y}-\\mu)^2 \\\\ \\Rightarrow \\sum^n_{i=1}(y_i - \\bar{y})^2 &amp; = \\sum^n_{i=1}(y_i-\\mu)^2 - \\sum^n_{i=1}(\\bar{y}-\\mu)^2 \\end{aligned} \\] 當時分的是平方和，這裏再介紹一種把概率分部的方法 partition the probabilities。 We can “partition” the probability of observing the data, conditional on unknown \\(\\mu\\) and \\(\\sigma^2\\), into the probability of observing the data conditional on the observed sample mean \\(\\bar{y}\\) and unknown \\(\\sigma^2\\) ; the probability of observing the sample mean \\(\\bar{y}\\) conditional on the two unknown parameters. \\[ \\begin{aligned} &amp; \\text{Prob}(\\underline{y} | \\mu, \\sigma^2) = \\text{Prob}(\\underline{y}|\\bar{y}, \\sigma^2) \\times \\text{Prob}(\\bar{y}|\\mu, \\sigma^2) \\\\ &amp;\\Rightarrow \\text{Prob}(\\underline{y} | \\bar{y}, \\sigma^2) = \\frac{\\text{Prob}(\\underline{y} | \\mu, \\sigma^2)}{\\text{Prob}(\\bar{y}|\\mu, \\sigma^2)} \\end{aligned} \\] 看到這裏你是否會想起概率論中討論的條件概率方程 (Section 1.2)： \\[ f(x|Y=y) = \\frac{f(x,y)}{f(y)} \\] 利用上述概率分佈的方法，我們可以進而推導方差 \\(\\sigma^2\\) 的 \\(\\text{MLE}\\)： \\[ \\begin{aligned} f(\\underline{y} | \\bar{y}, \\sigma^2) &amp;= \\frac{ \\color{red}{f(\\underline{y} | \\mu, \\sigma^2)} }{f(\\bar{y}|\\mu, \\sigma^2)} \\\\ &amp;= \\frac{ \\color{red}{(\\frac{1}{\\sqrt{2\\pi\\sigma^2}})^ne^{-\\frac{1}{2\\sigma^2}\\sum^n_{i=1}(y_i - \\mu)^2}} }{(\\frac{1}{\\sqrt{2\\pi\\sigma^2/n}})e^{-\\frac{1}{2\\sigma^2/n}(\\bar{y}-\\mu)^2}} \\\\ \\Rightarrow \\ell(\\sigma^2| \\underline{y}, \\bar{y}) &amp;= \\color{red}{-\\frac{n}{2}\\text{log}\\sigma^2 - \\frac{1}{2\\sigma^2}\\sum^n_{i=1}(y_i-\\mu)^2} \\\\ &amp; \\;\\;\\;+\\frac{1}{2}\\text{log}\\frac{\\sigma^2}{n} + \\frac{1}{2\\sigma^2/n}(\\bar{y}-\\mu)^2 \\\\ &amp;= -\\frac{n-1}{2}\\text{log}\\sigma^2 - \\frac{1}{2\\sigma^2}(\\sum^n_{i=1}(y_i-\\mu)^2 - n(\\bar{y}-\\mu)^2) \\\\ \\text{Because } &amp;\\sum^n_{i=1}(y_i - \\bar{y})^2 = \\sum^n_{i=1}(y_i-\\mu)^2 - \\sum^n_{i=1}(\\bar{y}-\\mu)^2 \\\\ \\Rightarrow \\ell(\\sigma^2| \\underline{y}, \\bar{y}) &amp;= -\\frac{n-1}{2}\\text{log}\\sigma^2 -\\frac{1}{2\\sigma^2}\\sum^n_{i=1}(y_i - \\bar{y})^2 \\\\ \\text{Note that the } &amp;\\text{above conditional log-likelihood is now free of } \\mu \\\\ \\Rightarrow \\ell^\\prime(\\sigma^2) &amp;= -\\frac{n-1}{2\\sigma^2} + \\frac{1}{2(\\sigma^2)^2}\\sum^n_{i=1}(y_i-\\bar{y})^2 \\\\ \\text{Set equal } &amp; \\text{to zero and rearrange} \\\\ \\Rightarrow \\hat\\sigma^2 &amp;= \\frac{1}{n-1}\\sum^n_{i=1}(y_i-\\bar{y})^2\\\\ \\text{This is the } &amp;\\color{red}{\\text{unbiased estimate of } \\sigma^2} \\end{aligned} \\] 現在再重新考慮對數據 \\(Y_1, \\cdots, Y_n \\stackrel{i.i.d}{\\sim} N(\\mu, \\sigma^2)\\) 進行均值的假設檢驗： \\[ \\text{H}_0: \\mu = \\mu_0 \\text{ v.s H}_1: \\mu &gt; \\mu_0 \\] 當 \\(\\sigma^2\\) 是已知的，在零假設條件下的檢驗統計量是： \\[ \\begin{aligned} &amp; \\text{H}_0 \\Rightarrow (\\frac{\\bar{Y}-\\mu_0}{\\sigma/\\sqrt{n}}) \\sim N(0,1) \\\\ &amp; \\text{Or equivalently, } \\\\ &amp; (\\frac{\\bar{Y}-\\mu_0}{\\sigma/\\sqrt{n}})^2 \\sim \\chi_1^2 \\end{aligned} \\tag{17.1} \\] 當 \\(\\sigma^2\\) 是未知的，它需要通過樣本數據來估計時。我們就該使用前面從條件對數似然方程推導出的方差無偏估計： \\[ \\hat\\sigma^2 = S^2 = \\frac{1}{n-1}\\sum^n_{i=1}(y_i-\\bar{y})^2 \\] 但是，假如只把無偏估計的方差放到公式 (17.1) 裏去，可以當作新的檢驗統計量嗎？有這麼簡單嗎？ \\[ (\\frac{\\bar{Y}-\\mu_0}{s/\\sqrt{n}})^2 \\] 當然沒有這麼簡單！這種方式僅僅考慮了樣本的方差估計，卻忽略了這個估計是有不確定性的 (uncertainty)，它並不是真實的 \\(\\sigma^2\\)，只是個估計 (estimator)。我們需要找到一種方法把方差的不確定性也考慮進新的檢驗統計量裏去。利用章節 10.4 的結論： \\[ \\begin{equation} \\frac{n-1}{\\sigma^2}S^2 \\sim \\chi^2_{n-1}\\\\ \\Rightarrow \\frac{S^2}{\\sigma^2} = \\frac{\\chi^2_{n-1}}{n-1} \\end{equation} \\tag{17.2} \\] 把公式 (17.1) 除以 (17.2) 獲得： \\[ \\frac{(\\bar{Y}-\\mu_0)^2}{S^2/n} \\sim \\frac{\\chi^2_1/1}{\\chi^2_{n-1}/n-1} = F_{1,n-1} \\] 這樣我們就同時考慮了方差估計本身，和它的不確定性了。這個新的統計量被定義爲 \\(T\\)： \\[ \\begin{aligned} &amp; T=\\frac{\\bar{Y}-\\mu_0}{S/\\sqrt{n}} \\\\ &amp; \\text{Then under H}_0: T^2 \\sim F_{1,n-1} \\text{ or equivalently } T \\sim \\sqrt{F_{1,n-1}}=t_{n-1} \\end{aligned} \\] 這個特殊的 \\(F\\) 分佈，就是我們之前定義過的，這裏用手紮紮實實地推導出來的檢驗統計量 \\(t\\) 和 \\(t\\) 分佈。利用這個方差未知時的分佈，均值的 \\(95\\%\\) 信賴區間的估計就是： \\[ 95\\% \\text{ CI for } \\mu: \\bar{Y} \\pm t_{n-1,0.975}\\frac{S}{\\sqrt{n}} \\] 17.5 比較兩組獨立數據的均值 two sample \\(t\\) test with equal unknown \\(\\sigma^2\\) 本節要來推導方差齊時的兩個獨立樣本的均值比較 two sample \\(t\\) test。兩個獨立樣本用下面的數學符號標記： \\[ X_1, \\cdots, X_n \\stackrel{i.i.d}{\\sim} N(\\mu_1, \\sigma^2); Y_1, \\cdots, Y_m, \\stackrel{i.i.d}{\\sim} N(\\mu_2, \\sigma^2) \\] 要進行的假設檢驗是： \\[ \\text{H}_0: \\mu_1 = \\mu_2 \\text{ v.s. } \\text{H}_1: \\mu_1 &gt; \\mu_2 \\] 此時，兩組獨立樣本的共同方差 \\(\\hat\\sigma^2\\) 需要被估計，利用上面相同的推導過程，可以獲得合併後的共同方差的無偏估計： \\[ \\begin{equation} \\hat\\sigma^2 = S^2_p = \\frac{\\sum^n_{i=1}(X_i-\\bar{X})^2 + \\sum^m_{i=1}(Y_i-\\bar{Y})^2}{n+m-2}\\\\ \\end{equation} \\tag{17.3} \\] 因爲兩組數據互相獨立，所以有： \\[ \\begin{aligned} &amp; \\frac{1}{\\sigma^2}\\sum^n_{i=1}(X_i - \\bar{X})^2 \\sim \\chi^2_{n-1} \\\\ &amp; \\frac{1}{\\sigma^2}\\sum^m_{i=1}(Y_i - \\bar{Y})^2 \\sim \\chi^2_{m-1} \\\\ \\Rightarrow &amp;\\frac{1}{\\sigma^2}\\{ \\sum^n_{i=1}(X_i - \\bar{X})^2 + \\sum^m_{i=1}(Y_i - \\bar{Y})^2 \\} \\sim \\chi^2_{n+m-2} \\end{aligned} \\] 把公式 (17.3) 代入此式可得： \\[ \\begin{equation} (n+m-2)\\frac{S^2_p}{\\sigma^2} \\sim \\chi^2_{n+m-2} \\end{equation} \\tag{17.4} \\] 由於 \\(\\bar{X} \\sim N(\\mu_1, \\frac{\\sigma^2}{n}); \\bar{Y} \\sim N(\\mu_2, \\frac{\\sigma^2}{m})\\)，所以在零假設條件下 \\(\\text{H}_0: \\mu_1=\\mu_2\\Rightarrow \\bar{X}-\\bar{Y} \\sim N(0,\\sigma^2(\\frac{1}{n}+\\frac{1}{m}))\\)。 \\[ \\begin{equation} \\Rightarrow \\frac{\\bar{X}-\\bar{Y}}{\\sqrt{\\sigma^2(\\frac{1}{n}+\\frac{1}{m})}} \\sim N(0,1) \\\\ \\Leftrightarrow \\frac{(\\bar{X}-\\bar{Y})^2}{\\sigma^2(\\frac{1}{n}+\\frac{1}{m})} \\sim \\chi^2_1 \\end{equation} \\tag{17.5} \\] 現在把公式 (17.5) 除以 (17.4) 可得： \\[ \\begin{aligned} &amp;\\frac{(\\bar{X}-\\bar{Y})^2}{\\sigma^2(\\frac{1}{n}+\\frac{1}{m})} \\times \\frac{\\sigma^2}{S^2_p(n+m-2)} = \\frac{\\chi^2_1/1}{\\chi^2_{n+m-2}} \\\\ &amp;\\Rightarrow T^2 = \\frac{(\\bar{X}-\\bar{Y})^2}{S^2_p(\\frac{1}{n}+\\frac{1}{m})} = \\frac{\\chi^2_1/1}{\\chi^2_{n+m-2}/(n+m-2)} \\sim F_{1,n+m-2} \\\\ &amp;\\Rightarrow T = \\frac{\\bar{X}-\\bar{Y}}{S_p\\sqrt{\\frac{1}{n}+\\frac{1}{m}}} \\sim t_{n+m-2} \\end{aligned} \\] 這就是標準的兩個齊方差的獨立樣本均值比較的 \\(t\\) 檢驗，two-sample \\(t\\) test with pooled variance。這裏推導的兩個 \\(t\\) 檢驗，是都是精確的似然比檢驗 (likelihood ratio test) (Section 16.2)。壯士請自己跟着似然比檢驗的方法推導一次。 17.6 各個統計分佈之間的關係 卡方分佈 \\(\\chi^2\\) 是統計學常用分佈中極爲重要的分佈，其他的許多分佈都與之相關。 \\[ \\{N(0,1)\\}^2 = \\chi^2_1 \\\\ \\chi^2_k = \\sum_{i-1}^k \\chi^2_1 \\\\ F_{k,n} = \\frac{\\chi^2_k/k}{\\chi^2_n/n}\\\\ t^2_n = F_{1,n} =\\frac{\\chi^2_1/1}{\\chi^2_n/n} \\] 17.7 Inference Practical 09 "],["inference-with-multiple-para.html", "第 18 章 多個參數時的統計推斷 Inference with multiple parameters I 18.1 多參數 multiple parameters - LRT 18.2 多參數 Wald 檢驗 - Wald test 18.3 多參數 Score 檢驗 - Score test 18.4 條件似然 conditional likelihood 18.5 Inference Practical 10", " 第 18 章 多個參數時的統計推斷 Inference with multiple parameters I 前一章介紹單樣本和雙樣本 \\(t\\) 檢驗時已經接觸到了 2 個未知參數情況下的檢驗統計量推導，本章把之前用到的方法擴展到 2 個以上參數的情況。帶你推導兩個以上參數的似然比檢驗 likelihood ratio test，Wald 檢驗，和 Score 檢驗推論。 18.1 多參數 multiple parameters - LRT 18.1.1 似然 likelihood 如果一個觀察數據 \\(\\underline{x} = (x_1, \\cdots, x_n)\\) 相互獨立，可以用含有 \\(k\\) 個參數 \\(\\theta_1,\\cdots,\\theta_k\\) 的數學模型 \\(f\\) 來描述，那麼它的似然公式爲： \\[ L(\\theta_1,\\cdots,\\theta_k | \\underline{x}) = f(\\underline{x} | \\theta_1,\\cdots,\\theta_k) = \\prod^n_{i=1}f(x_i|\\theta_1,\\cdots,\\theta_k) \\] 它的對數似然公式爲： \\[ \\ell(\\theta_1,\\cdots,\\theta_k|\\underline{x}) = \\sum^n_{i=1}\\text{log}f(x_1|\\theta_1,\\cdots,\\theta_k) \\] 每個參數的 \\(\\text{MLE}\\) 通過解下面的 \\(k\\) 個連立方程組獲得： \\[ \\left\\{ \\begin{array}{c} \\frac{\\partial \\ell}{\\partial \\theta_1} = \\ell^\\prime(\\theta_1) = 0 \\\\ \\frac{\\partial \\ell}{\\partial \\theta_2} = \\ell^\\prime(\\theta_k) = 0 \\\\ \\vdots \\\\ \\frac{\\partial \\ell}{\\partial \\theta_k} = \\ell^\\prime(\\theta_k) = 0 \\\\ \\end{array} \\right. \\] 這些連立方程有時被叫做 score equations； \\(\\text{MLE}\\) 的恆定性，不變性 invariance 在多個參數時同樣適用。 當參數只有一個 \\(\\theta\\) 時，其 \\(\\text{MLE}\\) 的方差是 \\(S^2=\\left.-\\frac{1}{\\ell^{\\prime\\prime}(\\theta)}\\right\\vert_{\\theta=\\hat{\\theta}}\\) 當參數有多個時，\\(k\\) 個 \\(\\text{MLE}\\) 的方差是一個 \\(k\\times k\\) 的對稱矩陣，其中二次微分矩陣 (18.1) 的昵稱是海森矩陣 Hessian matrix： \\[ \\begin{equation} \\underline{\\ell^{\\prime\\prime}(\\theta)} = \\left( \\begin{array}{c} \\frac{\\partial^2\\ell}{\\partial\\theta^2_1} &amp; \\frac{\\partial^2\\ell}{\\partial\\theta_2\\partial\\theta_1} &amp; \\cdots &amp; \\frac{\\partial^2\\ell}{\\partial\\theta_k\\partial\\theta_1} \\\\ \\frac{\\partial^2\\ell}{\\partial\\theta_1\\partial\\theta_2} &amp; \\frac{\\partial^2\\ell}{\\partial\\theta^2_2} &amp; \\cdots &amp; \\frac{\\partial^2\\ell}{\\partial\\theta_k\\partial\\theta_2} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ \\frac{\\partial^2\\ell}{\\partial\\theta_1\\partial\\theta_k} &amp; \\frac{\\partial^2\\ell}{\\partial\\theta_2\\partial\\theta_k} &amp; \\cdots &amp; \\frac{\\partial^2\\ell}{\\partial\\theta^2_k} \\\\ \\end{array} \\right) \\end{equation} \\tag{18.1} \\] \\[ \\Rightarrow \\underline{\\ell^{\\prime\\prime}(\\theta)} |_{\\color{red}{\\theta=\\hat\\theta}} = \\left( \\begin{array}{c} \\frac{\\partial^2\\ell}{\\partial\\theta^2_1} &amp; \\frac{\\partial^2\\ell}{\\partial\\theta_2\\partial\\theta_1} &amp; \\cdots &amp; \\frac{\\partial^2\\ell}{\\partial\\theta_k\\partial\\theta_1} \\\\ \\frac{\\partial^2\\ell}{\\partial\\theta_1\\partial\\theta_2} &amp; \\frac{\\partial^2\\ell}{\\partial\\theta^2_2} &amp; \\cdots &amp; \\frac{\\partial^2\\ell}{\\partial\\theta_k\\partial\\theta_2} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ \\frac{\\partial^2\\ell}{\\partial\\theta_1\\partial\\theta_k} &amp; \\frac{\\partial^2\\ell}{\\partial\\theta_2\\partial\\theta_k} &amp; \\cdots &amp; \\frac{\\partial^2\\ell}{\\partial\\theta^2_k} \\\\ \\end{array} \\right)_{\\color{red}{\\theta=\\hat\\theta}} \\] \\[ \\Rightarrow \\underline{\\text{Var}(\\hat\\theta)} = - \\left( \\begin{array}{c} \\frac{\\partial^2\\ell}{\\partial\\theta^2_1} &amp; \\frac{\\partial^2\\ell}{\\partial\\theta_2\\partial\\theta_1} &amp; \\cdots &amp; \\frac{\\partial^2\\ell}{\\partial\\theta_k\\partial\\theta_1} \\\\ \\frac{\\partial^2\\ell}{\\partial\\theta_1\\partial\\theta_2} &amp; \\frac{\\partial^2\\ell}{\\partial\\theta^2_2} &amp; \\cdots &amp; \\frac{\\partial^2\\ell}{\\partial\\theta_k\\partial\\theta_2} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ \\frac{\\partial^2\\ell}{\\partial\\theta_1\\partial\\theta_k} &amp; \\frac{\\partial^2\\ell}{\\partial\\theta_2\\partial\\theta_k} &amp; \\cdots &amp; \\frac{\\partial^2\\ell}{\\partial\\theta^2_k} \\\\ \\end{array} \\right)^{\\color{red}{-1}}_{\\color{red}{\\theta=\\hat\\theta}} \\] 18.1.2 對數似然比檢驗 多個參數未知時的對數似然比檢驗可以被這樣拓展： \\[ \\begin{aligned} &amp; \\text{H}_0: \\underline{\\theta} = \\underline{\\theta_0} \\\\ &amp; \\Rightarrow -2llr(\\underline{\\theta_0}) = -2(\\ell(\\underline{\\theta_0})- \\ell(\\hat{\\underline{\\theta}})) \\stackrel{\\cdot}{\\sim} \\chi^2_r \\\\ &amp; \\text{Where } r \\text{ is the number of parameters restricted under H}_0 \\end{aligned} \\] 18.2 多參數 Wald 檢驗 - Wald test 單個參數時的 Wald 檢驗的檢驗統計量： \\[ \\begin{aligned} &amp; \\text{H}_0: \\theta=\\theta_0 \\Rightarrow W_\\theta = (\\frac{M-\\theta_0}{S})^2 \\stackrel{\\cdot}{\\sim} \\chi^2_1 \\\\ &amp; \\text{Where } M=\\hat\\theta, S^2=\\left.-\\frac{1}{\\ell^{\\prime\\prime}(\\theta)}\\right\\vert_{\\theta=\\hat{\\theta}} \\\\ &amp; \\Rightarrow W=(\\hat\\theta-\\theta_0)^2(-\\ell^{\\prime\\prime}(\\hat\\theta)) \\stackrel{\\cdot}{\\sim} \\chi^2_1 \\end{aligned} \\] 如果是兩個參數 \\(\\lambda, \\psi\\) 的 Wald 檢驗： \\(\\text{H}_0: \\lambda=\\lambda_0, \\psi=\\psi_0 \\text{ v.s. H}_1: \\lambda \\neq \\lambda_0 \\text{ or } \\psi \\neq \\psi_0\\)。 我們可以先一個一個考慮參數： \\[ \\begin{aligned} &amp; W_\\lambda = (\\hat\\lambda-\\lambda_0)^2(-\\ell^{\\prime\\prime}(\\hat\\lambda)) \\stackrel{\\cdot}{\\sim} \\chi^2_1 \\\\ &amp; W_\\psi = (\\hat\\psi-\\psi_0)^2(-\\ell^{\\prime\\prime}(\\hat\\psi)) \\stackrel{\\cdot}{\\sim} \\chi^2_1 \\\\ &amp; \\Rightarrow W_\\lambda + W_\\psi \\stackrel{\\cdot}{\\sim} \\chi^2_2 \\\\ &amp; \\Rightarrow W = (\\hat\\lambda-\\lambda_0)^2(-\\ell^{\\prime\\prime}(\\hat\\lambda)) + (\\hat\\psi-\\psi_0)^2(-\\ell^{\\prime\\prime}(\\hat\\psi)) \\stackrel{\\cdot}{\\sim} \\chi^2_2 \\end{aligned} \\] 也可以一開始就兩個參數一起考慮： \\[ \\underline{\\ell^\\prime} = \\left( \\begin{array}{c} \\frac{\\partial\\ell}{\\partial\\lambda}\\\\ \\frac{\\partial\\ell}{\\partial\\psi} \\end{array} \\right) \\Rightarrow \\underline{\\ell^{\\prime\\prime}} = \\left( \\begin{array}{c} \\frac{\\partial^2\\ell}{\\partial\\lambda^2} &amp; \\frac{\\partial^2\\ell}{\\partial\\lambda\\partial\\psi} \\\\ \\frac{\\partial^2\\ell}{\\partial\\psi\\partial\\lambda} &amp; \\frac{\\partial^2\\ell}{\\partial\\psi^2} \\end{array} \\right) \\] 然後單參數時 \\(W\\) 的分子 \\((\\theta_0-\\hat\\theta)^2\\) 此時變爲： \\[ (\\hat\\lambda-\\lambda_0)^2+(\\hat\\psi-\\psi_0)^2 = (\\hat\\lambda-\\lambda_0, \\hat\\psi-\\psi_0)\\left( \\begin{array}{c} \\hat\\lambda-\\lambda_0 \\\\ \\hat\\psi-\\psi_0 \\end{array} \\right) \\] 所以兩個參數時的 Wald 檢驗統計量爲： \\[ \\begin{aligned} W = &amp; (\\hat\\lambda-\\lambda_0, \\hat\\psi-\\psi_0)(-\\underline{\\ell^{\\prime\\prime}}(\\hat\\lambda,\\hat\\psi))\\left( \\begin{array}{c} \\hat\\lambda-\\lambda_0 \\\\ \\hat\\psi-\\psi_0 \\end{array} \\right) \\\\ = &amp; - (\\hat\\lambda-\\lambda_0, \\hat\\psi-\\psi_0)\\left( \\begin{array}{c} \\frac{\\partial^2\\ell}{\\partial\\lambda^2} &amp; \\frac{\\partial^2\\ell}{\\partial\\lambda\\partial\\psi} \\\\ \\frac{\\partial^2\\ell}{\\partial\\psi\\partial\\lambda} &amp; \\frac{\\partial^2\\ell}{\\partial\\psi^2} \\end{array} \\right)_{\\hat\\lambda,\\hat\\psi} \\left( \\begin{array}{c} \\hat\\lambda-\\lambda_0 \\\\ \\hat\\psi-\\psi_0 \\end{array} \\right)\\\\ &amp; \\text{ Because } \\lambda \\text{ and } \\psi \\text{ are independent,} \\\\ &amp; \\text{ so their covariance } \\frac{\\partial^2\\ell}{\\partial\\lambda\\partial\\psi} = \\frac{\\partial^2\\ell}{\\partial\\psi\\partial\\lambda} = 0\\\\ \\Rightarrow = &amp; - (\\hat\\lambda-\\lambda_0, \\hat\\psi-\\psi_0)\\left( \\begin{array}{c} \\ell^{\\prime\\prime}(\\hat\\lambda) &amp; 0 \\\\ 0 &amp; \\ell^{\\prime\\prime}(\\hat\\psi) \\end{array} \\right) \\left( \\begin{array}{c} \\hat\\lambda-\\lambda_0 \\\\ \\hat\\psi-\\psi_0 \\end{array} \\right)\\\\ = &amp; - (\\hat\\lambda-\\lambda_0, \\hat\\psi-\\psi_0)\\left( \\begin{array}{c} \\ell^{\\prime\\prime}(\\hat\\lambda)(\\hat\\lambda-\\lambda_0) \\\\ \\ell^{\\prime\\prime}(\\hat\\psi)(\\hat\\psi-\\psi_0) \\end{array} \\right) \\\\ = &amp; (\\hat\\lambda-\\lambda_0)^2(-\\ell^{\\prime\\prime}(\\hat\\lambda)) + (\\hat\\psi-\\psi_0)^2(-\\ell^{\\prime\\prime}(\\hat\\psi)) \\stackrel{\\cdot}{\\sim} \\chi^2_2 \\end{aligned} \\] 由此可見，兩個參數分開來考慮之後把統計量相加，和一開始就把兩個參數放在一起，利用矩陣計算後獲得的檢驗統計量完全相同。用矩陣的好處是可以把上面的推導過程直接擴展成 \\(k\\) 個參數的形式，且標記簡便： \\[ W = -(\\hat{\\underline{\\theta}} - \\underline{\\theta_0})^T\\underline{\\ell^{\\prime\\prime}(\\hat\\theta)}(\\underline{\\hat\\theta} - \\underline{\\theta_0}) \\stackrel{\\cdot}{\\sim} \\chi^2_k \\] 18.3 多參數 Score 檢驗 - Score test 單個參數時的 Score 檢驗的檢驗統計量： \\[ \\text{H}_0: \\theta=\\theta_0 \\text{ v.s. H}_1: \\theta \\neq \\theta_0 \\\\ \\frac{U^2}{V} \\stackrel{\\cdot}{\\sim} \\chi^2_1 \\\\ \\text{Where } U=\\ell^\\prime(\\theta_0), V=E[-\\ell^{\\prime\\prime}(\\theta_0)] \\] 類似 Wald 檢驗法的矩陣推導過程和標記法，\\(k\\) 個參數的 Score 檢驗的統計量可以標記爲： \\[ \\underline{U}^T\\underline{V}^{-1}\\underline{U} \\stackrel{\\cdot}{\\sim} \\chi^2_k \\\\ \\text{Where } \\underline{U} = \\left.\\frac{\\partial\\ell}{\\partial\\underline{\\theta}} \\right\\vert_{\\underline{\\theta}=\\underline{\\theta_0}}, \\underline{V} = E[-\\underline{\\ell^{\\prime\\prime}(\\theta)}]_{\\underline{\\theta}=\\underline{\\theta_0}} \\] 所以如果是兩個參數 \\(\\lambda, \\psi\\) 那麼檢驗 \\(\\text{H}_0:\\lambda = \\lambda_0, \\psi = \\psi_0 \\text{ v.s. H}_1: \\lambda \\neq \\lambda_0 \\text{ or } \\psi\\neq\\psi_0\\) 的 Score 檢驗統計量是： \\[ (\\frac{\\partial\\ell}{\\partial\\lambda}, \\frac{\\partial\\ell}{\\partial\\psi})_{\\lambda_0, \\psi_0}\\left( E\\left[ -\\left( \\begin{array}{c} \\frac{\\partial^2\\ell}{\\partial\\lambda^2} &amp; \\frac{\\partial^2\\ell}{\\partial\\lambda\\partial\\psi} \\\\ \\frac{\\partial^2\\ell}{\\partial\\psi\\partial\\lambda} &amp; \\frac{\\partial^2\\ell}{\\partial\\psi^2} \\end{array} \\right)_{\\lambda_0,\\psi_0} \\right] \\right)^{-1}\\left( \\begin{array}{c} \\frac{\\partial\\ell}{\\partial\\lambda}\\\\ \\frac{\\partial\\ell}{\\partial\\psi} \\end{array} \\right)_{\\lambda_0,\\psi_0} \\stackrel{\\cdot}{\\sim} \\chi^2_2 \\] 18.4 條件似然 conditional likelihood 現實的例子中，參數可能有非常多，但是我們可能只關心其中幾個。下章介紹的子集似然函數 (profile likelihood) 是可以在多種情況下應用的好方法。本節介紹的方法是條件似然法。簡單原理是，把模型中不能提供我們感興趣的參數的有效信息的那些參數 (“nuisance” parameters) 當作是固定的 (fixed)。由此可以定義一個新的概率模型 – 條件概率模型 conditional probability model。 我們用泊松模型來解釋如何建立這樣的模型。 兩個獨立的人羣追蹤樣本，在 \\(p_0, p_1\\) 人年的隨訪中發生事件 A 的次數分別是 \\(k_0, k_1\\)。假設我們只關心兩組的事件 A 發生率的比 \\(\\text{Rate ratio:} \\theta=\\frac{\\lambda_1}{\\lambda_0}\\)。 合併兩個人羣，發生事件 A 的總次數爲 \\(k=k_0+k_1\\)。只知道 \\(k\\) 並不能讓我們推算兩個人羣中各發生了多少次事件 A，也無法用它來計算發生率的比 \\(\\theta\\)，而這個 \\(k\\) 就是條件概率模型中的條件。 \\[ K_0 \\sim Po(\\mu_0); K_1 \\sim Po(\\mu_1) ; \\text{ where } \\mu_0 = \\lambda_0 p_0 \\mu_1 = \\lambda_1 p_1\\\\ k=k_0 + k_1 \\Rightarrow K_0+K_1 \\sim Po(\\mu_0 + \\mu_1) \\] \\[ \\begin{aligned} &amp; \\text{Prob}(k_0 \\text{events in group 0} | k \\text{ events in total}) \\\\ = &amp; \\frac{\\text{Prob}(k_0 \\text{ events in group }0 \\text{ and } k-k_0 \\text{ events in group } 1)} {\\text{Prob}(k \\text{ events in total})} \\\\ \\end{aligned} \\tag{18.2} \\] 由於兩個樣本是來自獨立的人羣，所以公式 (18.2) 的分母，和分子分別是 \\[ \\begin{aligned} \\text{Prob}(k &amp;\\text{ events in total}) \\\\ = &amp; \\frac{(\\lambda_0 p_0 + \\lambda_1 p_1)^k e^{-(\\lambda_0 p_0 + \\lambda_1 p_1)}}{k!} \\\\ \\text{Prob}(k_0 &amp;\\text{ events in group }0 \\text{ and } k-k_0 \\text{ events in group } 1) \\\\ = &amp; \\frac{(\\lambda_0 p_0)^{k_0}e^{-\\lambda_0 p_0}}{k_0!}\\times\\frac{(\\lambda_1 p_1)^{k-k_0}e^{-\\lambda_1 p_1}}{(k-k_0)!} \\end{aligned} \\] 所以公式 (18.2) 可以整理成： \\[ \\begin{aligned} &amp; \\frac{\\frac{(\\lambda_0 p_0)^{k_0}e^{-\\lambda_0 p_0}}{k_0!}\\times\\frac{(\\lambda_1 p_1)^{k-k_0}e^{-\\lambda_1 p_1}}{(k-k_0)!}} {\\frac{(\\lambda_0 p_0 + \\lambda_1 p_1)^k e^{-(\\lambda_0 p_0 + \\lambda_1 p_1)}}{k!}} \\\\ = &amp; \\frac{e^{-(\\lambda_0 p_0 + \\lambda_1 p_1)}(\\lambda_0 p_0)^{k_0}(\\lambda_1 p_1)^{k-k_0}\\cdot k!}{e^{-(\\lambda_0 p_0 + \\lambda_1 p_1)}(\\lambda_0p_0+\\lambda_1p_1)^k\\cdot k_0!\\cdot (k-k_0)!}\\\\ = &amp; (\\frac{\\lambda_0 p_0}{\\lambda_0 p_0+\\lambda_1 p_1})^{k_0}(\\frac{\\lambda_1 p_1}{\\lambda_0 p_0+\\lambda_1 p_1})^{k-k_0}\\cdot\\frac{k!}{k_0!(k-k_0)!} \\\\ = &amp; (\\pi)^{k_0}(1-\\pi)^{k-k_0}\\cdot\\frac{k!}{k_0!(k-k_0)!} \\\\ \\text{Where } &amp; \\pi = \\frac{\\lambda_0 p_0}{\\lambda_0 p_0 + \\lambda_1 p_1} = \\frac{p_0}{p_0+(\\lambda_1/\\lambda_0)p_1} = \\frac{p_0}{p_0+\\theta p_1}\\\\ \\Rightarrow &amp;\\text{ Given } K_0+K_1=K, K_0 \\sim Bin(k, \\pi=\\frac{p_0}{p_0+\\theta p_1}) \\end{aligned} \\] 我們就把兩個泊松分佈的模型，變形成爲了一個條件二項分佈，而且只有一個未知參數 \\(\\theta\\)。之後就可以用二項分佈的對數似然方程進行下一步的假設檢驗的構建： \\[ \\begin{aligned} L(\\pi) &amp; = (\\pi)^{k_0}(1-\\pi)^{k-k_0} \\\\ \\Rightarrow \\ell(\\pi) &amp; = k_0 \\text{log}\\pi + (k-k_0)\\text{log} (1-\\pi) \\\\ \\text{Because } \\pi &amp; = \\frac{p_0}{p_0+\\theta p_1} \\\\ \\ell_c(\\theta) &amp; = k_0 \\text{log}(\\frac{\\pi}{1-\\pi}) + k\\text{log}(1-\\pi) \\\\ &amp; = k_0 \\text{log}(\\frac{p_0}{\\theta p_1}) + k\\text{log}(\\frac{\\theta p_1}{p_0 + \\theta p_1}) \\\\ \\text{Ignoring} &amp; \\text{ terms not involving } \\theta \\\\ \\ell_c(\\theta)&amp; = k_1 \\text{log}\\theta - k\\text{log}(p_0 + \\theta p_1) \\end{aligned} \\tag{18.3} \\] 至此，推導發生率比 \\(\\theta = \\frac{\\lambda_1}{\\lambda_0}\\) 的條件對數似然就完成了。Elegant and Bravo! 關於條件對數似然： 推導出的條件對數似然是一個真實的以觀察數據爲條件的對數似然，可以用於假設檢驗； 條件似然過程依賴於我們能否找到這樣一個“條件似然”，使得模型的對數似然只取決於我們關心的參數，我們幸運地找到了發生率比的對數似然方程，但是至今沒有人找到發生率差 \\(\\lambda_1-\\lambda_0\\) 的條件對數似然； 與此相對地是，下一章介紹的子集似然函數 (profile likelihood)，可以用於幾乎所有的多參數模型的假設檢驗之構建； 但是，條件對數似然相當之重要，特別是它作爲 Cox proportional hazard model 模型的基本模型構架在生存分析 (survival analysis) 中的應用，以及在配對病例對照分析 (matched case-control study) 中用於條件邏輯迴歸 (conditional logistic regression) 的理論基礎 (將會在第二學期的碩士課程中介紹，敬請期待)。 18.5 Inference Practical 10 某項研究追蹤隨訪 50-69 歲男性的心臟病發病率。研究對象根據心臟病發病史的有無分成兩組。有心臟病史的對象被隨訪 512 人・年，觀察到 25 例新的心臟病發作病例；無心臟病史的對象被隨訪 4862 人・年，觀察到 52 例新的心臟病發作病例。 如果需要檢驗的零假設是 \\(\\text{H}_0:\\) 有心臟病史的男性發病率的對數等於 \\(-3\\)，無心臟病史的男性發病率的對數等於 \\(-4.5\\)。請推導該實驗的聯合對數似然比檢驗，Wald 檢驗兩種檢驗法的檢驗統計量，並進行假設檢驗。 解 模型： 令隨機變量 \\(K_i\\) 標記新發生的心臟病病例數，其中當 \\(i=0\\) 時代表無心臟病史組；當 \\(i=1\\) 時代表有心臟病史組。所以可以用下面的泊松模型來標記兩組的新發生心臟病病例數： \\[ K_i \\sim \\text{Poisson}(\\mu_i); \\mu_i = \\lambda_i p_i\\\\ \\text{Where } \\lambda_i \\text{ is the rate parameter in group } i, \\\\ p_i \\text{ is the person-years at risk in group }i \\\\ \\] 有無心臟病史組之間由於是相互獨立的，故兩組的對數似然相加之後就可得到合併後的對數似然。 數據： \\[ k_0 = 52, p_0 = 4862; k_1 = 25, p_1 = 512 \\] 泊松模型的對數似然方程爲 (Section 12.6)： \\[ \\ell(\\lambda | \\text{data}) = -\\lambda p + k \\text{log} \\lambda \\] 令 \\(\\psi = \\text{log} \\lambda\\) 有： \\[ \\ell(\\psi) = k \\psi - e^\\psi p \\] 令 \\(\\psi_0 = \\text{log}\\lambda_0; \\psi_1 = \\text{log}\\lambda_1\\)，那麼本題中的假設檢驗可以寫成是： \\[\\text{H}_0: {\\psi_0}_0 = -4.5, {\\psi_1}_0 = -3 \\text{ v.s. H}_1: {\\psi_0}_0 \\neq -4.5 \\text{ or } {\\psi_1}_0 \\neq -3\\] 對數似然比檢驗需要尋找的檢驗統計量是 \\(-2llr({\\psi_0}_0,{\\psi_1}_0)\\)，其中： \\[ llr({\\psi_0}_0,{\\psi_1}_0) = \\ell({\\psi_0}_0,{\\psi_1}_0) - \\ell(\\hat\\psi_0,\\hat\\psi_1) \\] 所以我們分別來計算 \\(\\ell({\\psi_0}_0,{\\psi_1}_0)\\) 和 \\(\\ell(\\hat\\psi_0,\\hat\\psi_1)\\)： \\[ \\begin{equation} \\ell(\\psi_0, \\psi_1) = k_0 \\psi_0 - e^{\\psi_0} p_0 + k_1 \\psi_1 - e^{\\psi_1} p_1 \\end{equation} \\tag{18.4} \\] \\[ \\Rightarrow \\frac{\\partial\\ell}{\\partial\\psi_0} = k_0 - e^{\\psi_0}p_0 \\\\ \\text{and} \\\\ \\frac{\\partial\\ell}{\\partial\\psi_1} = k_1 - e^{\\psi_1}p_1 \\] 然後我們把這兩個偏微分式子等於零時的解作爲 \\(\\psi_0, \\psi_1\\) 的 \\(\\text{MLE}\\)： \\[ \\begin{aligned} \\frac{\\partial\\ell}{\\partial{\\psi}_0} &amp; = 0 \\\\ \\Rightarrow e^{{\\hat\\psi}_0} &amp; = \\frac{k_0}{p_0} \\\\ \\Rightarrow {\\hat\\psi}_0 &amp; = \\text{log}(\\frac{k_0}{p_0}) \\\\ \\text{And similarly } {\\hat\\psi}_1 &amp; = \\text{log}(\\frac{k_1}{p_1}) \\end{aligned} \\] 所以， \\[ \\begin{aligned} \\ell({\\psi_0}_0,{\\psi_1}_0) &amp; = 52\\times(-4.5) - e^{-4.5}\\times4862+25\\times(-3)-e^{-3}\\times512 \\\\ &amp; = -388.5029 \\\\ \\ell(\\hat\\psi_0,\\hat\\psi_1) &amp; = 52\\times\\text{log}\\frac{52}{4862} - e^{\\text{log}\\frac{52}{4862}}\\times4862 + 25\\times\\text{log}\\frac{25}{512} - e^{\\text{log}\\frac{25}{512}}\\times512 \\\\ &amp; = 52\\times\\text{log}\\frac{52}{4862} - 52 + 25\\times\\text{log}\\frac{25}{512} - 25 \\\\ &amp; = -388.4602 \\\\ \\Rightarrow llr({\\psi_0}_0,{\\psi_1}_0) &amp; = -388.5029 - (-388.4602) = - 0.0427 \\\\ \\Rightarrow -2llr({\\psi_0}_0,{\\psi_1}_0) &amp; = 0.0854 \\end{aligned} \\] 因爲在零假設條件下 \\(-2llr \\stackrel{\\cdot}{\\sim} \\chi^2_2\\)，本次檢驗的拒絕域是 \\(\\mathfrak{R} &gt; \\chi^2_{2,0.95} = 5.99\\)，所以，檢驗的結果 \\(-2llr = 0.0854 &lt; 5.99\\)，在顯著性水平爲 \\(5\\%\\) 時，沒有證據反對零假設。There is no evidence at the \\(5\\%\\) level against the null hypothesis. Wald 檢驗時我們需要的檢驗統計量爲： \\[ W = (\\hat\\psi_0-{\\psi_0}_0, \\hat\\psi_1-{\\psi_1}_0)(-\\underline{\\ell^{\\prime\\prime}}(\\hat\\psi_0,\\hat\\psi_1))\\left( \\begin{array}{c} \\hat\\psi_0-{\\psi_0}_0 \\\\ \\hat\\psi_1-{\\psi_1}_0 \\end{array} \\right) \\] 先處理中間那個看起來比較棘手的 \\((-\\underline{\\ell^{\\prime\\prime}}(\\hat\\psi_0,\\hat\\psi_1))\\)： \\[ \\begin{aligned} \\underline{\\ell^\\prime}(\\psi_0, \\psi_1) &amp; = \\left( \\begin{array}{c} k_0 - e^{\\psi_0}p_0 \\\\ k_1 - e^{\\psi_1}p_1 \\end{array} \\right) \\\\ \\Rightarrow \\underline{\\ell^{\\prime\\prime}}(\\psi_0,\\psi_1) &amp; = \\left( \\begin{array}{c} \\frac{\\partial^2\\ell}{\\partial\\psi^2_0} &amp; \\frac{\\partial^2\\ell}{\\partial\\psi_1\\partial\\psi_0} \\\\ \\frac{\\partial^2\\ell}{\\partial\\psi_0\\partial\\psi_1} &amp; \\frac{\\partial^2\\ell}{\\partial\\psi^2_1} \\end{array} \\right) = \\left( \\begin{array}{c} -e^{\\psi_0}p_0 &amp; 0\\\\ 0 &amp; -e^{\\psi_1}p_1 \\end{array} \\right) \\\\ \\Rightarrow -\\underline{\\ell^{\\prime\\prime}}(\\hat\\psi_0,\\hat\\psi_1) &amp; = \\left( \\begin{array}{c} -e^{\\hat\\psi_0}p_0 &amp; 0\\\\ 0 &amp; -e^{\\hat\\psi_1}p_1 \\end{array} \\right) \\\\ &amp; = \\left( \\begin{array}{c} -e^{\\text{log}(\\frac{52}{4862})}\\times4862 &amp; 0\\\\ 0 &amp; -e^{\\text{log}(\\frac{25}{512})}\\times512 \\end{array} \\right) \\\\ &amp; = \\left( \\begin{array}{c} 52 &amp; 0\\\\ 0 &amp; 25 \\end{array} \\right) \\end{aligned} \\] 又有 \\(\\hat\\psi_1-{\\psi_1}_0 = \\text{log}(\\frac{25}{512})-(-3) = -0.0194\\) 和 \\(\\hat\\psi_0-{\\psi_0}_0 = \\text{log}(\\frac{52}{4862})-(-4.5) = -0.0379\\) 所以 \\[ \\begin{aligned} W &amp; = (\\hat\\psi_0-{\\psi_0}_0, \\hat\\psi_1-{\\psi_1}_0)(-\\underline{\\ell^{\\prime\\prime}}(\\hat\\psi_0,\\hat\\psi_1))\\left( \\begin{array}{c} \\hat\\psi_0-{\\psi_0}_0 \\\\ \\hat\\psi_1-{\\psi_1}_0 \\end{array} \\right) \\\\ &amp; = (-0.0379, -0.0194)\\left( \\begin{array}{c} 52 &amp; 0\\\\ 0 &amp; 25 \\end{array} \\right)\\left( \\begin{array}{c} -0.0379 \\\\ -0.0194 \\end{array} \\right) = 0.08439208 \\end{aligned} \\] Wald 檢驗的檢驗統計量也一樣服從 \\(\\chi^2_2\\)，所以拒絕域同對數似然比檢驗法的\\(\\mathfrak{R} &gt; \\chi^2_{2,0.95} = 5.99\\)，所以，檢驗的結果 \\(W = 0.08439208 &lt; 5.99\\)，在顯著性水平爲 \\(5\\%\\) 時，沒有證據反對零假設。There is no evidence at the \\(5\\%\\) level against the null hypothesis. 利用本節推導出的發生率比的條件對數似然方程，請嘗試進行對數似然比檢驗：心臟病發作率在無病史男性中和有病史男性中的比例爲 \\(0.2\\)。 本章推導的發生率的比值的條件對數似然方程爲： \\[ \\ell_c(\\theta) = k_1 \\text{log}\\theta - k\\text{log}(p_0 + \\theta p_1) \\\\ \\text{Where } \\theta = \\frac{\\lambda_1}{\\lambda_0} \\] 題目要求比較的是 \\(\\frac{\\lambda_0}{\\lambda_1} = 0.2\\)，用本題中的 \\(\\lambda_0\\) 取代條件對數似然方程中的 \\(\\lambda_1\\) 則有： \\[ \\ell_c{\\theta} = k_0\\text{log}\\theta - k\\text{log}(p_1 + \\theta p_0) \\\\ \\text{H}_0: \\theta_0 = 0.2 \\text{ v.s. H}_1: \\theta_0 \\neq 0.2 \\] 對於條件對數似然比檢驗，需要的檢驗統計量是 \\(-2llr_c(\\theta_0)\\) 其中： \\[ llr_c(\\theta_0) = \\ell_c(\\theta_0) - \\ell_c(\\hat\\theta) \\] 先計算 \\(\\ell_c(\\hat\\theta)\\)： \\[ \\begin{aligned} \\text{Let }\\ell_c^\\prime &amp; = \\frac{k_0}{\\theta} - \\frac{kp_0}{p_1+\\theta p_0} = 0 \\\\ \\Rightarrow \\frac{k_0}{\\theta} &amp; = \\frac{kp_0}{p_1+\\theta p_0} \\\\ \\Rightarrow \\hat\\theta &amp; = \\frac{k_0p_1}{p_0k_1} = \\frac{k_0/p_0}{k_1/p_1} \\\\ \\Rightarrow \\hat\\theta &amp; = \\frac{52\\times512}{4862\\times25} = 0.219037 \\\\ \\Rightarrow \\ell_c(\\theta_0) &amp; = k_0\\text{log}0.2 - k\\text{log}(p_1 + \\theta p_0) \\\\ &amp; = 52\\times\\text{log}0.2 - 77\\times\\text{log}(512 + 0.2\\times4862) \\\\ &amp; = -646.003 \\\\ \\ell_c{\\hat\\theta} &amp; = 52\\times\\text{log}0.219037 - 77\\times\\text{log}(512 + 0.219037\\times4862)\\\\ &amp; = -645.933 \\\\ \\Rightarrow -2llr(\\theta_0) &amp; = -2\\times(-646.003-(-645.933)) = 0.14 \\end{aligned} \\] 因爲在零假設條件下 \\(-2llr \\stackrel{\\cdot}{\\sim} \\chi^2_1\\)，本次檢驗的拒絕域是 \\(\\mathfrak{R} &gt; \\chi^2_{1,0.95} = 3.84\\)，所以，檢驗的結果 \\(-2llr = 0.14 &lt; 3.84\\)，在顯著性水平爲 \\(5\\%\\) 時，沒有證據反對零假設。There is no evidence at the \\(5\\%\\) level against the null hypothesis. "],["profile-log-likelihood.html", "第 19 章 多個參數時的統計推斷 – 子集似然函數 profile log-likelihoods 19.1 子集似然法推導的過程總結 19.2 子集對數似然比的近似 19.3 Inference Practical 11", " 第 19 章 多個參數時的統計推斷 – 子集似然函數 profile log-likelihoods 本章介紹的子集似然法是處理多個參數模型的主要方法。前章介紹的條件似然法也是相當出色的方法，但是許多情況下我們無法找到合適的“條件”來輔助我們擺脫那些模型中不需要的，障礙 (或者叫噪音) 參數 nuisance parameters。 我們還是沿用上一節的例子。 兩個獨立的人羣追蹤樣本，在 \\(p_0, p_1\\) 人年的隨訪中發生事件 A 的次數分別是 \\(k_0, k_1\\)。我們只關心兩組的事件 A 發生率的比 \\(\\text{Rate ratio:} \\theta=\\frac{\\lambda_1}{\\lambda_0}\\)。兩個人羣的聯合對數似然函數如下： \\[ \\ell(\\lambda_0, \\lambda_1) = k_0\\text{log}\\lambda_0 - \\lambda_0p0 + k_1\\text{log}\\lambda_1 - \\lambda_1p1 \\] Step 1. 先用 \\(\\lambda_1 = \\lambda_0\\theta\\) 取代掉上面式子中的 \\(\\lambda_1\\)。 \\[ \\begin{aligned} \\Rightarrow \\ell(\\lambda_0, \\theta) &amp; = k\\text{log}\\lambda_0 + k_1\\text{log}\\theta - \\lambda_0(P_0 + \\theta p_1) \\\\ \\text{Where } k &amp; = k_0 + k_1 \\end{aligned} \\tag{19.1} \\] 這一步先是消滅了一個障礙參數 \\(\\lambda_1\\)，獲得了一個我們關心的參數 \\(\\theta\\)，和 \\(\\lambda_0\\) 的對數似然方程。接下來，我們尋找用 \\(\\theta\\) 表示 \\(\\lambda_0\\) (用 \\(\\hat\\lambda_0(\\theta)\\) 標記) 的似然方程，使得只包含一個參數 \\(\\theta\\) 的對數似然方程可以在每個 \\(\\lambda_0\\) 時取得極大值。此時我們定義 \\(\\theta\\) 的子集對數似然方程 profile log-likelihood是： \\[ \\ell_p(\\theta) = \\ell(\\hat\\lambda_0(\\theta),\\theta) \\] Step 2. 爲了求 \\(\\hat\\lambda_0(\\theta)\\)，先視 \\(\\theta\\) 爲不變的，對上式 (19.1) 求 \\(\\lambda_0\\) 的微分： \\[ \\frac{\\partial\\ell(\\lambda_0,\\theta)}{\\partial\\lambda_0}=\\frac{k}{\\lambda_0} - (p_0+\\theta p_1) \\] 把該微分方程等於0，推導出 \\(\\hat\\lambda_0=\\frac{k}{p_0+\\theta p_1}\\) 就是 \\(\\theta\\) 在取值範圍內所有能使對數似然方程 (19.1) 取極大值的對應 \\(\\lambda_0\\)。 Step 3. 將這個 \\(\\theta\\) 表示的 \\(\\lambda_0\\text{ MLE}\\) 代替 \\(\\lambda_0\\) 代入對數似然方程 (19.1) 中去： \\[ \\begin{aligned} \\ell_p(\\theta) &amp;= k\\text{log}\\frac{k}{p_0 + \\theta p_1} + k_1 \\text{log}\\theta - k \\\\ \\text{Ignoring} &amp;\\text{ items not involving } \\theta\\\\ \\Rightarrow &amp;= k_1\\text{log}\\theta - k\\text{log}(p_0+\\theta p_1) \\end{aligned} \\] 這個用子集似然法推導的關於參數 \\(\\theta\\) 的似然方程和前一章用條件似然法 (Section 18.4) 推導的結果是完全一致的 (18.3)。 19.1 子集似然法推導的過程總結 多個參數中區分出我們感興趣的參數 \\(\\psi\\) 和其餘的障礙(噪音)參數 \\(\\lambda\\)； 爲了從對數似然方程中消除噪音參數，把它們一一通過微分求極值的辦法表達成用 \\(\\psi\\) 標記的表達式，用這些包含了 \\(\\psi\\) 的 \\(\\text{MLE}\\) 代替所有的噪音參數； 整理最終獲得的只有感興趣的參數的對數似然方程，記得把不包含參數的部分忽略掉。 19.1.1 子集對數似然方程的分佈 \\[ -2pllr(\\psi) = -2\\{ \\ell_p(\\psi) - \\ell(\\hat\\psi)\\} \\stackrel{\\cdot}{\\sim} \\chi^2_r \\] 其中自由度 \\(r\\) 是想要檢驗的零假設中受限制的參數的個數。Degree of freedom \\(r\\) is the number of parameters restricted under the null hypothesis. 所以，如果 \\(\\psi\\) 是一個維度 (dimension) 爲 \\(p\\) 的向量，如果零假設是 \\(\\text{H}_0: \\psi = \\psi_0\\)，那麼自由度就是 \\(p\\)。 19.1.2 假設檢驗過程舉例 兩個獨立的二項分佈樣本：\\(K_0 \\sim \\text{Bin}(n_0, \\pi_0), K_1 \\sim \\text{Bin}(n_1, \\pi_1)\\)。它們的聯合對數似然爲： \\[ \\ell(\\pi_0, \\pi_1) = \\ell(\\pi_0) + \\ell(\\pi_1) \\] 如果要檢驗的零假設和替代假設分別是 \\(\\text{H}_0: \\pi_0 = \\pi_1 \\text{ v.s. H}_1: \\pi_0 \\neq \\pi_1\\)。 如果令 \\(\\theta=\\frac{\\pi_1}{\\pi_0}\\)，那麼要檢驗的零假設和替代假設就變成了： \\[ \\text{H}_0: \\theta = 1 \\text{ v.s. H}_1: \\theta \\neq 1 \\\\ \\Rightarrow -2 pllr \\stackrel{\\cdot}{\\sim} \\chi^2_1 \\] 而且在零假設條件下，\\(\\text{H}_0: K_0+K_1 \\sim \\text{Bin}(n_0+n_1, \\pi)\\)，那麼自己對數似然比檢驗的統計量是： \\[ \\begin{aligned} -2 pllr &amp; = -2\\{ \\text{max}[\\underset{\\text{H}_0}{\\ell(\\pi_0,\\theta\\pi_0)}] -\\text{max}[\\underset{\\text{H}_1}{\\ell(\\pi_0,\\theta\\pi_0)}] \\} \\\\ \\Rightarrow -2 pllr &amp; = -2\\{ \\text{max}[\\underset{\\text{H}_0}{\\ell(\\pi,\\theta\\pi)}] -\\text{max}[\\underset{\\text{H}_1}{\\ell(\\pi_0,\\pi_1)}] \\} \\\\ \\Rightarrow -2 pllr &amp; = -2\\{ \\ell{(\\hat\\pi)} - \\ell{(\\hat\\pi_0, \\hat\\pi_1)} \\} \\end{aligned} \\] 19.2 子集對數似然比的近似 假如有兩個獨立樣本數據，參數分別只有一個 \\(\\beta_0, \\beta_1\\)，我們關心他們二者之間的差是否有意義 \\(\\gamma = \\beta_1-\\beta_0\\)。如果 \\(\\beta_0\\) 的對數似然比檢驗統計量的相應的 Wald 檢驗統計量 (二次方程近似法 Section 16.4) 可以用 \\(\\hat\\beta_0, S_0\\) 定義，其中 \\(\\beta_0\\) 是 \\(\\text{MLE}\\)，\\(S_0\\) 是標準誤差。類似的，\\(\\beta_1\\) 的 Wald 檢驗統計量可以用 \\(\\hat\\beta_1, S_1\\) 定義。那麼，我們關心的參數，\\(\\gamma = \\beta_1 - \\beta_0\\) 的 Wald 檢驗統計量可以用 \\(\\hat\\gamma = \\hat\\beta_1 - \\hat\\beta_1, S=\\sqrt{S^2_1 + S^2_0}\\) 定義： \\[ \\begin{aligned} pllr(\\gamma) &amp; = -\\frac{1}{2}(\\frac{\\gamma-\\hat\\gamma}{\\sqrt{S^2_1+S^2_0}})^2 \\\\ &amp; = -\\frac{1}{2}(\\frac{(\\beta_1-\\beta_0)-(\\hat\\beta_1-\\hat\\beta_0)}{\\sqrt{S^2_1+S^2_0}})^2 \\end{aligned} \\] 19.2.1 子集對數似然比近似的一般化 如果我們關心的參數，和模型參數的關係可以用下面的表達式來表示： \\[ \\gamma = W_0\\beta_0 + W_1\\beta_1 + \\cdots \\\\ \\text{ Where } W_i \\text{ are arbitrary cosntants} \\] 如果，模型中的每個參數 \\(\\beta_0, \\beta_1, \\cdots\\) 的 \\(\\text{MLE}\\) 是 \\(\\hat\\beta_0, \\hat\\beta_1, \\cdots\\)，標準誤是 \\(S=\\sqrt{(W_0S_0)^2+(W_1S_2)^2+\\cdots}\\) 19.2.2 事件發生率之比的 Wald 檢驗統計量 事件發生率 (Possion rate ratio) \\(\\theta = \\frac{\\lambda_1}{\\lambda_0}\\) 令 \\(\\beta_1 = \\text{log}\\lambda_1, \\beta_0 = \\text{log}\\lambda_0, \\gamma = \\text{log}\\theta\\)。 所以有 \\(\\gamma=\\beta_1-\\beta_0\\)。 由於 \\[ \\begin{aligned} \\hat\\beta_0 &amp; = \\text{log}(\\frac{k_0}{p_0}), \\\\ \\hat\\beta_1 &amp; = \\text{log}(\\frac{k_1}{p_1}) \\\\ \\end{aligned} \\] 因而 \\[ \\begin{aligned} \\hat\\gamma &amp; = \\text{log}\\frac{k_1}{p_1} - \\text{log}\\frac{k_0}{p_0} \\\\ &amp; = \\text{log}\\frac{k_1/p_1}{k_0/p_0} \\end{aligned} \\] 又由於 \\(S_0 = \\frac{1}{\\sqrt{k_0}}, S_1 = \\frac{1}{\\sqrt{k_1}}\\) (Section 14.2.1)。 所以 \\(S=\\sqrt{\\frac{1}{k_0}+\\frac{1}{k_1}}\\)。 綜上，事件發生率之比的 Wald 檢驗統計量爲 \\[ \\begin{aligned} pllr(\\gamma) &amp; = -\\frac{1}{2}(\\frac{\\gamma - \\hat\\gamma}{\\sqrt{\\frac{1}{k_0}+\\frac{1}{k_1}}})^2 \\\\ &amp; = -\\frac{1}{2}(\\frac{\\text{log}\\theta - \\text{log}\\frac{k_1/p_1}{k_0/p_0}}{\\sqrt{\\frac{1}{k_0}+\\frac{1}{k_1}}})^2 \\end{aligned} \\] 19.3 Inference Practical 11 \\(n\\) 名肺癌 I 期患者的倖存時間 \\(X_1, X_2, \\cdots, X_n\\) 被認爲服從指數分佈 (參數 \\(\\lambda_x\\))，概率方程爲 \\(\\lambda_x e^{-x\\lambda_x},\\text{ where } x &gt; 0\\)。 證明 \\(\\lambda_x\\) 的 \\(\\text{MLE}\\) 是 \\(\\hat\\lambda_x = \\frac{1}{\\bar{x}}\\), 對數似然方程是 \\[\\ell(\\lambda_x | \\underline{x}) = n\\text{log}\\lambda_x - \\lambda_x n \\bar{x}\\] 解 \\[ \\begin{aligned} f(\\underline{x}|\\lambda_x) &amp; = \\lambda_x\\cdot e^{-x\\lambda_x} \\\\ F(\\underline{x}|\\lambda_x) &amp; = \\prod_{i=1}^n\\lambda_{x}\\cdot e^{-x_i\\lambda_{x}} \\\\ \\Rightarrow L(\\lambda_x | \\underline{x}) &amp; = \\prod_{i=1}^n\\lambda_xe^{-x_i\\lambda_{x}} \\\\ \\Rightarrow \\ell(\\lambda_x|\\underline{x}) &amp; = \\sum_{i=1}^n(\\text{log}\\lambda_x + \\text{log}e^{-x_i\\lambda_{x}}) \\\\ &amp; = n\\text{log}\\lambda_x + \\sum_{i=1}^n(-x_i\\lambda_{x}) \\\\ &amp; = n\\text{log}\\lambda_x - n\\bar{x}\\lambda_x \\\\ \\Rightarrow \\ell^\\prime(\\lambda_x) &amp; = \\frac{n}{\\lambda_x} - n\\bar{x}\\lambda_x \\\\ \\text{Let } \\ell^\\prime(\\lambda_x) &amp; = 0 \\Rightarrow \\text{ MLE of } \\lambda_x \\text{ is } \\hat\\lambda_x = \\frac{1}{\\bar{x}} \\\\ \\because \\ell^{\\prime\\prime} = -\\frac{n}{\\lambda^2_x} &amp; &lt; 0 \\therefore \\frac{1}{\\bar{x}} \\text{ is the MLE} \\end{aligned} \\] 另一組獨立數據是樣本量爲 \\(n\\) ，但是肺癌診斷爲 II 期的患者的倖存時間 \\(Y_1, \\cdots, Y_n\\)。這組數據也被認爲服從參數爲 \\(\\lambda_y\\) 的指數分佈。用 \\(\\theta=\\frac{\\lambda_x}{\\lambda_y}\\) 標記兩組患者倖存時間之比，用 \\(r=\\frac{\\bar{x}}{\\bar{y}}\\) 標記樣本的倖存時間均值之比。證明使兩個樣本數據的聯合對數似然取極大值的 \\(\\hat\\lambda_y(\\theta) = \\frac{2}{\\bar{y}(\\theta r+1)}\\)。 解 \\[ \\begin{aligned} \\ell(\\lambda_x|\\underline{x}) &amp; = n\\text{log}\\lambda_x - n \\bar{x} \\lambda_x \\\\ \\ell(\\lambda_y|\\underline{y}) &amp; = n\\text{log}\\lambda_y - n \\bar{y} \\lambda_y \\\\ \\Rightarrow \\text{ Joint log-likelihood: } &amp; \\ell(\\lambda_x, \\lambda_y | \\underline{x}, \\underline{y}) = n\\text{log}\\lambda_x - n\\bar{x}\\lambda_x \\\\ &amp; \\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;\\;+ n\\text{log} \\lambda_y - n\\bar{y}\\lambda_y \\\\ \\text{Subsitute } \\lambda_x &amp; =\\theta\\cdot\\lambda_y \\\\ \\Rightarrow \\ell(\\theta, \\lambda_y) &amp;= n\\text{log}\\theta\\lambda_y - n\\bar{x}\\theta\\lambda_y + n\\text{log} \\lambda_y - n\\bar{y}\\lambda_y \\\\ \\ell(\\theta, \\lambda_y) &amp; = n(\\text{log}\\theta + \\text{log}\\lambda_y - \\bar{x}\\theta\\lambda_y + \\text{log}\\lambda_y - \\bar{y}\\lambda_y) \\\\ &amp; = n[\\text{log}\\theta + 2\\text{log}\\lambda_y - \\lambda_y(\\bar{x}\\theta + \\bar{y})] \\\\ \\Rightarrow \\frac{\\partial\\ell(\\theta, \\lambda_y)}{\\partial \\lambda_y} &amp; = n[\\frac{2}{\\lambda_y} - (\\bar{x}\\theta + \\bar{y})] \\\\ \\text{Let } \\frac{\\partial\\ell(\\theta, \\lambda_y)}{\\partial \\lambda_y} &amp; = 0 \\text{ and because } r = \\frac{\\bar{x}}{\\bar{y}} \\\\ \\hat\\lambda_y(\\theta) &amp; = \\frac{2}{\\bar{x}\\theta + \\bar{y}} = \\frac{2}{\\bar{y}(r\\cdot\\theta +1)} \\end{aligned} \\] 證明參數 \\(\\theta\\) 的子集對數似然是 \\(\\ell_p(\\theta|r) = n\\text{log}\\theta - 2n \\text{log}(\\theta\\cdot r + 1)\\)，且 \\(\\text{MLE}\\) 是 \\(\\hat\\theta = \\frac{1}{r}\\) 解 \\[ \\begin{aligned} \\ell_p (\\theta) &amp; = n[\\text{log}\\theta + 2\\cdot\\text{log}\\frac{2}{\\bar{y}(r\\cdot\\theta +1)} - \\text{log}\\frac{2}{\\bar{y}(r\\cdot\\theta +1)}(\\bar{x}\\theta+\\bar{y})] \\\\ &amp; = n\\{\\text{log}\\theta + 2\\cdot\\text{log}2 - 2\\cdot\\text{log}[\\bar{y}(r\\theta+1)] -2 \\} \\\\ \\text{Ignoring } &amp; \\text{ items not involving } \\theta\\\\ &amp; = n[\\text{log}\\theta - 2\\text{log}(r\\theta+1)] \\\\ \\Rightarrow \\ell_p^{\\prime}(\\theta) &amp; = n(\\frac{1}{\\theta} - \\frac{2r}{r\\theta+1}) \\\\ \\text{Let } \\ell_p^{\\prime}(\\theta) &amp; = 0 \\Rightarrow n(\\frac{1}{\\theta} - \\frac{2r}{r\\theta+1}) = 0 , \\hat\\theta=\\frac{1}{r}\\\\ \\because \\ell_p^{\\prime\\prime}(\\theta) &amp; = -\\frac{1}{\\theta^2} - \\frac{2r^2}{(r\\theta^2+1)^2} &lt; 0 \\\\ \\therefore \\hat\\theta &amp; =\\frac{1}{r} \\text{ is the MLE} \\end{aligned} \\] 根據 \\(\\text{MLE}\\) 的恆定性，可以直接推導出 \\(\\theta\\) 的 \\(\\text{MLE}\\) 嗎? 解 \\[ \\because \\hat\\lambda_x = \\frac{1}{x} , \\hat\\lambda_y = \\frac{1}{y} \\\\ \\therefore \\theta = \\frac{\\lambda_x}{\\lambda_y} \\Rightarrow \\hat\\theta = \\frac{\\hat\\lambda_x}{\\hat\\lambda_y} = \\frac{1}{r} \\] 證明檢驗下列假設 \\(\\text{H}_0: \\theta_0 = 1 \\text{ v.s. H}_1: \\theta_0 \\neq 1\\) 的子集對數似然比檢驗統計量是 \\(2n\\text{log}\\frac{(r+1)^2}{4r}\\)，並進行 \\(n=16, r=2\\) 的假設檢驗。 解 \\[ \\begin{aligned} \\text{Under H}_0 &amp; \\Rightarrow \\text{ test statistic is } \\\\ -2llr(\\theta_0) &amp; = -2[\\ell(\\theta_0) - \\ell(\\hat\\theta)] \\stackrel{\\cdot}{\\sim} \\chi^2_1 \\\\ \\Rightarrow \\ell_p(\\theta_0) &amp; = n\\text{log}1 - 2n \\text{log}(r+1) = -2n\\text{log}(r+1) \\\\ \\ell_p(\\hat\\theta) &amp; = n\\text{log}\\frac{1}{r} - 2n\\text{log}(2) \\\\ &amp; = -n\\text{log}r-2n\\text{log}2 = -n\\text{log}4r\\\\ \\Rightarrow \\ell_p(\\theta_0) - \\ell_p(\\hat\\theta) &amp; = -2n\\text{log}(r+1) + n\\text{log}4r = n\\text{log}\\frac{4r}{(r+1)^2} \\\\ \\Rightarrow -2llr(\\theta_0) &amp; = -2n\\text{log}\\frac{4r}{(r+1)^2} = 2n\\text{log}\\frac{(r+1)^2}{4r} \\\\ \\text{ When } n=16, r=2 -2llr(\\theta_0) &amp; = 2\\times16\\times\\text{log}(\\frac{2+1}{4\\times2})^2 = 3.769 &lt; \\chi^2_{1,0.95} = 3.84\\\\ \\text{ We do not reject }&amp;\\text{ the null hypothesis at the } 5\\% \\text{ level.} \\end{aligned} \\] 此時如果精確計算可以獲得 \\(p=0.052\\)，從檢驗統計量的計算值我們也能看出距離拒絕零假設的拒絕域十分接近。此時可以認爲是一個臨界的 \\(p\\) 值。所以數據提供了臨界 \\(p=0.052\\) 的證據證明肺癌 II 期患者的倖存時間平均要少於 I 期患者。 "],["summary.html", "第 20 章 統計推斷總結", " 第 20 章 統計推斷總結 推斷是十分具有挑戰性的一個章節，我們在此做個簡單的複習和總結，用一些常見的問題來結束本章。 20.0.1 快速複習 對於收集到的樣本數據 data，我們需要提出一個所謂的“科學問題 scientific question”。 爲了回答這個“科學問題”，我們會設想，並提出一個合適的 統計學模型 statistical model，確認提出的統計學模型中的參數 parameters。通過樣本數據的信息對參數進行估計 estimation，或者進行假設檢驗 hypothesis tests。 統計學模型具有自己的概率分佈，通過相應的參數，和模型的分佈可以解釋觀察數據的分佈，並且利用這些信息進行我們需要的推斷。同時，我們還需要利用觀察數據對我們提出的模型是否擬合數據做出合適的診斷。 估計和假設檢驗，是以似然方程爲基礎的。通常我們會利用便於計算的對數似然(比)，進行假設檢驗。 獲得似然方程以後，我們可以用對數似然比，進一步進行推斷： 確認最佳估計 \\(MLE\\)，和它的方差 (標準誤)； 計算參數的點估計量，和信賴區間； 爲感興趣的參數實施假設檢驗。 20.0.2 試爲下面的醫學研究問題提出合適的統計學模型 在一所醫院收集了 80 名患者的血壓和體重的數據，醫生想要分析血壓 (bp) 跟體重 (weight) 之間是否有相關性。 答： 用簡單線性迴歸模型。(r.v. = random variable) \\[ Y \\text{ r.v. for bp } Y_j | \\text{weight}_j \\stackrel{i}{\\sim} N(\\alpha + \\beta \\text{weight}, \\sigma^2), j = 1,2,\\cdots,80; \\text{H}_0: \\beta=0 \\] 爲了調查某市青光眼的患病率 (prevalence)，從一般人羣中隨機抽取了 100 人進行眼部檢查。 答：用二項分佈模型。 \\[ K \\text{ r.v. for number of people found with glaucoma } \\\\ K \\sim \\text{Bin}(100, \\pi); \\text{ Estimate } \\pi \\text{ with CI.} \\] 另一個醫生拿到了 2. 的數據，打算分析這100人中青光眼的患病與否是否和血壓相關。 答：用邏輯迴歸模型。 \\(\\text{logit}\\pi = \\text{log}\\frac{\\pi}{1-\\pi}\\) \\[ K_i | bp_i \\sim \\text{Bin}(100, \\pi_i), \\text{logit}(\\pi_i) = \\alpha + \\beta bp_i; \\text{H}_0: \\beta = 0 \\] 有好事者打算調查 25 名研究對象的血清膽固醇水平是否在實驗前後 (實驗時間3個月) 發生有意義的改變。 答：正態分佈模型，單樣本 \\(t\\) 檢驗。 \\[ D \\text{ r.v. for cholesterol change; } D_j \\stackrel{i.i.d}{\\sim} N(\\delta, \\sigma^2), j= 1,\\cdots,25; \\text{H}_0: \\delta = 0\\\\ \\text{Where } D_j = \\text{chol}_{j,3m} - \\text{chol}_{j,entry} \\] 前一題的好事者，打算進一步分析膽固醇水平的變化在某些進行特殊飲食的觀察對象中是否更加顯著。 答：簡單線性迴歸模型。 \\[ D_j | \\text{diet}_j \\stackrel{i}{\\sim} N(\\alpha + \\beta \\text{diet}_j, \\sigma^2), j=1,\\cdots,25; \\text{H}_0: \\beta = 0 \\] 某降壓藥物已知能有效地降低高血壓患者的血壓。某項實驗將收集來的高血壓患者分成 6 個小組，每組給予的藥物劑量不同，最低 1 毫克每次，最高 6 毫克每次，每組相差 1 毫克劑量。研究者希望通過實驗確定該藥物的降壓效果是否在某個劑量時達到最大，如果沒有，是否降壓藥物的效果隨着劑量增加而增加。 \\[ \\begin{aligned} &amp; bp_j | \\text{dose}_j \\stackrel{\\cdot}{\\sim} N(\\alpha + \\beta\\text{dose}_j + \\gamma\\text{dose}^2_j, \\sigma^2), j=1,\\cdots,n;\\\\ \\text{1) test } &amp; \\text{ H}_0: \\gamma=0; \\text{ if do not reject, then do next test } \\\\ &amp; bp_j | \\text{dose}_j \\stackrel{\\cdot}{\\sim} N(\\alpha + \\beta\\text{dose}_j, \\sigma^2) \\text{2) test } &amp; \\text{ H}_0: \\beta=0 \\end{aligned} \\] 20.0.3 醫生來找統計學家問問題 一個“臨牀醫生”來找你問了這樣的一個常見的問題：當我們使用 \\(t\\) 檢驗的時候，爲什麼前提假設是數據服從 正態分佈? 而不使用服從 \\(t\\) 分佈 這樣的前提條件，因爲我們實施該檢驗的時候明明就在用 \\(t\\) 分佈？ 答：我們從未假定觀察數據服從 \\(t\\) 分佈，我們假定的前提是檢驗統計量，也就是樣本均值和標準誤服從 \\(t\\) 分佈。因爲我們不知道收集獲得的數據來自的人羣的方差是多少，需要使用樣本數據對方差也進行估計的時候，不得已而必須使用 \\(t\\) 分佈來獲得估計的樣本均值的標準誤差，用於計算信賴區間和實施假設檢驗。 還是那個有好奇心的“臨牀醫生”又來問一個弱智問題：當我們使用正態分佈近似法對一個服從二項分佈的比例的單樣本檢驗的時候，我們把計算的檢驗統計量拿去跟正態分佈的特徵值作比較。然而，不用正態分佈近似，直接對連續型變量實施單樣本 \\(t\\) 檢驗的時候卻把計算的檢驗統計量拿去和 \\(t\\) 分佈的特徵值作比較，這是爲什麼？ 答：對連續型變量實施單樣本 \\(t\\) 檢驗的時候，我們需要用樣本數據同時估計均值和標準誤。但是對於二項分佈的數據來說，它的樣本比例的標準誤是總體比例的一個方程，所以只要用樣本比例估計總體比例以後，總體的標準誤就已經可以知道，不必再作估計。所以，二項分佈的正態近似法就真的使用標準正態分佈的特徵值，但是連續型變量的總體標準誤同時被估計，它的不確定性也要考慮進來，只能使用 \\(t\\) 分佈。 某“臨牀醫生”假裝很熱心想學習統計跑來問問題：該醫生實施的臨牀試驗，比較病例和對照之間某指標是否不同。但是，病例組看上去的年齡似乎比對照組要高一些，該醫生記得自己統計課上聽老師說過混雜因素的知識。所以他跑回家自己實施了一下病例組和對照組之間年齡是否有差別的 \\(t\\) 檢驗，結果顯示病例組對照組的年齡沒有顯著性差異。所以他認爲可以從線性模型中去掉年齡這一變量。但是身爲統計學家的你堅持必須要保留年齡在模型裏。所以醫生問你是否關心年齡有差別所以才堅持要調整年齡。你的回答是“對不起大哥，我對病例對照之間的年齡差是否有統計學意義完全沒有興趣。”醫生更加困惑了。\\(\\text{variable}_i = \\alpha + \\beta\\text{patient}_i + \\gamma\\text{age}_i + \\varepsilon_i\\) 答：年齡是否會混雜了病人分組和指標之間的關係，不是通過比較兩組來自的人羣的年齡是否有差別來判斷的。如果樣本的年齡有差別，就很有可能會對你想要分析的關係造成混淆。因爲你進行的年齡均值是否有差異的 \\(t\\) 檢驗，比較的並不是樣本年齡的差別，而是用樣本估計來自的人羣的年齡之間的比較。 "],["descriptive-stat.html", "第 21 章 探索數據和簡單描述 21.1 數據分析的流程 21.2 數據類型 21.3 如何總結並展示數據 21.4 數據總結方案：位置，分散，偏度，和峰度", " 第 21 章 探索數據和簡單描述 Happy families are all alike, every unhappy family is unhappy in its own way. Leo Tolstoy Tidy datasets are all alike, but every messy dataset is messy in its own way. Hadley Wickham The Analytic Techique lectures were orgainised and taught by Professor Timothy Collier. 21.1 數據分析的流程 圖 21.1: Population, sample and statistical inference 統計推斷的目的，是通過從人群中取樣本，經過對樣本特徵的 (描述) 統計分析 (summary statistic)，去推斷人群的相應特徵。 所以，無論什麼數據，到手以後我們一定要做的第一件事情，就是對其進行總結和描述，其過程又要盡可能地簡單明了。 在絕大多數的科學研究中數據分析都很重要，然而現實是，它多數情況下只出現在研究的第三部分： 研究設計 實施研究，收集數據 數據分析 結果報告 21.1.1 研究設計和實施 正確的統計推斷需要獲得具有代表性可以值得分析的數據，這必須建立在實驗研究設計良好，實施過程縝密的基礎上。設計糟糕，執行效率低下或者漏洞百出的實驗，給出的實驗數據必然是不可靠的，分析它也沒有意義。但是，不是說設計和實施階段就不需要統計學家的參與了。相反地，統計學家必須在研究實施過程中盡可能早的階段 (實驗設計) 參與進來。因為理解了實驗的目的，統計學家才能真正決定這個實驗要收集怎樣的數據，多大的樣本量，實施怎樣的分析方法。這些決定，注定了一項實驗研究的成敗。 21.1.2 數據分析 然而現實很殘酷，多數情況下實驗設計階段好像沒有統計學家什麼事，等到了數據分析階段，某些人才拍腦袋想讓統計學家來拯救他們收集的垃圾數據。通常都太晚了 (too late!)。 假設理想狀態下，我們收集到了想要分析的數據，可是接下來的工作流程的第一步，又常常被太多人忽略。許多 “科學家” 興奮地把數據輸入軟件，立刻就開始著手建立數學模型，進行假設檢驗，卻對數據的特徵一無所知！要知道，建立怎樣的模型，做怎樣的推斷，選用什麼樣的分析手段，都必須建立在你對數據內容完全熟悉的前提下，才能正確地實施。 數據分析第一步：數據清理, data cleaning。 這一步的目的很簡單，把收集來的粗糙的，充滿了缺失值和數據類型註解等等無法直接分析的數據，整理打扮成可以建模的數據庫。這個過程中，你可能需要對某些變量進行分類，可能兩三個實驗的結果需要被合併協調，可能在這個過程中你會發現數據錄入出現了一些錯誤導致數據庫裡有一些異常值，甚至是重複錄入。所以，各位小伙伴當你拿到一個數據準備分析的第一步，你必須要先了解你的數據。常用的手段包括簡單作圖，對感興趣的變量做概括分析 (summary your data!)。除此之外，由於沒有人能保證實驗中能收集到所有對象的完整數據，我們還需要分析缺失數據的特徵，思考他們為什麼會變成缺失數據。 21.2 數據類型 不同類型的數據，使用的初步描述手段各不相同。因此區分定性數據和定量數據，連續型數據，離散型數據，分類型數據顯得十分必要。 連續型變量，continuous data 連續型數據多來自實驗中對某些特徵的測量，例如身高，體重等，它們本質上是一組連續型的數據。現實生活中接觸到的許多數據也都是連續型的，例如：時間，距離，骨骼密度，藥物濃度等等。所謂連續型變量是由於它理論上可以取某段數值區間內的任何值。當然我們還會被測量尺度的精確度所局限。 離散型變量，discrete data 許多數據，是通過計數來收集的。離散型變量的本質上也是屬於數值型數據 (numeric)，特徵是這種數值型數據總是取正整數或者零。例如，醫院中發生感染的次數，一個家庭中兄弟姐妹的人數，術後患者存活天數等等。 分類型變量，categorical data 分類型變量的數據，其每一個觀察值都歸類於一種類別 (或者屬性)。分類型數據和離散型數據最大的不同是，它從本質上說就不屬於數值型數據。例如，頭髮的顏色 (紅色，黃色，黑色)，職業類型 (裝修工人，教師，總統)。儘管分類型數據本質上不是數值，分析過程中我們常常會給它們賦予一定的數值以便於計算。 二分類型數據，binary：十分常見，例如，生存/死亡，有效/無效，成功/失敗； 名義型數據，nominal：數據本身沒有高低順序之分，例如，種族，血型等； 排序型數據，ordinal：每個分類是包函了順序含義的數據，例如，回答某些問卷問題時用的 “十分同意，同意，不同意，十分不同意”，某些癌症使用的分級診斷 “一級，二級，三級，終級”，對一些結果的評價時使用的 “優，良，中，差”。 其實，對於連續型變量我們還常常會將它們轉化成分類型變量，使用一些特定的或者事先定義好的閾值 (cutoff values) 把連續型數據分組，分級，分層等等。最常見的例子就是體重指數 (BMI)，它本身是一個連續型的變量，但是又可以根據定義好的閾值把它分類成低體重 (\\(&lt; 18.5 \\; kg/m^2\\))，正常體重 (\\(18.5 - 24.9 \\; kg/m^2\\))，超重 (\\(25-29.9 \\; kg/m^2\\))，肥胖 (\\(\\geqslant 30 \\; kg/m^2\\))。另一個例子是血紅蛋白 (haemoglobin, \\(g/l\\))，它本身是一個連續型變量，但是我們利用它的閾值 (女性，\\(&lt;120 \\; g/l\\)；男性，\\(&lt; 130 \\; g/l\\))，作為診斷是否患有貧血症的依據。 把連續型變量進行分類處理的代價是信息的丟失。如果一個人的體重指數是 \\(25\\)，他/她的數據被和體重指數為 \\(29.9\\) 的人當作相同數值來對待是否合理是我們需要考慮的問題。而且許多情況下閾值的定義並不能達成共識，即使達成共識的閾值又是十分人為且恣意的，它可能導致一些相關關係被“強化”，或者反過來被“弱化”。所以，如果要對連續型數值進行分組，現在的要求是，在實驗設計階段就必須明確分組的閾值之定義，而不能在看到數據以後進行人為地劃分。更加不推薦的是直接使用四分位或者五分位來對數據分組。 21.3 如何總結並展示數據 光觀察原始數據很難真正明白數據的分佈特徵和形式，所以使用表格，或者用散點圖，柱狀圖等形式來描述數據就成為了常用的手段。前一節所描述的數據類型，決定了一組數據該如何被描述。 21.3.1 離散型分類型數據的描述 - 頻數分佈表 frequency table 下面的表格就是使用頻數分佈表來描述 cars 這個數據包中不同車速 (mph) 的分佈。汽車車速本身應該是一個連續型變量，但是這是1920年的數據當時的記錄只精確到整數，因此人為地造成了一組離散型變量的情況。下面的第二個表格使用的是繪圖瑞士軍刀包 ggplot2 裡自帶的鑽石數據。其中 cut 是對於鑽石切割水平的評價，所以是一個帶有排序性質的分組型變量。 data(&quot;cars&quot;) epiDisplay::tab1(cars$speed, graph = FALSE) ## cars$speed : ## Frequency Percent Cum. percent ## 4 2 4 4 ## 7 2 4 8 ## 8 1 2 10 ## 9 1 2 12 ## 10 3 6 18 ## 11 2 4 22 ## 12 4 8 30 ## 13 4 8 38 ## 14 4 8 46 ## 15 3 6 52 ## 16 2 4 56 ## 17 3 6 62 ## 18 4 8 70 ## 19 3 6 76 ## 20 5 10 86 ## 22 1 2 88 ## 23 1 2 90 ## 24 4 8 98 ## 25 1 2 100 ## Total 50 100 100 data(&quot;diamonds&quot;) epiDisplay::tab1(diamonds$cut, graph = FALSE) ## diamonds$cut : ## Frequency Percent Cum. percent ## Fair 1610 3.0 3.0 ## Good 4906 9.1 12.1 ## Very Good 12082 22.4 34.5 ## Premium 13791 25.6 60.0 ## Ideal 21551 40.0 100.0 ## Total 53940 100.0 100.0 離散型變量和分類型變量的描述還可以使用柱狀圖的形式來展示如下： 圖 21.2: Bar chart displaying the speed of cars 圖 21.3: Bar chart displaying distribution of evaluation of diamonds cut 上面這兩圖的 y 軸都用的是頻率，當然還可以使用百分比。不同組間分類型變量的分佈比較的話更常使用百分比作為 y 軸。如下面的表格及百分比條形圖所示。 diamonds$clarity2g &lt;- &quot;Good&quot; diamonds$clarity2g[(diamonds$clarity==&quot;I1&quot;)| (diamonds$clarity==&quot;SI2&quot;)| (diamonds$clarity==&quot;SI1&quot;)| (diamonds$clarity==&quot;VS2&quot;)] &lt;- &quot;Poor&quot; tab &lt;- stat.table(index=list(Cut=cut,Clarity=clarity2g), contents=list(count(),percent(cut)), data=diamonds, margins=T) print(tab, digits = 2) ## --------------------------------------- ## ----------Clarity----------- ## Cut Good Poor Total ## --------------------------------------- ## Fair 265.00 1345.00 1610.00 ## 1.42 3.81 2.98 ## ## Good 1191.00 3715.00 4906.00 ## 6.38 10.54 9.10 ## ## Very Good 4067.00 8015.00 12082.00 ## 21.77 22.73 22.40 ## ## Premium 3705.00 10086.00 13791.00 ## 19.83 28.61 25.57 ## ## Ideal 9454.00 12097.00 21551.00 ## 50.60 34.31 39.95 ## ## ## Total 18682.00 35258.00 53940.00 ## 100.00 100.00 100.00 ## --------------------------------------- 圖 21.4: Bar chart displaying distribution of evaluation of diamonds cut by clarity 21.3.2 連續型變量 連續型變量如果做頻數分佈表一般提供的信息量就較小。常用來描述連續型變量的手段是柱狀圖，histogram，和箱形圖，boxplot。柱狀圖應該不必過多解釋。箱形圖，展示的是連續型變量的中位數，四分位，範圍值，以及異常值。一個典型的箱形圖，中間的方形區域包括了該數據的四分位距，interquartile range (即中間 50% 的數據, IQR)。 圖 21.5: Boxplot of the diamond carat data R作出的箱形圖如 21.5 所示，箱子以上的橫線，意為最高值為75%分位值加上1.5倍的IQR；箱子以下橫線，意為最低值為25%分位值減去1.5倍的IQR。其他的觀察值如果不在這個上下限範圍之內的，會用黑點標記出來。這些值被認為是異常值 (outliers)。 21.4 數據總結方案：位置，分散，偏度，和峰度 21.4.1 位置 描述一組連續型變量的位置，location，此處的位置指的是數據分佈的中心位置，常用的數值是眾數 (mode)，中位數 (median)，均值 (mean)。 眾數 mode，的定義是，一組數據中出現最多次的數值大小； 中位數 median，的定義是，一組數據中從小到大/或者從大到小排序後50%位置的數值大小，如果觀察值有偶數個，中位數的定義是中間兩個數值的平均值大小； 算術平均值 arithmetic mean 的大小受異常值影響較大，通常簡略為均值，其定義可以用下面的表達式：\\[\\bar{X}=\\frac{1}{n}\\sum_{i=1}^n X_i\\] 幾何平均值 geometrix mean，常用在正偏態分佈數據 (positively skewed data)，其定義為： \\[\\sqrt[n]{\\prod_{i=1}^n X_i}=exp[\\frac{1}{n}\\sum_{i=1}^n log_e(X_i)]\\] 調和平均值 harmonic mean，是所有觀察值的倒數和的倒數，定義為：\\[\\frac{1}{\\frac{1}{n}\\sum_{i=1}^n\\frac{1}{X_i}}\\] 21.4.2 分散 數據的分散程度，dispersion，也就是數據的波動大小 variation。同樣均值的數據，他們的分散可能差別很大： 圖 21.6: Distributions with similar central location but different dispersion 分散程度的描述方法花樣不少，我們這裡先考慮範圍 (range)，四分位差 (interquartile range)，方差 (variance)，標準差 (standard deviation)。 21.4.2.1 範圍 range 定義：最大值和最小值的差。 缺點：受樣本量大小，以及異常值影響較大。 在表格，論文中需要同時報告最大值和最小值。 21.4.2.2 四分位差 interquartile range (IQR) 定義：四分位差是包含了數據中間 50% 數值的範圍。即，75%分位數-25%分位數的差值。 當觀察值數量為奇數個時，計算方法為：去掉中位數，計算大於中位數和小於兩個部分數值的中位數，求其差，例如：\\(5,10,12,14,16,19,22\\) 這組數字，25%分位數為10，75%分位數為19，所以IQR等於9。 當觀察值數量為偶數個時，計算方法為：計算較小的50%數值的中位數，和較大50%數值的中位數，求其差，例如：\\(5,10,12,14,16,19,22,38\\) 這組數字，上下兩半部分的中位數分別是 \\(Q_L=\\frac{10+12}{2}=11;\\;Q_U=\\frac{19+22}{2}=20.5\\)，所以，其IQR等於9.5. 在表格，論文中需要同時報告25%，75%分位數兩個數值，例：[11,20.5]。 21.4.2.3 方差和標準差 variance and standard deviation 先定義每一個觀察值和均值之間的差為 \\(D_i = X_i - \\bar{X}\\)。 根據定義，\\(\\frac{1}{n}\\sum_{i=1}^n D_i=0\\)。 樣本方差 Variance 被定義為 \\(\\frac{1}{n-1}\\sum_{i=1}^n D_i^2\\)。 樣本方差的平方根，被定義為標準差 standard deviation，\\(\\text{SD}=\\sqrt{\\frac{1}{n-1}\\sum_{i=1}^n D_i^2}\\) 更常見的表達式為： \\[ \\begin{aligned} \\text{Var} &amp;= \\frac{1}{n-1}\\sum_{i=1}^n (X_i-\\bar{X})^2 \\\\ &amp;= \\frac{1}{n-1}[(\\sum_{i=1}^nX_i^2)-n\\bar{X}^2] \\end{aligned} \\] 此處分母為 \\(n-1\\) 而不是 \\(n\\) 的原因，需要參考推斷部分的解釋 (Section 10.3)。 方差標準差受異常值影響較大。例如，下面的數據： \\[ 5, 9, 12, 14, 14, 15, 16, 19, 22\\;\\;\\; \\text{Var}=25.5\\\\ 5, 9, 12, 14, 14, 15, 16, 19, 58\\;\\; \\text{Var}=241.5 \\] 21.4.3 偏度 skewness 使用柱狀圖來描述數據時，如果柱狀圖左右基本對稱 (中位數和均值基本一致)，偏度為零，正態分佈數據都是左右對稱的。如果柱狀圖右側的尾巴較長，偏度為正；如果左側的尾巴較長，偏度為負。偏度計算公式為： \\[ \\frac{\\frac{1}{n}\\sum_{i=1}^n D_i^3}{(\\frac{1}{n}\\sum_{i=1}^n D_i^2)^{\\frac{3}{2}}} \\] 圖 21.7: Relationship between skew and measures of location 21.4.4 峯度 kurtosis 峯度是描述數據分佈的最後一個指標。峯度衡量的是一組數據分佈的尾部的厚度。一個正態分佈數據，大約 5% 的數據分佈在左右兩邊的尾部 (2.5% 低於 \\(\\mu-2\\sigma\\)，2.5% 高於 \\(\\mu +2\\sigma\\))。峯度測量的是一組數據尾部數據的分佈和正態分佈兩側尾部數據之間的差距。 峯度的計算公式爲： \\[ \\frac{\\frac{1}{n}\\sum_{i=1}^nD_i^4}{(\\frac{1}{n}\\sum_{i=1}^nD_i^2)^2} \\] 一個正態分佈數據，峯度值爲 3。當左右兩段的數值佔比低於正態分佈預期時，峯度值小於 3。反之，峯度大於 3。尾部較厚 (峯度較大) 的典型分佈之一是 \\(t\\) 分佈 (圖 21.8) 圖 21.8: t distributions with 5 and 10 degrees of freedom compared with a standard normal distribution "],["confidence-intervals.html", "第 22 章 信賴區間 confidence intervals 22.1 定義 22.2 利用總體參數的樣本分佈求信賴區間 22.3 情況1：已知方差的正態分佈數據均值的信賴區間 22.4 信賴區間的意義 22.5 情況2：未知方差，但是已知服從正態分佈數據均值的信賴區間 22.6 情況3：服從正態分佈的隨機變量方差的信賴區間 22.7 當樣本量足夠大時 22.8 情況4：求人羣百分比的信賴區間 22.9 率的信賴區間", " 第 22 章 信賴區間 confidence intervals 22.1 定義 信賴區間的定義，曾經在統計推斷中介紹過 (Section 10.1)。信賴區間 (CI)，提供了一種對參數估計精確度的度量。CI，也是一種統計量，有自己的樣本分佈，它總是成對成對地出現的。L，表示下限，U，表示上限。顯著性水平 (confidence level) 下的下限和上限之間的間距大小，是由信賴區間本身的樣本分佈決定的。 一般地，對於一個總體參數 \\(\\mu\\)，它的 \\(100(1-\\alpha)\\%\\text{CI}\\) 信賴區間的含義爲： \\[ \\begin{equation} \\text{Prob}\\{\\mu\\in (\\text{L}, \\text{U}) | \\mu\\} = (1-\\alpha) \\end{equation} \\tag{22.1} \\] 所以，一個總體參數 \\(\\mu\\)，的 \\(95\\%\\text{CI}\\) 信賴區間爲： \\[ \\begin{equation} \\text{Prob}\\{ \\mu \\in (\\text{L, U}) | \\mu\\} =0.95 \\end{equation} \\tag{22.2} \\] 用公式 (22.2) 來解釋就是，區間 \\(\\text{(L, U)}\\) 內包含了總體參數 \\(\\mu\\) 的概率爲 \\(95\\%\\)。本文以下部分從公式中省略 \\(|\\mu\\) 部分。但是必須要記住，概率論環境下的信賴區間 (或者其他統計學參數估計) 都是總體參數的條件概率。在概率論語境下，信賴區間一般是左右對稱的。所以 \\(100(1-\\alpha)\\%\\text{CI}\\) 的含義可以解讀爲： \\[ \\begin{equation} \\text{Prob} \\{ \\mu \\leqslant \\text{L} \\} = \\text{Prob} \\{ \\mu \\geqslant \\text{U} \\} = \\frac{\\alpha}{2} \\end{equation} \\tag{22.3} \\] 圖 22.1: General definition of a CI for a 95% CI 22.2 利用總體參數的樣本分佈求信賴區間 總體參數的樣本分佈是求其信賴區間的關鍵。假設 \\(\\hat\\mu\\) 是總體參數 \\(\\mu\\) 的估計量。且已知存在兩個單調遞增函數 \\(A(\\mu), B(\\mu)\\) 來描述該總體參數 \\(\\mu\\) ： \\[ \\begin{equation} \\text{Prob} \\{ \\hat\\mu \\leqslant A(\\mu) \\} = \\text{Prob} \\{ \\hat\\mu \\geqslant B(\\mu) \\} = \\frac{\\alpha}{2} \\end{equation} \\tag{22.4} \\] 所以， \\[ \\begin{equation} \\text{Prob} \\{ A^{-1} (\\hat\\mu) \\leqslant \\mu \\} = \\text{Prob} \\{ B^{-1}(\\hat\\mu) \\geqslant \\mu \\} = \\frac{\\alpha}{2} \\end{equation} \\tag{22.5} \\] 因此，\\(A^{-1}(\\hat\\mu), B^{-1}(\\hat\\mu)\\) 就是我們想要找的公式 (22.3) 參數的估計信賴區間的下限 \\(\\text{L}\\)，和上限 \\(\\text{U}\\)。所以，關鍵的任務就在於，每一次尋找計算參數樣本分佈的方程 \\(A, B\\) 。 22.3 情況1：已知方差的正態分佈數據均值的信賴區間 從已知正態分佈且方差爲 \\(\\sigma^2\\) 的人羣中抽取樣本量爲 \\(n\\) 的相互獨立觀察數據 \\(Y_i (i=1,2,\\cdots,n)\\)。該樣本均值的估計量 \\(\\hat\\mu=\\bar{Y}\\)，也服從方差已知的 \\((\\frac{\\sigma^2}{n})\\) 正態分佈： \\[ \\begin{equation} \\bar{Y}\\sim N(\\mu, \\frac{\\sigma^2}{n}) \\Leftrightarrow Z=\\frac{\\bar{Y}-\\mu}{\\sqrt{\\frac{\\sigma^2}{n}}} \\sim N(0,1) \\end{equation} \\tag{22.6} \\] 所以利用標準正態分佈，往公式 (22.3) 儘可能靠：\\(\\text{Prob}\\{ Z \\leqslant z_{\\alpha/2}\\} = \\text{Prob}\\{ Z \\geqslant z_{1-\\alpha/2}\\} = \\frac{\\alpha}{2}\\) 。 把式子 (22.6) 代入以後： \\[ \\begin{equation} \\text{Prob}\\{ \\bar{Y} \\leqslant \\mu+z_{\\alpha/2}\\frac{\\alpha}{\\sqrt{n}} \\} = \\text{Prob}\\{ \\bar{Y} \\geqslant \\mu+z_{1-\\alpha/2}\\frac{\\alpha}{\\sqrt{n}} \\} = \\frac{\\alpha}{2} \\end{equation} \\tag{22.7} \\] 至此，我們找到了描述總體均值的單調函數： \\[ \\begin{aligned} A(\\mu) &amp;= \\mu + z_{\\alpha/2}\\frac{\\sigma}{\\sqrt{n}} \\\\ B(\\mu) &amp;= \\mu + z_{1-\\alpha/2}\\frac{\\sigma}{\\sqrt{n}} \\end{aligned} \\] 由於標準正態分佈左右對稱，所以 \\(z_{\\alpha/2}=-z_{1-\\alpha/2}\\) ，因而，\\(A(\\mu) = \\mu - z_{1-\\alpha/2}\\frac{\\sigma}{n}\\)。 此時，求信賴區間上限和下限的方法應該已經一目瞭然： \\[ \\begin{equation} \\text{U} =A^{-1}(\\bar{Y})=\\bar{Y} + z_{1-\\alpha/2}\\frac{\\sigma}{\\sqrt{n}} \\\\ \\text{L} = B^{-1}(\\bar{Y})=\\bar{Y} - z_{1-\\alpha/2}\\frac{\\sigma}{\\sqrt{n}} \\end{equation} \\tag{22.8} \\] 我們也常將它簡寫成爲：\\(\\text{CI} = \\bar{Y} \\pm z_{1-\\alpha/2}\\frac{\\sigma}{\\sqrt{n}}\\)。 它的意義是： \\[ \\begin{equation} \\text{Prob} \\{ \\bar{Y} - z_{1-\\alpha/2}\\frac{\\sigma}{\\sqrt{n}} &lt; \\mu &lt; \\bar{Y} + z_{1-\\alpha/2}\\frac{\\sigma}{\\sqrt{n}} \\} = 1-\\alpha \\end{equation} \\tag{22.9} \\] 所以區間 \\((\\bar{Y} - z_{1-\\alpha/2}\\frac{\\sigma}{\\sqrt{n}}, \\bar{Y} + z_{1-\\alpha/2}\\frac{\\sigma}{\\sqrt{n}})\\) 包含了總體參數均值 \\((\\mu)\\) 的概率是 \\(1-\\alpha\\)。我們把這個區間叫做總體均值 \\(\\mu\\) 的 \\(100(1-\\alpha)\\%\\) 信賴區間。常說的 \\(95\\%\\) 信賴區間我們使用的 \\(z_{0.975} = 1.96\\)。其他置信水平的 \\(z\\) 值舉例如下： \\[ \\begin{array}{lr} z_{0.90} = 1.28 &amp; \\text{for } 80\\% \\text{ level} \\\\ z_{0.95} = 1.645 &amp; \\text{for } 90\\% \\text{ level} \\\\ z_{0.995} = 2.58 &amp; \\text{for } 99\\% \\text{ level} \\\\ z_{0.9995} = 3.29 &amp; \\text{for } 99.9\\% \\text{ level} \\\\ \\end{array} \\] 所以，根據上面羅列的不同置信水平下 \\(z\\) 值的大小，我們不難判斷 \\(\\text{CI} = \\bar{Y} - z_{1-\\alpha/2}\\frac{\\sigma}{\\sqrt{n}}\\) 範圍隨着標準差增大而變寬 (不精確)，隨着樣本量增加而變窄 (精確)。 這裏補充另一個容易混淆的概念，參數估計的信賴區間公式 \\(\\text{CI} = \\bar{Y} \\pm z_{1-\\alpha/2}\\frac{\\sigma}{\\sqrt{n}}\\) ，和參考值範圍 (reference range) 是不同的概念。後者的公式爲 \\(\\bar{Y}\\pm z_{1-\\alpha/2} \\sigma\\)。參考值範圍的意義是， \\(95\\%\\) 的樣本數據包含在這個區間內。信賴區間，給出的是這個樣本對總體均值的估計的精確度。 22.4 信賴區間的意義 當 \\(\\alpha = 0.05\\) 時，我們說\\((\\bar{Y} - z_{1-\\alpha/2}\\frac{\\sigma}{\\sqrt{n}}, \\bar{Y} + z_{1-\\alpha/2}\\frac{\\sigma}{\\sqrt{n}})\\) 包含了總體參數均值 \\((\\mu)\\) 的概率是 \\(95\\%\\)。但是要記住，千萬不能說：總體參數 \\(\\mu\\) 有 \\(95\\%\\) 的概率落在這個信賴區間內。因爲總體參數不是隨機變量，它不會隨我們的樣本變化而變化，它是恆定不變的。我們每一次實驗，每一次採樣，獲得的樣本數據，計算出一個新的信賴區間，這樣的區間都是在估計這個未知位置的總體參數。所以，從長遠來說，相同的實驗，重複20次，其中19次計算獲得的信賴區間，會包含真實的總體參數。 22.5 情況2：未知方差，但是已知服從正態分佈數據均值的信賴區間 多數情況下，總體的方差我們無從知曉。它也必須通過實驗數據來估計 \\(\\hat\\sigma^2\\)。那麼，下面的公式計算的統計量 \\(T\\) 服從自由度爲 \\(n-1\\) 的 \\(t\\) 分佈： \\[ T=\\frac{\\bar{Y}-\\mu}{\\sqrt{\\hat\\sigma^2/n}} \\sim t_{n-1} \\] 用跟前面類似的辦法，用統計量 \\(T\\) 取代 \\(Z\\)，我們可以求未知方差時正態分佈數據均值的信賴區間 (類比 (22.8))： \\[ \\begin{aligned} &amp;\\text{U} = \\bar{Y} + t_{n-1, 1-\\alpha/2}\\frac{\\sigma}{\\sqrt{n}} \\\\ &amp;\\text{L} = \\bar{Y} - z_{n-1, 1-\\alpha/2}\\frac{\\sigma}{\\sqrt{n}} \\\\ &amp;\\text{Or, equivalently :} \\\\ &amp;\\text{CI } = \\bar{Y} \\pm t_{n-1, 1-\\alpha/2}\\frac{\\sigma}{\\sqrt{n}} \\end{aligned} \\tag{22.10} \\] 22.6 情況3：服從正態分佈的隨機變量方差的信賴區間 用 \\(Y_i (i=1,2,\\cdots,n)\\) 標記樣本量爲 \\(n\\) 的獨立觀察數據。已知該數據來自的人羣服從正態分佈，但是方差未知。那麼從統計推斷第二章 (Section 10.4) 推導過的內容，我們知道： \\[ \\begin{aligned} &amp;\\text{Sample variance is defined as: } \\\\ &amp;\\hat\\sigma^2 = \\frac{\\sum_{i=1}^n(Y_i-\\bar{Y})^2}{n-1} \\\\ &amp;\\text{and } \\\\ &amp;\\frac{(n-1)\\hat\\sigma^2}{\\sigma^2} \\sim \\chi^2_{n-1} \\\\ &amp;\\text{It follows that we want } \\\\ &amp;\\text{Prob}\\{ \\hat\\sigma^2 \\leqslant \\frac{\\sigma^2}{n-1}\\chi^2_{n-1, \\alpha/2} \\} = \\text{Prob}\\{ \\hat\\sigma^2 \\geqslant \\frac{\\sigma^2}{n-1}\\chi^2_{n-1, 1-\\alpha/2} \\} = \\frac{\\alpha}{2} \\\\ &amp; \\Rightarrow \\text{U} = \\frac{(n-1)\\hat\\sigma^2}{\\chi^2_{n-1, \\alpha/2}} \\; \\text{L} = \\frac{(n-1)\\hat\\sigma^2}{\\chi^2_{n-1, 1-\\alpha/2}} \\\\ \\end{aligned} \\] 22.7 當樣本量足夠大時 根據中心極限定理，當樣本量足夠大時，樣本均數服從正態分佈，即使樣本數據並不服從正態分佈。這就意味着，樣本足夠大，章節 22.4 中用到的均值信賴區間公式，也可適用於樣本數據不服從正態分佈的情況下。我們常使用這個定理，和章節 22.4 中的公式去計算許多總體均數以外的參數的 \\(95\\%\\) 信賴區間，通過正態分佈近似法計算獲得的信賴區間，被叫做近似信賴區間。 22.8 情況4：求人羣百分比的信賴區間 22.8.1 一般原則 用 \\(R\\) 表示 \\(n\\) 次實驗中成功的次數。如果滿足實驗相互獨立的條件，那麼 \\(R\\sim \\text{Binomial}(n,\\pi)\\)。那麼樣本比例 \\(P=\\frac{R}{n}\\) 是人羣比例 \\(\\pi\\) 的無偏估計。如果想要求 \\(\\pi\\) 的 \\(95\\%\\) 信賴區間 \\((\\pi_L, \\pi_U)\\)，我們可能自然而讓想到用成功次數 \\(R\\) 來計算。然而，由於 \\(R\\) 本身是離散型變量 (只能取大於等於零的整數)，恰好加起來概率等於 \\(95\\%\\) 的 \\(\\pi\\) 的區間是幾乎不可能計算的。我們處理比例的信賴區間的問題時，要計算的兩個下限值和上限值要滿足的條件： 尋找最小的 \\(\\pi_L\\) 滿足 \\(\\text{Prob}(\\pi_L&gt;\\pi) \\leqslant 0.025\\) 尋找最大的 \\(\\pi_U\\) 滿足 \\(\\text{Prob}(\\pi_U&lt;\\pi) \\leqslant 0.025\\) 有兩種方案可供選擇： 利用樣本分佈服從二項分佈 \\(R \\sim \\text{Binomial}(n, \\pi)\\) 的原則來“精確”計算； 正態近似法計算。 第一種方法被叫做精確法，並不是因爲它能夠精確計算恰好概率和等於 \\(95\\%\\) 的所有的 \\(\\pi\\)，而是因爲它利用的是樣本分佈的二項分佈屬性進行計算。然而隨着樣本量的增加，兩種方法計算的信賴區間結果越來越接近概率和 \\(95\\%\\)。 22.8.2 二項分佈的“精確法”計算信賴區間 例：樣本量 \\(n=20\\), 成功次數 \\(r=5\\) 時，你可以用查水錶的辦法，也可以利用 R 進行精確計算 binom.test(5, 20, conf.level = 0.95) ## ## Exact binomial test ## ## data: 5 and 20 ## number of successes = 5, number of trials = 20, p-value = 0.04 ## alternative hypothesis: true probability of success is not equal to 0.5 ## 95 percent confidence interval: ## 0.08657 0.49105 ## sample estimates: ## probability of success ## 0.25 下面兩個圖分別展示了當 \\(\\pi\\) 等於精確法計算的下限和上限時的概率分佈。可以看出 \\(\\pi=0.0866\\) 時，\\(\\text{Prob}\\{R \\geqslant 5\\} \\leqslant 0.025\\)。同時，當 \\(\\pi = 0.4910\\) 時， \\(\\text{Prob}\\{ R\\leqslant 5 \\} \\leqslant 0.025\\) 圖 22.2: Sampling distribution of number of successes out of 20 (R) conditional on the probability of success being 0.0866 圖 22.3: Sampling distribution of number of successes out of 20 (R) conditional on the probability of success being 0.4910 22.8.3 二項分佈的近似法計算信賴區間 當 \\(n\\) 較大時，百分比 \\(P\\) 分佈 可以用正態分佈來近似： \\[ P\\sim N(\\pi, \\sigma^2) \\text{ where } \\sigma^2 = \\frac{\\pi(1-\\pi)}{n} \\] 總體均值用樣本百分比 \\(p\\) 替代，方差用樣本方差 \\(\\hat\\sigma^2 = \\frac{p(1-p)}{n}\\)，因此，當樣本量較大時二項分佈的近似正態分佈特徵可以描述爲： \\[ P \\sim N(p, \\hat\\sigma^2) \\text{ where } \\hat\\sigma^2 = \\frac{p(1-p)}{n} \\] 接下去對與百分比的信賴區間的計算就可以套用章節 22.4 中用到的均值信賴區間公式： \\[ \\begin{aligned} &amp; P\\pm z_{1-\\alpha/2}\\sqrt{\\frac{P(1-P)}{n}} \\\\ &amp; \\text{ where } z_{1-\\alpha/2} = 1.96 \\text{ for } 95\\% \\text{CI} \\end{aligned} \\tag{22.11} \\] 正態近似法的好處是簡單，但是代價就是樣本量小時不準確。 例如： \\(n=10, r=4, p=0.4\\) 時 精確法 \\(95\\%\\) 信賴區間：0.1216, 0.7376 正態近似法 \\(95\\%\\) 信賴區間：\\(0.4\\pm1.96\\sqrt{\\frac{0.4\\times0.6}{10}} =\\) 0.0964, 0.7036 \\(n=50, r=20, p=0.4\\) 時 精確法 \\(95\\%\\) 信賴區間：0.2641, 0.5482 正態近似法 \\(95\\%\\) 信賴區間： \\(0.4\\pm1.96\\sqrt{\\frac{0.4\\times0.6}{50}} =\\) 0.2642, 0.5358 \\(n=1000, r=400, p=0.4\\) 時 精確法 \\(95\\%\\) 信賴區間：0.3695, 0.4311 正態近似法 \\(95\\%\\) 信賴區間： \\(0.4\\pm1.96\\sqrt{\\frac{0.4\\times0.6}{1000}} =\\) 0.3696, 0.4304 可以明顯看到隨着樣本量增加，信賴區間本身的範圍在不斷變小 (精確)。且正態近似法計算的信賴區間也越來越接近“精確法”。“Statistical Methods in Medical Research” (Armitage, Berry, and Matthews 2008) 書中建議，滿足 \\(n\\pi \\geqslant 10 \\text{ or } n(1-\\pi) \\geqslant 10\\) 時，正態近似法可以給出較爲滿意的百分比的信賴區間估計。 22.9 率的信賴區間 22.9.1 利用泊松分佈精確計算 假設在一段時間 \\(t\\) 內某事件發生的次數記爲 \\(Y\\)。如果每個相同事件的發生相互獨立那麼 \\(Y \\sim \\text{Poisson}(\\mu t)\\)。樣本率 \\(R=\\frac{Y}{t}\\)，是人羣事件發生概率 \\(\\mu\\) 的無偏估計。 \\[ \\text{The probability that } Y=y \\text{ is given by } \\frac{(\\mu t)^y e^{-\\mu t}}{y!} \\text{ for } y= 0,1,2,\\cdots,\\infty \\] 與前一節百分比的精確計算信賴區間相類似 (Section 22.8.2)，我們可以使用泊松分佈的性質進行計算： 尋找最小的 \\(\\mu_L\\) 滿足 \\(\\text{Prob}(\\mu_L&gt;\\mu) \\leqslant 0.025\\) 尋找最大的 \\(\\mu_U\\) 滿足 \\(\\text{Prob}(\\mu_U&lt;\\mu) \\leqslant 0.025\\) 例：某核電站附近的村莊從1968年起的10年內，發生了 6 人死於白血病。平均死亡率爲 0.6/年。計算死亡率的95%信賴區間。 可以利用 R 的精確計算發病率的代碼 poission.test 來獲得精確法率的信賴區間： poisson.test(6, 10) ## ## Exact Poisson test ## ## data: 6 time base: 10 ## number of events = 6, time base = 10, p-value = 0.3 ## alternative hypothesis: true event rate is not equal to 1 ## 95 percent confidence interval: ## 0.2202 1.3059 ## sample estimates: ## event rate ## 0.6 22.9.2 利用正態近似法計算 當樣本量較大時，發生事件次數 \\(Y\\) 近似服從正態分佈，其均值和方差均等於 \\(\\mu t\\) (參考 Section 6 推導)： \\[ Y \\sim N(\\mu t, \\sigma^2) \\text{ where } \\sigma^2=\\mu t \\] 所以事件發生率 \\(\\mu\\) 的信賴區間公式爲 \\(\\frac{Y\\pm 1.96\\sqrt{Y}}{t}\\)。 References "],["hypo-tests.html", "第 23 章 假設檢驗 23.1 拋硬幣的例子 23.2 二項分佈的精確假設檢驗 23.3 當樣本量較大 23.4 二項分佈的正態近似法假設檢驗 23.5 情況1：對均值進行假設檢驗 (方差已知) 23.6 情況2：對均值進行假設檢驗 (方差未知) the one-sample t-test 23.7 情況3：對配對實驗數據的均值差進行假設檢驗 the paired t-test", " 第 23 章 假設檢驗 23.1 拋硬幣的例子 對數據進行假設檢驗是統計分析最重要的部分。一般進行實驗或者調查時我們會先設定一個零假設。假如實驗或者調查中獲得的一系列數據可以認爲是相互獨立且隨機地從人羣中抽取的樣本，那麼根據零假設爲真的條件，樣本數據提供的參數估計和零假設條件下的參數應該是差距不大 (一致) 的。因爲概率論環境下，我們用樣本數據來作假設檢驗，如果樣本提供的數值比起零假設條件下的參數大很多或者小很多，我們就有理由，有證據拒絕零假設。 下面用投硬幣作爲例子說明。硬幣如果是公平的，那麼拋硬幣後正反面出現的概率應該一樣，都是 \\(50\\%\\) (零假設：\\(p=0.5\\))。假如有一枚硬幣，拋了 \\(10\\) 次只有一次是反面朝上的，我們可能就會懷疑，這枚資本主義硬幣一定是被做了手腳 (變得不再公平了)，這就是通過實驗質疑和挑戰零假設的思想。如此粗糙的想法卻是統計學假設檢驗的理論起源。只是在統計學裏面，需要制定一些規則來規定，實驗數據跟零假設 (設想) 差異達到多大時 (檢驗)，認爲證據足夠達到相信零假設“非真” (挑戰權威)。 檢驗的過程，就是計算我們朝思暮想的 \\(p\\) 值。\\(p\\) 值的定義是，當零假設爲真時，我們觀察到的實驗結果以及比這個結果更加極端 (雙側) 的情況在所有可能的情況中出現的概率。繼續使用拋硬幣的例子來說的話，跟 “\\(10\\) 次拋硬幣出現一次反面朝上” 一樣極端或者更加極端的事件有： “一次反面朝上”， “零次反面朝上”， “九次反面朝上 (或者說一次正面朝上)”， “十次反面朝上 (或者說零次正面朝上)”。 相反地，沒有觀察事件 “\\(10\\) 次拋硬幣出現一次反面朝上” 那麼極端的事件就包括了： “兩次反面朝上”， “三次反面朝上”， “四次反面朝上”， “五次反面朝上”， “六次反面朝上”， “七次反面朝上”， “八次反面朝上”。 檢驗的過程我們會定義一個被檢驗的統計量，一般就是我們感興趣的參數的估計 (estimator of a parameter of interest)。在上面拋硬幣的例子中，這個檢驗統計量就是 “硬幣反面朝上的次數”。觀察到的反面朝上次數除以拋硬幣次數 (\\(10\\) 次) 就是獲得硬幣反面朝上的概率 (參數) 的估計。用 \\(R\\) 表示十次拋硬幣中觀察到反面朝上的次數，那麼此時 \\(R\\) 就是一個服從二項分佈的隨機變量，其服從的二項分佈成功 (反面朝上事件發生) 的概率 (參數) 是\\(\\pi\\)。所以某一次實驗中 (拋十次硬幣算一次實驗)，\\(R=r\\)，那麼這次試驗的參數估計的 \\(p\\) 值被定義爲： \\[ \\begin{equation} \\text{Prob}\\{ R \\text{ as or more extreme than } r | \\pi=0.5 \\} \\end{equation} \\tag{23.1} \\] 零假設：反面朝上出現的概率是 \\(\\pi=0.5\\)；替代假設： \\(\\pi\\neq 0.5\\)。當零假設爲真時，\\(R\\sim \\text{Bin}(10, 0.5)\\)，它的零假設分佈如下圖 23.1： 圖 23.1: Binomial distribution n=10, π = 0.5 本節拋硬幣的例子我們觀察到十次拋硬幣只有一次反面朝上，\\(r=1\\)。其發生的概率等於上面列舉的四種與之同等極端或者更加極端的情況發生概率之和： \\[ \\begin{aligned} &amp;\\text{Prob} \\{R=0|\\pi=0.5\\} + \\text{Prob} \\{R=1|\\pi=0.5\\} + \\text{Prob} \\{R=9|\\pi=0.5\\} + \\text{Prob} \\{R=10|\\pi=0.5\\} \\\\ &amp; = (\\binom{10}{0} + \\binom{10}{1} + \\binom{10}{9} + \\binom{10}{10})\\times(0.5)^{10} = 0.021 \\end{aligned} \\] 23.1.1 單側和雙側檢驗 在上面的例子中其實我們已經用到了雙側檢驗的概念。例如，我們把 “九次反面朝上” 事件發生的概率當作和 “一次反面朝上” 事件發生的概率具有同等 “極端”概率事件，但是其實在圖 23.1 中也能看出兩種事件發生的方向是在概率分佈的左右兩側，這就是典型的雙側檢驗思想。一個“單側”檢驗則不考慮另一個方向發生的極端事件。 還是用本節的例子，如果要計算單側檢驗 \\(p\\) 值： \\[ \\begin{aligned} &amp;\\text{Prob}\\{R\\leqslant r| \\pi=0.5\\}\\\\ &amp;\\text{In the example } r=1 \\\\ &amp;\\Rightarrow \\text{Prob}\\{R=0 | \\pi = 0.5\\} + \\text{Prob}\\{ R=1 | \\pi = 0.5 \\} = 0.011 \\end{aligned} \\] 此時零假設爲 \\(\\pi=0.5\\)，替代假設爲 \\(\\pi &lt; 0.5\\)。 大多數時候，單側檢驗的 \\(p\\) 值十分接近雙側檢驗 \\(p\\) 值的一半。但是實施單側假設檢驗的前提是，我們有絕對的把握事件不會發生另一個方向上，但是這種情況少之又少，所以基本上你能看到的絕大多數假設檢驗計算的 \\(p\\) 值都是雙側檢驗 \\(p\\) 值。 23.1.2 \\(p\\) 值的意義 假設檢驗被認爲是作決策的一種手段。你會看到一些人使用 \\(0.05\\) 作閾值來作爲拒絕 (\\(&lt;0.05\\)) 或接受 (\\(&gt;0.05\\)) 零假設的依據。許多醫學實驗，醫學研究的結果確實是用來作決策的依據。例如某個臨牀試驗用隨機雙盲對照實驗法比較新藥物和已有藥物對某種疾病的治療效果差異，通過實驗結果來決定是否向市場和患者推廣新的治療藥物，此時 \\(p\\) 值的大小就是作決斷的重大依據。然而還有另外的很多實驗/研究並非爲了作什麼直接的決策，可能只是爲了更多的瞭解疾病發生的原因和機制。例如可能乳腺癌多發在女性少發在男性人羣，這顯然是十分顯著的差異，但是這種結果不能讓我們決策說要不要改變一個人的性別，而只是提供了疾病發生發展過程的機理上的證據。因此，許多研究者主張把 \\(p\\) 值大小當作是反對零假設證據的強弱指標。但是此處要指出的是，並非所有統計學家都認同 \\(p\\) 值大小真的可以度量證據的強弱水平。 所以，建議在寫論文，作報告時，儘量避免說：“本次實驗研究結果具有顯著的統計學意義，there was evidence that the result was statistically significant”。建議使用的語言類似這樣：“在顯著性水平爲 5% 時，本研究結果達到了統計學意義，statistically significant at the 5% level”；或者 “在顯著性水平爲 5% 時，我們的研究提供了足夠的證據證明零假設是不正確的，there was evidence that at the 5% level, that the hypothesis being tested was incorrect”。 如果一個實驗結果 \\(p\\) 值大於 0.05，可以被解讀爲：實驗結果不能提供足夠的證據證明零假設是錯誤的，there was no (or insufficient) evidence against the null hypothesis。另外還有一些人會使用一些詞語來描述 \\(p\\) 值大小：如果 \\(p=0.0001\\)，可能會被解讀爲實驗提供了“強有力的證據”，反對零假設；如果 \\(p=0.06; p=0.04\\)，會被人解讀爲是具有“臨界統計學意義，borderline statistically significant”，或者試驗結果提供了“一些證據，some evidence” 反對零假設。 23.1.3 \\(p\\) 值和信賴區間的關係 總體參數 \\(\\mu\\) 如果真的被我們計算的估計值的 \\(95\\%\\) 信賴區間所包含，那麼 \\(p &gt; 0.05\\)。如果參數 \\(\\mu\\) 不被計算的 \\(95\\%\\) 信賴區間所包含，那麼 \\(p &lt; 0.05\\)。 23.2 二項分佈的精確假設檢驗 若 \\(n\\) 次實驗中成功次數爲 \\(R\\)，那麼樣本百分比 (估計，estimator) \\(P=\\frac{R}{n}\\) 是它的人羣比例 \\(\\pi\\) (參數，parameter) 的無偏估計。欲檢驗的零假設 \\(\\pi=\\pi_0\\)，替代假設 \\(\\pi\\neq\\pi_0\\)，且某一次觀察結果爲 \\(R=r\\)，我們要計算的 \\(p\\) 值就是在零假設條件下，所有情況中 \\(R=r\\) 或者與之同等極端甚至更加極端的事件所佔的比例。 如果 \\(r&lt;n\\pi_0\\)，單側 \\(p\\) 值等於 \\[ \\begin{aligned} p &amp; = \\text{Prob}\\{ r\\text{ or fewer successes out of n | \\pi=\\pi_0} \\} \\\\ &amp; = P_0 + P_1 + P_2 + \\cdots + P_r \\\\ \\text{Where } &amp; P_x = \\binom{n}{x} \\pi_0^x (1-\\pi_0)^{n-x} \\end{aligned} \\] 如果 \\(r&gt;n\\pi_0\\)，單側 \\(p\\) 值等於 \\[ \\begin{aligned} p &amp; = \\text{Prob}\\{ r\\text{ or more successes out of n | \\pi=\\pi_0} \\} \\\\ &amp; = P_r + P_{r+1} + P_{r+2} + \\cdots + P_{n} \\\\ \\text{Where } &amp; P_x = \\binom{n}{x} \\pi_0^x (1-\\pi_0)^{n-x} \\end{aligned} \\] 一般情況下兩個單側 \\(p\\) 值很接近，所以雙側 \\(p\\) 值就可以計算其中一個然後乘以 \\(2\\)。你也可以計算兩側的單側 \\(p\\) 值然後相加。 23.3 當樣本量較大 如果樣本量 \\(n\\) 比較大，那麼計算上面的精確法是十分繁瑣的 (計算器也會累。。。)。可以考慮利用中心極限定理用正態近似法進行假設檢驗。此時需要做的就是把近似後的正態分佈標準化，然後和標準正態分佈做比較獲得 \\(p\\) 值即可： \\[ \\begin{equation} Z=\\frac{R-E(R)}{\\sqrt{\\text{Var}(R)}} = \\frac{R-E(R)}{\\text{SE}(R)} \\end{equation} \\tag{23.2} \\] 在目前爲止人類所知道的範圍內，上面公式的 \\(Z\\) 值隨着實驗樣本量 \\(n\\) 的增加而無限接近標準正態分佈 \\(N(0,1)\\)。 23.4 二項分佈的正態近似法假設檢驗 二項分佈的特徵值： \\[ E(R) = n\\pi_0; \\text{ and Var}(R) = n\\pi_0(1-\\pi_0) \\] 套用公式 (23.2)，計算 \\(Z\\) 值如下： \\[ \\begin{aligned} Z &amp; = \\frac{R-E(R)}{\\sqrt{\\text{Var}(R)}} \\\\ &amp; = \\frac{R-n\\pi_0}{\\sqrt{n\\pi_0(1-\\pi_0)}} \\\\ &amp; = \\frac{P-\\pi_0}{\\sqrt{\\frac{\\pi_0(1-\\pi_0)}{n}}} \\\\ \\text{Where } &amp; P=\\frac{R}{n} \\end{aligned} \\] 利用實驗數據的 \\(p=r/n\\)，以及零假設時的 \\(\\pi_0\\)，就可以計算上面的觀察 \\(Z\\) 值，之後查閱標準正態分佈的概率表格就可以獲得單側 \\(p\\) 值，別忘了乘以 \\(2\\)。 23.4.1 連續性校正 continuity correction 在使用正態分佈近似法進行二項分佈數據的假設檢驗時，我們其實是在使用一個連續型分佈近似一個離散型分佈，誤差通常會比較大。我們會使用矯正後的正態近似法計算 \\(Z\\) 值： \\[ Z=\\frac{|R-n\\pi_0|-\\frac{1}{2}}{\\sqrt{n\\pi_0(1-\\pi_0)}} \\text{ or } Z=\\frac{|P-\\pi_0|-\\frac{1}{2n}}{\\sqrt{\\frac{\\pi_0(1-\\pi_0)}{n}}} \\] “Statistical Methods in Medical Research” (Armitage, Berry, and Matthews 2008) 書中建議，滿足 \\(n\\pi \\geqslant 10 \\text{ or } n(1-\\pi) \\geqslant 10\\) 時近似法計算的 \\(p\\) 值可以給出較爲滿意的結果。另外，當 \\(n&gt;100\\) 則建議不再進行連續性校正，即把校正部分的 \\(-\\frac{1}{2}\\) 或者 \\(-\\frac{1}{2n}\\) 去掉。 23.5 情況1：對均值進行假設檢驗 (方差已知) 假設從已知方差 \\((\\sigma^2)\\) 的人羣中隨機抽取樣本進行血糖值測量 \\((Y_n)\\)，該樣本測量的人羣的平均血糖值爲 \\(\\mu=\\bar{Y}\\)，假設我們要比較該人羣的血糖值和某個理想血糖值 \\(\\mu_0\\)，進行假設檢驗： \\[\\text{H}_0: \\mu=\\mu_0 \\text{ v.s. H}_1: \\mu\\neq\\mu_0\\] 根據中心極限定理，當 \\(n\\) 足夠大，樣本均值 \\(\\bar{Y}\\) 的分佈接近正態分佈，且均值 \\(\\mu\\)，方差 \\(\\frac{\\sigma^2}{n}\\)。所以可以計算 \\(Z\\) 值： \\[ Z = \\frac{\\bar{Y}-E(\\bar{Y})}{\\sqrt{\\text{Var}\\bar{Y}}} = \\frac{\\bar{Y}-\\mu_0}{\\sqrt{\\sigma^2/n}} \\] 進而計算其 \\(p\\) 值： \\[ \\begin{aligned} p &amp;= \\text{Prob}(\\bar{Y}\\leqslant\\bar{y}|\\mu=\\mu_0) \\\\ &amp;= \\text{Prob}(Z&lt;\\frac{\\bar{y}-\\mu_0}{\\sqrt{\\sigma^2/n}}) \\\\ &amp;= \\Phi(\\frac{\\bar{y}-\\mu_0}{\\sqrt{\\sigma^2/n}}) \\\\ \\text{Where } &amp; \\Phi \\text{ is the distribution function for a } N(0,1) \\text{distribution} \\end{aligned} \\] 所以計算了上面的單側 \\(p\\) 值以後別忘了乘以 \\(2\\) 以獲得雙側 \\(p\\) 值： \\[ \\text{Two-sided } p \\text{ value } = 2\\times[1-\\Phi(\\frac{\\bar{y}-\\mu_0}{\\sqrt{\\sigma^2/n}})] \\] 23.6 情況2：對均值進行假設檢驗 (方差未知) the one-sample t-test 如果方差未知，我們仍要比較一個樣本均值和一個數值的話，零假設和替代假設依然不變： \\[\\text{H}_0: \\mu=\\mu_0 \\text{ v.s. H}_1: \\mu\\neq\\mu_0\\] 但是此時計算的統計量的分母，總體方差的地方使用了樣本方差 \\(\\frac{\\hat\\sigma^2}{n}\\) 替代時，該統計量不再服從標準正態分佈，而服從自由度爲 \\(n-1\\) 的 \\(t\\) 分佈。\\(t\\) 分佈看上去和標準正態分佈很像，但是其分佈的雙側尾部“較厚”，峯度大於 3： \\[ T = \\frac{\\bar{Y}-\\mu_0}{\\sqrt{\\hat\\sigma^2/n}} \\sim t_{n-1} \\] 圖 23.2: Student t distributions with 1, 4 and infinity degrees of freedom compared with a standard normal distribution 23.7 情況3：對配對實驗數據的均值差進行假設檢驗 the paired t-test 配對 t 檢驗可以用於實驗前後數據的比較，或者是某兩個對象兩兩配對時的均值比較。這樣的實驗數據我們就可以去配對數據的差值，然後利用單樣本 t 檢驗比較這個配對數據的差是否等於零。 References "],["association.html", "第 24 章 相關 association 24.1 背景介紹 24.2 兩個連續型變量的相關分析 24.3 二元變量之間的相關性 association between pairs of binary variables 24.4 多分類 (無排序) 的情況 \\(M\\times N\\) 表格", " 第 24 章 相關 association 24.1 背景介紹 兩個變量如果相關 (associated)，那麼它們二者中的一個的分佈是依賴另一個的分佈的 the distribution of one is dependent on the value taken by the other and vice-versa。統計學中如何描述兩個變量之間的相關關係取決於兩個變量的性質 (連續型還是分類型，continuous or categorical variables)。本章討論不同情形下兩個變量相關關係及統計學上的假設檢驗方法。 兩個變量之間的關係除了可以用相關來描述，還可以利用迴歸的手段來分析。但是迴歸分析，和本章討論的相關性分析的本質區別在於，相關分析着重討論兩個變量的聯合分佈 (joint distribution)，而迴歸分析則是要探索一個變量在另一個變量的條件下的條件分佈 (conditional distribution)。因此，相關分析從某種意義上來說是對稱的 (X 與 Y 的相關性等同於 Y 與 X 的相關性)，迴歸分析則不然 (Y 對 X 的迴歸不等同與 X 對 Y 的迴歸)。 另外一個要點是，相關分析絕不討論因果關係。 24.2 兩個連續型變量的相關分析 24.2.1 相關係數的定義 在概率論 (Section 8.2) 中也已經介紹過相關係數 \\(\\rho\\) 的定義： \\[ \\begin{equation} \\rho=\\frac{E[(X-E(X))(Y-E(Y))]}{\\sqrt{E(X-E(X))^2E(Y-E(Y))^2}} = \\frac{\\text{Cov}(X,Y)}{\\sqrt{V(X)V(Y)}} \\end{equation} \\tag{24.1} \\] 用 \\(\\textbf{x}=\\{x_1, x_2, \\cdots, x_n \\}\\) 和 \\(\\textbf{y}=\\{ y_1, y_2, \\cdots, y_n \\}\\) 表示對 \\(n\\) 個隨機研究對象測量的兩個變量。那麼這兩個變量的相關關係 \\(r\\) 的計算式爲： \\[ \\begin{equation} r = \\frac{\\sum(x_i-\\bar{x})(y_i-\\bar{y})}{\\sqrt{\\sum(x_i-\\bar{x})^2\\sum(y_i-\\bar{y})^2}} = \\frac{S_{xy}}{S_xS_y} \\end{equation} \\tag{24.2} \\] \\(S_{xy}\\) 代表樣本數據的協方差 (Section 8.1)，\\(S_x\\) 是變量 \\(X\\) 的樣本標準差 (有時會記爲 \\(\\hat\\rho_x\\))，\\(S_y\\) 是變量 \\(Y\\) 的樣本標準差。\\(r\\) 被命名爲相關係數 \\(\\rho\\) 的 Pearson 积矩估計 (Pearson Product-Moment estimator)。 24.2.2 相關係數的性質 圖 24.1: Examples of Peason correlation coefficients 上圖 24.1 描述了9種不同設定時的相關係數 \\(r\\)。\\(r\\) 的主要性質可以總結爲： \\(r\\) 的取值範圍是 \\(-1\\sim1\\text{, i.e. } -1\\leqslant r \\leqslant 1\\)； \\(r&gt;0\\) 時，二者呈正相關， \\(r&lt;0\\) 時，二者呈負相關； 當且僅當兩個變量的散點圖呈現圖 24.1 中 A，B 顯示的直線時才有 \\(|r|=1\\)，然而直線的坡度卻與相關係數無關； 如果兩個變量之間沒有直線的 linear相關關係，那麼相關係數 \\(r\\) 會接近於零； 求 X 和 Y 的相關係數，等同於求 Y 和 X 的相關係數 (與迴歸不同)； 相關係數 \\(r\\) 沒有單位，並且位置不會發生改變 (location invariant)，如果兩個變量乘以或者除以，加上或者減去任意常數，不會改變相關係數的大小 (與迴歸不同)。 圖 24.1 中 F 顯示的相關關係可以看出，\\(r\\) 受異常值的影響很大，如果將右上角的異常值從數據中去除掉的話，該圖中的相關係數會變小到幾乎爲零。G 和 H 則表示非線性相關時，Pearson 相關係數不適用。I 則告訴我們如果不熟悉數據本身的分佈的話，如果只看總體的相關是多麼的危險 (總體爲負相關，但是在不同的分層數據中卻是呈正相關的)。 24.2.3 對相關係數是否爲零進行假設檢驗 在線性迴歸 (Section 28.6) 中會討論和證明 Pearson 相關係數和統計量 \\(t\\) 之間的關係，該公式也被用於檢驗相關係數是否爲零： \\[ \\begin{equation} T=r\\sqrt{\\frac{n-2}{1-r^2}} \\sim t_{n-2} \\end{equation} \\tag{24.3} \\] 24.2.4 相關係數的 \\(95\\%\\) 信賴區間 如果要計算相關係數 \\(r\\) 的信賴區間，我們需要知道兩個變量 \\(X,Y\\) 之間的聯合分佈 (joint distribution)。\\(X,Y\\) 如果服從二元正態分佈，可以利用 Fisher’s Z-transformation 計算相關係數的信賴區間。圖 24.2 完美展示了兩個服從二元正態分佈的三維立體概率密度分布圖。可以用鼠標拖動下面那個三維圖，就能理解什麼叫做二元正態分佈。就是無論是在 X 軸看 Y，還是在 Y 軸看 X，每一個切面都呈現正態分佈。因此二元正態分佈的概率密度方程繪製出來是成爲一個完美的鍾罩形狀。很美吧！ \\[ X|Y \\sim N(\\mu_x, \\sigma_x^2) \\text{ AND } Y|X \\sim N(\\mu_y, \\sigma_y^2) \\] 圖 24.2: Bivariate normal distribution of X and Y 如果 \\(\\rho\\neq0\\)，相關係數的樣本分佈雖然不是正態分佈，但是只要 \\(X,Y\\) 服從上面的圖形顯示的二元正態分佈，就可以利用Fisher’s Z-transformation 公式計算統計量 \\(Z_r\\)： \\[ \\begin{equation} Z_r = \\frac{1}{2}\\text{log}_e(\\frac{1+r}{1-r}) = \\text{tanh}^{-1} (r) \\end{equation} \\tag{24.4} \\] \\(Z_r\\)，近似服從正態分佈： \\[ \\begin{equation} Z_r \\sim N(\\frac{1}{2}\\text{log}_e(\\frac{1+\\rho}{1-\\rho}), \\frac{1}{n-3}) \\end{equation} \\tag{24.5} \\] 利用這個性質，我們可以計算 \\(Z_\\rho\\) 的信賴區間，然後再通過逆運算轉換之後獲得 \\(\\rho\\) 的信賴區間： \\[ \\begin{equation} \\rho = \\frac{exp(2Z_\\rho)-1}{exp(2Z_\\rho)+1} = \\text{tanh}(Z_\\rho) \\end{equation} \\tag{24.6} \\] 24.2.5 比較兩個相關係數是否相等 假設需要比較兩個相關係數，可以繼續使用 Fisher’s Z-transformation 計算相關係數之差的統計量，它服從標準正態分佈 \\(N(0,1)\\)。很少會碰到比較兩個相關係數，但是偶爾碰到的實例有這樣的：要比較男性和女性之間，食鹽攝入量和血壓的相關關係是否相同。 \\[ \\text{Test statistics} = \\frac{Z_{r_2}-Z_{r_1}}{\\sqrt{\\frac{1}{n_2-3}+\\frac{1}{n_1-3}}} \\sim N(0,1) \\] 在實際應用中，其實相關係數的比較意義並不是很大。更常見的是使用迴歸分析的手段比較兩個人羣 (男性女性) 中血壓和食鹽攝入量的迴歸係數 (即，性別對實驗和血壓的關係是否產生了交互作用，interaction)。 24.2.6 相關係數那些事兒 醫學文獻中你會碰見非常多的人使用相關係數，但是相信我，許多人都用錯了。其實比起相關係數，能提供更多信息的手段是進行迴歸分析。下面羅列一些常見的錯誤使用相關係數的例子： 圖 24.3: Effect of data restrictions on the Pearson correlation coefficient 圖 24.3 展示了同樣的一組數據，如果只是斷章取義，其相關係數可能發生極大的變化。所以，想用相關係數作合理的統計推斷，必須保證數據的完整性，否則就有玩弄數據之嫌。然而，如果你用的是線性迴歸的方法，受數據限制 (data restriction) 的影響就幾乎可以忽略不計。 圖 24.4: Effect of regression to the mean 均數迴歸現象，regression to the mean phenomenon，是指在進行重複測量時，前次測量中獲得的極高或極低分數會在後期測量時傾向於向平均值偏移，即隨着時間的推移，高分者成績下降，低分者成績升高的一種自然迴歸效應。所以在一些臨牀實驗中宣稱自己發現的測量值的變化和基線值之間的相關關係 (correlation between initial measurement and a change in that measurement)，其實是一種自然現象而不是真的存在什麼相關關係，如圖 24.4。要避免這樣的低級失誤，可以計算測量值的變化 (\\(X_2-X_1\\)) 和前後兩次測量值的均值 (\\((X_2+X_1)/2\\)) 之間的相關關係。 有些科學家聲稱自己用迴歸係數來衡量兩個變量之間的一致性 (assess agreement between variables)，這當然是完全錯誤的。兩個變量之間高度相關，和他們高度一致是完全不同的概念 (單位，測量方法，可能都不一樣怎麼可能一致呢)。你完全可以將同一個變量乘以2以後和它原來的值作相關分析，就會發現二者相關係數等於 1，但是二者數值上相差兩倍。 一般來說，迴歸模型 (regression models) 顯得比 Pearson 相關係數更加實用，能提供更多的信息用於推斷 (甚至是用一個值的變化預測另一個變量的大小)，也能避免上面舉例的錯誤使用。 24.2.7 在 R 裏面計算相關係數 圖 24.5: Association between age and height in children aged 6-36 months 在 R 裏面用 cor() 可以簡單的獲得兩個變量之間的相關係數，cor.test() 可以用於獲得相關係數的信賴區間和是否爲零的假設檢驗結果： cor(growgam1$age, growgam1$len) ## [1] 0.8676 cor.test(growgam1$age, growgam1$len) ## ## Pearson&#39;s product-moment correlation ## ## data: growgam1$age and growgam1$len ## t = 24, df = 188, p-value &lt;2e-16 ## alternative hypothesis: true correlation is not equal to 0 ## 95 percent confidence interval: ## 0.8275 0.8990 ## sample estimates: ## cor ## 0.8676 24.3 二元變量之間的相關性 association between pairs of binary variables 兩個二元變量之間的相關性常用比值比 Odds Ratio (OR) 來衡量。跟連續型變量的 Pearson 相關係數一樣，二元變量之間的比值比也是一種對稱的特徵值。所以，X 對於 Y 的 OR，和 Y 對於 X 的 OR 是一樣的。令 \\(\\pi_{ij}\\) 表示 \\(X=i, Y=j\\) 時的概率。 表23.1： Population parameters in a \\(2\\times2\\) contingency table \\(Y = 0\\) \\(Y = 1\\) Total \\(X = 0\\) \\(\\pi_{00}\\) \\(\\pi_{01}\\) \\(\\pi_{0\\cdot}\\) \\(X = 1\\) \\(\\pi_{10}\\) \\(\\pi_{11}\\) \\(\\pi_{1\\cdot}\\) Total \\(\\pi_{\\cdot 0}\\) \\(\\pi_{\\cdot 1}\\) 1 利用表格可以看出，求 Y 對 X 的 OR 計算式爲 (horizontal)： \\[ \\Psi = \\frac{\\pi_{00}/\\pi_{01}}{\\pi_{10}/\\pi_{11}} = \\frac{\\pi_{00}\\times\\pi_{11}}{\\pi_{10}\\times\\pi_{01}} \\] 求 X 對 Y 的 OR 計算式爲 (vertical)： \\[ \\Psi = \\frac{\\pi_{00}/\\pi_{10}}{\\pi_{01}/\\pi_{11}} = \\frac{\\pi_{00}\\times\\pi_{11}}{\\pi_{10}\\times\\pi_{01}} \\] 可見兩個計算 OR (parameter) 值關係的計算式是完全等價的。 表23.2： Observed data in a \\(2\\times2\\) contingency table \\(Y = 0\\) \\(Y = 1\\) Total \\(X = 0\\) \\(O_{00}\\) \\(O_{01}\\) \\(O_{0\\cdot}\\) \\(X = 1\\) \\(O_{10}\\) \\(O_{11}\\) \\(O_{1\\cdot}\\) Total \\(O_{\\cdot 0}\\) \\(O_{\\cdot 1}\\) 1 所以用觀察數據 (Observed data, all “O”s in the table) 替代掉 OR 計算式中的 \\(\\pi\\) 可得觀察數據的 OR 估計值 (estimator) 的計算公式： \\[ \\begin{equation} \\hat\\Psi = \\frac{\\hat\\pi_{00}\\times\\hat\\pi_{11}}{\\hat\\pi_{10}\\times\\hat\\pi_{01}} = \\frac{O_{00}\\times O_{11}}{O_{10}\\times O_{01}} \\end{equation} \\tag{24.7} \\] 24.3.1 OR 的信賴區間 由於 OR 是乘法計算的結果，我們習慣上使用對數轉換 OR 以後 \\((\\text{log}(\\hat\\Psi))\\) 計算完對稱的 95% 信賴區間，然後再通過對數的反函數獲得 OR 的 95% 信賴區間。 樣本量足夠大時， \\(\\text{log}(\\hat\\Psi)\\) 的分佈是正態分佈，標準誤 (standard error) 是： \\[ \\begin{equation} \\sqrt{\\frac{1}{N\\pi_{00}}+\\frac{1}{N\\pi_{01}}+\\frac{1}{N\\pi_{10}}+\\frac{1}{N\\pi_{11}}} \\end{equation} \\tag{24.8} \\] 其中 \\(N\\pi_{ij}\\) 表示的是 \\(2\\times2\\) 表格中四個觀察數據的觀察樣本量 (sample size in the contingency table)。 所以一個 OR 的信賴區間的計算流程如下： 計算 OR 值 \\(\\hat\\Psi\\) (用公式 (24.7))； 取對數 \\(\\text{log}\\Psi\\)； 求 \\(\\text{SE}(\\text{log}\\Psi)\\) (用公式 (24.8))； 計算 \\(\\text{log}\\Psi\\) 的 \\(95\\%\\) 信賴區間：\\(\\text{log}\\Psi \\pm 1.96\\text{SE}(\\text{log}\\Psi)\\)； 求獲得的 \\(\\text{log}\\Psi\\) 的 \\(95\\%\\) 信賴區間的下限上限的對數的反函數 (自然底數的指數函數) 作爲 OR \\(\\hat\\Psi\\) 值的信賴區間。 24.3.2 比值比的假設檢驗 比值比 OR 假設檢驗時的零假設爲，二者不相關，比值比 \\(\\Psi=1\\)。所以：\\(\\text{H}_0: \\Psi = 1 \\text{ or log}_e(\\Psi) = 0\\)。 這個零假設可以用計算信賴區間時的性質進行： \\[ z=\\frac{\\text{log}(\\hat\\Psi)}{SE(\\text{log}_e(\\Psi))} \\sim N(0,1) \\] 另外更加常用的檢驗 OR 值是否等於 1 的檢驗方法有下面兩種： 樣本量大時：\\(\\chi^2\\) 的擬合優度檢驗 goodness of fit test； 小樣本時：Fisher 的精確檢驗法 Fisher’s exact test。 24.3.3 兩個百分比的卡方檢驗 檢驗統計量如下： \\[ \\begin{aligned} \\chi^2 &amp;= \\sum_i\\sum_i(\\frac{(O_{ij}-E_{ij})^2}{E_{ij}}) \\\\ \\text{Where } &amp;E_{ij} = \\frac{O_{i\\cdot}\\times O_{\\cdot j}}{O_{\\cdot\\cdot}} \\end{aligned} \\tag{24.9} \\] 計算獲得了卡方值之後和自由度爲 1 的卡方分佈相比較獲得雙側 \\(p\\) 值。 優化版本 用連續性校正法： \\[ \\begin{aligned} \\chi^2 &amp;= \\sum_i\\sum_i(\\frac{(|O_{ij}-E_{ij}| - 0.5)^2}{E_{ij}}) \\\\ \\text{Where } &amp;E_{ij} = \\frac{O_{i\\cdot}\\times O_{\\cdot j}}{O_{\\cdot\\cdot}} \\end{aligned} \\tag{24.10} \\] 24.3.4 確切檢驗法 Fisher’s “exact” test 如果 \\(2\\times2\\) 表格中的四個數字的 期待值 均大於 5，那麼用上面的卡方檢驗沒有問題，如果期待值都很小，就建議要使用精確檢驗法。 確切檢驗法的思想理論是超幾何分佈 (Section 5.2)，在四個表格邊緣合計固定不變的條件下，利用下面公式 (24.11) 直接計算表內四個格子數據的各種組合的概率，然後計算單側或者雙側累計概率，與顯著性水平 \\(\\alpha\\) 比較。 \\[ \\begin{aligned} P_{O_{00}} &amp; = \\text{Prob}(O_{00},O_{01},O_{10},O_{11}|O_{0\\cdot},O_{1\\cdot},O_{\\cdot0},O_{\\cdot1}) \\\\ &amp; = \\frac{O_{0\\cdot}!O_{1\\cdot}!O_{\\cdot0}!O_{\\cdot1}!}{O_{\\cdot\\cdot}!O_{00}!O_{01}!O_{10}!O_{11}!} \\end{aligned} \\tag{24.11} \\] 在 R 裏可以用 fisher.test 對四格表內容進行確切檢驗。 x3 &lt;- matrix(c(7,5,3,8), ncol = 2, byrow = TRUE) addmargins(x3) ## Sum ## 7 5 12 ## 3 8 11 ## Sum 10 13 23 fisher.test(x3) ## ## Fisher&#39;s Exact Test for Count Data ## ## data: x3 ## p-value = 0.2 ## alternative hypothesis: true odds ratio is not equal to 1 ## 95 percent confidence interval: ## 0.4942 31.9433 ## sample estimates: ## odds ratio ## 3.513 24.4 多分類 (無排序) 的情況 \\(M\\times N\\) 表格 卡方檢驗可以推廣到兩個多分類變量之間的相關分析。 \\[ \\begin{aligned} &amp; \\chi^2 = \\sum_i\\sum_j(\\frac{(O_{ij}-E_{ij})^2}{E_{ij}}) \\\\ &amp; \\text{Where } E_{ij} = \\frac{O_{i\\cdot}O_{\\cdot j}}{O_{\\cdot\\cdot}} \\\\ &amp; \\text{Under H}_0: \\chi^2 \\sim \\chi^2_{(m-1)\\times(n-1)} \\end{aligned} \\] 表23.3： Observed data in a \\(M\\times N\\) contingency table \\(Y = 1\\) \\(Y = 2\\) \\(\\cdots\\) \\(Y = n\\) Total \\(X = 1\\) \\(O_{11}\\) \\(O_{12}\\) \\(\\cdots\\) \\(O_{1n}\\) \\(O_{1\\cdot}\\) \\(X = 2\\) \\(O_{21}\\) \\(O_{22}\\) \\(\\cdots\\) \\(O_{2n}\\) \\(O_{2\\cdot}\\) \\(\\cdots\\) \\(\\cdots\\) \\(\\cdots\\) \\(\\cdots\\) \\(\\cdots\\) \\(\\cdots\\) \\(X = m\\) \\(O_{m1}\\) \\(O_{m2}\\) \\(\\cdots\\) \\(O_{mn}\\) \\(O_{m\\cdot}\\) Total \\(O_{\\cdot 1}\\) \\(O_{\\cdot 2}\\) \\(\\cdots\\) \\(O_{\\cdot n}\\) \\(O_{\\cdot\\cdot}\\) "],["comparisons.html", "第 25 章 比較 Comparisons 25.1 比較兩個均值 comparing two population means 25.2 兩個人羣的方差比較 25.3 比較兩個百分比", " 第 25 章 比較 Comparisons 本章暫且只討論兩組之間的比較 (均值，方差，百分比)； 本章也只討論兩種類型的變量，連續型和二分類型變量； 本章會介紹點估計 (point estimation)，信賴區間計算 (confidence intervals)，假設檢驗 (hypothesis testing)。 25.1 比較兩個均值 comparing two population means 25.1.1 當方差已知，且數據服從正態分佈 Z-test 令 \\(Y_{1i} (i=1,2,\\cdots, n_1); Y_{2i} (i=1,2,\\cdots, n_2)\\) 表示兩個獨立且隨機的變量，他們來自兩個人羣 (1 和 2)，且各自的人羣均值爲 \\(\\mu_k\\)，方差爲 \\(\\sigma_k^2\\)： \\[ E(Y_{ki})=\\mu_k \\text{ and Var}(Y_{ki}) = \\sigma_k^2 \\text{ for } k=1,2 \\text{ and } i= 1,2,\\cdots,n_k \\] 用樣本均值 \\(\\bar{Y}_k\\) 作爲總體均值 \\(\\mu_k\\) 的估計： \\[ \\bar{Y}_k \\sim N(\\mu_k, \\frac{\\sigma_k^2}{n_k}) \\text{ for } k=1,2 \\] 如果兩個樣本的觀察值互相獨立，我們知道均值差 \\(\\bar{Y}_2 - \\bar{Y}_1\\)，也服從下面描述的正態分佈： \\[ \\begin{equation} \\bar{Y}_2-\\bar{Y}_1 \\sim N(\\mu_2-\\mu_1, \\frac{\\sigma^2_2}{n_2}+\\frac{\\sigma^2_1}{n_1}) \\end{equation} \\tag{25.1} \\] 根據這個性質，可以計算均值差的統計量 \\(Z\\)： \\[ \\begin{equation} Z=\\frac{\\bar{Y}_2-\\bar{Y}_1}{\\sqrt{(\\sigma_2^2/n_2)+(\\sigma_1^2)/n_1}} \\sim N(\\frac{\\mu_2-\\mu_1}{\\sqrt{(\\sigma_2^2/n_2)+(\\sigma_1^2)/n_1}},1) \\end{equation} \\tag{25.2} \\] 所以 \\(\\bar{Y}_2-\\bar{Y}_1\\) 的樣本分佈 (25.2)，就可以應用於爲 \\(\\mu_2-\\mu_1\\) 計算顯著性水平爲 \\(\\alpha\\) 的 \\(100(1-\\alpha)\\%\\) 信賴區間，或者進行假設檢驗。 用信賴區間章節 (Section 22.4) 學到的方法，均值差的信賴區間的下限 \\(L\\)，和上限 \\(U\\)，分別是： \\[ \\begin{aligned} L &amp; = (\\bar{Y}_2 - \\bar{Y}_1) + z_{\\alpha/2}\\sqrt{\\frac{\\sigma_2^2}{n_2}+\\frac{\\sigma_1^2}{n_1}}\\\\ U &amp; = (\\bar{Y}_2 - \\bar{Y}_1) + z_{1-\\alpha/2}\\sqrt{\\frac{\\sigma_2^2}{n_2}+\\frac{\\sigma_1^2}{n_1}} \\end{aligned} \\] 由於標準正態分佈左右對稱 \\(z_{\\alpha/2}=-z_{1-\\alpha/2}\\)，所以\\(100(1-\\alpha)\\%\\) 信賴區間爲： \\[ \\begin{equation} (\\bar{Y}_2 - \\bar{Y}_1) \\pm z_{1-\\alpha/2}\\sqrt{\\frac{\\sigma_2^2}{n_2}+\\frac{\\sigma_1^2}{n_1}} \\end{equation} \\tag{25.3} \\] 進行均值差的假設檢驗時，零假設是均值差等於零 \\(\\text{H}_0: \\mu_2-\\mu_1 = 0\\)；替代假設是均值差不等於零 \\(\\text{H}_1: \\mu_2-\\mu_1\\neq0\\)。 在零假設條件下 \\(\\mu_2-\\mu_1 = 0\\)，公式 (25.2) 計算的均值差的檢驗統計量 \\(Z\\) 服從標準正態分佈 \\(Z\\sim N(0,1)\\)。根據章節 23.5 同理知雙側 \\(p\\) 值的計算式爲： \\[ \\begin{equation} 2[1-\\Phi(\\frac{|\\bar{y}_2-\\bar{y}_1|}{\\sqrt{(\\sigma_2^2/n_2)+(\\sigma_1^2/n_1)}})] \\end{equation} \\tag{25.4} \\] 此時，我們進行的假設檢驗，計算的信賴區間用到的前提有： 兩組的觀察數據 \\(Y_{ki}\\) 均服從正態分佈； 所有的觀察對象互相獨立； 兩組數據來自的人羣的方差已知。 違反這些前提的話： 1. 如果不滿足前提 1，對統計結果影響不會很大，只要觀察樣本較大，均值或者均值差本身的樣本分佈也就服從了正態分佈 (中心極限定理)； 2. 如果不滿足前提 2，則不應該採用此方法，觀察對象本身如果有一定的結構構成或者不滿足相互獨立，本方法不適用； 3. 前提 3，大多數現實例子中都不太可能滿足，因爲總體/人羣的方差多數情況下都是未知的，所以，下一小節討論方差未知的情況，逐漸放寬我們的統計分析前提條件。 25.1.2 當方差未知，但是方差可以被認爲相等，且數據服從正態分佈 two sample \\(t\\) test 如果兩組數據來自的人羣可以被認爲方差是齊的 \\(\\sigma_1^2=\\sigma_2^2=\\sigma^2\\)，公式 (25.1) 可以變爲： \\[ \\bar{Y}_2-\\bar{Y}_1 \\sim N(\\mu_2-\\mu_1, \\sigma^2(\\frac{1}{n_2}+\\frac{1}{n_1})) \\] 但是這個分佈中的方差是未知的，所以除了均值和均值差，這個共同的方差也變成了需要用樣本方差 \\(\\hat{\\sigma}^2\\) 來作估計。此時，兩個樣本的方差的無偏估計爲，加權方差： \\[ \\begin{equation} \\hat\\sigma^2 = \\frac{(n_1-1)\\hat\\sigma^2_1+(n_2-1)\\hat\\sigma^2_2}{n_1+n_2-2} \\end{equation} \\tag{25.5} \\] 因爲 \\(\\frac{(n_1-1)\\hat\\sigma^2_1}{\\sigma^2} \\sim \\chi^2_{n_1-1}; \\frac{(n_2-1)\\hat\\sigma^2_2}{\\sigma^2} \\sim \\chi^2_{n_2-1}\\)，所以兩樣本的加權方差 \\(\\hat\\sigma^2\\) 服從自由度爲 \\(n_1+n_2-2\\) 的卡方分佈： \\[ \\frac{(n_1+n_2-2)\\hat\\sigma^2_1}{\\sigma^2} \\sim \\chi^2_{n_1+n_2-2} \\] 所以，此時的檢驗統計量 \\(T\\)，服從自由度爲 \\(n_1+n_2-2\\) 的 \\(t\\) 分佈： \\[ T=\\frac{(\\bar{Y}_2-\\bar{Y}_1) - (\\mu_2-\\mu_1)}{\\hat\\sigma\\sqrt{(1/n_2)+(1/n_1)}} \\sim t_{n_1+n_2-2} \\] 接下來就可以利用這個統計量進行假設檢驗，求均值差的 \\(100(1-\\alpha)\\%\\) 信賴區間，類比章節 22.5： \\[ (\\bar{Y}_2-\\bar{Y}_1) \\pm t_{n_1+n_2-2, 1-\\alpha/2}\\hat\\sigma\\sqrt{(1/n_2)+(1/n_1)} \\] 25.1.3 練習 下表展示的是，隨機將11名嬰兒分配到實驗組和對照組，記錄嬰兒能夠獨立行走的月齡。試用表格總結的數據進行能獨立行走的月齡的均值是否在實驗組和對照組之間有差異的假設檢驗，並求月齡均差的 \\(95\\%\\) 信賴區間。 表 24.1: Children’s ages at time of first walking alone by randomisation group Age in months for walking alone Active exercise group (i=1) Eight week control group (i=2) 9.00, 9.50, 9.75, 10.00, 13.00, 9.50 13.25, 11.50, 12.00, 13.50, 11.50 \\(n_i\\) 6 5 \\(\\bar{Y}_i\\) 10.125 12.350 \\(\\hat\\sigma_i\\) 1.447 0.962 解 假設 \\(\\text{H}_0: \\mu_2-\\mu_1 = 0 \\text{ v.s } \\text{H}_1: \\mu_2-\\mu_1 \\neq 0\\) 假如，實驗組對照組的月齡方差可以認爲是方差相同的，那麼他們的加權方差則可以計算爲： \\[ \\hat\\sigma^2 = \\frac{(6-1)\\times(1.447)^2+(5-1)\\times(0.962)^2}{6+5-2} = \\frac{14.172}{9} = 1.575 \\] 零假設條件下，則檢驗統計量 \\(T\\) 服從自由度爲 \\(9\\) 的 \\(t\\) 分佈，本例的數據給出的檢驗統計量大小爲： \\[ T=\\frac{12.350-10.125}{\\sqrt{1.575\\times(1/5+1/6)}} = \\frac{2.225}{0.76} = 2.928 \\] 通過查閱統計數據表格： 圖 25.1: T-Distribution table (0ne-Tail) 圖 25.1 中顯示統計量 \\(t=2.928\\) 的單側 \\(p\\) 值介於 \\(0.01\\sim0.005\\) 之間，所以此例的雙側 \\(0.01 &lt; p &lt; 0.02\\)。 均值差 \\(\\mu_2-\\mu_1\\) 的 \\(95\\%\\) 信賴區間爲： \\[ \\begin{aligned} (\\bar{Y}_2-\\bar{Y}_1) &amp;\\pm t_{9, 0.975}\\hat\\sigma\\sqrt{(1/n_2)+(1/n_1)} \\\\ = 2.225 &amp;\\pm 2.262 \\times 0.76 = (0.51, 3.94) \\end{aligned} \\] 上面的手計算過程，如果你像我一樣運氣好可能在考場上碰到，實際生活中我們肯定是使用 R 進行計算拉。下面用了兩種不同的代碼，但是結果和目的都是一樣的： t.test() 時指定 var.equal = TRUE或者用簡單線性迴歸的代碼 lm()。 t.test(Walk$Age ~ Walk$Group, var.equal = TRUE) ## ## Two Sample t-test ## ## data: Walk$Age by Walk$Group ## t = -2.9, df = 9, p-value = 0.02 ## alternative hypothesis: true difference in means between group exercise and group control is not equal to 0 ## 95 percent confidence interval: ## -3.9437 -0.5063 ## sample estimates: ## mean in group exercise mean in group control ## 10.12 12.35 summary(lm(Age ~ Group, data = Walk)) ## ## Call: ## lm(formula = Age ~ Group, data = Walk) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.125 -0.738 -0.375 0.388 2.875 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 10.125 0.512 19.77 1e-08 *** ## Groupcontrol 2.225 0.760 2.93 0.017 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.25 on 9 degrees of freedom ## Multiple R-squared: 0.488, Adjusted R-squared: 0.431 ## F-statistic: 8.58 on 1 and 9 DF, p-value: 0.0168 25.1.4 當方差未知，但是方差不可以被認爲相等，且數據服從正態分佈 下一節會討論如何比較方差是否齊的手段，用於本節分析方法在實際應用時的參考。 當兩組連續型正態分佈的數據不能被認爲方差相同時，有幾種方法可以採用。一是將數據通過數學轉換 (log-transformed, etc.)，人爲的把方差的差異縮小以後，使用前一節的齊方差時的均值比較法 (two-sample \\(t\\) test)。另一種方法是，既然方差不齊，那就用各自的觀察數據來估計其方差 \\((\\hat\\sigma_1^2, \\hat\\sigma_2^2)\\)。只要各自的樣本量較大 \\(n_1, n_2\\)，兩組數據均值差 \\(|\\bar{y}_2-\\bar{y}_1|\\) 除以其合併後的標準誤 \\(\\sqrt{\\frac{\\hat\\sigma_1^2}{n_1}+\\frac{\\hat\\sigma_2^2}{n_2}}\\)。利用公式 (25.3) 和 (25.4)，把已知的兩組數據各自的方差用樣本方差取代之後即可用於計算信賴區間，實施假設檢驗求 \\(p\\) 值。 但是，當兩組觀察數據的樣本量不大時 \\((&lt; 30)\\)，根據 Welch–Satterthwaite 建議的，估計均值差除以估計標準誤服從一個自由度爲 \\(n^*\\) 的 \\(t\\) 分佈。值得注意的是，這個自由度並非正整數： \\[ n^*=\\frac{(\\frac{\\hat\\sigma_1^2}{n_1}+\\frac{\\hat\\sigma_2^2}{n_2})^2}{[\\frac{(\\hat\\sigma_1^2/n_1)^2}{n_1-1}] + [\\frac{(\\hat\\sigma_2^2/n_2)^2}{n_2-1}]} \\] 在 R 裏可以指定 var.equal = TRUE 進行 \\(t\\) 檢驗： t.test(Walk$Age ~ Walk$Group, var.equal = FALSE) ## ## Welch Two Sample t-test ## ## data: Walk$Age by Walk$Group ## t = -3, df = 8.7, p-value = 0.01 ## alternative hypothesis: true difference in means between group exercise and group control is not equal to 0 ## 95 percent confidence interval: ## -3.8879 -0.5621 ## sample estimates: ## mean in group exercise mean in group control ## 10.12 12.35 值得注意的是在 R 裏面，\\(t\\) 檢驗是默認組間方差不齊的，如果你沒有指定 var.equal = TRUE，R 就會默認進行上面的方差不齊的 \\(t\\) 檢驗。 25.2 兩個人羣的方差比較 25.2.1 方差比值檢驗 variance ratio test 前一節介紹的樣本均值比較中一個重要的前提是方差齊不齊的問題，所以本節我們就來討論如何比較兩個人羣的方差是否相同，進而爲均值比較時是選用方差齊的檢驗方法 (two sample \\(t\\) test) 還是方差不齊的方法 (Welch Two Sample \\(t\\) test) 提供有價值的參考信息。 比較方差是否相同，最簡單的是利用 \\(F\\) 檢驗，也就是標題的方差比值檢驗 variance ratio test。和大多數檢驗方法一樣，多數情況下進行的也是雙側檢驗，零假設是方差齊，替代假設是方差不齊。 同前例，我們用 \\(Y_{1i} (i=1,2,\\cdots, n_1), Y_{2i} (i=1,2,\\cdots,n_2)\\) 標記兩組從兩個不同人羣中隨機觀察的獨立樣本數據。兩個數據服從正態分佈。檢驗統計量是兩個方差之比 \\(F=\\frac{\\hat\\sigma_1^2}{\\hat\\sigma_2^2}\\)。這個比值距離零假設條件下的 1 越遠，證明兩個方差不相同的證據越強。 此時需要有 \\(F\\) 分佈的知識，具體的推導和證明需要參考統計推斷部分 (Section 17.2)，此處直接使用其結論。如果兩個獨立變量，各自服從相應自由度的卡方分佈，那麼他們各自除以自由度後的商，服從 \\(F\\) 分佈。正式的數學定義描述如下： \\[ \\begin{aligned} &amp; \\text{If } A\\sim \\chi_a^2 \\text{ and } B \\sim \\chi_b^2 \\text{ independently} \\\\ &amp; \\text{then } F = \\frac{A/a}{B/b} \\sim F_{a,b} \\end{aligned} \\] 在應用方差比值檢驗時，零假設條件下 (方差相等)，兩方差自由度分別是 \\(n_1-1, n_2-1\\)，故 \\(F=\\frac{\\hat\\sigma_1^2}{\\hat\\sigma_2^2} \\sim F_{n_1-1, n_2-1}\\)，即服從自由度爲 \\(n_1-1, n_2-1\\) 的 \\(F\\) 分佈。所以需要比較計算所得的統計量 \\(F\\) 值的大小和相應自由度的 \\(F\\) 分佈。 比較方差大小時，習慣上先計算兩樣本的方差，然後把較大的那個當作分子除以較小的那個，由此計算的檢驗統計量就會總是大於 \\(1\\)。此時我們查閱統計表格獲得的 \\(p\\) 值是單側的，你可以將之乘以 \\(2\\)，或者計算另一半 \\(p\\) 值相加即可。\\(F\\) 檢驗高度依賴數據服從正態分佈這一前提。在 R 裏面 var.test() 是進行 \\(F\\) 檢驗的代碼，另外包 car 裏還有 leveneTest() 是一種更加穩健的比較方差的方法，適用於數據不服從正態分佈時： var.test(Walk$Age~Walk$Group) ## ## F test to compare two variances ## ## data: Walk$Age by Walk$Group ## F = 2.3, num df = 5, denom df = 4, p-value = 0.4 ## alternative hypothesis: true ratio of variances is not equal to 1 ## 95 percent confidence interval: ## 0.2417 16.7226 ## sample estimates: ## ratio of variances ## 2.264 leveneTest(Age ~ Group, data = Walk, center = median) ## Levene&#39;s Test for Homogeneity of Variance (center = median) ## Df F value Pr(&gt;F) ## group 1 0 0.95 ## 9 25.2.2 信賴區間 類比章節 22.6，可以容易地推導出方差比值 \\(\\frac{\\sigma_1^2}{\\sigma_2^2}\\) 的 \\(95\\%\\) 信賴區間公式爲： \\[ \\begin{equation} (\\frac{F}{F_{n_1-1,n_2-1, 0.975}} , \\frac{F}{F_{n_1-1,n_2-1,0.025}}) \\end{equation} \\tag{25.6} \\] 上面的式子會需要計算檢驗統計量 \\(F\\) 值左側的 \\(p\\) 值，一般的檢驗統計表個不提供。但是利用 \\(F\\) 分佈的性質如果 \\(F\\sim F_{a,b}\\) 那麼 \\(\\frac{1}{F} \\sim F_{b,a}\\) ，所以下面的公式在查閱表格時更加實用： \\[ (\\frac{F}{F_{n_1-1,n_2-1, 0.975}} , F\\times F_{n_2-1,n_1-1,0.975}) \\] 25.3 比較兩個百分比 25.3.1 兩個百分比差是否爲零的推斷 Risk difference 令 \\(R_1, R_2\\) 爲兩種不同實驗的成功次數，每種實驗進行的次數分別是 \\(n_1, n_2\\)。類似地，令 \\(P_1, P_2\\) 表示兩種實驗的觀察勝率。所以 \\(R_1, R_2\\) 服從二項分佈：\\(R_k \\sim \\text{Bin}(n_k, \\pi_k) \\text{ for } k=1,2\\)。所以有： \\[ \\begin{aligned} &amp; E(P_k) = \\pi_k \\text{ and Var}(P_k) = \\frac{\\pi_k(1-\\pi_k)}{n_k} \\\\ &amp; \\text{For } k = 1,2 \\text{ and } P_1, P_2 \\text{ independent } \\end{aligned} \\] 當 \\(n_k\\) 足夠大，每個百分比都可以根據中心極限定理用下面的正態分佈來近似： \\[ P_k \\sim N(\\pi_k, \\frac{\\pi_k(1-\\pi_k)}{n_k}) \\text{ for } k= 1,2 \\] 由於兩樣本是獨立的，所以百分比差也是服從下面的正態分佈的： \\[ \\begin{equation} P_2-P_1 \\sim N(\\pi_2-\\pi_1, \\frac{\\pi_1(1-\\pi_1)}{n_1}+\\frac{\\pi_2(1-\\pi_2)}{n_2}) \\end{equation} \\tag{25.7} \\] 所以，作大樣本的百分比比較時，百分比差 \\(\\pi_2-\\pi_1\\) 的 \\(100(1-\\alpha)\\%\\) 信賴區間公式爲： \\[ (P_2-P_1) \\pm z_{1-\\alpha/2}\\sqrt{\\frac{P_1(1-P_1)}{n_1}+\\frac{P_2(1-P_2)}{n_2}} \\] 進行的百分比差的假設檢驗爲： \\(\\text{H}_0: \\pi_2-\\pi_1 = 0 \\text{ v.s. H}_1: \\pi_2-\\pi_1 \\neq 0\\) 檢驗統計量 \\(Z\\) 爲： \\[ \\begin{aligned} &amp; Z=\\frac{P_2-P_1}{\\sqrt{P(1-P)(\\frac{1}{n_2}+\\frac{1}{n_1})}} \\sim N(0,1) \\\\ &amp; \\text{Where } P=\\frac{R_1+R_2}{n_1+n_2} \\text{ is the marginal probability of success} \\\\ &amp; p\\text{-value} = 2\\times(1-\\Phi\\{ \\frac{|P_2-P_1|}{\\sqrt{P(1-P)(\\frac{1}{n_2}+\\frac{1}{n_1})}} \\}) \\end{aligned} \\] 25.3.2 兩個百分比商是否爲 1 的推斷 relative risk/risk ratio 兩個百分比商，在流行病學中通常使用相對危險度 (relative risk) 或者危險度比 (risk ratio) 來表示。從樣本數據中獲得的相對危險度比的估計爲 \\(RR=\\frac{P_2}{P_1}\\)。樣本量大時，百分比近似服從正態分佈，所以百分比差也近似服從正態分佈，然而百分比商則不然。此時用到數據的轉換，將百分比商求對數以後 \\(\\text{log}\\frac{P_2}{P_1}\\) ，得到近似正態分佈的對數樣本分佈進而進行假設檢驗，計算信賴區間。 下一章會着重介紹數據的轉換 (transformation)，本章暫且先用其結論，當 \\(Y_k=\\text{log}(P_k)\\) ，其方差爲 \\(\\text{Var}(Y_k) = \\frac{1-\\pi_k}{n_k\\pi_k}\\)，所以此方差的估計量爲 \\(\\frac{1-P_k}{R_k}\\)。 由此可得 \\(\\text{log}\\frac{\\pi_2}{\\pi_1}\\) 的 \\(95\\%\\) 信賴區間公式爲： \\[ \\text{log} \\frac{P_2}{P_1} \\pm 1.96\\times\\sqrt{\\frac{1-P_1}{R_1}+\\frac{1-P_2}{R_2}} \\] 如果把上面式子計算的 \\(\\text{log}\\frac{\\pi_2}{\\pi_1}\\) 的 \\(95\\%\\) 信賴區間標記爲 \\((L,U)\\)，那麼相對危險度 \\(\\frac{\\pi_2}{\\pi_1}\\) 的 \\(95\\%\\) 信賴區間爲 \\((exp(L), exp(U))\\)。 "],["assumptions.html", "第 26 章 前提和數據轉換 Assumptions and transformations 26.1 穩健性 26.2 正態性 26.3 總結連續型變量不服從正態分佈時的處理方案 26.4 數學冪轉換 power transformations", " 第 26 章 前提和數據轉換 Assumptions and transformations 幾乎所有的統計分析手法都有自己的前提條件，所以重要的問題來了： 在多大的程度上分析結果引導的結論會依賴於這些前提？ 有沒有方法檢驗，至少檢查數據是否滿足前提條件？ 如果數據無法滿足相應的前提條件，該怎麼辦？ 目前爲止，分析方法中接觸到的簡單統計檢驗法中典型的前提舉例如下： 單樣本 \\(t\\) 檢驗 (Section 23.6) 需要的前提條件是所有的觀察數據 相互獨立 independent； 服從正態分佈 normally distributed。 事件發生率的信賴區間計算 (Section 22.9) 需要的前提條件是 事件發生的件數服從泊松分佈 Poisson distributed。 兩個百分比的卡方檢驗 (Section 24.3.3 and Section 25.3.1) 需要的前提條件是 兩組數據中成功次數的數據服從二項分佈 Binomial distributed。 當觀察數據可能不滿足上述前提條件時，一個最爲常用的手段是對原始數據進行數學轉換 (transformation)。然而，數學轉換會對推斷的結果意義產生影響： 數學轉換以後的數據可能更加滿足前提條件，不好的數學轉換則可能使轉換後的數據更加偏離前提條件； 數學轉換以後，改變了統計結果的現實意義，change the ease of interpretation of the results。 比方說，一組採樣獲得的血壓數據，你發現把原始數據開根號之後的結果可以符合正態分佈的前提，但是此種轉換最大的缺點是，轉換後的數據使用 two sample \\(t\\) test 時比較的不再是均值差，而是開根號之後的差。這就導致了無法良好的解釋這樣的差異在實際生活中有什麼意義 (臨牀上的意義)，換句話說，醫生和患者是無法理解什麼是根號血壓差的 \\(\\sqrt{\\text{mmHg}}\\)。 26.1 穩健性 其實應用統計學方法時真實數據多多少少會偏離一些前提條件，在某些前提條件不能滿足的情況下，分析結果是否穩健 (robustness) 有如下不太精確但是廣泛被接受的定義： A statistical procedure is robust if it performs well when the needed assumptions are not violated “too badly”, or if the procedure performs well for a large family of probabilty distributions. — van Belle et al. (p253) (Belle et al. 2004) 那麼什麼情況下可以說一個統計方法是表現良好的呢，performing well？ 我們說一個統計方法表現良好，是指該方法用於定義是否有意義的臨界值，或者叫名義顯著性水平 (nominal signficance level)，和實際上計算的檢驗統計量在所有的可能中達到或超過該臨界值的概率 (actual probability the test statistic exceeds the cut-off)。用 \\(t\\) 檢驗舉例如下： \\[ \\text{Prob}(|T| &gt; t_{df,0.975} | \\text{H}_0 \\text{true}) = 0.05 \\] 類似地，我們說一個信賴區間的計算方法表現良好，是指該方法計算獲得的 \\(95\\%\\) 信賴區間包含真實參數值的概率真的可以無限接近 \\(95\\%\\)： \\[ \\text{Prob}(\\mu \\in (L, U) | \\mu) = 0.95 \\] 一些常見方法的穩健性列舉： 樣本量小且分佈偏度越大時，依賴正態分佈前提的信賴區間計算和其他的檢驗手段就變得不再可靠； 兩個方差比較時使用的 \\(F\\) 檢驗 (Section 25.2.1) 常常由於數據不服從正態分佈缺乏穩健性，即使樣本量較大也不能改善； 根據中心極限定理，樣本量足夠大時，單樣本 \\(t\\) 檢驗 (Section 23.6) 具有良好的穩健性。 一般地，基於均值的檢驗方法都相對其他統計量較爲穩健。 26.2 正態性 大多數情況下，正如我們在這個部分最開頭的章節提到的，拿到數據以後先用圖形手段探索，並熟悉該數據。從圖形來判斷一組數據是否接近正態分佈或者偏離正態分佈。常用的探索連續型變量是否服從正態分佈的圖形方法是： 箱形圖，box and whisker plot，如圖 21.5； 柱狀圖，histogram，如圖 26.1； 正態分佈圖，normal plots，如圖 26.2。 set.seed(1234) Normal &lt;- rnorm(2500, mean = 120, sd = 8) h &lt;- hist(Normal,breaks = 20, col = &quot;lightblue&quot;, xlab = &quot;some value&quot; , ylim = c(0,300)) xfit&lt;-seq(min(Normal),max(Normal),length=40) yfit&lt;-dnorm(xfit,mean=mean(Normal),sd=sd(Normal)) yfit &lt;- yfit*diff(h$mids[1:2])*length(Normal) lines(xfit, yfit, col=&quot;blue&quot;, lwd=2) 圖 26.1: Appearance of histogram with normal curve qqnorm(Normal,frame=F); qqline(Normal) 圖 26.2: Appearance of normal plot for a normally distributed variable 26.2.1 正態分佈圖 normal plot 其實光看柱狀圖和箱形圖，有時候很難判斷數據正態性與否，當數據和正態分佈有些微妙的不同時可能就沒辦法從柱狀圖覺察出來。此時需要借用正態分布圖的威力。正態分布圖的原理就是，把原始數據 (Y軸) 和理論上服從正態分佈的期待數據 (X軸) 從小到大排序一一對應以後繪製散點圖。所以理論上，如果原始數據服從正態分佈，那麼正態分佈中第10百分位的點，我們期望和原始數據中第10百分位的點十分接近，那麼繪成的散點圖應該接近於完美的貼在 \\(y=x\\) 這條直線上。如果正態分布圖的點越偏離 \\(y=x\\) 的直線，覺說明原始數據越偏離正態分佈。 下面的系列圖26.3，26.4，26.5，26.5展示了各種非正態分佈時會出現的柱狀圖，和正態分布圖的特徵： 圖 26.3: Appearance of histogram and normal plot for a variable with outlying values 圖 26.4: Appearance of histogram and normal plot for a variable exhibiting right-skewness 圖 26.5: Appearance of histogram and normal plot for a variable exhibiting left-skewness 圖 26.6: Appearance of histogram and normal plot for a heavy tailed variable 如果對數據是否服從正態分佈實在沒有信心，統計學家也很少使用那些檢驗是否服從正態分佈的所謂檢驗方法 (Sharpiro-Wilk test 或者 Kolmogorov-Smirnov test)，而是傾向用直接改用穩健統計學分析法 (Robust Statistical Methods)。 26.3 總結連續型變量不服從正態分佈時的處理方案 根據中心極限定理，樣本量足夠大時，即使原始樣本數據不服從正態分佈，仍然可以用一般的參數估計技巧來分析類似均值這樣較爲穩健的參數。 用非參數檢驗法，會在穩健統計學方法中介紹，但是這些方法的缺點很明顯，例如無法進行精確的參數估計，且容易失去較大的統計學檢驗力 (loss of power)，增加一類錯誤概率 (錯誤的拒絕掉可能存在有意義差異的檢驗)。更重要的是，沒有一種非參數檢驗法是可以和多重線性迴歸等較爲複雜，高級的技巧等價的。 用一些穩健統計學方法 (bootstrap，“sandwich” estimators of variance)，可行但是對電腦的計算需求較高。 數據轉換法。但是沒有人能保證一定能找到合適的數學轉換法來滿足前提條件 (下節討論)。 26.4 數學冪轉換 power transformations 數據轉換家族： \\[ \\cdots,x^{-2},x^{-1},x^{-\\frac{1}{2}},\\text{log}(x),x^{\\frac{1}{2}},x^1,x^2,\\cdots \\] 上面舉例的數學冪轉換方法，都是常見的手段用於降低原始數據的偏度 (skewness)，相反地，冪轉換卻不一定能夠改變數據的峯度 (kurtosis)。下面的方程，(非常的羅嗦的方程 sorry)，用於實施類似 ladder 在 Stata 中的效果，即對數據進行各種轉換，然後輸出每種冪轉換後的數據是否爲正態分佈的檢驗結果 (使用 shapiro.test())： Ladder.x &lt;- function(x){ data &lt;- data.frame(x^3,x^2,x,sqrt(x),log(x),1/sqrt(x),1/x,1/(x^2),1/(x^3)) names(data) &lt;- c(&quot;cubic&quot;,&quot;square&quot;,&quot;identity&quot;,&quot;square root&quot;,&quot;log&quot;,&quot;1/(square root)&quot;, &quot;inverse&quot;,&quot;1/square&quot;,&quot;1/cubic&quot;) # options(scipen=5) test1 &lt;- shapiro.test(data$cubic) test2 &lt;- shapiro.test(data$square) test3 &lt;- shapiro.test(data$identity) test4 &lt;- shapiro.test(data$`square root`) test5 &lt;- shapiro.test(data$log) test6 &lt;- shapiro.test(data$`1/(square root)`) test7 &lt;- shapiro.test(data$inverse) test8 &lt;- shapiro.test(data$`1/square`) test9 &lt;- shapiro.test(data$`1/cubic`) W.statistic &lt;- c(test1$statistic, test2$statistic, test3$statistic, test4$statistic, test5$statistic, test6$statistic, test7$statistic, test8$statistic, test9$statistic) p.value &lt;- c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value, test7$p.value, test8$p.value, test9$p.value) Hmisc::format.pval(p.value ,digits=5, eps = 0.00001, scientific = FALSE) Transformation &lt;- c(&quot;cubic&quot;,&quot;square&quot;,&quot;identity&quot;,&quot;square root&quot;,&quot;log&quot;,&quot;1/(square root)&quot;, &quot;inverse&quot;,&quot;1/square&quot;,&quot;1/cubic&quot;) Formula &lt;- c(&quot;x^3&quot;,&quot;x^2&quot;,&quot;x&quot;,&quot;sqrt(x)&quot;,&quot;log(x)&quot;,&quot;1/sqrt(x)&quot;,&quot;1/x&quot;,&quot;1/(x^2)&quot;,&quot;1/(x^3)&quot;) (results &lt;- data.frame(Transformation, Formula, W.statistic, p.value)) } Normal &lt;- rnorm(2500, mean = 120, sd = 8) Ladder.x(Normal) ## Transformation Formula W.statistic p.value ## 1 cubic x^3 0.9901 3.906e-12 ## 2 square x^2 0.9968 4.283e-05 ## 3 identity x 0.9994 5.835e-01 ## 4 square root sqrt(x) 0.9990 2.039e-01 ## 5 log log(x) 0.9977 8.750e-04 ## 6 1/(square root) 1/sqrt(x) 0.9952 3.370e-07 ## 7 inverse 1/x 0.9917 8.896e-11 ## 8 1/square 1/(x^2) 0.9816 1.735e-17 ## 9 1/cubic 1/(x^3) 0.9674 2.175e-23 26.4.1 對數轉換 logarithmic Transformation 在衆多冪轉換中，對數轉換是最常用的，因爲對數轉換之後，再通過逆運算轉換回原單位數據的方法，被發現是相較於其他冪轉換較爲容易解釋和應用在臨牀醫學中。假如現在在分析男女之間收縮期血壓的均值差別。下面是對數轉換前後的檢驗方法步驟，試作一個對比： 轉換前： 計算收縮期血壓在男性女性中各自的均值 \\(\\bar{Y}_j, j=1,2\\)； 計算男女間均值差 \\(D=\\bar{Y}_2 - \\bar{Y}_1\\)； 所以均值差就被解釋爲男女減血壓的平均差距 (difference of mmHg)； 例如，均值差爲 10 mmHg，就可以被解讀爲女性血壓平均值比男性低 10 mmHg。 對數轉換後： 計算觀察值的對數值 \\(t_{ij} = \\text{log}_e(y_{ij})\\)； 計算男女對數收縮期血壓的算數平均值 \\(\\bar{T}_j, j=1,2\\)； 計算對數血壓均值差 \\(D=\\bar{T}_2-\\bar{T}_1\\)； 由於 \\(exp(\\bar{T}_j) = G_j\\) 是男女收縮期血壓的幾何平均值，所以 \\(exp(D)=exp(\\text{log}_eG_2 - \\text{log}_eG_1) = \\frac{G_2}{G_1}\\)，就可以解釋爲男女收縮期血壓的幾何平均值之比； 例如，\\(D=-0.05\\)，那麼男女收縮期血壓的幾何平均值之比爲 \\(exp(-0.05)=0.951\\)，就可以被解讀爲女性收縮期血壓平均比男性低 \\(4.9\\%\\)。 26.4.2 逆轉換信賴區間 back-transformation of CIs 當使用轉換後數據計算信賴區間以後，需要再把數據逆轉換回原始數據的單位才能順利被解讀。但是逆轉換回去以後的信賴區間就不再左右對稱了 (no way)。 26.4.3 對數正態分佈 log-normal distribution 一個隨機變量的對數轉換如果服從正態分佈，我們說這個數據服從對數正態分佈。 26.4.4 百分比的轉換 百分比被侷限在 \\([0,1]\\) 的範圍內，所以爲了打破這個取值範圍的限制，百分比常用的數學轉換有： 把百分比 \\(\\pi\\) 轉換成 Odds \\(\\frac{\\pi}{1-\\pi}\\)。如此 Odds 的取值範圍就可以變成 \\([0, \\infty)\\)； Odds \\(\\frac{\\pi}{1-\\pi}\\) 又常被轉換成 log-odds \\(\\text{log}(\\frac{\\pi}{1-\\pi})\\)。這樣的轉換方程 \\(f(\\pi)=\\text{log}(\\frac{\\pi}{1-\\pi})\\) 又被命名爲邏輯轉換 (logit transformation)； 百分比的商 (危險度比，risk ratio) \\(\\pi_1/\\pi_2\\) 可以轉換成 \\(\\text{log}(\\pi_1/\\pi_2)\\)； 比值比 (odds ratio) \\(\\frac{\\pi_1(1-\\pi_2)}{\\pi_2(1-\\pi_1)}\\) 可以轉換成對數比值比 (log odds ratio) \\(\\text{log}[\\frac{\\pi_1(1-\\pi_2)}{\\pi_2(1-\\pi_1)}] = \\text{log}[\\pi_1(1-\\pi_1)] - \\text{log}[\\pi_2(1-\\pi_2)]\\)。 表25.1： Common Transformation and their range Transformation Formula Range Odds \\(\\frac{\\pi}{1-\\pi}\\) \\([0,\\infty)\\) Log Odds \\(\\text{log}(\\frac{\\pi}{1-\\pi})\\) \\((-\\infty,+\\infty)\\) Risk Ratio \\(\\frac{\\pi_1}{\\pi_2}\\) \\([0,\\infty)\\) Log Risk Ratio \\(\\text{log}(\\frac{\\pi_1}{\\pi_2})\\) \\((-\\infty,+\\infty)\\) Odds Ratio \\(\\frac{\\pi_1(1-\\pi_2)}{\\pi_2(1-\\pi_1)}\\) \\([0,\\infty)\\) Log Odds Ratio \\(\\text{log}[\\frac{\\pi_1(1-\\pi_2)}{\\pi_2(1-\\pi_1)}]\\) \\((-\\infty,+\\infty)\\) References "],["lm.html", "第 27 章 簡單線性迴歸 Simple Linear Regression 27.1 一些背景和術語 27.2 簡單線性迴歸模型 simple linear regression model 27.3 區分因變量和預測變量 27.4 參數的估計 estimation of parameters 27.5 殘差方差的估計 Estimation of the residual variance \\((\\sigma^2)\\) 27.6 R 演示 例 1： 圖 27.1 數據 27.7 R 演示 例 2： 表27.1 數據 27.8 LM practical 01", " 第 27 章 簡單線性迴歸 Simple Linear Regression Far better an approximate answer to the right question, which is often vague, than an exact answer to the wrong questions, which can always be made precise. John Tukey The Linear Regression lectures were orgainised and taught by Professor Jennifer Nicholas. 27.1 一些背景和術語 思考下面這些問題： 脂肪攝入量增加，會導致體重增加嗎？ 兒童成年時的身高，可以用父母親的身高來預測嗎？ 如果其他條件都沒有變化，飲食習慣的改變，是否能影響血清膽固醇的水平？ 上面的問題中，自變量 (預測變量)，和因變量 (反應量) 分別是什麼？ 你可能還會碰到像下面這些稱呼，他們都是一個意思： 因變量 Dependent variable = 反應量 response variable = 結果變量 outcome variable; 自變量 independent variable = 預測變量 predictor variable = 解釋變量 explanatory variable = 共變量 covariate. 所有的非簡單統計模型 (non-trivial statistical models) 都包括以下三個部分： 隨機變量 random variables： 因變量永遠都是隨機變量； 預測變量不一定是隨機變量； 在相對簡單的模型中，我們討論的因變量和預測變量幾乎都來自於從人羣中抽取觀察樣本收集來的數據。 人羣參數 population parameters： 人羣參數，是我們希望通過收集樣本獲得的數據來估計 (estimate) 的參數。 對不確定性的描述 representation of uncertainty： 不確定性，意爲因變量的變動中，沒有被預測變量解釋的部分。 其他的術語問題： 單一因變量的統計模型：univariate model; 多個因變量的統計模型： multivariate model; 單一因變量，含有多個預測變量的統計模型：multivariable model； 在線性迴歸中，單一因變量，單一預測變量的統計模型：simple linear regression (簡單線性迴歸)； 在線性迴歸中，單一因變量，多個預測變量的統計模型：multiple linear regression (多重線性迴歸)； 儘量避免將預測變量 (predictor variable) 寫作自變量 (independent variable)，因爲 “independent” 有自己的統計學含義 (獨立)。然而我們在線性迴歸中使用的預測變量，不一定都互相獨立，所以容易讓人混淆其意義。 27.2 簡單線性迴歸模型 simple linear regression model 即：單一因變量，單一預測變量的統計模型。 27.2.1 數據 A 下面的散點圖 27.1 展示的是一項橫斷面調查的結果，調查的是一些兒童的年齡 (月)，和他們的體重 (千克) 之間的關係。 圖 27.1: Age and weight of children in a cross-sectional survey 27.2.2 數據 B 表 27.1 羅列的是11名兒童能夠自己獨立行走時的年齡。這些兒童在剛出生時被隨機分配到兩個組中 (積極鍛鍊走路，和對照組)。如果你熟悉均數比較，這樣的數據可以通過簡單 \\(t\\) 檢驗來分析其均值的不同。但是實際上後面你會看到簡單 \\(t\\) 檢驗和簡單線性迴歸是同一回事。 表 27.1: Childen’s ages at time of first walking aline by randomisation group Age in months for walking alone Active Exercise (n=6) Eight Week Control (n=5) 9.00 13.25 9.50 11.5 9.75 12 10.00 13.5 13.00 11.5 9.50 – 27.3 區分因變量和預測變量 在簡單兩樣本 \\(t\\) 檢驗中，我們不區分那兩個要比較的數據 \\((X, Y)\\)。所以 \\(X\\) 和 \\(Y\\) 的關係，同分析 \\(Y\\) 和 \\(X\\) 的關係是一樣的。表 27.1 的例子中，視“直立行走的年齡”這一變量爲因變量十分直觀且自然。圖 27.1 的例子中我們顯然可以關心是否可以用兒童的年齡來推測他/她的體重。所以年齡被視爲預測變量 \\((X)\\)，體重被視爲因變量或者叫結果變量 \\((Y)\\)。 27.3.1 均值 (期待值) 公式 圖 27.1 的例子中，當我們決定考察體重變化 \\((Y)\\) 和年齡的關係 \\((X)\\) 後，我們需要提出一個模型，來描述二者之間的關係。這個模型中，最重要的信息，是均值，或者叫期待值： \\[ E(Y|X=x), \\text{ the expected value of } Y \\text{ when } X \\text{ takes the value } x \\] 在簡單線性迴歸模型中，我們認爲這個均值方程是線性關係： \\[ E(Y|X=x) = \\alpha +\\beta x \\] 所以這個線性關係中，有兩個參數 (parameters) 是我們關心的 \\(\\alpha, \\beta\\)。 \\(\\alpha\\) 是截距 intecept。意爲當 \\(X\\) 取 \\(0\\)時， \\(Y\\) 的期待值大小； \\(\\beta\\) 是方程的斜率 slope。意爲當 \\(X\\) 上升一個單位時，\\(Y\\) 上升的期待值大小。 需要強調的是，這樣的線性模型，是我們提出，用來模擬真實數據時使用的。你如果作死當然還可以提出更加複雜的模型。如下面圖 27.2 顯示的是線性迴歸直線， 而圖 27.3 顯示的是較爲複雜的迴歸曲線。曲線方程可能更加擬合我們收集到的數據，然而這樣的連續的斜率變化很可能僅僅只解釋了這個樣本量數據，而不能解釋在人羣中年齡和體重的關係。 library(haven) library(ggplot2) library(ggthemes) growgam1 &lt;- read_dta(&quot;../backupfiles/growgam1.dta&quot;) ggplot(growgam1, aes(x=age, y=wt)) + geom_point(shape=20, colour=&quot;grey40&quot;) + stat_smooth(method = lm, size = 0.3) + scale_x_continuous(breaks=seq(0, 38, 4),limits = c(0,36.5))+ scale_y_continuous(breaks = seq(0, 20, 5),limits = c(0,20.5)) + theme_stata() +labs(x = &quot;Age (Months)&quot;, y = &quot;Weight (kg)&quot;) ## `geom_smooth()` using formula &#39;y ~ x&#39; 圖 27.2: Linear mean function for age and weight of children in a cross-sectional survey library(haven) library(ggplot2) library(ggthemes) growgam1 &lt;- read_dta(&quot;../backupfiles/growgam1.dta&quot;) ggplot(growgam1, aes(x=age, y=wt)) + geom_point(shape=20, colour=&quot;grey40&quot;) + stat_smooth(method = loess, se=T, size = 0.3) + scale_x_continuous(breaks=seq(0, 38, 4),limits = c(0,36.5))+ scale_y_continuous(breaks = seq(0, 20, 5),limits = c(0,20.5)) + theme_stata() +labs(x = &quot;Age (Months)&quot;, y = &quot;Weight (kg)&quot;) ## `geom_smooth()` using formula &#39;y ~ x&#39; 圖 27.3: Non-linear mean function for age and weight of children in a cross-sectional survey 27.3.2 條件分佈和方差 the conditional distribution and the variance function 如果要完全明確一個統計模型，另一個重要的點在於，提出的模型能否準確描述因變量在預測變量的條件下的分佈 (conditional distribution) it is necessary to describe the distribution of the dependent variable conditional on the predictor variable。使用簡單線性迴歸模型有幾個前提假設： 因變量對預測變量的條件分佈的方差是保持不變的 the variance of the dependent variable (conditional on the predictor variable) is constant。 該條件分佈是一個正態分佈。 有時候，這些假設條件並不能得到滿足。上面的散點圖 27.1看上去還算符合這兩個假設前提：在每一個年齡階段，體重的分佈沒有發生歪斜 (skew)，分散分佈 (方差) 也相對穩定。但是圖 27.4 中的價格-克拉數據很明顯無法滿足上面的前提假設。在線性迴歸模型中，我們使用 \\(\\sigma^2\\) 表示殘差的方差 (residual variance)。 圖 27.4: Relationship between diamond carat and price 27.3.3 定義簡單線性迴歸模型 用來描述一個隨機變量 \\((Y)\\) 和另一個變量 \\((X)\\) 之間關係的簡單線性迴歸模型，被定義爲： \\[ (Y|X=x) \\sim N(\\alpha+\\beta x, \\sigma^2) \\] 上面這個模型，同時還描述了我們對數據的分佈的假設。同樣的模型，你可能更多得看到被寫成如下的方式： \\[ y=\\alpha+\\beta x+ \\varepsilon \\text{, where } \\varepsilon\\sim N(0,\\sigma^2) \\] 假如，我們有一組樣本量爲 \\(n\\) 的數據 \\(\\underline{x}\\)。我們就可以把通過上面的迴歸模型實現的 \\(Y_i\\) 和它對應的 \\(X_i (i=1,\\cdots, n)\\)。描述爲如下的形式： \\[ \\begin{equation} (Y_i|X_i=x_i) \\sim \\text{NID}(\\alpha+\\beta x, \\sigma^2) \\text{ where } i=1,\\cdots,n \\end{equation} \\tag{27.1} \\] 此處的 \\(\\text{NID}\\) 意爲獨立且服從正態分佈 (normally and independently distributed)。這裏默認的一個重要前提是所有的觀察值 \\(X_i\\) 是相互獨立互不影響的。例如上面圖 27.1 所示兒童的年齡和體重數據，就必須假設這些兒童都來自沒有血緣關係的獨立家庭。如果這以數據中的兒童，有些是兄弟姐妹的話，觀察數據互相獨立的前提就無法得到滿足。不滿足相互獨立前提的數據，其分析方法會在 “Analysis of hierarchical and other dependent data (Term 2)” 中詳盡介紹。 公式 (27.1) 常被記爲： \\[ \\begin{equation} (Y_i|X_i=x_i) = \\alpha + \\beta x_i + \\varepsilon_i, \\text{ where } \\varepsilon_i\\sim \\text{NID}(0,\\sigma^2) \\end{equation} \\tag{27.2} \\] 或者爲了簡潔表述寫成： \\[ \\begin{equation} y_i = \\alpha + \\beta x_i + \\varepsilon_i, \\text{ where } \\varepsilon_i\\sim \\text{NID}(0,\\sigma^2) \\end{equation} \\tag{27.3} \\] 27.3.4 殘差 residuals 公式 (27.2) 和 (27.3) 其實已經包含了殘差的表達式： \\[ \\varepsilon_i = y_i - (\\alpha + \\beta x_i) \\] 所以 \\(\\varepsilon_i\\) 的意義是第 \\(i\\) 個觀察對象的隨機(偶然)誤差 (random error)，或者叫真實殘差 (true residual)。其實就是從線性迴歸模型計算獲得的映射值 \\(\\alpha+\\beta x_i\\)，和實際觀察值 \\(y_i\\) 之間的差距。而且從其公式可見，殘差本身也是由人羣的參數 \\((\\alpha, \\beta)\\) 決定的。殘差也被定義爲迴歸模型的偏差值。當我們用樣本數據獲得的參數估計 \\((\\hat\\alpha, \\hat\\beta)\\) 來取代掉參數 \\((\\alpha, \\beta)\\) 時，這時的模型變成了估計模型，殘差也成了估計殘差或者叫觀察模型和觀察殘差。須和真實殘差加以區分。 27.4 參數的估計 estimation of parameters 簡單線性迴歸模型中有三個人羣參數 \\((\\alpha, \\beta, \\sigma^2)\\)。統計分析的目標，就是使用樣本數據 \\(Y_i, X_i, (i=1, \\cdots, n)\\) 來對總體參數做出推斷 (inference)。在線性迴歸中主要使用普通最小二乘法 (ordinary least squares, OLS) 作爲推斷的工具。在統計學中，我們習慣給希臘字母戴上“帽子”，作爲該參數的估計值，例如 \\(\\hat\\alpha, \\hat\\beta\\) 是參數 \\(\\alpha, \\beta\\) 的估計值。通過線性迴歸模型，給第 \\(i\\) 個觀察值擬合的預測值，被叫做因變量的估計期望值 (estimated expectation)。用下面的式子來表示: \\[ \\hat{y}_i=\\hat\\alpha+\\hat\\beta x_i \\] 此時，第 \\(i\\) 名對象的觀察殘差 (observed or fitted or estimated residuals) 用下面的式子來表示： \\[ \\hat{\\varepsilon}_i = y_i-\\hat{y}_i=y_i-(\\hat\\alpha+\\hat\\beta x_i) \\] 27.4.1 普通最小二乘法估計 \\(\\alpha, \\beta\\) 普通最小二乘法估計的 \\(\\alpha, \\beta\\) 會最小化擬合迴歸直線的偏差 minimize the sum of squared deviations from the fitted regression line。其正式的定義爲：OLS估計值，指的是能夠使殘差平方和 (residual sum of squares, \\(SS_{RES}\\))取最小值的 \\(\\hat\\alpha, \\hat\\beta\\)。 \\[ \\begin{equation} SS_{RES} = \\sum_{i=1}^n \\hat{\\varepsilon}^2_i = \\sum_{i=1}^n (y_i-\\hat\\alpha-\\hat\\beta x_i)^2 \\end{equation} \\tag{27.4} \\] 可以證明的是，OLS的 \\(\\alpha, \\beta\\) 估計值的計算公式爲： \\[ \\begin{equation} \\hat\\alpha=\\bar{y}-\\hat\\beta\\bar{x} \\tag{27.5} \\end{equation} \\] \\[ \\begin{equation} \\hat\\beta=\\frac{\\sum_{i=1}^n(x_i-\\bar{x})(y_i-\\bar{y})}{\\sum_{i=1}^n(x_i-\\bar{x})^2} \\tag{27.6} \\end{equation} \\] 其中 \\(\\bar{y}=\\frac{\\sum_{i=1}^ny_i}{n}, \\bar{x}=\\frac{\\sum_{i=1}^nx_i}{n}\\) 證明 求能最小化 \\(SS_{RES}\\) 的 \\(\\alpha\\)， 我們需要把公式 (27.4) 對 \\(\\hat\\alpha\\) 求導，然後將求導之後的式子等於 \\(0\\) 之後求根即可： \\[ \\begin{aligned} &amp; \\frac{\\text{d}SS_{RES}}{\\text{d}\\hat\\alpha} =\\sum_{i=1}^n -2(y_i-\\hat\\alpha-\\hat\\beta x_i) = 0\\\\ &amp; \\text{Since } \\sum_{i=1}^n(y_i) = n\\bar{y}; \\sum_{i=1}^n (x_i) =n\\bar{x} \\\\ &amp; \\Rightarrow -n\\bar{y}+n\\hat\\alpha+n\\hat\\beta\\bar{x} = 0 \\\\ &amp; \\Rightarrow \\hat\\alpha = \\bar{y}-\\hat\\beta\\bar{x} \\end{aligned} \\] 求能最小化 \\(SS_{RES}\\) 的 \\(\\beta\\)，求導之前我們先把公式 (27.4) 中含有 \\(\\hat\\alpha\\) 的部分替換掉： \\[ \\begin{equation} \\begin{split} SS_{RES} &amp;= \\sum_{i=1}^n\\hat\\varepsilon_i^2=\\sum_{i=1}^n(y_i-(\\bar{y}-\\hat\\beta\\bar{x})-\\hat\\beta x_i)^2\\\\ &amp;= \\sum_{i=1}^n((y_i-\\bar{y})-\\hat\\beta(x_i-\\bar{x}))^2 \\\\ \\end{split} \\tag{27.7} \\end{equation} \\] 接下來對上式 (27.7) 求導之後，用相同辦法求根： \\[ \\begin{aligned} &amp;\\frac{\\mathrm{d} SS_{RES}}{\\mathrm{d} \\hat\\beta} = \\sum_{i=1}^n -2(x_i-\\bar{x})(y_i-\\bar{y}) + 2\\hat\\beta(x_i-\\bar{x})^2 = 0\\\\ &amp; \\Rightarrow \\hat\\beta\\sum_{i=1}^n(x_i-\\bar{x})^2 = \\sum_{i=1}^n (x_i-\\bar{x})(y_i-\\bar{y}) \\\\ &amp; \\hat\\beta=\\frac{\\sum_{i=1}^n(x_i-\\bar{x})(y_i-\\bar{y})}{\\sum_{i=1}^n(x_i-\\bar{x})^2} \\end{aligned} \\] 這兩個式子 (27.5) (27.6) 同時也是參數 \\(\\alpha, \\beta\\) 的極大似然估計 (MLE)。 27.5 殘差方差的估計 Estimation of the residual variance \\((\\sigma^2)\\) 殘差方差等於殘差平方和除以樣本量。所以我們會把殘差方差的估計用下面的式子表示： \\[ \\begin{equation} \\hat\\sigma^2=\\sum_{i=1}^n \\frac{\\hat\\varepsilon^2}{n} = \\sum_{i=1}^n \\frac{(y_i-\\hat\\alpha-\\hat\\beta x_i)^2}{n} \\end{equation} \\tag{27.8} \\] 這的確是 \\(\\sigma^2\\) 的極大似然估計 (MLE)。然而我們知道，公式 (27.8) 並不是殘差方差的無偏估計。類似與樣本方差低估了總體方差 (Section 10.3)，那樣，這裏殘差方差的觀察值也是低估了總體殘差方差的。所以，殘差方差的無偏估計需要用下面的式子來校正： \\[ \\begin{equation} \\hat\\sigma^2=\\sum_{i=1}^n \\frac{\\hat\\varepsilon^2}{n-2} = \\sum_{i=1}^n \\frac{(y_i-\\hat\\alpha-\\hat\\beta x_i)^2}{n-2} \\end{equation} \\tag{27.9} \\] 公式 (27.9) 被叫做殘差均方 (Residual Mean Squares, RMS)，常常被標記爲 \\(\\text{MS}_{RES}\\)。分母的 \\(n-2\\)，表示進行殘差方差估計時用掉了兩個信息量 \\(\\alpha, \\beta\\) (自由度減少了 2)， 27.6 R 演示 例 1： 圖 27.1 數據 library(haven) growgam1 &lt;- read_dta(&quot;../backupfiles/growgam1.dta&quot;) slm &lt;- lm(wt~age, data=growgam1) summary(slm) # basic default output of the summary ## ## Call: ## lm(formula = wt ~ age, data = growgam1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3.924 -0.785 0.007 0.797 4.068 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 6.8376 0.2101 32.5 &lt;2e-16 *** ## age 0.1653 0.0111 14.9 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.27 on 188 degrees of freedom ## Multiple R-squared: 0.541, Adjusted R-squared: 0.538 ## F-statistic: 221 on 1 and 188 DF, p-value: &lt;2e-16 print(anova(slm), digits = 8) # show the sum of squares for the fitted model and residuals ## Analysis of Variance Table ## ## Response: wt ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## age 1 359.06320 359.06320 221.39203 &lt; 2.22e-16 *** ## Residuals 188 304.90655 1.62184 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 也可以用 stargazer 包輸出很酷的表格報告： library(stargazer) stargazer(slm, type = &quot;html&quot;) Dependent variable: wt age 0.165*** (0.011) Constant 6.838*** (0.210) Observations 190 R2 0.541 Adjusted R2 0.538 Residual Std. Error 1.274 (df = 188) F Statistic 221.400*** (df = 1; 188) Note: p&lt;0.1; p&lt;0.05; p&lt;0.01 其實結果都一樣。我們這裏詳細來看 \\(\\alpha, \\beta, \\sigma^2\\)： \\(\\hat\\alpha = 6.84\\)：當年齡爲 \\(0\\) 時，體重爲 \\(6.84 kg\\)。本數據 27.1 中並沒有 \\(0\\) 歲的兒童，所以這裏的截距的解釋需要非常小心是否合理。 \\(\\hat\\beta = 0.165\\)：這數據中兒童的體重估計隨着年齡升高 \\(1\\) 個月增長 \\(0.165 kg\\)。所以使用這兩個估計值我們就可以來估計任意年齡時兒童的體重。圖 27.2 就是擬合數據以後的簡單線性迴歸曲線。 \\(\\hat\\sigma^2 = 1.62, \\hat\\sigma=1.27\\) 就是默認輸出中最下面的 Residual standard error: 1.274 和 ANOVA 表格中 Residuals 的 Mean Sq=1.62184 部分。含義是，沿着擬合的直線，在每一個給定的年齡上兒童體重的分佈的標準差是 \\(1.27 kg\\)。 27.7 R 演示 例 2： 表27.1 數據 如果在 Stata 聽說你還需要自己生成啞變量 (dummy variables) (應該是計算時，在想要變成啞變量的變量名前面加上 i.)。在 R 裏面，分類變量被設置成因子 “factor” 時，你就完全可以忽略生成啞變量的過程。下圖 27.5 顯示了兩組兒童直立行走時的年齡。 圖 27.5: Age at walking by group 擬合簡單線性迴歸也是小菜一碟： wk_age &lt;- lm(Age ~ Group, data=Walk) summary(wk_age) ## ## Call: ## lm(formula = Age ~ Group, data = Walk) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.125 -0.738 -0.375 0.388 2.875 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 10.125 0.512 19.77 1e-08 *** ## Groupcontrol 2.225 0.760 2.93 0.017 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.25 on 9 degrees of freedom ## (1 observation deleted due to missingness) ## Multiple R-squared: 0.488, Adjusted R-squared: 0.431 ## F-statistic: 8.58 on 1 and 9 DF, p-value: 0.0168 anova(wk_age) ## Analysis of Variance Table ## ## Response: Age ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## Group 1 13.5 13.50 8.58 0.017 * ## Residuals 9 14.2 1.57 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 這裏的 \\(\\hat\\alpha=10.125\\)，意爲參照組 (此處，“exercise” 被默認設定爲參照組，而 “control” 被默認拿來和參照組相比較) 的兒童也就是，積極練習走路的小朋友這組能夠獨立行走的平均年齡是 \\(10.125\\) 個月。 \\(\\hat\\beta=2.225\\)，意爲和參照組 (積極練習組) 相比，對照組兒童能夠自己行走的年齡平均要晚 \\(2.225\\) 個月。所以對照組兒童能夠直立行走的平均年齡就是 \\(10.125+2.225=12.35\\) 個月。 上述結果，你如果拿來和下面的兩樣本 \\(t\\) 檢驗的結果相比就知道，是完全一致的。其中統計量 \\(t^2=2.9285^2=F_{1,9}=8.58\\)。 t.test(Age~Group, data=Walk, var.equal=TRUE) ## ## Two Sample t-test ## ## data: Age by Group ## t = -2.9, df = 9, p-value = 0.02 ## alternative hypothesis: true difference in means between group exercise and group control is not equal to 0 ## 95 percent confidence interval: ## -3.9437 -0.5063 ## sample estimates: ## mean in group exercise mean in group control ## 10.12 12.35 27.8 LM practical 01 使用的數據內容爲：兩次調查同一樣本，99 名健康男性的血清膽固醇水平，間隔一年。 # 數據讀入 Chol &lt;- read_dta(&quot;../backupfiles/chol.dta&quot;) summary(Chol) ## id chol1 chol2 ## Min. : 1.0 Min. :152 Min. :170 ## 1st Qu.:25.5 1st Qu.:235 1st Qu.:240 ## Median :50.0 Median :265 Median :260 ## Mean :50.0 Mean :265 Mean :264 ## 3rd Qu.:74.5 3rd Qu.:290 3rd Qu.:290 ## Max. :99.0 Max. :360 Max. :355 # Alternative Descriptive Statistics using psych package describe(Chol) ## Chol ## ## 3 Variables 99 Observations ## ---------------------------------------------------------------------------------------------------- ## id Format:%9.0g ## n missing distinct Info Mean Gmd .05 .10 .25 .50 .75 ## 99 0 99 1 50 33.33 5.9 10.8 25.5 50.0 74.5 ## .90 .95 ## 89.2 94.1 ## ## lowest : 1 2 3 4 5, highest: 95 96 97 98 99 ## ---------------------------------------------------------------------------------------------------- ## chol1 Format:%9.0g ## n missing distinct Info Mean Gmd .05 .10 .25 .50 .75 ## 99 0 51 0.999 264.6 46.11 204.5 210.0 235.0 265.0 290.0 ## .90 .95 ## 320.0 330.3 ## ## lowest : 152 170 190 200 205, highest: 333 340 350 355 360 ## ---------------------------------------------------------------------------------------------------- ## chol2 Format:%9.0g ## n missing distinct Info Mean Gmd .05 .10 .25 .50 .75 ## 99 0 30 0.997 263.5 43.28 200 215 240 260 290 ## .90 .95 ## 311 330 ## ## lowest : 170 190 195 200 205, highest: 320 330 345 350 355 ## ---------------------------------------------------------------------------------------------------- # 兩次膽固醇水平的直方圖 Distribution of the two measures par(mfrow=c(1,2)) hist(Chol$chol1) hist(Chol$chol2) # 對兩次膽固醇水平作散點圖 ggplot(Chol, aes(x=chol1, y=chol2)) + geom_point(shape=20) + scale_x_continuous(breaks=seq(150, 400, 50),limits = c(150, 355))+ scale_y_continuous(breaks=seq(150, 400, 50),limits = c(150, 355)) + theme_stata() +labs(x = &quot;Cholesterol at visit 1 (mg/100ml)&quot;, y = &quot;Cholesterol at visit 2 (mg/100ml)&quot;) 27.8.1 兩次測量的膽固醇水平分別用 \\(C_1, C_2\\) 來標記的話，考慮這樣的簡單線性迴歸模型：\\(C_2=\\alpha+\\beta C_2 + \\varepsilon\\)。我們進行這樣迴歸的前提假設有哪些？ 每個觀察對象互相獨立。 前後兩次測量的膽固醇水平呈線性相關。 殘差值，在每一個給定的 \\(C_1\\) 值處呈現正態分佈，且方差不變。 從散點圖來看這些假設應該都能得到滿足。 # 計算兩次膽固醇水平的 均值，方差，以及二者的協方差 mean(Chol$chol1); mean(Chol$chol2) ## [1] 264.6 ## [1] 263.5 var(Chol$chol1); var(Chol$chol2) ## [1] 1661 ## [1] 1457 cov(Chol$chol1, Chol$chol2) ## [1] 961.2 27.8.2 計算普通最小二乘法 (OLS) 下，截距和斜率的估計值 \\(\\hat\\alpha, \\hat\\beta\\) \\[ \\begin{aligned} \\hat\\beta &amp;= \\frac{\\sum_{i=1}^n(x_i-\\bar{x})(y_i-\\bar{y})}{\\sum_{i=1}^n(x_i-\\bar{x})^2}\\\\ &amp;=\\frac{\\text{Cov}(C_1,C_2)}{\\text{Var}(C_1)}\\\\ &amp;=\\frac{1661.061}{961.224}=0.578 \\end{aligned} \\] cov(Chol$chol1, Chol$chol2)/var(Chol$chol1) ## [1] 0.5787 \\[\\hat\\alpha=\\bar{y}-\\hat\\beta\\bar{x}=263.54-0.578\\times264.59=110.425\\] mean(Chol$chol2)-mean(Chol$chol1)*cov(Chol$chol1, Chol$chol2)/var(Chol$chol1) ## [1] 110.4 27.8.3 和迴歸模型計算的結果作比較，解釋這些估計值的含義 summary(lm(chol2~chol1, data=Chol)) ## ## Call: ## lm(formula = chol2 ~ chol1, data = Chol) ## ## Residuals: ## Min 1Q Median 3Q Max ## -56.88 -22.06 1.85 16.63 84.12 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 110.4247 20.0113 5.52 2.8e-07 *** ## chol1 0.5787 0.0748 7.74 9.5e-12 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 30.2 on 97 degrees of freedom ## Multiple R-squared: 0.382, Adjusted R-squared: 0.375 ## F-statistic: 59.9 on 1 and 97 DF, p-value: 9.51e-12 截距的估計值是 110.4 mg/100ml: 意爲這組樣本，第一次採集數據時，膽固醇水平的平均值是 110.4。 斜率的估計值是 0.58：意爲第一次採集的膽固醇水平每高 1 mg/100ml，那麼第二次採集的膽固醇相應提高的值的期待量爲 0.58. 27.8.4 加上計算的估計值直線 (即迴歸直線) ggplot(Chol, aes(x=chol1, y=chol2)) + geom_point(shape=20, colour=&quot;grey40&quot;) + stat_smooth(method = lm, se=FALSE, size=0.5) + scale_x_continuous(breaks=seq(150, 400, 50),limits = c(150, 355))+ scale_y_continuous(breaks=seq(150, 400, 50),limits = c(150, 355)) + theme_stata() +labs(x = &quot;Cholesterol at visit 1 (mg/100ml)&quot;, y = &quot;Cholesterol at visit 2 (mg/100ml)&quot;) ## `geom_smooth()` using formula &#39;y ~ x&#39; 可以注意到，第一次訪問時膽固醇水平高的人，第二次被測量時膽固醇值高於平均值，但是卻沒有第一次高出平均值的部分多。 相似的，第一次膽固醇水平低的人，第二次膽固醇水平低於平均值，但是卻沒有第一次低於平均值的部分多。這一現象被叫做 “向均數迴歸-regression to the mean” 27.8.5 下面的代碼用於模型的假設診斷 M &lt;- lm(chol2~chol1, data=Chol) par(mfrow = c(2, 2)) # Split the plotting panel into a 2 x 2 grid plot(M) 好心人在 github 上共享了 Check_assumption.R 的代碼，可以使用 ggplot2 來獲取高逼格的模型診斷圖： source(&quot;../checkassumptions.R&quot;) check_assumptions(M) "],["OLS.html", "第 28 章 最小二乘估計的性質和推斷 Ordinary Least Squares Estimators and Inference 28.1 OLS 估計量的性質 28.2 \\(\\hat\\beta\\) 的性質 28.3 截距和迴歸係數的方差，協方差 28.4 \\(\\alpha, \\beta\\) 的推斷 28.5 線性迴歸模型和 Pearson 相關係數 28.6 Pearson 相關係數和模型迴歸係數的檢驗統計量 \\(t\\) 之間的關係 28.7 LM practical 02", " 第 28 章 最小二乘估計的性質和推斷 Ordinary Least Squares Estimators and Inference 前一章介紹了簡單線性迴歸模型中對總體參數 \\(\\alpha, \\beta, \\sigma^2\\) 的估計公式，分別是 (27.5) (27.6) (27.9)。本章繼續介紹他們的統計學性質。下面的標記和統計量也會被用到： \\(\\bar{y}=\\frac{\\sum_{i=1}^n y_i}{n}\\)，因變量 \\(y\\) 的樣本均值； \\(\\bar{x}=\\frac{\\sum_{i=1}^n x_i}{n}\\)，預測變量 \\(x\\) 的樣本均值； \\(SS_{yy}=\\sum_{i=1}^n(y_i-\\bar{y})^2\\)，因變量 \\(y\\) 的校正平方和； \\(SS_{xx}=\\sum_{i=1}^n(x_i-\\bar{x})^2\\)，預測變量 \\(x\\) 的校正平方和； \\(SD_y^2=\\frac{\\sum_{i=1}(y_i-\\bar{y})^2}{n-1}=\\frac{SS_{yy}}{n-1}\\)，因變量 \\(y\\) 的樣本方差； \\(SD_x^2=\\frac{\\sum_{i=1}(x_i-\\bar{x})^2}{n-1}=\\frac{SS_{xx}}{n-1}\\)，預測變量 \\(x\\) 的樣本方差； \\(S_{xy}=\\sum_{i=1}^n(x_i-\\bar{x})(y_i-\\bar{y})\\)，\\(x,y\\) 的交叉乘積； \\(CV_{xy}=\\frac{\\sum_{i=1}^n(x_i-\\bar{x})(y_i-\\bar{y})}{n-1}=\\frac{S_{xy}}{n-1}\\)，樣本協方差； \\(r_{xy}=\\frac{CV_{xy}}{SD_xSD_y}\\)，\\(x,y\\) 的樣本相關係數； \\(SS_{RES}=\\sum_{i=1}^n\\hat\\varepsilon^2=\\sum_{i=1}^n(y_i-\\hat\\alpha-\\hat\\beta x_i)^2\\)，殘差的估計平方和。 28.1 OLS 估計量的性質 樣本估計的迴歸直線必定穿過數據的中心 \\((\\bar{x},\\bar{y})\\)。 證明 由於樣本估計的截距和斜率公式 (27.5) (27.6) 可知： \\[ \\begin{aligned} \\hat\\alpha &amp;= \\bar{y} - \\hat\\beta\\bar{x} \\\\ \\hat y_i &amp;= \\hat\\alpha + \\hat\\beta x_i \\\\ \\Rightarrow \\hat y_i &amp;= \\bar{y}+\\hat\\beta(x_i-\\bar{x}) \\end{aligned} \\tag{28.1} \\] 所以，當 \\(\\hat x_i=\\bar{x}\\) 時 \\(\\hat y_i=\\bar{y}\\)。即迴歸直線必然穿過中心點。 如果擬合模型是正確無誤的， \\(\\hat\\alpha,\\hat\\beta,\\hat\\sigma^2\\) 分別是各自的無偏估計。 \\(\\hat\\alpha, \\hat\\beta\\) 是極大似然估計， \\(\\hat\\sigma^2\\) 不是MLE。 \\(\\hat\\alpha, \\hat\\beta\\) 是 \\(\\alpha, \\beta\\) 最有效的估計量。 28.2 \\(\\hat\\beta\\) 的性質 \\[ \\begin{equation} \\hat\\beta=\\frac{S_{xy}}{SS_{xx}}=\\frac{CV_{xy}}{SD_x^2} \\end{equation} \\tag{28.2} \\] 28.2.1 \\(Y\\) 對 \\(X\\) 迴歸， 和 \\(X\\) 對 \\(Y\\) 迴歸 如果我們使用 \\(\\hat\\beta_{y|x}\\) 表示預測變量 \\(x\\)，因變量 \\(y\\) 的簡單線性迴歸係數，那麼我們就有： \\[ \\begin{equation} \\hat\\beta_{y|x} = \\frac{CV_{xy}}{SD_x^2} \\text{ and } \\hat\\beta_{x|y} = \\frac{CV_{xy}}{SD_y^2} \\\\ \\text{Hence, } \\hat\\beta_{y|x}\\hat\\beta_{x|y} = r^2_{xy} \\end{equation} \\tag{28.3} \\] 公式 (28.3) 也證明了：如果兩個變量相關係數爲 \\(1\\) (100% 相關)， \\(Y\\) 對 \\(X\\) 迴歸的迴歸係數，是 \\(X\\) 對 \\(Y\\) 迴歸的迴歸係數的倒數。 28.2.2 例 1： 還是圖 27.1 數據 library(haven) growgam1 &lt;- read_dta(&quot;../backupfiles/growgam1.dta&quot;) # regress wt on age summary(lm(wt~age, data=growgam1)) ## ## Call: ## lm(formula = wt ~ age, data = growgam1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3.924 -0.785 0.007 0.797 4.068 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 6.8376 0.2101 32.5 &lt;2e-16 *** ## age 0.1653 0.0111 14.9 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.27 on 188 degrees of freedom ## Multiple R-squared: 0.541, Adjusted R-squared: 0.538 ## F-statistic: 221 on 1 and 188 DF, p-value: &lt;2e-16 print(anova(lm(wt~age, data=growgam1)), digits = 8) ## Analysis of Variance Table ## ## Response: wt ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## age 1 359.06320 359.06320 221.39203 &lt; 2.22e-16 *** ## Residuals 188 304.90655 1.62184 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # regress age on wt summary(lm(age~wt, data=growgam1)) ## ## Call: ## lm(formula = age ~ wt, data = growgam1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -16.010 -4.239 0.083 3.130 21.111 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -14.57 2.16 -6.75 1.8e-10 *** ## wt 3.27 0.22 14.88 &lt; 2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 5.66 on 188 degrees of freedom ## Multiple R-squared: 0.541, Adjusted R-squared: 0.538 ## F-statistic: 221 on 1 and 188 DF, p-value: &lt;2e-16 print(anova(lm(age~wt, data=growgam1)), digits = 8) ## Analysis of Variance Table ## ## Response: age ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## wt 1 7103.6730 7103.6730 221.39203 &lt; 2.22e-16 *** ## Residuals 188 6032.2428 32.0864 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 可以看到二者的輸出結果中統計檢驗量一樣，但是一個是將體重針對年齡迴歸，另一個則是反過來，所以迴歸係數和截距都不同。迴歸方程的含義也就發生了變化。如果把兩條迴歸曲線同時作圖可以更加直觀： ## `geom_smooth()` using formula &#39;y ~ x&#39; 圖 28.1: Simple linear regression model line relating weight to age ## `geom_smooth()` using formula &#39;y ~ x&#39; 圖 28.2: Simple linear regression model line relating age to weight 28.3 截距和迴歸係數的方差，協方差 假如簡單線性迴歸模型是正確的，那麼截距 \\(\\hat\\alpha\\) 和迴歸係數 \\(\\hat\\beta\\) 的方差分別是： \\[ \\begin{equation} V(\\hat\\alpha) = \\sigma^2(\\frac{1}{n}+\\frac{\\bar{x}^2}{SS_{xx}}) = \\frac{\\sigma^2}{(n-1)} (1-\\frac{1}{n}+\\frac{\\bar{x}^2}{SD_x^2}) \\end{equation} \\tag{28.4} \\] \\[ \\begin{equation} V(\\hat\\beta) = \\frac{\\sigma^2}{SS_{xx}}=\\frac{\\sigma^2}{(n-1)SD_x^2} \\end{equation} \\tag{28.5} \\] 從公式 (28.4) 和 (28.5) 也可以看出，兩個估計量的方差隨着殘差方差的增加而增加 (估計不精確)，隨着樣本量的增加而減少 (估計更精確)。截距 \\(\\hat\\alpha\\) 的方差會隨着樣本均值的增加而增加。 通常來說，截距和迴歸係數二者之間並非相互獨立。他們的協方差爲： \\[ \\begin{equation} Cov(\\hat\\alpha,\\hat\\beta) = -\\frac{\\sigma^2\\bar{x}}{SS_{xx}} \\end{equation} \\tag{28.6} \\] 上面的公式 (28.4) (28.5) (28.6) 都包含了真實的殘差方差 \\(\\sigma^2\\)。這個量對於我們“人類”來說是未知的。 28.3.1 中心化 centring 簡單線性迴歸模型常用的一個技巧是將預測變量中心化。即，求預測變量的均值，然後將每個觀測值減去均值之後再用這個新的預測變量擬合簡單線性迴歸模型。這樣做其實完全不影響回顧係數，卻會影響截距的大小。此時新的迴歸直線的截距，就等於因變量 (體重) 的均值。 用圖 27.1 數據來解釋： # mean value of age mean(growgam1$age) ## [1] 16.98 growgam1$age_cen &lt;- growgam1$age-mean(growgam1$age) # regress wt on age print(summary(lm(wt~age, data=growgam1)), digit=5) ## ## Call: ## lm(formula = wt ~ age, data = growgam1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3.92418 -0.78489 0.00710 0.79747 4.06781 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 6.837584 0.210070 32.549 &lt; 2.2e-16 *** ## age 0.165331 0.011112 14.879 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.274 on 188 degrees of freedom ## Multiple R-squared: 0.54078, Adjusted R-squared: 0.53834 ## F-statistic: 221.39 on 1 and 188 DF, p-value: &lt; 2.22e-16 print(summary(lm(wt~age_cen, data=growgam1)), digit=5) ## ## Call: ## lm(formula = wt ~ age_cen, data = growgam1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3.92418 -0.78489 0.00710 0.79747 4.06781 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 9.644737 0.092391 104.391 &lt; 2.2e-16 *** ## age_cen 0.165331 0.011112 14.879 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.274 on 188 degrees of freedom ## Multiple R-squared: 0.54078, Adjusted R-squared: 0.53834 ## F-statistic: 221.39 on 1 and 188 DF, p-value: &lt; 2.22e-16 很明顯，結果顯示中心化不會改變迴歸係數，也不會改變它的方差。但是“新”的截距，其實就等於因變量 (體重) 的均值。而且很多數據都集中在這個均值附近，因而，截距的方差比沒有中心化的迴歸方程要小。 28.4 \\(\\alpha, \\beta\\) 的推斷 \\(\\hat\\alpha, \\hat\\beta\\) 都可以被改寫成關於因變量 \\(Y\\) 的方程，因此同時也是隨機誤差的方程式： \\[ \\begin{aligned} \\hat\\beta &amp;= \\sum_{i=1}^n[\\frac{(x_i-\\bar{x})}{SS_{xx}}(y_i-\\bar{y})] \\\\ \\text{Substituting } &amp;(y_i-\\bar{y}) = \\beta(x_i-\\bar{x})+(\\varepsilon_i-\\bar{\\varepsilon}) \\\\ &amp;= \\beta + \\sum_{i=1}^n[\\frac{x_i-\\bar{x}}{SS_{xx}}(\\varepsilon_i-\\bar{\\varepsilon})] \\end{aligned} \\] 又因爲，\\(\\varepsilon_i \\sim NID(0,\\sigma^2)\\)，估計量 \\(\\hat\\alpha, \\hat\\beta\\) 均爲 \\(\\varepsilon_i\\) 的線性轉換，所以他們也都是服從正態分佈的。 28.4.1 對迴歸係數進行假設檢驗 對於迴歸係數 \\(\\beta\\)，我們可以使用 Wald statistic (Section 16.4) 進行零假設爲 \\(\\text{H}_0: \\beta=0\\) 的假設檢驗。此時，替代假設爲 \\(\\text{H}_1: \\beta\\neq0\\)。最佳檢驗統計量爲： \\[ \\begin{equation} t = \\frac{\\hat\\beta-0}{SE(\\hat\\beta)} \\\\ \\end{equation} \\tag{28.7} \\] 根據公式 (28.5) \\(SE(\\hat\\beta) = \\sqrt{V(\\hat\\beta)} = \\frac{\\hat\\sigma}{\\sqrt{SS_{xx}}}\\)。用 \\(\\hat\\sigma^2\\) 替換掉公式 (28.5) 中的 \\(\\sigma^2\\)，意味着迴歸係數的檢驗統計量 \\(t\\) 服從自由度爲 \\(n-2\\) 的 \\(t\\) 分佈。之後就可以根據 \\(t\\) 分佈的性質求相應的 \\(p\\) 值了，對相關係數是否爲 \\(0\\) 進行檢驗。之所以我們可以在這裏使用 Wald 檢驗，是因爲前提條件：隨機誤差服從正態分佈，於是 \\(\\beta\\) 的對數似然比也是左右對稱的，當對數似然比的圖形左右對稱時，就可以使用二次方程來近似 (Wald 檢驗的實質)。 28.4.2 迴歸係數，截距的信賴區間 估計量 \\(\\beta\\) 的 \\(95\\%\\) 信賴區間的計算公式如下： \\[ \\begin{equation} \\hat\\beta \\pm t_{n-2,0.975}SE(\\hat\\beta) \\end{equation} \\tag{28.8} \\] 其中，\\(t_{n-2, 0.975}\\) 表示自由度爲 \\(n-2\\) 的 \\(t\\) 分佈的 \\(97.5\\%\\) 位點的值。繼續使用之前的實例，圖 27.1 中的數據。體重對年齡進行簡單線性迴歸之後，年齡的估計回顧係數 \\(\\hat\\beta=0.165, SE(\\hat\\beta)=0.0111\\), 此例中 \\(n=190\\)，所以 \\(t_{188, 0.975}=1.973\\)。所以迴歸係數的 \\(95\\%\\) 信賴區間可以如此計算：\\(0.165\\pm1.973\\times0.0111=(0.143, 0.187)\\)。 類似的，估計截距 \\(\\hat\\alpha\\) 的 \\(95\\%\\) 信賴區間的計算式便是： \\(\\hat\\alpha \\pm t_{n-2, 0.975}SE(\\hat\\alpha)\\)。同樣的例子裏，\\(\\hat\\alpha=6.838, SE(\\hat\\beta) = 0.210, t_{188, 0.975}=1.973\\)。所以截距的 \\(95\\%\\) 信賴區間的計算方法就是： \\(6.838\\pm1.973\\times0.210=(6.42, 7.25)\\) 跟下面 R 計算的完全一樣： confint(lm(wt~age, data=growgam1)) ## 2.5 % 97.5 % ## (Intercept) 6.4232 7.2520 ## age 0.1434 0.1873 28.4.3 預測值的信賴區間 (置信帶) - 測量迴歸曲線本身的不確定性 這裏所謂的“預測值”其實並沒有拿來預測什麼新的數值，而是說我們希望通過線性迴歸找到因變量真實值的存在區間 (信賴區間)。所以這個預測值的真實含義其實應該是在預測變量取 \\(X=x\\) 時，因變量的期待值，\\(E(Y|X=x)\\)。 這個預測值的方差公式如下： \\[ \\begin{equation} V(\\hat y_{x}) = \\sigma^2[\\frac{1}{n}+\\frac{(x_i-\\bar{x})^2}{SS_{xx}}] \\end{equation} \\tag{28.9} \\] 於是可以計算它的 \\(95\\%\\) 信賴區間公式是： \\[ \\begin{equation} \\hat y_x \\pm t_{n-2, 0.975} \\hat\\sigma \\sqrt{[\\frac{1}{n}+\\frac{(x-\\bar{x})^2}{SS_{xx}}]} \\end{equation} \\tag{28.10} \\] 其實在之前的圖 (圖 27.2) 我們也已經展示過這個信賴區間的範圍。 28.4.4 預測帶 Reference range - 包含了 95% 觀察值的區間 此處的 \\(95\\%\\) 預測帶，其實是包含了 \\(95\\%\\) 觀察數據的區間。所以預測帶要比置信帶更寬。它的方差計算公式爲： \\[ \\begin{equation} V(\\hat y_x)+\\sigma^2 = \\sigma^2[1+\\frac{1}{n}+\\frac{(x-\\bar{x})^2}{SS_{xx}}] \\end{equation} \\tag{28.11} \\] 區間計算公式爲： \\[ \\begin{equation} \\hat{y}_x \\pm t_{n-2, 0.975} \\sqrt{1+\\frac{1}{n}+\\frac{(x-\\bar{x})^2}{SS_{xx}}} \\end{equation} \\tag{28.12} \\] 將置信帶和預測帶同時展現則如下圖： growgam1 &lt;- read_dta(&quot;../backupfiles/growgam1.dta&quot;) Model &lt;- lm(wt~age, data=growgam1) temp_var &lt;- predict(Model, interval=&quot;prediction&quot;) new_df &lt;- cbind(growgam1, temp_var) ggplot(new_df, aes(x=age, y=wt)) + geom_point(shape=20, colour=&quot;grey40&quot;) + stat_smooth(method = lm, se=TRUE, size = 0.3) + geom_line(aes(y=lwr), color = &quot;red&quot;, linetype = &quot;dashed&quot;)+ geom_line(aes(y=upr), color = &quot;red&quot;, linetype = &quot;dashed&quot;)+ scale_x_continuous(breaks=seq(0, 38, 4),limits = c(0,36.5))+ scale_y_continuous(breaks = seq(0, 20, 5),limits = c(0,20.5)) + theme_stata() +labs(x = &quot;Age (Months)&quot;, y = &quot;Weight (kg)&quot;) ## `geom_smooth()` using formula &#39;y ~ x&#39; 圖 28.3: Simple linear regression for age and weight of children in a cross-sectional survey with 95% CI of predicted values and 95% reference range 28.5 線性迴歸模型和 Pearson 相關係數 前面也推導過線性迴歸係數和 Pearson 相關係數之間的關係 (Section 28.2.1)，這裏詳細再展開討論它們之間關係的另外兩個重要結論。 28.5.1 \\(r^2\\) 可以理解爲因變量平方和被模型解釋的比例 Pearson 相關係數，因變量的平方和，模型的殘差平方和之間有如下的關係： \\[ \\begin{equation} r^2 = \\frac{SS_{yy}-SS_{RES}}{SS_{yy}} = 1-\\frac{SS_{RES}}{SS_{yy}} \\end{equation} \\tag{28.13} \\] 證明 \\[ \\frac{SS_{RES}}{SS_{yy}} = \\frac{\\sum_{i=1}^n(y_i-\\hat\\alpha-\\hat\\beta x_i)^2}{\\sum_{i=1}^n(y_i-\\bar{y})^2} \\] 因爲 (27.5) : \\(\\hat\\alpha=\\bar{y}-\\hat{\\beta}\\bar{x}\\) \\[ \\begin{aligned} \\frac{SS_{RES}}{SS_{yy}} &amp;= \\frac{\\sum_{i=1}^n[(y_i-\\bar{y})-\\hat\\beta(x_i-\\bar{x})]^2}{\\sum_{i=1}^n(y_i-\\bar{y})^2} \\\\ &amp;=\\frac{\\sum_{i=1}^n(y_i-\\bar{y})^2}{\\sum_{i=1}^n(y_i-\\bar{y})^2}-\\frac{2\\hat\\beta\\sum_{i=1}^n(x_i-\\bar{x})(y_i-\\bar{y})}{\\sum_{i=1}^n(y_i-\\bar{y})^2}+\\frac{\\hat\\beta^2\\sum_{i=1}^n(x_i-\\bar{x})^2}{\\sum_{i=1}^n(y_i-\\bar{y})^2}\\\\ &amp;=1-\\frac{2\\hat\\beta S_{xy}}{SS_{yy}} + \\frac{\\hat\\beta^2SS_{xx}}{SS_{yy}} \\end{aligned} \\] 又因爲 \\(\\hat\\beta=\\frac{\\sum_{i=1}^n(x_i-\\bar{x})(y_i-\\bar{y})}{\\sum_{i=1}^n(x_i-\\bar{x})^2}=\\frac{S_{xy}}{SS_{xx}}, r^2=\\frac{S_{xy}^2}{SS_{xx}SS_{yy}}\\)。 \\[ \\begin{aligned} \\frac{SS_{RES}}{SS_{yy}} &amp;= 1-\\frac{2S_{xy}^2}{SS_{yy}SS_{xx}}+\\frac{S_{xy}^2}{SS_{xx}SS_{yy}}\\\\ &amp;=1-2r^2+r^2\\\\ &amp;=1-r^2\\\\ \\Rightarrow r^2&amp;=1-\\frac{SS_{RES}}{SS_{yy}} \\end{aligned} \\] 因此，這裏就引出了非常重要的一個結論，Pearson 相關係數的平方 \\(r^2\\) 的統計學含義是，因變量的平方和 \\(SS_{yy}\\) 中，模型的預測變量能夠解釋的部分 \\(1-SS_{RES}\\) 的百分比。 統計學結果的報告中，爲了和一般相關係數的意義區分，會用大寫的 \\(R^2\\) 來表示這個模型解釋了因變量的百分比。(Section 29.2.3) 28.6 Pearson 相關係數和模型迴歸係數的檢驗統計量 \\(t\\) 之間的關係 \\[ \\begin{equation} t=r\\sqrt{\\frac{n-2}{1-r^2}} \\end{equation} \\tag{28.14} \\] 證明 由於前面推導的 \\(r^2\\) 公式 (28.13)，而且 \\(r^2=\\frac{S_{xy}^2}{SS_{xx}SS_{yy}}\\)： \\[ \\begin{aligned} \\frac{r^2}{1-r^2} &amp; = \\frac{\\frac{S_{xy}^2}{SS_{xx}SS_{yy}}}{\\frac{SS_{RES}}{SS_{yy}}} \\\\ &amp; = \\frac{S_{xy}^2}{SS_{xx}SS_{RES}} \\\\ &amp; = \\frac{S_{xy}^2}{SS_{xx}(n-2)\\hat\\sigma^2} \\end{aligned} \\] 由於公式 (28.5)，所以 \\(\\hat\\sigma^2=V(\\hat\\beta)SS_{xx}\\) \\[ \\begin{aligned} \\frac{r^2}{1-r^2} &amp; = \\frac{S_{xy}^2}{SS^2_{xx}(n-2)V(\\hat\\beta)} \\\\ &amp; = \\frac{\\hat\\beta^2}{(n-2)V(\\hat\\beta)} \\\\ \\Rightarrow t=r\\sqrt{\\frac{n-2}{1-r^2}} \\end{aligned} \\] 這個結論也被用於相關係數的假設檢驗。而且也正如 Section 28.2.1 證明過的那樣，在簡單線性迴歸裏因變量和預測變量的位置對調以後，對於回顧係數是否爲零的檢驗統計量不受影響。 28.7 LM practical 02 數據同前一章練習部分數據相同 27.8： # 數據讀入 Chol &lt;- read_dta(&quot;../backupfiles/chol.dta&quot;) Model &lt;- lm(chol2~chol1, data=Chol) print(summary(Model), digit=6) ## ## Call: ## lm(formula = chol2 ~ chol1, data = Chol) ## ## Residuals: ## Min 1Q Median 3Q Max ## -56.87654 -22.06181 1.84937 16.63107 84.11839 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 110.4246582 20.0113279 5.51811 2.8499e-07 *** ## chol1 0.5786806 0.0747598 7.74053 9.5114e-12 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 30.16 on 97 degrees of freedom ## Multiple R-squared: 0.381834, Adjusted R-squared: 0.375462 ## F-statistic: 59.9159 on 1 and 97 DF, p-value: 9.51139e-12 print(anova(Model), digit=6) ## Analysis of Variance Table ## ## Response: chol2 ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## chol1 1 54511.7 54511.7 59.9159 9.5114e-12 *** ## Residuals 97 88250.9 909.8 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # 計算截距和迴歸係數的 P 值 HAND CALCULATIONS twosided p-value in R can be obtained by pt(t, df) function ## p value for intercept: 110.42466/20.01133 #=5.518107 ## [1] 5.518 2*pt(5.518107, 97, lower.tail = FALSE) ## [1] 2.85e-07 ## p value for beta: 0.57868/0.07476 #= 7.740503 ## [1] 7.741 2*pt(7.740503, 97, lower.tail = FALSE) ## [1] 9.513e-12 # add fitted regression lines 95% CIs and reference range temp_var &lt;- predict(Model, interval=&quot;prediction&quot;) new_df &lt;- cbind(Chol, temp_var) ggplot(new_df, aes(x=chol1, y=chol2)) + geom_point(shape=20, colour=&quot;grey40&quot;) + stat_smooth(method = lm, se=TRUE, size=0.5) + geom_line(aes(y=lwr), color = &quot;red&quot;, linetype = &quot;dashed&quot;)+ geom_line(aes(y=upr), color = &quot;red&quot;, linetype = &quot;dashed&quot;)+ scale_x_continuous(breaks=seq(150, 400, 50),limits = c(150, 355))+ scale_y_continuous(breaks=seq(150, 400, 50),limits = c(150, 355)) + theme_stata() +labs(x = &quot;Cholesterol at visit 1 (mg/100ml)&quot;, y = &quot;Cholesterol at visit 2 (mg/100ml)&quot;) 圖中可見，95% 置信帶變化顯著，距離均值越遠的地方，置信帶越寬。然而預測帶基本是平行的沒有變化。因爲預測帶的涵義是，95%的觀察數據都在這個區間範圍內。 "],["ANOVA.html", "第 29 章 方差分析 Introduction to Analysis of Variance 29.1 背景 29.2 簡單線性迴歸模型的方差分析 29.3 分類變量用作預測變量時的 ANOVA 29.4 LM practical 03", " 第 29 章 方差分析 Introduction to Analysis of Variance 29.1 背景 當我們用統計模型模擬真實數據的時候，我們常常會被問到這樣的問題：“兩個模型哪個能更好的擬合這個數據？” 本章我們先考慮簡單的情況，兩個模型互相比較時，其中一個稍微簡單些的模型使用的預測變量，同時也是另一個較複雜的模型的預測變量 (nested models)。所以，複雜模型的預測變量較多，而其中一個或者幾個預測變量又構成了新的較爲簡單的模型。這兩個模型之間的比較，就需要用到方差分析 Analysis of Variance (ANOVA)。 此處方差分析的原則是：如果複雜模型能夠更好的擬合真實實驗數據，那我們會認爲簡單模型無法解釋的大量殘差平方和，有效地被複雜模型解釋了。所以，這一原則下，可以推理，複雜模型計算獲得的殘差平方和，會顯著地小於簡單模型計算獲得的殘差平方和。ANOVA 就提供了這個殘差平方和變化的定量比較方法。 29.2 簡單線性迴歸模型的方差分析 其實從線性迴歸的第一章節開始，我們都在使用方差分析的思想。圖 27.1 數據的迴歸模型中，我們其實比較了以下兩個模型： 零假設模型：null model, 即認爲年齡和體重之間沒有任何關係 (水平直線)； 替代模型： alternative model, 認爲年齡和體重之間有一定的線性關係 (擬合後的直線)。 ## `geom_smooth()` using formula &#39;y ~ x&#39; 圖 29.1: NULL (red) and Alternative models (blue) for the data 29.2.1 兩個模型的參數估計 無論是零假設模型，還是替代假設模型，都需要通過最小化殘差來獲得其參數估計： \\[ SS_{RES} = \\sum_{i=1}^n \\hat\\varepsilon^2= \\sum_{i=1}^n(y_i-\\hat y_i)^2 \\] 替代假設模型，在線性迴歸第一部分 (Section 27.3.1) 已經提到過，均值方程是 \\(E(Y|X=x) = \\alpha+\\beta x\\)，且這個方程的參數 \\(\\alpha, \\beta\\) 以及殘差方差 \\(\\sigma^2\\) 的估計值計算公式也已經推導完成 (27.5) (27.6) (27.9)。 零假設模型，它的均值方程是 \\(E(Y|X=x)=\\alpha\\)。所以需要將它的殘差最小化： \\[ SS_{RES} = \\sum_{i=1}^n(y_i-\\hat\\alpha)^2 \\] 由於 (27.5) ：\\(\\hat\\alpha=\\bar{y}-\\hat\\beta\\)，所以 \\(\\hat\\alpha = \\bar{y}\\)。 所以對於零假設模型來說： \\[ SS_{RES} = \\sum_{i=1}^n(y_i-\\bar{y})^2 =SS_{yy} \\] 因此，沒有預測變量的零假設模型，它的殘差平方和，就等於因變量的平方和。 29.2.2 分割零假設模型的殘差平方和 ANOVA，方差分析的原則，其實就是將較簡單模型 (零假設模型) 的殘差平方和 \\((SS_{RES_{NULL}})\\)，分割成下面兩個部分： 替代假設的複雜模型能夠說明的模型平方和 \\((SS_{REG})\\)； 替代假設的複雜模型的殘差平方和 \\((SS_{RES_{ALT}})\\)。 用數學表達式表示爲： \\[ \\begin{equation} \\sum_{i=1}^n(y_i-\\bar{y})^2 = \\sum_{i=1}^n(\\hat{y}-\\bar{y})^2 + \\sum_{i=1}^n(y_i-\\hat{y}_i)^2 \\\\ SS_{RES_{NULL}}(SS_{yy}) = SS_{REG} + SS_{RES_{ALT}} \\end{equation} \\tag{29.1} \\] 證明 \\[ \\begin{aligned} \\sum_{i=1}^n(y_i-\\bar{y})^2 &amp;= \\sum_{i=1}^n[(\\hat{y}-\\bar{y})+(y_i-\\hat{y})]^2\\\\ &amp;= \\sum_{i=1}^n(\\hat{y}-\\bar{y})^2+\\sum_{i=1}^n(y_i-\\hat{y})^2+2\\sum_{i=1}^n(\\hat{y}_i-\\bar{y})(y_i-\\hat{y}) \\\\ &amp;= SS_{REG} + SS_{RES_{ALT}} + 2\\sum_{i=1}^n(\\hat{y}_i-\\bar{y})(y_i-\\hat{y}) \\end{aligned} \\] 接下來就是要證明 \\(\\sum_{i=1}^n(\\hat{y}_i-\\bar{y})(y_i-\\hat{y})=0\\) 因爲公式 (28.1) \\(\\hat{y}_i=\\bar{y}+\\hat{\\beta}(x_i-\\bar{x})\\) 所以公式變形如下： \\[ \\begin{aligned} \\sum_{i=1}^n(\\hat{y}_i-\\bar{y})(y_i-\\hat{y}) &amp;= \\sum_{i=1}^n(\\bar{y}+\\hat\\beta(x_i-\\bar{x})-\\bar{y})(y_i-\\bar{y}-\\hat\\beta(x_i-\\bar{x})) \\\\ &amp;= \\sum_{i=1}^n\\hat\\beta(x_i-\\bar{x})[y_i-\\bar{y}-\\hat\\beta(x_i-\\bar{x})] \\\\ &amp;= \\hat\\beta\\sum_{i=1}^n(x_i-\\bar{x})(y_i-\\bar{y}) - \\hat\\beta^2\\sum_{i=1}^n(x_i-\\bar{x}) \\\\ &amp;= \\frac{S_{xy}}{S_{xx}}S_{xy} - (\\frac{S_{xy}}{S_{xx}})^2SS_{xx}\\\\ &amp;= 0 \\\\ \\Rightarrow SS_{RES_{NULL}}(SS_{yy}) &amp;= SS_{REG} + SS_{RES_{ALT}} \\end{aligned} \\] 29.2.3 \\(R^2\\) – 我的名字叫決定係數 coefficient of determination 在公式 (29.1) 中，因變量的平方和被分割成了兩個部分：\\(SS_{REG}\\) 迴歸模型能說明的部分，和 \\(SS_{RES_{ALT}}\\) 迴歸模型的殘差平方和。所以，我們定義迴歸模型能說明的部分，佔因變量平方和的百分比 \\(\\frac{SS_{REG}}{SS_{yy}}\\)，爲決定係數 \\(R^2\\)。 這個決定係數之前 (Section 28.5) 也出現過： \\[ \\begin{equation} R^2 = \\frac{SS_{REG}}{SS_{yy}} = \\frac{\\sum_{i=1}^n(\\hat{y}_i-\\bar{y})^2}{\\sum_{i=1}^n(y_i-\\bar{y})^2} = 1-\\frac{\\sum_{i=1}^n(y_i-\\hat{y}_i)^2}{\\sum_{i=1}^n(y_i-\\bar{y})^2} \\end{equation} \\tag{29.2} \\] 再一次回到數據 (27.1) 的線性迴歸來看： growgam1 &lt;- read_dta(&quot;../backupfiles/growgam1.dta&quot;) Model &lt;- lm(wt~age, data=growgam1) print(summary(Model), digit=6) ## ## Call: ## lm(formula = wt ~ age, data = growgam1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3.924182 -0.784889 0.007099 0.797468 4.067806 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 6.8375842 0.2100701 32.5491 &lt; 2.22e-16 *** ## age 0.1653314 0.0111115 14.8793 &lt; 2.22e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.274 on 188 degrees of freedom ## Multiple R-squared: 0.540782, Adjusted R-squared: 0.53834 ## F-statistic: 221.392 on 1 and 188 DF, p-value: &lt; 2.22e-16 R 輸出的結果中最下面的部分 Multiple R-squared: 0.5408。我們就可以用“人話”來解釋其意義：假定年齡和體重成直線關係，那麼年齡解釋了這組數據中兒童體重變化 (平方和) 的 54%。 29.2.4 方差分析表格 the ANOVA table 一般情況下一個簡單線性迴歸，通過 ANOVA 對因變量平方和的分割，會被彙總成下面這樣的表格： 表 28.1: Analysis of Variance table for a simple liear regression model Source of Variation Sum of Squares Degrees of Freedom Mean Sum of Squares Regression (model) \\(SS_{reg}\\) \\(1\\) \\(MS_{reg} = \\frac{SS_{reg}}{1}\\) Residual \\(SS_{res}\\) \\(n-2\\) \\(MS_{res} = \\frac{SS_{res}}{(n-2)}\\) Total \\(SS_{yy}\\) \\(n-1\\) \\(\\frac{SS_{yy}}{(n-1)}\\) 表格中最右邊一列是平均平方和 (mean sum of squares)。它的定義是將平方和除以各自的自由度。其中殘差的平均平方和 \\(MS_{RES}=\\frac{SS_{RES}}{(n-2)}\\) 是替代模型下殘差方差的無偏估計。總體平均平方和 (total mean sum of squares)，則是零假設模型時的殘差方差估計。在 R 裏面也已經演示過多次 anova(model) 是調取方差分析表格的代碼： Model &lt;- lm(wt~age, data=growgam1) print(anova(Model), digit=8) ## Analysis of Variance Table ## ## Response: wt ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## age 1 359.06320 359.06320 221.39203 &lt; 2.22e-16 *** ## Residuals 188 304.90655 1.62184 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 注意到 R 省略掉第三行總體平方和的部分，不過其實也不太需要。檢驗統計量 F 的計算也很簡單，就是359.06320/1.62184=221.39。 29.2.5 用 ANOVA 進行假設檢驗 在 ANOVA 中使用的檢驗手段是 \\(F\\) 檢驗。這裏用 \\(F\\) 檢驗來比較模型解釋的因變量平方和部分 \\((SS_{REG})\\) 和這個模型不能解釋的殘差平方和部分 \\(SS_{RES}\\) 經過自由度校正以後比值的大小。 此時我們需要知道零假設和替代假設 \\(\\text{H}_0: \\beta=0 \\text{ v.s. H}_1: \\beta\\neq0\\) 時，\\(SS_{REG}, SS_{RES}\\) 的分佈。 零假設和替代假設時，\\(SS_{RES}\\) 均服從自由度爲 \\(n-2\\) 的卡方分佈： \\[ \\begin{equation} \\text{Because } SS_{RES} = \\sum_{i=1}^n \\varepsilon \\sim N(0, \\sigma^2)\\\\ \\frac{SS_{RES}}{\\sigma^2} \\sim \\chi^2_{n-2} \\end{equation} \\tag{29.3} \\] 零假設時， \\(SS_{REG}\\) 服從自由度爲 \\(1\\) 的卡方分佈，且與 \\(SS_{RES}\\) 相互獨立： \\[ \\begin{equation} \\frac{SS_{REG}}{\\sigma^2} \\sim \\chi^2_1 \\end{equation} \\tag{29.4} \\] 替代假設時，\\(SS_{REG}\\) 服從一個非中心化的卡方檢驗，且與 \\(SS_{RES}\\) 相互獨立： \\[ \\begin{equation} SS_{REG} = \\beta^2 SS_{xx} + U \\text{ where }\\frac{U}{\\sigma^2} \\sim \\chi_1^2 \\end{equation} \\tag{29.5} \\] 29.2.6 簡單線性迴歸時的 \\(F\\) 檢驗 如果兩個隨機變量各自服從相應自由度的卡方分佈，他們的每個元素的比值服從 \\(F\\) 分佈： \\[ A\\sim \\chi_a^2 \\text{ and } B\\sim \\chi_b^2\\\\ \\Rightarrow \\frac{A/a}{B/b} \\sim F_{a,b} \\] 因此，目前爲止的推導過程我們也可以看到，在零假設條件下，\\(MS_{REG}\\) 和 \\(MS_{RES}\\) 的比值會服從 \\(F\\) 分佈，自由度爲 \\((1, n-2)\\)： \\[ \\begin{equation} F=\\frac{SS_{REG}/1}{SS_{RES}/(n-2)} = \\frac{MS_{REG}}{MS_{RES}} \\sim F_{1,n-2} \\end{equation} \\tag{29.6} \\] 在替代假設條件下 \\((\\text{H}_1: \\beta\\neq0)\\)，\\(SS_{REG}\\) 的期望值是 \\(\\sigma^2+\\beta^2SS_{xx}\\)，所以替代假設條件下的 \\(F\\) 檢驗量總是會大於零假設時的 \\(F\\)。因此你可以看到，這是一個雙側檢驗 (\\(\\text{H}_0: \\beta=0 \\text{ v.s. H}_1: \\beta\\neq0\\))，但是由於替代假設的 \\(F\\) 總是較大，所以只需要 \\(F\\) 的右半部分的概率密度積分 (單側 \\(p\\) 值)。 29.2.7 簡單線性迴歸時 \\(F\\) 檢驗和 \\(t\\) 檢驗的一致性 證明 \\[ \\begin{aligned} &amp;F=\\frac{SS_{REG}/1}{SS_{RES}/(n-2)} = \\frac{SS_{REG}}{(SS_{yy}-SS_{REG})/(n-2)} \\\\ &amp;\\text{Since } r^2 = \\frac{SS_{REG}}{SS_{yy}} \\\\ &amp;F=(n-2)\\frac{SS_{yy}r^2}{SS_{yy}-SS_{yy}r^2}=(n-2)(\\frac{r^2}{1-r^2})=t^2 \\end{aligned} \\] 最後一步用到 (Section 28.6) 證明過的，迴歸係數檢驗統計量 \\(t\\)，和 Pearson 相關係數 \\(r\\) 之間的關係。 29.3 分類變量用作預測變量時的 ANOVA 方差分析的應用是如此的廣泛，你可以在多重迴歸中使用，也可以在模型中有分類變量時使用，甚至是同時有連續性變量和分類變量的迴歸模型中得到應用。 之前也遇到過二分類變量的簡單線性迴歸模型，當時我們的做法是使用一個啞變量來表示一個二分類變量。同樣的方法也可以用到多組分類變量上來，然後繼續使用線性迴歸。 29.3.1 一個二分類預測變量 在前面的例子 (Section 27.7) 中也已經展示過，可以通過線性迴歸來分析一個二分類變量 (實驗組對照組)，和一個連續型變量 (能直立行走時的兒童年齡)兩個變量之間的關係。而且其結果同兩樣本 \\(t\\) 檢驗的結果完全一致。 繼續回到之前用過的這個兒童行走數據 (表 27.1)： ## ## Call: ## lm(formula = Age ~ Group, data = Walk) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.1250 -0.7375 -0.3750 0.3875 2.8750 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 10.12500 0.51223 19.7663 1.007e-08 *** ## Groupcontrol 2.22500 0.75977 2.9285 0.0168 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.255 on 9 degrees of freedom ## (1 observation deleted due to missingness) ## Multiple R-squared: 0.48795, Adjusted R-squared: 0.43105 ## F-statistic: 8.5763 on 1 and 9 DF, p-value: 0.016797 ## Analysis of Variance Table ## ## Response: Age ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## Group 1 13.502 13.5017 8.5763 0.0168 * ## Residuals 9 14.169 1.5743 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 之前分析這個數據的時候也說明過了，這裏的迴歸係數 \\(2.225\\) 的含義是兩組之間均值的差異。而且注意看，這個迴歸係數是否爲零的檢驗統計量\\((t-test)\\)獲得的 \\(p\\) 值和 ANOVA 的檢驗結果 \\((F-test)\\) 也是一致的。正驗證了我們前面證明的結果。(Section 29.2.7) 29.3.2 一個模型，兩種表述 上面這個例子中，一個二分類的預測變量和一個因變量之間的關係，實際上可以用兩種數學模型來表達： 令 \\(y_i, x_i\\) 分別是第 \\(i\\) 名觀察對象的因變量 (“直立行走的年齡”)，和預測變量 (“實驗組或者對照組”) \\((i=1,\\cdots,n)\\)。那麼迴歸模型可以寫作： \\[ \\begin{equation} y_i = \\alpha+\\beta x_i + \\varepsilon_i, \\text{ where } \\varepsilon_i \\sim NID(0, \\sigma^2) \\end{equation} \\tag{29.7} \\] 其中， \\(x_i=0\\) 時，表示第 \\(i\\) 名觀察對象在實驗組； \\(x_i=1\\) 時，表示第 \\(i\\) 名觀察對象在對照組。 在這樣的迴歸模型標記下，零假設和替代假設分別是 \\(\\text{H}_0: \\beta=0 \\text{ v.s. H}_1: \\beta\\neq0\\) 另一種模型的表達方式，被叫做 ANOVA 表達方式。是如此描述上面的關係的：令 \\(y_{ki}\\) 表示第 \\(i\\) 名觀察對象，他在第 \\(k\\) 組 \\((i=1,\\cdots, n_k; k=1,2)\\)，此時的模型被寫作： \\[ \\begin{equation} y_{ki} = \\mu_k + \\varepsilon_{ki}, \\text{ where } \\varepsilon_{ki} \\sim NID(0, \\sigma^2) \\end{equation} \\tag{29.8} \\] 此時，\\(\\mu_k\\) 表示第 \\(k\\) 組因變量的均值。零假設和替代假設分別是 \\(\\text{H}_0: \\mu_k=\\mu \\text{ v.s. H}_1: \\mu_k\\neq\\mu\\)。這裏的 \\(\\mu\\) 表示，每個組的平均值等於一個共同的均值 \\(\\mu\\)。 29.3.3 分組變量的平方和 對於預測變量只有一個分組變量的模型，擬合後的數值就是兩組的因變量均值 \\((\\bar{y}_k)\\)。在零假設條件下，兩組均值相等，均等於總體均值 \\(\\bar{y}\\)。這就導致了，殘差平方和，模型平方和在分組變量的 ANOVA 分析時要使用與連續型變量不同的術語。 殘差平方和表示爲： \\[ \\begin{equation} SS_{RES} = \\sum_{k=1}^k\\sum_{i=1}^{n_k} (y_{ki}-\\bar{y}_k)^2 \\end{equation} \\tag{29.9} \\] 其實這就是組內平方和 (within group sum of squares)。 模型平方和表示爲： \\[ \\begin{equation} SS_{REG} = \\sum_{k=1}^k\\sum_{i=1}^{n_k}(\\bar{y}_k-\\bar{y})^2=\\sum_{k=1}^kn_k(\\bar{y}_k-\\bar{y})^2 \\end{equation} \\tag{29.10} \\] 其實這就是組間平方和 (between group sum of squares) Mdl0 &lt;- aov(Age ~ Group, data = Walk) # fit a one-way ANOVA print(summary(Mdl0), digits = 6) ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## Group 1 13.5017 13.50170 8.57629 0.016797 * ## Residuals 9 14.1687 1.57431 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## 1 observation deleted due to missingness 其實這跟之前的 anova(Model) 給出的結果完全一致。 bartlett.test(Age ~ Group, data=Walk) ## ## Bartlett test of homogeneity of variances ## ## data: Age by Group ## Bartlett&#39;s K-squared = 0.63, df = 1, p-value = 0.4 FYI. 上面的代碼 bartlett.test() 利用的是另外一個叫做 Bartlett 檢驗法的方差比較公式。(在 STATA 的 oneway 命令中也會默認給出 Bartlett 檢驗的方差是否一致的檢驗結果) 29.3.4 簡單模型的分組變量大於兩組的情況 公式 (29.8), (29.9), 和 (29.10) 在兩組以上分組變量作預測變量時也是適用的。但是當組數爲 \\(K\\) 時，組內平方和 (殘差平方和 \\(SS_{RES}\\)) 的自由度需要修改成 \\(n-K\\) (這是因爲模型中使用了 \\(K\\) 個參數)。此時方差分析 ANOVA 的彙總表格就變爲了下面這樣： 表 28.2: One-way ANOVA table Source of variation Sum of Squares Degrees of Freedom Mean Sum of Squares Between groups \\(SS_{between}\\) \\(K-1\\) \\(\\frac{SS_{between}}{(K-1)}\\) Within groups \\(SS_{within}\\) \\(n-K\\) \\(\\frac{SS_{within}}{(n-K)}\\) Total \\(SS_{yy}\\) \\(n-1\\) \\(\\frac{SS_{yy}}{(n-1)}\\) 此時，檢驗統計量 \\(F\\) 的計算公式爲： \\[ \\begin{equation} F=\\frac{SS_{between}/(K-1)}{SS_{within}/(n-K)} \\sim F_{(K-1),(n-K)} \\end{equation} \\tag{29.11} \\] 在解釋兩組以上分組變量的分析結果時，要注意的是如果 \\(p\\) 值很小，檢驗結果告訴我們的是，各組中因變量的均值不全相等，而不是全部都不相等。其實就是，即使做了這個檢驗，我們也不知道到底那兩組之間是有差異的。如果此時我們發現結果提示均值不全相等，通常我們還會再作進一步的分析，使用類似成對比較法等等 (以後再繼續詳述)。不過提前要記住，如果使用成對比較法時 (pair-wise comparisons)，多重比較的問題 (multiple comparisons)會凸顯出來，主要的結果是增加統計檢驗的假陽性 (false-positive) 概率，此時再繼續使用 \\(p&lt;0.05\\) 作爲統計學意義的標準則是不妥當的。 29.4 LM practical 03 "],["multivariable-models.html", "第 30 章 多元模型分析 Multivariable Models 30.1 兩個預測變量的線性迴歸模型 30.2 線性回歸模型中使用分組變量 30.3 協方差分析模型 the Analysis of Covariance (ANCOVA) Model 30.4 偏回歸係數的變化 30.5 混雜 confounding 30.6 LM practical 04", " 第 30 章 多元模型分析 Multivariable Models 簡單線性迴歸描述的是一個連續型的因變量 \\((y)\\)，和一個單一的預測變量 \\((x)\\) 之間的關係。我們考慮把這個模型擴展成包含多個預測變量，單一因變量的模型。例如，我們可以考慮建立一個模型使用生活習慣 (包括“年齡，性別，運動，飲食習慣等”) 來預測收縮期血壓。此時多重迴歸的思想就可以幫我們理解一些我們更加關心的因子，與因變量之間的關係，同時控制或者叫調整了其他的混雜因子 (control or adjust confounders)。有時候這樣的模型也可以直接應用到生活中去，比如上面的例子，我們可以通過瞭解一個人的生活習慣，用建立好的模型來估計這個人的收縮期血壓。 建立模型之前，必須明確研究的目的是什麼。例如我們關心一個新發現的因子可能與高血壓有關係，那麼模型中我們放進去調整的其他因子 (如年齡，性別，運動) 等和因變量 (血壓) 之間的關係就變得不那麼重要。 多重線性迴歸，或者叫多元模型分析 (multiple linear regression or multivariable linear regression) 是研究一個連續型因變量和多個預測變量之間關係的重要模型。本章還會着重討論混雜 (confounding)的概念。 30.1 兩個預測變量的線性迴歸模型 30.1.1 數學標記法和解釋 這裏假設我們研究一個因變量 \\(Y\\)，和兩個預測變量 \\((X_1,X_2)\\) 的模型。那麼此時兩個預測變量的線性迴歸模型可以記爲： \\[ \\begin{equation} y_i = \\alpha + \\beta_1 x_{1i} + \\beta_2 x_{2i} + \\varepsilon_i, \\text{ where } \\varepsilon_i \\sim \\text {NID}(0, \\sigma^2) \\end{equation} \\tag{30.1} \\] 其中， \\(y_i\\) 是第 \\(i\\) 名研究對象的因變量數據 (例如體重)； \\(x_{1i}\\) 是第 \\(i\\) 名研究對象的第一個預測變量數據 (例如年齡)， \\(X_1\\)； \\(x_{2i}\\) 是第 \\(i\\) 名研究對象的第二個預測變量數據 (例如身高)， \\(X_1\\)； \\(\\alpha\\) 的涵義是，當兩個預測變量均爲 \\(0\\) 時，因變量的期望值； \\(\\beta_1\\) 的涵義是，當 \\(X_2\\) 不變時，\\(X_1\\) 每升高一個單位，因變量的期望值； \\(\\beta_2\\) 的涵義是，當 \\(X_1\\) 不變時，\\(X_2\\) 每升高一個單位，因變量的期望值。 \\(\\beta_1, \\beta_2\\) 叫做偏迴歸係數 (partial regression coefficient)。它們測量的是兩個預測變量中，當一個被控制 (保持不變) 時，另一個對因變量的影響。 這個模型也可以用矩陣的形式來表示： \\[ \\begin{equation} \\textbf{Y} = \\textbf{X}\\beta+\\varepsilon, \\text{ where } \\varepsilon \\sim N(0, \\textbf{I}\\sigma^2) \\\\ \\left( \\begin{array}{c} y_1\\\\ y_2\\\\ \\vdots\\\\ y_n \\end{array} \\right) = \\left( \\begin{array}{c} 1&amp; x_{11} &amp; x_{21} \\\\ 1&amp; x_{12} &amp; x_{22} \\\\ \\vdots &amp; \\vdots&amp; \\vdots \\\\ 1&amp; x_{1n}&amp; x_{2n} \\\\ \\end{array} \\right)\\left( \\begin{array}{c} \\alpha \\\\ \\beta_1\\\\ \\beta_2 \\end{array} \\right)+\\left( \\begin{array}{c} \\varepsilon_1\\\\ \\varepsilon_2\\\\ \\vdots\\\\ \\varepsilon_n\\\\ \\end{array} \\right) \\end{equation} \\tag{30.2} \\] 此時上面的表達式中，\\(\\textbf{X}\\) 是一個矩陣，\\(\\textbf{Y, \\beta, \\varepsilon}\\) 均為向量。殘差被認為服從多變量正態分佈 (Multivariate normal distribution) ，這個多變量正態分佈的協方差矩陣為 \\(\\sigma^2\\) 和單位矩陣 \\(\\textbf{I}\\) 的乘積來描述。這等價於假設殘差是獨立同分佈且方差 \\(\\sigma^2\\) 不變。 30.1.2 最小平方和估計 Least Squares Estimation 跟簡單線性回歸相似地，我們需要通過對殘差平方和最小化，來獲得此時多重線性回歸的各項參數估計： \\[ \\begin{equation} SS_{RES} = \\sum_{i=1}^n \\hat\\varepsilon_{i}^2 = \\sum_{i=1}^n(y_i-\\hat{y})^2=\\sum_{i=1}^n(y_i-\\hat\\alpha-\\hat\\beta_1x_{1i}-\\hat\\beta_2x_{2i})^2 \\end{equation} \\tag{30.3} \\] 求能讓這個殘差平方和取最小值的參數估計 \\(\\hat\\alpha,\\hat\\beta_1,\\hat\\beta_2\\) 我們會在下一章用矩陣標記法來解釋。此處要強調的是，這些估計量都是無偏估計量，且可以被證明的是殘差方差可以用下面的式子來定義： \\[ \\begin{equation} \\hat\\sigma^2=\\sum_{i=1}^n\\frac{\\hat\\varepsilon_i^2}{(n-3)}=\\frac{\\sum_{i=1}^n(y_i-\\hat\\alpha-\\hat\\beta_1x_{1i}-\\hat\\beta_2x_{2i})^2}{(n-3)} \\end{equation} \\tag{30.4} \\] 30.2 線性回歸模型中使用分組變量 之前我們已展示過，分組變量可以使用啞變量來表示。分組變量多於兩組時，可用多個啞變量來同時表示。現在假設變量 \\(X\\) 有三個分組分別用 \\(1,2,3\\) 來表示。那麼用啞變量來描述含有這個分組變量的數學方法可以標記為： \\[ \\begin{equation} y_i = \\alpha+\\beta_1u_{1i}+\\beta_2u_{2i}+\\varepsilon_i, \\text{ where } \\varepsilon_i \\sim \\text{NID} (0,\\sigma^2) \\end{equation} \\tag{30.5} \\] 其中 \\[ \\begin{aligned} u_{1i}=\\left\\{ \\begin{array}{ll} 1 \\text{ if } x_i=2 \\\\ 0 \\text{ if } x_i\\neq2 \\\\ \\end{array} \\right. ; u_{2i}=\\left\\{ \\begin{array}{ll} 1 \\text{ if } x_i=3 \\\\ 0 \\text{ if } x_i\\neq3 \\\\ \\end{array} \\right. \\end{aligned} \\] 其實如果你願意，你也可以把公式 (30.5) 寫成下面這樣： \\[ \\begin{aligned} \\begin{array}{ll} y_i = \\alpha + \\varepsilon_i &amp; \\text{if } x_i=1 \\\\ y_i = \\alpha +\\beta_1+ \\varepsilon_i &amp; \\text{if } x_i=2 \\\\ y_i = \\alpha +\\beta_2+ \\varepsilon_i &amp; \\text{if } x_i=3 \\\\ \\end{array} \\end{aligned} \\] 所以， \\(\\alpha\\) 是 \\(X=1\\) 時因變量的期待值； \\(\\alpha+\\beta_1\\) 是 \\(X=2\\) 時因變量的期待值，所以 \\(\\beta_1\\) 是分組變量 \\(X\\) 前兩組之間因變量的期待值的差； \\(\\alpha+\\beta_2\\) 是 \\(X=3\\) 時因變量的期待值，所以 \\(\\beta_2\\) 是分組變量 \\(X\\) 前兩組之間因變量的期待值的差。 此時的 \\(X=1\\) 這個組通常被當作是分組變量中的基準組，也就是參照組 (reference group)。實際情況下你可能可以改變這個參照組為其他組的任意一個。 30.3 協方差分析模型 the Analysis of Covariance (ANCOVA) Model 協方差分析模型用來分析一個連續型的因變量 \\(Y\\) ，與一個連續型的預測變量 \\((X_1)\\)和一個二分類的預測變量 \\((X_2= 1,2)\\)，模型被標記為： \\[ \\begin{equation} y_i=\\alpha+\\beta_1x_{1i}+\\beta_2u_{2i}+\\varepsilon_i, \\text{ where } \\varepsilon_i \\sim \\text{NID}(0,\\sigma^2) \\end{equation} \\tag{30.6} \\] 其中， \\(y_{i}\\) 為第 \\(i\\) 名研究對象的因變量數據 (連續型)； \\(x_{1i}\\) 為第 \\(i\\) 名研究對象的第一個預測變量 (也是連續型)； \\(u_i =\\left\\{ \\begin{array}{ll} 1 \\text{ if } x_{2i}=2 \\\\ 0 \\text{ if } x_{2i}=1 \\\\ \\end{array}\\right.\\) 此模型中用到的參數有： \\(\\alpha\\) 是截距，意為當 \\(X_1=0\\) 且 \\(X_2=1 \\; (u=0)\\) 時的因變量期待值； \\(\\beta_1\\) 是當 \\(X_2\\) 保持不變時，\\(X_1\\) 每升高一個單位時，因變量 \\(Y\\) 的期待值； \\(\\beta_2\\) 是當 \\(X_1\\) 保持不變時，分組變量 \\(X_2\\) 的兩組之間因變量 \\(Y\\) 的期待值差異大小。 所以理解了上面的解釋之後，就可以將表達式 (30.6) 描述為： \\[ \\begin{array}{ll} y_i=\\alpha+\\beta_1x_{1i}+\\varepsilon_i &amp; \\text{ if } x_{2i}=1 \\\\ y_i=\\alpha+\\beta_2+\\beta_1x_{1i}+\\varepsilon_i &amp; \\text{ if } x_{2i} = 2 \\end{array} \\] 所以，在一個二維圖形中繪製這兩條回歸直線，你會發現他們之間是平行的。因為他們之間相差的只有截距，決定直線斜率的回歸係數，都是 \\(\\beta_1\\)。再用之前用過的數據，兒童的體重和年齡，如果此時考慮了性別因素的話，多重線性回歸的輸出結果和圖形分別應該是： growgam1 &lt;- read_dta(&quot;../backupfiles/growgam1.dta&quot;) growgam1$sex &lt;- as.factor(growgam1$sex) Model1 &lt;- lm(wt ~ age + sex, data=growgam1) print(summary(Model1), digits = 5) ## ## Call: ## lm(formula = wt ~ age + sex, data = growgam1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -4.19236 -0.76268 -0.00696 0.75675 3.79163 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 7.152414 0.234254 30.5327 &lt; 2.2e-16 *** ## age 0.163998 0.010919 15.0189 &lt; 2.2e-16 *** ## sex2 -0.518854 0.183053 -2.8344 0.005095 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.25 on 187 degrees of freedom ## Multiple R-squared: 0.5597, Adjusted R-squared: 0.55499 ## F-statistic: 118.85 on 2 and 187 DF, p-value: &lt; 2.22e-16 print(anova(Model1), digits = 5) ## Analysis of Variance Table ## ## Response: wt ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## age 1 359.06 359.06 229.6755 &lt; 2.2e-16 *** ## sex 1 12.56 12.56 8.0341 0.005095 ** ## Residuals 187 292.35 1.56 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 圖 30.1: Data and fitted values from a regression model relating age and gender to data from a cross-sectional survey. For male children data points shown as circles and fitted values linked by a solid line. For female children data points shown as triangles and fitted values linked by a dashed line. 30.4 偏回歸係數的變化 在增加不同的預測變量進入線性回歸模型中時，原先在方程中的預測變量的偏回歸係數發生了怎樣的變化？ 我們先從最簡單的開始入手。先只考慮一個簡單先行回歸模型的情況。當我們新加入一個預測變量，模型發生了什麼變化？ \\[ \\begin{aligned} &amp; \\text{Model 1: } y_i = \\alpha^*+\\beta_1^*x_{1i}+\\varepsilon^*_i \\\\ &amp; \\text{Model 2: } y_i = \\alpha + \\beta_1x_{1i} + \\beta_2 x_{2i}+\\varepsilon_i \\end{aligned} \\] \\(\\beta_1, \\beta_1^*\\) 表示的其實是完全不同的含義。\\(\\beta_1^*\\) 被稱為粗回歸係數 (crude coefficient)，或者叫做調整前回歸係數，\\(\\beta_1\\) 被稱為調整後回歸係數 (adjusted coefficient)。二者之間的差異，其實是可以通過對這兩個變量進行簡單線性回歸來度量的： \\[ \\text{Model 3: } x_{2i} = \\gamma+\\delta_1x_{1i}+\\omega_i \\] 將 Model 2 中的 \\(x_{2i}\\) 用 Model 3 來替換掉： \\[ \\begin{aligned} \\text{Model 2: }y_i &amp;= \\alpha + \\beta_1 x_{1i} + \\beta_2(\\gamma + \\delta_1x_{1i}+\\omega_i) +\\varepsilon_i \\\\ &amp;= \\alpha + \\beta_2\\gamma+(\\beta_1+\\beta_2\\delta_1)x_{1i}+\\beta_2\\omega_i + \\varepsilon_i \\end{aligned} \\] 比較 Model 1 和變形過後的 Model 2 中 \\(x_{1i}\\) 的係數就不難發現： \\[ \\beta_1^* = \\beta_1 + \\beta_2\\delta_1 \\] 由此可見，調整前後 \\(x_{1i}\\) 的回歸係數的變化 \\(\\beta_1^*, \\beta_1\\) 之間的差異，取決於兩個部分的大小： \\(\\beta_2\\) 的大小和它的符號； \\(X_1, X_2\\) 這兩個預測變量之間有多大關聯，用 Model 3 的 \\(\\delta_1\\) 來度量。 所以，當調整後的 \\(\\beta_1 &gt; 0\\) 時，要分三種情況來討論 30.4.1 情況1： \\(\\beta_1 &gt; \\beta_1^*\\) 此時，\\(\\beta_2\\delta_1&lt;0\\) 所以，二者之間一正一負。如下圖所示： 按圖所示，當 \\(X_2\\) 保持不變，\\(X_1\\) 與因變量 \\(Y\\) 正相關 (\\(\\beta_1&gt;0\\))。但是，兩個預測變量之間 \\(X_1, X_2\\) 也呈正相關關係 \\(\\delta_1 &gt;0\\)。而同時，\\(X_2\\) 的升高會導致因變量 \\(Y\\) 的下降 ($_2 &lt;0 $)。這種情況就意味著，如果，我們不調整 \\(X_2\\) (使之保持不變)，那麼 \\(X_1\\) 每升高一個單位，\\(Y\\) 的變化會低於調整 \\(X_2\\) 時，\\(X_1\\) 的變化所引起的 \\(Y\\) 的變化。如果這時候 \\(\\beta_2,\\delta_1\\) 較大，那麼對於 \\(X_1\\) 來說，調整 \\(X_2\\) 前後，回歸係數的變化較大，如果大到一定程度，甚至調整前後的回歸係數的方向 (正負) 都會發生變化。 30.4.2 情況2：\\(\\beta_1&lt;\\beta_1^*\\) 本情況下，\\(\\beta_2\\delta_1&gt;0\\) 是正的。所以二者要麼同時爲正，要麼同時爲負。如下圖所示： 當 \\(X_2\\) 保持不變時， \\(X_1\\) 同 \\(Y\\) 呈正關係。但是，\\(X_1\\) 的升高也會引起 \\(X_2\\) 的升高，同時通過 \\(X_2\\) 和 \\(Y\\) 之間的正關係升高 \\(Y\\)。所以假設在模型裏我們不對 \\(X_2\\) 進行控制 (controld or adjust)，那麼 \\(X_1\\) 和 \\(Y\\) 之間的關係就被誇大了。 所以，當 \\(X_1\\rightarrow X_2\\rightarrow Y\\) 的這條通路大大超過 \\(X_1\\rightarrow Y\\) 的話，調整後的迴歸係數 \\(\\beta_1\\) 就會變得很小。 30.4.3 情況3： \\(\\beta_1 = \\beta_1^*\\) 這種情況只有當 \\(\\beta_2\\delta_1=0\\) 時才會出現。所以，二者至少有一個是 \\(0\\)。 如下圖所示： \\(X_1\\) 與 \\(Y\\) 呈正關係，\\(X_1\\) 與 \\(X_2\\) 呈正關係。但是 \\(X_2\\) 與 \\(Y\\) 無關聯。所以此時無論模型是否調整了 \\(X_2\\) 都不會影響 \\(X_1\\) 和 \\(Y\\) 之間關係的計算。 30.5 混雜 confounding 流行病學家最喜歡的詞彙恐怕要屬混雜 (confounding) 了 (interaction, 交互作用也要算一個 (Section 33，(笑))。他們常用混雜來解釋爲什麼調整其他因子前後迴歸係數發生了變化。當有其他因子 (測量了或者甚至是未知的) 對我們關心的預測變量和因變量之間的關係產生了影響 (加強或是減弱) 時，就叫做發生了混雜。 對於一個預測變量是否夠格被叫做混雜因子，它必須滿足下面的條件： 與關心的預測變量相關 (i.e. \\(\\delta_1 \\neq 0\\))； 與因變量相關 (當關心的預測變量不變時，\\(\\beta_2\\neq0\\) )； 不在預測變量和因變量的因果關係 (如果有的話) 中作媒介。Not be on the causal pathway between the predictor of interest and the dependent variable. 有時，判斷一個因子是否對我們關心的預測變量和因變量之間的關係構成了混雜並不容易，也不直觀。所以，有太多太多的情況下，我們無法準確地 100% 地確定我們關心的關係是否被別的因子混雜。所以，莫要用 “混雜” 一詞簡單糊弄人。 30.5.1 作為媒介 mediation effect 多數情況下，我們也無法從數據判斷一個變量是否在我們關心的預測變量和因變量之間關係的通路上。此時要做的是離開你的電腦，去學習他們之間的生物學知識，看是否真的有關係。 但是有些例子就很簡單啦。比如說，服用降血壓藥物可以預防發生中風。那麼此時血壓的降低，就處在了這二者因果關係的通路上。因爲藥物通過降低了血壓，從而預防了中風的發生。這一關係中，我們不能說血壓是混雜因子，它是一個媒介 (mediator)。但是多數的橫斷面研究 (cross-sectional study) 中我們無法是很難下結論的。 30.5.2 兩個預測變量之間的關係 如果另一個變量不是媒介，且它和我們關心的預測變量，因變量之間如果都有相關關係，那它的確有可能成為混雜因子。但是僅僅通過統計學模型來考察混雜是絕對不夠的。例如樣本量較小的數據中，我們可能無法檢驗出一個變量對模型的混雜影響是不是有統計學意義的，但是這不能提供證據否認它不是混雜因子。同樣的，更多的混雜因子是我們沒有測量沒有觀察到收集到的未知因素。所以，任何數據都無法提供完全去除混雜因子影響的模型。 30.5.3 RCT臨床實驗是個特例 因為隨機對照臨床實驗，在設計階段就已經把治療組對照組之間的差異最小化了，理想的隨機對照實驗，其治療組和對照組之間理論上除了治療藥物的差別之外完全相同。當然這是理想狀況，且所有的臨床實驗都必須向這個方向努力設計和實施。偶然出現的治療組和對照組在某些特徵上的不平衡，不能被認為是混雜因子。只能說這樣的臨床實驗是不理想的，提供的證據水平也就較弱。 30.6 LM practical 04 "],["matrix-multivariable.html", "第 31 章 多元模型分析：矩陣標記與其意義 31.1 線性回歸模型的矩陣/非矩陣標記法 31.2 解讀參數 31.3 方差分析一般化和 \\(F\\) 檢驗 31.4 添加新變量對迴歸模型的影響 31.5 實戰演習 31.6 LM practical 05", " 第 31 章 多元模型分析：矩陣標記與其意義 在線性回歸目前為止介紹的內容中，我們最多只談到了預測變量為兩個的情況。本章，我們要把這些概念推廣到三個或者三個以上預測變量的情況。同時，多重線性回歸時採用的假設檢驗也會被談及。其實最常見的就是 \\(F\\) 檢驗。而且我們也見識過了，當預測變量只有一個的時候，\\(F\\) 檢驗和 \\(t\\) 檢驗是等價的。 重要的概念我們都已經介紹完畢。前一章的多重回歸模型中也強調了，我們之所以希望把多個預測變量放進模型，最大的目的就是想了解這些預測變量之間的相互關係，當他們得到調整 (adjustment) 之後，彼此之間的關係是怎樣的。這樣的關係我們稱之為條件關係 (conditional relationships)。當我們使用條件關係的稱呼時，需要同時指明我們說的是哪個變量，在那個變量不變的條件下，與因變量的關係是如何如何。 本章節最後的部分將會著重關注共線性 (collinearity) 的問題。 31.1 線性回歸模型的矩陣/非矩陣標記法 31.1.1 模型標記： 假如，因變量用 \\(Y\\) 表示，預測變量有 \\(p\\) 個之多 \\((X_1,\\cdots, X_p)\\)。該模型的非矩陣標記法如下： \\[ \\begin{equation} y_i = \\alpha + \\beta_1 x_{1i}+ \\beta_2 x_{2i} + \\cdots + \\beta_p x_{pi} + \\varepsilon_i \\text{ with } \\varepsilon_i \\sim \\text{NID}(0, \\sigma^2) \\end{equation} \\tag{31.1} \\] 其中， \\(y_i =\\) 第 \\(i\\) 名觀察對象的因變量數據； \\(x_{pi} =\\) 第 \\(i\\) 名觀察對象的第 \\(p\\) 個預測變量的觀察數據。 上面的非矩陣標記法，等同於如下的矩陣標記法： \\[ \\begin{equation} \\textbf{Y} = \\textbf{X}\\beta+\\varepsilon, \\text{ where } \\varepsilon \\sim N(0, \\textbf{I}\\sigma^2) \\\\ \\left( \\begin{array}{c} y_1\\\\ y_2\\\\ \\vdots\\\\ y_n \\end{array} \\right) = \\left( \\begin{array}{c} 1&amp; x_{11} &amp; \\cdots &amp; x_{p1} \\\\ 1&amp; x_{12} &amp; \\cdots &amp; x_{p2} \\\\ \\vdots &amp; \\vdots&amp; \\vdots &amp; \\vdots \\\\ 1&amp; x_{1n}&amp; \\cdots &amp;x_{pn} \\\\ \\end{array} \\right)\\left( \\begin{array}{c} \\alpha \\\\ \\beta_1\\\\ \\beta_2 \\\\ \\vdots \\\\ \\beta_p \\end{array} \\right)+\\left( \\begin{array}{c} \\varepsilon_1\\\\ \\varepsilon_2\\\\ \\vdots\\\\ \\varepsilon_n\\\\ \\end{array} \\right) \\end{equation} \\tag{31.2} \\] 此公式 (31.2) 中 \\(\\textbf{X}\\) 是一個 \\(n\\times(p+1)\\) 的矩陣； \\(\\textbf{Y}\\) 和 \\(\\varepsilon\\) 分別是長度為 \\(n\\) 的列向量； \\(\\beta\\) 是長度為 \\(p+1\\) 的列向量，且第一個元素是 \\(\\alpha\\)，偶爾被人誤寫成 \\(\\beta_0\\)。 殘差被認為服從多元正態分佈 (multivariate normal distribution)，這個多元正態分佈的方差協方差矩陣等於 \\(\\sigma^2\\) 與單位矩陣相乘獲得的矩陣。這其實等價於認為殘差服從獨立正態且方差為 \\(\\sigma^2\\) 的分佈， 31.2 解讀參數 模型中的參數的涵義為： \\(\\alpha\\) 是截距，所有的預測變量都是零的時候，因變量 \\(Y\\) 的期待值大小； \\(\\beta_j\\) 是預測變量 \\(X_j\\) 升高一個單位，且其他變量保持不變的同時，因變量 \\(Y\\) 的期待值的變化； \\(\\beta_j\\) 都是偏回歸係數，每個偏回歸係數，測量的都是該預測變量調整了其他預測變量之後對於因變量期待值的影響。 31.2.1 最小二乘估計 還是同之前一樣，我們對殘差的平方和最小化，來獲取我們關心的預測變量的回歸變量。 \\[ \\begin{aligned} SS_{RES} &amp; = \\sum_{i=1}^n \\hat\\varepsilon_i^2 = \\sum_{i=1}^n(y_i-\\hat{y})^2 \\\\ &amp; = \\sum_{i=1}^n (y_i-\\hat\\alpha-\\hat\\beta_1x_{1i}-\\hat\\beta_2x_{2i}-\\cdots-\\hat\\beta_px_{pi})^2 \\end{aligned} \\tag{31.3} \\] 下面用矩陣標記法計算 \\(\\hat\\beta\\)： \\[ \\begin{aligned} \\text{Because } \\mathbf{Y} &amp; = \\mathbf{X\\hat\\beta + \\varepsilon} \\\\ \\Rightarrow \\mathbf{\\varepsilon} &amp; = \\mathbf{Y - X\\hat\\beta}\\\\ \\Rightarrow \\mathbf{SS_{RES}} &amp; = \\varepsilon_1\\times \\varepsilon_1 + \\varepsilon_2\\times \\varepsilon_2 + \\cdots + \\varepsilon_n\\times \\varepsilon_n \\\\ &amp; = (\\varepsilon_1, \\varepsilon_2, \\cdots, \\varepsilon_n)\\left( \\begin{array}{c} \\varepsilon_1\\\\ \\varepsilon_2\\\\ \\vdots\\\\ \\varepsilon_n \\end{array} \\right) \\\\ &amp; = \\mathbf{\\varepsilon^\\prime} \\mathbf{\\varepsilon} \\\\ &amp; = \\mathbf{(Y-X\\hat\\beta)^\\prime(Y-X\\hat\\beta)} \\\\ &amp; = \\mathbf{Y^\\prime Y - X^\\prime\\hat\\beta^\\prime Y - Y^\\prime X\\hat\\beta + X^\\prime\\hat\\beta^\\prime X \\hat\\beta} \\\\ \\text{Because} &amp;\\text{ transpose of a scalar is a scalar:} \\\\ \\mathbf{Y^\\prime X\\hat\\beta} &amp; = \\mathbf{(Y^\\prime X\\hat\\beta)^\\prime = X^\\prime\\hat\\beta^\\prime Y} \\\\ \\Rightarrow \\mathbf{SS_{RES}} &amp; = \\mathbf{Y^\\prime Y - 2X^\\prime\\hat\\beta^\\prime Y + X^\\prime\\hat\\beta^\\prime X \\hat\\beta}\\\\ \\Rightarrow \\mathbf{\\frac{\\partial SS_{RES}}{\\partial \\hat\\beta}} &amp; = \\mathbf{-2X^\\prime Y + 2 X^\\prime X \\hat\\beta} = 0 \\\\ \\Rightarrow \\mathbf{\\hat\\beta} &amp; = \\mathbf{(X^\\prime X)^{-1}X^\\prime Y} \\end{aligned} \\tag{31.4} \\] 公式 (31.4) 是參數矩陣 \\(\\mathbf{\\beta}\\) 的無偏估計，且服從方差協方差矩陣爲 \\(\\mathbf{(X^\\prime X)^{-1}\\sigma^2}\\) 的多元正態分佈： \\[ \\begin{equation} \\mathbf{\\hat\\beta} \\sim N(\\mathbf{\\beta, (X^\\prime X)^{-1}\\sigma^2}) \\end{equation} \\tag{31.5} \\] 另外可以被證明的是，多元線性迴歸模型的殘差方差的估計量計算公式爲： \\[ \\begin{aligned} \\hat\\sigma^2 &amp; = \\sum^n_{i=1}\\frac{\\hat\\varepsilon^2_i}{[n-(p+1)]} \\\\ &amp; = \\sum^n_{i=1}\\frac{\\sum_{i=1}^n (y_i-\\hat\\alpha-\\hat\\beta_1x_{1i}-\\hat\\beta_2x_{2i}-\\cdots-\\hat\\beta_px_{pi})^2}{[n-(p+1)]} \\\\ \\text{Where } &amp; p \\text{ is the number of predictors} \\end{aligned} \\tag{31.6} \\] 31.2.2 因變量的期待值 \\(\\mathbf{\\hat Y}\\) 因變量的期待值矩陣 \\(\\mathbf{\\hat Y}\\) 根據公式 (31.4) 推導： \\[ \\begin{aligned} \\mathbf{\\hat Y} &amp; = \\mathbf{X\\hat\\beta} \\\\ &amp; = \\mathbf{X(X^\\prime X)^{-1}X^\\prime Y}= \\mathbf{PY} \\\\ \\text{Where } \\mathbf{P} &amp;= \\mathbf{X(X^\\prime X)^{-1}X^\\prime} \\end{aligned} \\tag{31.7} \\] 這裏的 \\(n\\times n\\) 的正方形矩陣 \\(\\mathbf{P}\\) 在多元線性迴歸中是一個極爲重要的矩陣。 它常被叫做“帽子/映射 (hat/projection)”矩陣，因爲它把觀察值 \\(\\mathbf{Y}\\) 和觀察值的擬合值一一映射； 帽子矩陣的第 \\(i\\) 個對角元素，是第 \\(i\\) 名觀察值的影響值 (leverage)，會用在下章節的模型診斷中； 擬合值矩陣的方差協方差矩陣被定義爲： \\[ \\begin{equation} \\text{Var}(\\mathbf{\\hat Y}) = \\mathbf{P}\\sigma^2 \\end{equation} \\tag{31.8} \\] 31.2.3 殘差 殘差的觀察值 \\(\\mathbf{\\hat\\varepsilon}\\) 被定義爲觀察值和擬合值的差。根據前節 (31.8) 推導： \\[ \\begin{equation} \\mathbf{\\hat\\varepsilon} = \\mathbf{Y - \\hat Y} = \\mathbf{Y - PY} = \\mathbf{(I - P)Y} \\end{equation} \\tag{31.9} \\] 這個觀察殘差的方差被定義爲： \\[ \\begin{equation} \\text{Var}(\\mathbf{\\hat\\varepsilon}) = \\mathbf{(I - P)}\\sigma^2 \\end{equation} \\tag{31.10} \\] 一般地，\\(\\mathbf{P}\\) 不是一個對角矩陣，意思是觀察殘差之間無法保證是獨立的； \\(\\mathbf{P}\\) 的對角元素也不全都相等，意思是觀察殘差的方差無法保證是恆定不變的。 31.3 方差分析一般化和 \\(F\\) 檢驗 31.3.1 多元線性迴歸時的決定係數和殘差方差 和簡單線性迴歸一樣，因變量的校正平方和可以被分割成兩部分：迴歸模型能夠解釋的平方和；模型無法解釋的殘差平方和。類比方差分析章節 (Section 29) 的公式 (29.1)： \\[ \\begin{aligned} \\sum_{i=1}^n(y_i-\\bar{y})^2 &amp; = \\sum_{i=1}^n(\\hat{y}_i - \\bar{y})^2 + \\sum_{i=1}^n(y_i - \\hat{y}_i)^2 \\\\ SS_{yy} &amp; = SS_{REG} + SS_{RES} \\end{aligned} \\tag{31.11} \\] 和簡單線性迴歸也一樣，多元線性迴歸時的模型決定係數 (coefficient of determination) 的定義爲： \\[ \\begin{aligned} R^2 &amp; = \\frac{SS_{yy}-SS_{RES}}{SS_{yy}} = 1- \\frac{SS_{RES}}{SS_{yy}} \\\\ &amp; = 1 - \\frac{\\sum_{i=1}^n(y_i-\\hat{y}_i)^2}{\\sum_{i=1}^n(y_i - \\bar{y})^2} \\end{aligned} \\tag{31.12} \\] 這裏的 \\(R^2\\) 也一樣可以被解釋爲模型能夠解釋的因變量變動部分的百分比 (proportion of the variability in the dependent variable explained by the model)。值得注意的是，當模型中預測變量不減少，每加入一個新的預測變量，決定係數也會增加，相反殘差平方和卻絕不會增加。 31.3.2 方差分析表格 下表和簡單線性迴歸的方差分析表格很類似，也可以用來作假設檢驗 (迴歸方程的顯著性檢驗 Global \\(F-\\text{test}\\)，和偏 \\(F\\) 檢驗 Partial \\(F-\\text{test}\\))。 表 30.1: Analysis of Variance table for a liear regression model with \\(p\\) predictor variables Source of Variation Sum of Squares Degrees of Freedom Mean Sum of Squares Regression (model) \\(SS_{REG}\\) \\(p\\) \\(MS_{REG} = \\frac{SS_{REG}}{p}\\) Residual \\(SS_{RES}\\) \\(n-(p+1)\\) \\(MS_{RES} = \\frac{SS_{RES}}{[n-(p+1)]}\\) Total \\(SS_{yy}\\) \\(n-1\\) \\(\\frac{SS_{yy}}{(n-1)}\\) 31.3.3 迴歸方程的顯著性檢驗 整個方程的顯著性檢驗，檢驗的是所有的迴歸係數都等於零的零假設，其對應的替代假設則是：“迴歸係數不全爲零”。就是至少有一個不等於零。 在零假設條件下，檢驗統計量的計算公式爲： \\[ \\begin{equation} F = \\frac{MS_{REG}}{MS_{RES}} \\sim F_{p, [n-(p+1)]} \\end{equation} \\tag{31.13} \\] 在零假設條件下，\\(F\\) 的期望值接近 \\(1\\)，而替代假設條件下的 \\(F\\) 總是會大於此，所以和 \\(F\\) 分佈比較特徵值時只需要比較單側的 (右側的) 值，即可獲得雙側 \\(p\\) 值。 在 R 裏面，迴歸方程的結果的最底下會出現統計量 \\(F\\) 的大小，但是 \\(MS_{REG}, MS_{RES}\\) 要用 anova() 代碼獲得： growgam1 &lt;- read_dta(&quot;../backupfiles/growgam1.dta&quot;) growgam1$sex &lt;- as.factor(growgam1$sex) Model1 &lt;- lm(wt ~ age + len, data=growgam1) print(summary(Model1), digits = 5) ## ## Call: ## lm(formula = wt ~ age + len, data = growgam1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3.20525 -0.64402 -0.00303 0.55967 2.86277 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -8.351244 1.259968 -6.6281 3.531e-10 *** ## age -0.011260 0.016751 -0.6722 0.5023 ## len 0.237129 0.019516 12.1502 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.9546 on 187 degrees of freedom ## Multiple R-squared: 0.74337, Adjusted R-squared: 0.74063 ## F-statistic: 270.84 on 2 and 187 DF, p-value: &lt; 2.22e-16 print(anova(Model1), digits = 5) ## Analysis of Variance Table ## ## Response: wt ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## age 1 359.06 359.06 394.06 &lt; 2.2e-16 *** ## len 1 134.52 134.52 147.63 &lt; 2.2e-16 *** ## Residuals 187 170.39 0.91 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 可以看到 summary() 輸出結果的最後一行是關於迴歸方程整體的 \\(F\\) 檢驗結果 F-statistic: 270.84 on 2 and 187 DF, p-value: &lt; 2.22e-16，從 anova() 結果中可以獲得 \\(MS_{REG} = \\frac{359.0632 + 134.5153}{2} = 246.7892\\)。\\(F_{2,187} = \\frac{246.7892}{0.9111833} = 270.84\\)。這個檢驗結果證明了，兩個預測變量 “體重” 和 “身長” 至少有一個的迴歸係數不等於零。 31.3.4 \\(\\text{partial }F\\) 檢驗 如果我們建立兩個模型，一個稍微複雜一些 \\((B)\\)，比起略簡單的模型 \\((A)\\)，增加了 \\(k\\) 個預測變量。兩個模型放在一起的方差分析表格可以歸納成： 表 30.2: Analysis of Variance table comparing the fit of a model \\((B)\\) with \\(p\\) predictor variables with that of one (model \\(A\\)) with \\(p-k\\) predictor variables Source of Variation Sum of Squares Degrees of Freedom Mean Sum of Squares Explained by model \\(A\\) \\(SS_{REG_A}\\) \\(p-k\\) \\(MS_{REG_A} = \\frac{SS_{REG_A}}{p-k}\\) Extra Explained by model \\(B\\) \\(SS_{REG_B}-SS_{REG_A}\\) \\(k\\) \\(\\frac{SS_{REG_B}-SS_{REG_A}}{k}\\) Residual from model \\(B\\) \\(SS_{RES_B}\\) \\(n-(p+1)\\) \\(MS_{RES_B} = \\frac{SS_{RES_B}}{[n-(p+1)]}\\) Total \\(SS_{yy}\\) \\(n-1\\) \\(\\frac{SS_{yy}}{(n-1)}\\) 那麼偏 \\(F\\) 檢驗的零假設就是：\\(B\\) 模型中包含，\\(A\\) 模型中不包含的 \\(k\\) 個預測變量的迴歸係數都等於零。 \\[ \\begin{equation} F=\\frac{(SS_{REG-B}-SS_{REG-A})/k}{MS_{RES-B}} \\sim F_{k, [n-(p+1)]} \\end{equation} \\tag{31.14} \\] 在 R 裏建立兩個模型： Model1 &lt;- lm(wt ~ len, data=growgam1) print(summary(Model1), digits = 5) ## ## Call: ## lm(formula = wt ~ len, data = growgam1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3.155217 -0.629239 0.014555 0.544783 2.928738 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -7.6694406 0.7463556 -10.276 &lt; 2.2e-16 *** ## len 0.2257467 0.0096893 23.299 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.9532 on 188 degrees of freedom ## Multiple R-squared: 0.74275, Adjusted R-squared: 0.74139 ## F-statistic: 542.82 on 1 and 188 DF, p-value: &lt; 2.22e-16 print(anova(Model1), digits = 5) ## Analysis of Variance Table ## ## Response: wt ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## len 1 493.17 493.17 542.82 &lt; 2.2e-16 *** ## Residuals 188 170.80 0.91 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Model2 &lt;- lm(wt ~ len + age + sex, data = growgam1) print(summary(Model2), digits = 5) ## ## Call: ## lm(formula = wt ~ len + age + sex, data = growgam1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3.110422 -0.648401 0.026103 0.560621 2.768583 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -7.8906758 1.3003091 -6.0683 7.091e-09 *** ## len 0.2317997 0.0198470 11.6793 &lt; 2.2e-16 *** ## age -0.0077959 0.0168974 -0.4614 0.6451 ## sex2 -0.1964758 0.1421171 -1.3825 0.1685 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.9522 on 186 degrees of freedom ## Multiple R-squared: 0.74599, Adjusted R-squared: 0.74189 ## F-statistic: 182.08 on 3 and 186 DF, p-value: &lt; 2.22e-16 print(anova(Model2), digits = 5) ## Analysis of Variance Table ## ## Response: wt ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## len 1 493.17 493.17 543.8753 &lt;2e-16 *** ## age 1 0.41 0.41 0.4540 0.5013 ## sex 1 1.73 1.73 1.9113 0.1685 ## Residuals 186 168.66 0.91 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 根據公式 (31.14)，\\(F=\\frac{0.4116944+1.7330862}{2\\times0.9067645} = 1.18\\)。\\(p\\) 值可以在 R 裏面這樣計算： 1 - pf(df1 = 2,df2 = 186,q = (0.4116944+1.7330862)/(2*0.9067645)) ## [1] 0.3088 更方便的是直接用 anova() 進行偏 \\(F\\) 檢驗： print(anova(Model1, Model2), digits = 5) ## Analysis of Variance Table ## ## Model 1: wt ~ len ## Model 2: wt ~ len + age + sex ## Res.Df RSS Df Sum of Sq F Pr(&gt;F) ## 1 188 170.80 ## 2 186 168.66 2 2.1448 1.1827 0.3088 31.4 添加新變量對迴歸模型的影響 當你決定給建立的模型 \\(\\mathbf{A}\\) 增加新的預測變量時，輸出的結果改變的有： 模型 \\(\\mathbf{A}\\) 原先的預測變量的偏迴歸係數會改變； 模型 \\(\\mathbf{A}\\) 原先的預測變量的偏迴歸係數的方差會改變； 模型 \\(\\mathbf{A}\\) 原先的預測變量的偏迴歸係數的檢驗結果會改變； 模型 \\(\\mathbf{A}\\) 原先的 擬合值 (predicted values/fitted values)會改變； 決定係數 \\(R^2\\) 會改變。 31.4.1 偏迴歸係數方差的改變 偏迴歸係數矩陣 \\(\\mathbf{\\hat\\beta}\\) 的方差 \\(\\mathbf{(X^\\prime X)^{-1}\\sigma^2}\\) (31.5)，取決於 殘差方差 (residual variance) \\(\\sigma^2\\)； 樣本量大小 (sample size) \\(n\\)； 預測變量之間的協方差 (covariance between the predictor variable in question and the others)。 在簡單線性迴歸中，預測變量的變化性 (variability，用方差或標準差衡量) 越大，迴歸係數的估計就越精確。類似地，多元線性迴歸中，預測變量之間的協方差之所以重要，因爲它決定了其他預測變量保持不變時，該預測變量的變化性。如果某兩個預測變量之間高度相關 (high covariance)，那麼當一個預測變量保持不變時，另一個的變化性就很小。 所以當給一個模型加入新的預測變量時，可能觀察的現象是原先模型中已有的預測變量的偏迴歸係數的方差可能升高，也可能降低。 如果新加入的變量能解釋很大比例的殘差方差，那麼其他原有變量的偏迴歸係數會降低 (變精確)； 如果新加入的變量和原模型中的某個變量高度相關，那麼加入新變量後，原模型中與之高度相關的預測變量的方差會升高 (不精確)，這個現象會在共線性 (collinearity) 中繼續討論。 31.4.2 偏迴歸係數檢驗結果的改變 加入新預測變量時，原有的偏迴歸係數的檢驗結果發生的改變可以歸類成兩種情況： 估計的偏迴歸係數本身發生了改變； 偏迴歸係數的方差改變，導致了檢驗結果發生變化。 31.4.3 擬合值的改變 很明顯，當模型中加入新的變量，觀察對象的擬合值會發生改變，但是通常這樣的影響要遠遠小於對偏迴歸係數估計 (和其方差) 的影響。 31.4.4 決定係數的改變 模型中增加新的預測變量，那麼模型的決定係數不會減少，只會增加。 31.4.5 共線性 collinearity 當預測變量 \\(X_1\\) 和另一個預測變量 \\(X_2\\) 之間呈高度線性關係時被定義爲共線性現象。如果這兩個變量的關係是完全線性 (exact linear)，那麼多元迴歸其實是無法進行的，因爲這兩個變量中的一個隨着另一個改變，無法像我們設想的那樣把其中一個變量保持不變，從而估計另一個變量的迴歸係數。用矩陣表示多元預測變量時 \\(\\mathbf{X}\\) 是奇異矩陣 singular matrix，\\(\\mathbf{(X^\\prime X)^{-1}}\\) 是不存在的。 完全線性的最佳例子是我們在對分類變量使用啞變量的情況下。每個啞變量之間都是完全線性的關係，因而我們只能用 \\(0,1\\) 來編碼啞變量，當某個啞變量存在時，其餘的啞變量取 \\(0\\) 從模型中消失。否則模型將無法擬合。 如果某兩個變量之間高度相關，那麼他們的預測變量矩陣接近 奇異矩陣，把這兩個變量同時作爲預測變量放入模型中會引起共線性現象，表現出來的形式有： 偏迴歸係數的方差變得很大； 偏迴歸係數本身的絕對值變得異常大； 某些已知的重要預測變量的偏迴歸係數變得過小且不再有意義； 雖然會有 1-3 描述的異常現象出現，但是擬合值的變化卻可能微不足道。 所以擬合多元線性迴歸模型時，極爲重要的一點是要避免共線性。如果有些變量高度相關，必須考慮改變他們放入模型的形式： 收縮期血壓，舒張期血壓兩個變量是高度相關的，不能一起放入模型中。如果需要同時考慮兩個變量，可以用其中一個，另一個預測變量用二者之差； 身高，體重常常是高度相關的，儘量不要一起放入模型中，可以使用他們的結合形式體質指數 (BMI, \\(\\text{kg/m}^2\\))； 當使用二次方程進行模型擬合的時候，用 \\((x_i - \\bar{x})^2\\) 取代 \\(x_i^2\\)。 31.5 實戰演習 31.5.1 血清維生素 C 濃度的預測變量 數據來自與某個橫斷面研究，其目的是找出與血清維生素 C 濃度相關的預測變量。 數據中個變量含義如下表所示。 表 30.3: Data set of serum vitamin C level explained Variable name content serial Patient identifier age Age of subjects in years height Height in metres cigs Smoking status (0=non-smoker; 1=smoker) weight Weight in kg sex Gender (0=men; 1=women) seruvitc Serum Vitamin C level (\\(\\mu\\text{mol/L}\\)) ctakers Vitamin C supplements taken (1=yes, 0=no) 在 R 裏讀入數據，並對數據內容總結，對維生素C濃度和其他連續性變量作散點圖，對分類變量如性別，吸菸狀況，和維生素C補充劑服用與否之間的維生素 C 濃度作初步的分析表格。 library(haven) vitC &lt;- read_dta(&quot;../backupfiles/vitC.dta&quot;) ########################################## # Recoding the categorical variables # ########################################## vitC &lt;- vitC %&gt;% mutate(sex = as.factor(sex)) %&gt;% mutate(sex = fct_recode(sex, Men = &quot;0&quot;, Women = &quot;1&quot;)) %&gt;% mutate(cigs = as.factor(cigs)) %&gt;% mutate(cigs = fct_recode(cigs, &quot;Non-smoker&quot; = &quot;0&quot;, &quot;Smoker&quot; = &quot;1&quot;)) %&gt;% mutate(ctakers = as.factor(ctakers)) %&gt;% mutate(ctakers = fct_recode(ctakers, No = &quot;0&quot;, Yes = &quot;1&quot;)) ############################################ # End of recoding the categorical variables# ############################################ summary(vitC) #Basic summary without any package ## serial age height cigs weight sex ## Min. : 1.0 Min. :65.0 Min. :1.48 Non-smoker:80 Min. : 44.0 Men :44 ## 1st Qu.: 23.8 1st Qu.:67.0 1st Qu.:1.58 Smoker :12 1st Qu.: 57.8 Women:48 ## Median : 49.0 Median :69.0 Median :1.64 Median : 67.0 ## Mean : 49.2 Mean :69.3 Mean :1.65 Mean : 68.6 ## 3rd Qu.: 73.2 3rd Qu.:71.0 3rd Qu.:1.72 3rd Qu.: 76.5 ## Max. :100.0 Max. :74.0 Max. :1.89 Max. :103.0 ## NA&#39;s :1 NA&#39;s :1 ## seruvitc ctakers ## Min. : 8.0 No :73 ## 1st Qu.: 34.8 Yes:19 ## Median : 58.0 ## Mean : 53.2 ## 3rd Qu.: 71.0 ## Max. :100.0 ## head(vitC) #See the first 6 observations ## # A tibble: 6 × 8 ## serial age height cigs weight sex seruvitc ctakers ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt; ## 1 1 71 1.72 Smoker 68.8 Men 9 No ## 2 2 70 1.63 Non-smoker 58.2 Women 19 No ## 3 3 69 1.65 Non-smoker 94.3 Women 69 Yes ## 4 4 67 1.62 Non-smoker 87.6 Women 71 No ## 5 5 68 1.53 Non-smoker 66.3 Women 87 Yes ## 6 6 71 1.64 Non-smoker 72.2 Women 96 Yes library(psych) #some detailed summary function from this package describe(vitC) ## vitC ## ## 8 Variables 92 Observations ## ---------------------------------------------------------------------------------------------------- ## serial : subject number Format:%3.0f ## n missing distinct Info Mean Gmd .05 .10 .25 .50 .75 ## 92 0 92 1 49.25 33.74 5.55 10.10 23.75 49.00 73.25 ## .90 .95 ## 88.90 95.45 ## ## lowest : 1 2 3 4 5, highest: 96 97 98 99 100 ## ---------------------------------------------------------------------------------------------------- ## age : age on study entry Format:%2.0f ## n missing distinct Info Mean Gmd .05 .10 .25 .50 .75 ## 92 0 10 0.988 69.32 3.353 65.0 65.1 67.0 69.0 71.0 ## .90 .95 ## 74.0 74.0 ## ## lowest : 65 66 67 68 69, highest: 70 71 72 73 74 ## ## Value 65 66 67 68 69 70 71 72 73 74 ## Frequency 10 9 12 8 10 10 11 3 8 11 ## Proportion 0.109 0.098 0.130 0.087 0.109 0.109 0.120 0.033 0.087 0.120 ## ---------------------------------------------------------------------------------------------------- ## height Format:%4.1f ## n missing distinct Info Mean Gmd .05 .10 .25 .50 .75 ## 91 1 34 0.999 1.647 0.1128 1.50 1.52 1.58 1.64 1.72 ## .90 .95 ## 1.79 1.81 ## ## lowest : 1.48 1.49 1.51 1.52 1.53, highest: 1.80 1.81 1.82 1.86 1.89 ## ---------------------------------------------------------------------------------------------------- ## cigs ## n missing distinct ## 92 0 2 ## ## Value Non-smoker Smoker ## Frequency 80 12 ## Proportion 0.87 0.13 ## ---------------------------------------------------------------------------------------------------- ## weight : Clothed weight Format:%5.1f ## n missing distinct Info Mean Gmd .05 .10 .25 .50 .75 ## 91 1 79 1 68.57 15.35 48.85 50.40 57.80 67.00 76.55 ## .90 .95 ## 88.30 91.60 ## ## lowest : 44.0 46.7 48.1 48.4 48.5, highest: 92.0 94.3 97.5 102.4 103.0 ## ---------------------------------------------------------------------------------------------------- ## sex ## n missing distinct ## 92 0 2 ## ## Value Men Women ## Frequency 44 48 ## Proportion 0.478 0.522 ## ---------------------------------------------------------------------------------------------------- ## seruvitc : Serum ascorbate Format:%3.0f ## n missing distinct Info Mean Gmd .05 .10 .25 .50 .75 ## 92 0 60 1 53.21 27.12 11.55 17.00 34.75 58.00 71.00 ## .90 .95 ## 80.90 84.45 ## ## lowest : 8 9 10 11 12, highest: 85 86 87 96 100 ## ---------------------------------------------------------------------------------------------------- ## ctakers ## n missing distinct ## 92 0 2 ## ## Value No Yes ## Frequency 73 19 ## Proportion 0.793 0.207 ## ---------------------------------------------------------------------------------------------------- vitC$serial[which(is.na(vitC$height))] ## [1] 24 vitC$serial[which(is.na(vitC$weight))] ## [1] 24 從初步的熟悉數據結構和歸納結果可以看出，身高體重兩個數據有出現缺損值 (編號 24 的患者)。 # You can also get similar detailed descriptive statistics by groups from package &quot;psych&quot; describeBy(vitC$seruvitc, group = vitC$sex) ## ## Descriptive statistics by group ## group: Men ## vars n mean sd median trimmed mad min max range skew kurtosis se ## X1 1 44 46.09 24.88 52.5 45.61 25.95 8 100 92 -0.06 -1.12 3.75 ## --------------------------------------------------------------------------- ## group: Women ## vars n mean sd median trimmed mad min max range skew kurtosis se ## X1 1 48 59.73 21.04 66.5 61.15 15.57 15 96 81 -0.65 -0.62 3.04 describeBy(vitC$seruvitc, group = vitC$cigs) ## ## Descriptive statistics by group ## group: Non-smoker ## vars n mean sd median trimmed mad min max range skew kurtosis se ## X1 1 80 55.14 23.32 58 56.3 22.24 8 100 92 -0.43 -0.85 2.61 ## --------------------------------------------------------------------------- ## group: Smoker ## vars n mean sd median trimmed mad min max range skew kurtosis se ## X1 1 12 40.33 24.19 49.5 40.7 25.2 9 68 59 -0.19 -1.93 6.98 describeBy(vitC$seruvitc, group = vitC$ctakers) ## ## Descriptive statistics by group ## group: No ## vars n mean sd median trimmed mad min max range skew kurtosis se ## X1 1 73 48.64 22.79 55 49.47 25.2 8 84 76 -0.33 -1.24 2.67 ## --------------------------------------------------------------------------- ## group: Yes ## vars n mean sd median trimmed mad min max range skew kurtosis se ## X1 1 19 70.74 19.61 72 72.41 19.27 13 100 87 -1.07 1.52 4.5 所以，血清維生素水平在女性，非吸菸者，和服用補充劑(廢話) 的人中較高。 par(mfrow=c(2,2)) plot(vitC$age, vitC$seruvitc, pch = 20, xlab = &quot;age on study entry&quot;, ylab = &quot;Serum ascorbate&quot;) plot(vitC$weight, vitC$seruvitc, pch = 20, xlab = &quot;Clothed weight&quot;, ylab = &quot;Serum ascorbate&quot;) plot(vitC$height, vitC$seruvitc, pch = 20, xlab = &quot;Height&quot;, ylab = &quot;Serum ascorbate&quot;) 圖 31.1: Scatter plots between serum ascorbate and age/weight/height 散點圖似乎沒有證據提示血清維生素 C 濃度和連續型變量，年齡，身高，體重之間有什麼相關性。 建立維生素 C 和其他預測變量的簡單線性迴歸模型，你有什麼結論？ summary(lm(seruvitc ~ age, data = vitC)) ## ## Call: ## lm(formula = seruvitc ~ age, data = vitC) ## ## Residuals: ## Min 1Q Median 3Q Max ## -44.94 -18.98 5.82 16.67 46.52 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 113.104 59.511 1.90 0.061 . ## age -0.864 0.858 -1.01 0.316 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 23.8 on 90 degrees of freedom ## Multiple R-squared: 0.0111, Adjusted R-squared: 0.000163 ## F-statistic: 1.01 on 1 and 90 DF, p-value: 0.316 confint(lm(seruvitc ~ age, data = vitC)) ## 2.5 % 97.5 % ## (Intercept) -5.125 231.3335 ## age -2.568 0.8401 血清維生素 C 濃度隨着年齡增加遞減，但是迴歸係數不具有統計學意義 (\\(p=0.32\\))。年齡每增加 1 歲，血清維生素平均下降 \\(0.864 \\:\\mu\\text{mol/L， 95% CI:} (-2.57, 0.840)\\)， summary(lm(seruvitc ~ height, data = vitC)) ## ## Call: ## lm(formula = seruvitc ~ height, data = vitC) ## ## Residuals: ## Min 1Q Median 3Q Max ## -45.11 -19.81 5.76 17.94 48.29 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 115.9 41.2 2.81 0.006 ** ## height -37.8 25.0 -1.51 0.134 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 23.3 on 89 degrees of freedom ## (1 observation deleted due to missingness) ## Multiple R-squared: 0.0251, Adjusted R-squared: 0.0141 ## F-statistic: 2.29 on 1 and 89 DF, p-value: 0.134 confint(lm(seruvitc ~ height, data = vitC)) ## 2.5 % 97.5 % ## (Intercept) 34.05 197.75 ## height -87.37 11.84 血清維生素 C 濃度隨着身高增加遞減，但是迴歸係數不具有統計學意義 (\\(p=0.134\\))。身高每增加 1cm，血清維生素平均下降 \\(0.378 \\:\\mu\\text{mol/L， 95% CI:} (-0.874, 0.118)\\)， summary(lm(seruvitc ~ cigs, data = vitC)) ## ## Call: ## lm(formula = seruvitc ~ cigs, data = vitC) ## ## Residuals: ## Min 1Q Median 3Q Max ## -47.14 -19.53 3.26 17.86 44.86 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 55.14 2.62 21.05 &lt;2e-16 *** ## cigsSmoker -14.80 7.25 -2.04 0.044 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 23.4 on 90 degrees of freedom ## Multiple R-squared: 0.0442, Adjusted R-squared: 0.0336 ## F-statistic: 4.17 on 1 and 90 DF, p-value: 0.0442 confint(lm(seruvitc ~ cigs, data = vitC)) ## 2.5 % 97.5 % ## (Intercept) 49.93 60.3417 ## cigsSmoker -29.21 -0.3945 血清維生素 C 濃度與在吸菸人羣中較低，與不吸菸人羣相比，吸菸人羣的血清維生素 C 濃度平均低 \\(14.8 \\:\\mu\\text{mol/L， 95% CI:} (0.394, 29.2)\\)，這個濃度差具有臨界統計學意義 \\((p=0.044)\\)。 summary(lm(seruvitc ~ weight, data = vitC)) ## ## Call: ## lm(formula = seruvitc ~ weight, data = vitC) ## ## Residuals: ## Min 1Q Median 3Q Max ## -44.71 -18.39 4.41 17.21 46.28 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 53.04017 12.90016 4.11 8.7e-05 *** ## weight 0.00967 0.18463 0.05 0.96 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 23.6 on 89 degrees of freedom ## (1 observation deleted due to missingness) ## Multiple R-squared: 3.08e-05, Adjusted R-squared: -0.0112 ## F-statistic: 0.00274 on 1 and 89 DF, p-value: 0.958 confint(lm(seruvitc ~ weight, data = vitC)) ## 2.5 % 97.5 % ## (Intercept) 27.4078 78.6725 ## weight -0.3572 0.3765 維生素濃度和體重關係幾乎可以忽略 \\((p=0.96)\\)。 summary(lm(seruvitc ~ sex, data = vitC)) ## ## Call: ## lm(formula = seruvitc ~ sex, data = vitC) ## ## Residuals: ## Min 1Q Median 3Q Max ## -44.73 -20.23 6.59 17.27 53.91 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 46.09 3.46 13.32 &lt;2e-16 *** ## sexWomen 13.64 4.79 2.85 0.0055 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 23 on 90 degrees of freedom ## Multiple R-squared: 0.0826, Adjusted R-squared: 0.0724 ## F-statistic: 8.1 on 1 and 90 DF, p-value: 0.00547 confint(lm(seruvitc ~ sex, data = vitC)) ## 2.5 % 97.5 % ## (Intercept) 39.22 52.97 ## sexWomen 4.12 23.16 血清維生素 C 濃度與在女性中較高，與男性相比，女性的血清維生素 C 濃度平均高 \\(13.6 \\:\\mu\\text{mol/L， 95% CI:} (4.12, 23.2)\\)，這個濃度差具有顯著統計學意義 \\((p=0.005)\\)。 summary(lm(seruvitc ~ ctakers, data = vitC)) ## ## Call: ## lm(formula = seruvitc ~ ctakers, data = vitC) ## ## Residuals: ## Min 1Q Median 3Q Max ## -57.74 -15.42 5.81 18.61 35.36 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 48.64 2.60 18.73 &lt; 2e-16 *** ## ctakersYes 22.09 5.72 3.87 0.00021 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 22.2 on 90 degrees of freedom ## Multiple R-squared: 0.142, Adjusted R-squared: 0.133 ## F-statistic: 14.9 on 1 and 90 DF, p-value: 0.000209 confint(lm(seruvitc ~ ctakers, data = vitC)) ## 2.5 % 97.5 % ## (Intercept) 43.48 53.80 ## ctakersYes 10.74 33.45 血清維生素 C 濃度與在服用補充劑的人中較高，與不服用補充劑的人相比，服用者的血清維生素 C 濃度平均高 \\(22.1 \\:\\mu\\text{mol/L， 95% CI:} (10.7, 33.4)\\)，這個濃度差具有顯著統計學意義 \\((p=0.00021)\\)。 擬合一個多元線性迴歸模型，因變量爲血清維生素 C 濃度，預測變量使用 性別，吸菸狀態，和 是否服用維生素補充劑。解釋輸出結果的數字的含義。跟這些預測變量單獨和血清維生素 C 濃度建立的簡單線性迴歸模型作比較。說明哪些結果發生了改變，爲什麼。 summary(lm(seruvitc ~ sex + cigs + ctakers, data = vitC)) ## ## Call: ## lm(formula = seruvitc ~ sex + cigs + ctakers, data = vitC) ## ## Residuals: ## Min 1Q Median 3Q Max ## -40.66 -19.07 2.24 17.62 38.03 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 44.97 3.55 12.69 &lt; 2e-16 *** ## sexWomen 10.66 4.51 2.36 0.02044 * ## cigsSmoker -11.57 6.66 -1.74 0.08586 . ## ctakersYes 20.25 5.51 3.67 0.00041 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 21.3 on 88 degrees of freedom ## Multiple R-squared: 0.23, Adjusted R-squared: 0.203 ## F-statistic: 8.74 on 3 and 88 DF, p-value: 3.88e-05 print(anova(lm(seruvitc ~ sex + cigs + ctakers, data = vitC)), digits = 5) ## Analysis of Variance Table ## ## Response: seruvitc ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## sex 1 4270 4270.0 9.4354 0.0028320 ** ## cigs 1 1497 1497.0 3.3080 0.0723454 . ## ctakers 1 6102 6101.8 13.4831 0.0004125 *** ## Residuals 88 39824 452.5 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 confint(lm(seruvitc ~ sex + cigs + ctakers, data = vitC)) ## 2.5 % 97.5 % ## (Intercept) 37.927 52.017 ## sexWomen 1.687 19.630 ## cigsSmoker -24.799 1.666 ## ctakersYes 9.291 31.211 從這個多元線性迴歸的輸出報告來看，血清維生素 C 濃度 在吸菸者中較低 \\(-11.6 \\:\\mu\\text{mol/L， 95% CI:} (-24.8, +1.67), p = 0.086\\)； 在女性中較高 \\(+10.7 \\:\\mu\\text{mol/L， 95% CI:} (1.69, 19.6), p = 0.020\\)； 在服用維生素補充劑的人中較高 \\(+20.3 \\:\\mu\\text{mol/L， 95% CI:} (9.29, 31.2), p = 0.0004\\)。 故，本次數據告訴我們，服用維生素補充劑是最強的預測變量。在多元線性迴歸模型的結果中可以看到： 性別之間維生素 C 濃度差變小了 (\\(+13.6 \\rightarrow +10.7\\)) 這是因爲女性中有較多人服用維生素補充劑。即便如此，性別差在多元線性迴歸模型中仍然是有意義的。 a &lt;- Epi::stat.table(list(&quot;Vitamin C taker&quot;=ctakers, &quot;Gender&quot; = sex), list(count(),percent(ctakers)), data = vitC, margins = TRUE) print(a, digits = c(percent = 2)) ## ---------------------------------- ## ---------Gender---------- ## Vitamin Men Women Total ## C taker ## ---------------------------------- ## No 37 36 73 ## 84.09 75.00 79.35 ## ## Yes 7 12 19 ## 15.91 25.00 20.65 ## ## ## Total 44 48 92 ## 100.00 100.00 100.00 ## ---------------------------------- 吸菸與非吸菸者之間的維生素 C 濃度差也變小了 (\\(-14.8 \\rightarrow -11.6\\))，因爲儘管吸菸與非吸菸者的維生素補充劑服用比例差不不大，但是吸菸者中大部分是男性。(詳見下表) 吸菸者和非吸菸者之間維生素 C 濃度差經過多元線性迴歸調整後變得不再有統計學意義 \\((p=0.086)\\)。 a &lt;- Epi::stat.table(list(&quot;Vitamin C taker&quot;=ctakers, &quot;Smoker&quot; = cigs), list(count(),percent(ctakers)), data = vitC, margins = TRUE) print(a, digits = c(percent = 2)) ## ------------------------------------- ## -----------Smoker----------- ## Vitamin Non-smoker Smoker Total ## C taker ## ------------------------------------- ## No 63 10 73 ## 78.75 83.33 79.35 ## ## Yes 17 2 19 ## 21.25 16.67 20.65 ## ## ## Total 80 12 92 ## 100.00 100.00 100.00 ## ------------------------------------- a &lt;- Epi::stat.table(list(&quot;Gender&quot; = sex, &quot;Smoker&quot; = cigs), list(count(),percent(sex)), data = vitC, margins = TRUE) print(a, digits = c(percent = 2)) ## ------------------------------------ ## -----------Smoker----------- ## Gender Non-smoker Smoker Total ## ------------------------------------ ## Men 36 8 44 ## 45.00 66.67 47.83 ## ## Women 44 4 48 ## 55.00 33.33 52.17 ## ## ## Total 80 12 92 ## 100.00 100.00 100.00 ## ------------------------------------ 在前一個模型中加入年齡，身高，體重作爲新的預測變量。先解釋新的模型中報告的個數值的意義，利用方差分析表格比較兩個模型的差別 (先手計算，再用 R 計算確認你的答案)。 由於身高體重有缺損值(serial=24)，所以要比較預測變量增加前後的模型，需要先把之前的模型中 serial=24 的觀察對象刪除掉才公平。 Model1 &lt;- lm(seruvitc ~ sex + cigs + ctakers, data = vitC[-24,]) summary(Model1);anova(Model1) ## ## Call: ## lm(formula = seruvitc ~ sex + cigs + ctakers, data = vitC[-24, ## ]) ## ## Residuals: ## Min 1Q Median 3Q Max ## -40.79 -18.21 2.21 17.59 36.97 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 46.03 3.55 12.96 &lt; 2e-16 *** ## sexWomen 9.76 4.49 2.18 0.03228 * ## cigsSmoker -12.26 6.59 -1.86 0.06627 . ## ctakersYes 19.83 5.45 3.64 0.00047 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 21 on 87 degrees of freedom ## Multiple R-squared: 0.226, Adjusted R-squared: 0.199 ## F-statistic: 8.46 on 3 and 87 DF, p-value: 5.39e-05 ## Analysis of Variance Table ## ## Response: seruvitc ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## sex 1 3689 3689 8.35 0.00486 ** ## cigs 1 1679 1679 3.80 0.05440 . ## ctakers 1 5841 5841 13.23 0.00047 *** ## Residuals 87 38418 442 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Model2 &lt;- lm(seruvitc ~ sex + cigs + ctakers + age + weight + height, data = vitC[-24,]) summary(Model2);anova(Model2) ## ## Call: ## lm(formula = seruvitc ~ sex + cigs + ctakers + age + weight + ## height, data = vitC[-24, ]) ## ## Residuals: ## Min 1Q Median 3Q Max ## -40.56 -17.72 4.23 18.75 35.58 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 65.352 89.482 0.73 0.46722 ## sexWomen 10.367 7.285 1.42 0.15843 ## cigsSmoker -11.800 6.757 -1.75 0.08444 . ## ctakersYes 19.859 5.547 3.58 0.00057 *** ## age -0.353 0.840 -0.42 0.67499 ## weight 0.107 0.223 0.48 0.63174 ## height -1.573 42.259 -0.04 0.97040 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 21.3 on 84 degrees of freedom ## Multiple R-squared: 0.233, Adjusted R-squared: 0.178 ## F-statistic: 4.25 on 6 and 84 DF, p-value: 0.00088 ## Analysis of Variance Table ## ## Response: seruvitc ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## sex 1 3689 3689 8.14 0.00546 ** ## cigs 1 1679 1679 3.70 0.05767 . ## ctakers 1 5841 5841 12.88 0.00056 *** ## age 1 205 205 0.45 0.50283 ## weight 1 133 133 0.29 0.58951 ## height 1 1 1 0.00 0.97040 ## Residuals 84 38079 453 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 利用偏 \\(F\\) 檢驗的公式 \\[ F=\\frac{(205.2889295+132.9899543+0.6280691)/3}{38079.42/84} = 0.2492713 \\] anova(Model1, Model2) ## Analysis of Variance Table ## ## Model 1: seruvitc ~ sex + cigs + ctakers ## Model 2: seruvitc ~ sex + cigs + ctakers + age + weight + height ## Res.Df RSS Df Sum of Sq F Pr(&gt;F) ## 1 87 38418 ## 2 84 38079 3 339 0.25 0.86 所以檢驗統計量對應的 \\(p=0.86\\) 告訴我們沒有證明據證明調整了性別，吸菸狀況，服用補充劑與否之後，增加的年齡，體重，身高作爲預測變量和觀察對象的血清維生素 C 濃度有關係。模型 2 比模型 1 不能解釋更多的模型殘差 (不比模型 1 更加擬合數據)。 31.5.2 紅細胞容積與血紅蛋白 表 30.4: Data set of haemoglobin and PCV explained Variable name content hb Haemoglobin (gm/dl) pcv Pack cell volume % age Age (years) 把數據導入 R，並且建立因變量爲血紅蛋白，預測變量爲 PCV 和 年齡的多元線性迴歸模型 library(haven) haem &lt;- read_dta(&quot;../backupfiles/haem.dta&quot;) psych::describe(haem) ## vars n mean sd median trimmed mad min max range skew kurtosis se ## hb 1 12 12.53 1.70 12.8 12.56 1.70 9.6 15.1 5.5 -0.26 -1.39 0.49 ## pcv 2 12 38.58 8.14 37.5 38.80 11.12 25.0 50.0 25.0 -0.10 -1.59 2.35 ## age 3 12 32.75 8.98 31.5 32.40 9.64 20.0 49.0 29.0 0.31 -1.20 2.59 Model3 &lt;- lm(hb ~ pcv + age, data = haem) summary(Model3) ## ## Call: ## lm(formula = hb ~ pcv + age, data = haem) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.413 -1.002 0.302 0.662 1.867 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 5.0606 1.9680 2.57 0.030 * ## pcv 0.1056 0.0429 2.46 0.036 * ## age 0.1036 0.0389 2.66 0.026 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.15 on 9 degrees of freedom ## Multiple R-squared: 0.63, Adjusted R-squared: 0.548 ## F-statistic: 7.65 on 2 and 9 DF, p-value: 0.0114 haem$e_hat &lt;- Model3$residuals haem$y_hat &lt;- Model3$fitted.values print(haem) ## # A tibble: 12 × 5 ## hb pcv age e_hat y_hat ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 11.1 35 20 0.274 10.8 ## 2 10.7 45 22 -1.39 12.1 ## 3 12.4 47 25 -0.211 12.6 ## 4 14 50 28 0.762 13.2 ## 5 13.1 31 28 1.87 11.2 ## 6 10.5 30 31 -0.938 11.4 ## 7 9.6 25 32 -1.41 11.0 ## 8 12.5 33 35 0.331 12.2 ## 9 13.5 35 38 0.810 12.7 ## 10 13.9 40 40 0.475 13.4 ## 11 15.1 45 45 0.629 14.5 ## 12 13.9 47 49 -1.20 15.1 利用 R 的矩陣計算重現迴歸模型的計算結果 計算因變量和兩個預測變量各自的和 sumy &lt;- sum(haem$hb) sumx1 &lt;- sum(haem$pcv) sumx2 &lt;- sum(haem$age) 計算因變量和兩個預測變量各自的平方和 sumy2 &lt;- sum((haem$hb)^2) sumx1y &lt;- sum(haem$hb*haem$pcv) sumx2y &lt;- sum(haem$hb*haem$age) sumx12 &lt;- sum((haem$pcv)^2) sumx22 &lt;- sum((haem$age)^2) sumx1x2 &lt;- sum(haem$pcv*haem$age) 生成一個數值爲 1 的變量，名爲 one one &lt;- rep(1,12) 用 matrix() 命令生成矩陣 Rownames &lt;- NULL for(i in 1:12) { a &lt;- paste(&quot;row&quot;, i, sep = &quot;&quot;) Rownames &lt;- c(Rownames,a); rm(a) } Y &lt;- matrix(haem$hb ,dimnames = list(Rownames, &quot;hb&quot;)) Y ## hb ## row1 11.1 ## row2 10.7 ## row3 12.4 ## row4 14.0 ## row5 13.1 ## row6 10.5 ## row7 9.6 ## row8 12.5 ## row9 13.5 ## row10 13.9 ## row11 15.1 ## row12 13.9 X &lt;- matrix(c(one, haem$pcv, haem$age), nrow = 12, dimnames = list(Rownames, c(&quot;one&quot;, &quot;pcv&quot;, &quot;age&quot;))) X ## one pcv age ## row1 1 35 20 ## row2 1 45 22 ## row3 1 47 25 ## row4 1 50 28 ## row5 1 31 28 ## row6 1 30 31 ## row7 1 25 32 ## row8 1 33 35 ## row9 1 35 38 ## row10 1 40 40 ## row11 1 45 45 ## row12 1 47 49 用公式 (31.4) 計算估計 \\(\\mathbf{\\hat\\beta}\\) 矩陣 XX &lt;- t(X) %*% X # these are the sum of squares of each variable and the sum of the cross products of the pairs of variables XX ## one pcv age ## one 12 463 393 ## pcv 463 18593 15276 ## age 393 15276 13757 (data.frame(sumx1,sumx12,sumx2,sumx22, sumx1x2)) ## sumx1 sumx12 sumx2 sumx22 sumx1x2 ## 1 463 18593 393 13757 15276 XY &lt;- t(X) %*% Y # this is the cross-product matrix of predictors against outcome XY ## hb ## one 150.3 ## pcv 5887.7 ## age 5026.0 (data.frame(sumy, sumx1y, sumx2y)) ## sumy sumx1y sumx2y ## 1 150.3 5888 5026 betahat &lt;- solve( t(X) %*% X ) %*% t(X) %*% Y betahat ## hb ## one 5.0606 ## pcv 0.1056 ## age 0.1036 ###or equivalently you can use betahat &lt;- solve( crossprod(X) ) %*% crossprod( X, Y ) betahat ## hb ## one 5.0606 ## pcv 0.1056 ## age 0.1036 可以看到 betahat 的結果和多元迴歸模型輸出的迴歸係數估計是一致的。 計算擬合值 Fitted &lt;- X%*%betahat Fitted ## hb ## row1 10.83 ## row2 12.09 ## row3 12.61 ## row4 13.24 ## row5 11.23 ## row6 11.44 ## row7 11.01 ## row8 12.17 ## row9 12.69 ## row10 13.43 ## row11 14.47 ## row12 15.10 估計迴歸係數的方差協方差矩陣 e_hat &lt;- Y-Fitted # residuals e_hat ## hb ## row1 0.2736 ## row2 -1.3892 ## row3 -0.2110 ## row4 0.7616 ## row5 1.8674 ## row6 -0.9377 ## row7 -1.4134 ## row8 0.3314 ## row9 0.8096 ## row10 0.4747 ## row11 0.6291 ## row12 -1.1962 SSres &lt;- t(e_hat) %*% e_hat # residual sum of squares SSres ## hb ## hb 11.81 Sigma2 &lt;- SSres %*% (1/(12-(2+1))) # residual variance Sigma2 ## [,1] ## hb 1.312 # multiply the inverse of the cross-product matrix for the predictors # by the residual variance to get the variance-covariance matrix of # the coefficients V &lt;- solve( crossprod(X) ) * as.numeric(Sigma2) V ## one pcv age ## one 3.87296 -0.0632072 -0.0404537 ## pcv -0.06321 0.0018365 -0.0002336 ## age -0.04045 -0.0002336 0.0015105 # the square root of the diagonal terms in the above matrix are the standard errors shown in the regression output sqrt(diag(V)) ## one pcv age ## 1.96798 0.04285 0.03887 31.6 LM practical 05 "],["lm-diag.html", "第 32 章 線性迴歸的模型診斷 32.1 線性迴歸模型的前提條件 32.2 用圖形來視覺診斷 32.3 殘差圖 32.4 殘差正態圖 normal plot of residuals 32.5 前提條件的統計學檢驗 32.6 異常值，槓桿值，和庫克距離 32.7 在統計忍者包裏面對模型診斷作圖 32.8 LM practical 06", " 第 32 章 線性迴歸的模型診斷 和其他的統計學模型一樣，線性迴歸也有自己的前提條件，而且從模型結果作出的各種推斷都依賴這些前提條件的成立。所以，我們需要有一些統計學的手段來檢查線性迴歸模型中這些前提是否得到滿足。然而理想總是很豐滿，現實通常又太骨感。你不大可能找到一組真實的數據能夠 100% 完美的滿足所需要的前提條件。當然不是說不能滿足模型的前提條件，我們就無法進行統計推斷了。而且我們也有不少結果穩健 (robust) 的統計學手段，讓我們可以不必考慮太多前提條件。檢查數據，瞭解數據內容，理解數據本身的結構永遠都是有助於數據分析的。 還要記得一點就是，根據中心極限定理，(即使有一些前提假設不能成立) 大型數據分析結果的穩健性/可靠性，要高於小型數據的分析。 32.1 線性迴歸模型的前提條件 因變量和各個預測變量之間的關係都是線性 linear relationship 的； 因變量之間相互獨立； 真實 true 殘差的方差是恆定不變的 constant。這裏的含義是在真實迴歸直線上下散佈的因變量的點，在任意一個預測變量值的位置的方差 (分散) 要保持恆定不變。這個特性被描述成方差齊性 homoscedasticity (殘差方差的一致性 homogeneity of the residual variance)，與之相對的定義是異方差性 heteroscedasticity (殘差方差的不同質性，heterogeneity of the residual variance)。 真實殘差服從正態分佈。(儘管你發現統計忍者包裏丟入隨便什麼數據都能給你個線性迴歸的報告來，但是，如果你真想用其結果做統計推斷，p CI 的話，這條前提必須滿足。) 本章着重討論第 1，3，4 前提條件的診斷法。因爲觀測數據之間是否獨立性 (第 2 條) 並不是你光盯着數據看就能知道的。你要去問給你數據的 (沒良心的) 人。 32.2 用圖形來視覺診斷 圖 32.1: Illustration the usefullness of scatter plots of the dependent variable against the predictor variable in simple linear regression 圖 32.1 中展示了四種實例。把預測變量和因變量做散點圖，這常常是甄別出異方差性 (Example C)，非線性 (Example A)，異常值 (Example D) 的最好方法。其中右上角的 Example B 是良好的迴歸模型的散點圖應該有的樣子。 建議進行視覺判斷的時候把擬合曲線去掉再作一次，看看有迴歸直線和沒有迴歸直線前後的散點圖差別，更容易看出數據的分佈特徵。但是光看散點圖作判斷的方法，在多元線性迴歸模型中只能看看能否找到一些異常值，對輔助判斷方差齊性和線性關係就沒有太大的用處。殘差點圖就更加實用。 32.3 殘差圖 如果線性迴歸模型的前提條件能夠得到滿足，那麼擬合模型後的殘差，一定會服從正態分佈且方差均勻一致。所以另一個診斷異方差性的辦法可以通過作觀察殘差和擬合值之間的散點圖來輔助判斷。下圖 32.2 是各個簡單線性迴歸擬合後的殘差和擬合值之間的散點圖。可以看出左下角的 Example C 的異方差性展現得更加明顯了。同樣此圖也能幫助判斷線性關係，如左上角的 Example A 所示，如果預測變量和因變量之間不是線性關係，那麼殘差就不可能均勻的分佈在 \\(0\\) 的兩側。 圖 32.2: Plots of residuals agianst fitted values for the examples in the previous figure 對於一個簡單線性迴歸模型來說，擬合值僅僅只是預測變量的一個線性數學轉換，所以上面圖中的殘差和擬合值的散點圖，其實等價於殘差和預測變量的散點圖。所以圖 32.1 和圖 32.2 兩圖展現的信息量此時是一樣的。 但是，多元線性迴歸時，殘差和擬合值的散點圖會比殘差和預測變量散點圖更適合判斷異方差性，和線性關係的假設。 32.4 殘差正態圖 normal plot of residuals 正態圖在分析技巧的章節也有介紹 (Section 26.2.1)。這是最佳的判斷數據是否服從正態分佈的視覺圖。所以用它來繪製線性迴歸擬合後的殘差，是個很好的辦法。可惜的是殘差正態圖無法用於判斷異方差性，和線性關係兩個假設。 圖 32.3: Normal plots of residuals for the examples in the previous figure 有時後觀察殘差 (observed residuals) 可能不能滿足齊方差性質而真實殘差 (true residuals) 反而滿足。所以一些統計學家建議把計算的殘差標準化 (standardised residuals) 以後再作正態圖。 32.4.1 模型診斷實例 前面建立過的兒童體重和年齡，身長之間的多元迴歸模型的診斷 (Section 31.3.3) 見下圖。所有四個圖都沒有證據證明非線性關係和異方差性。看不見顯著的異常值。正態圖看出殘差有那麼一點點不太正態分佈，但是不嚴重到讓人懷疑模型給出的推斷是否受到重大影響。 圖 32.4: Residual plots for the linear regression relating a child’s weight to their age and length 32.5 前提條件的統計學檢驗 32.5.1 二次方程迴歸法檢驗非線性 二次方程迴歸法是一種多元迴歸模型，它包含了兩個預測變量，一個是另一個的平方。數學模型可以標記成爲： \\[ \\begin{aligned} y_i &amp; = \\alpha + \\beta_1 x_i + \\beta_2 x_i^2 + \\varepsilon_i \\\\ \\text{Where } &amp; \\varepsilon_i \\sim \\text{NID}(0, \\sigma^2) \\end{aligned} \\tag{32.1} \\] 儘管你看到了二次方程在這裏，但是這仍然是一個線性迴歸模型。但是二次方程的迴歸模型描述的是 \\(Y, X\\) 兩個變量之間的非線性關係。如果你把方程 \\(\\hat{y}_i = \\hat\\alpha + \\hat\\beta_1x_i + \\hat\\beta_2x^2_i\\) 對 \\(x_i\\) 求微分，你會得到 \\(\\hat\\beta_1+2\\hat\\beta_2 x_i\\)。這是二次方程的曲率方程。所以如果結果中報告 \\(\\hat\\beta_2\\) 是有統計學意義的，就等於是有證據證明這兩個變量之間的關係不是線性的。 growgam1$age2 &lt;- (growgam1$age)^2 Model2 &lt;- lm(wt ~ len + age + age2, data=growgam1) print(summary(Model1), digits = 5) ## ## Call: ## lm(formula = wt ~ age + len, data = growgam1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3.20525 -0.64402 -0.00303 0.55967 2.86277 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -8.351244 1.259968 -6.6281 3.531e-10 *** ## age -0.011260 0.016751 -0.6722 0.5023 ## len 0.237129 0.019516 12.1502 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.9546 on 187 degrees of freedom ## Multiple R-squared: 0.74337, Adjusted R-squared: 0.74063 ## F-statistic: 270.84 on 2 and 187 DF, p-value: &lt; 2.22e-16 print(summary(Model2), digits = 5) ## ## Call: ## lm(formula = wt ~ len + age + age2, data = growgam1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3.30561 -0.64811 -0.01615 0.54829 2.74233 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -8.5918429 1.2537775 -6.8528 1.031e-10 *** ## len 0.2514685 0.0205039 12.2644 &lt; 2.2e-16 *** ## age -0.1110198 0.0502050 -2.2113 0.02823 * ## age2 0.0023351 0.0011091 2.1055 0.03659 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.9459 on 186 degrees of freedom ## Multiple R-squared: 0.74935, Adjusted R-squared: 0.74531 ## F-statistic: 185.36 on 3 and 186 DF, p-value: &lt; 2.22e-16 正如上面的二次方程模型輸出結果所示，年齡和體重之間，當調整了身高以後，有證據 (但是較弱) 證明不呈現線性關係 \\((p=0.037)\\)。 32.5.2 非線性關係模型 二次方程的迴歸模型的應用在非線性模型中的應用其實有許許多多的缺陷。例如二次方程迴歸只能默認有一個極致點。也就是在二次方程模型中，預測變量和因變量的關係要麼是先下降後升高，要麼是先升高再下降。不光如此，二次方程迴歸還默認二者之間的關係在極致點是左右對稱的。這無論如何在現實中都很難有成這樣關係的兩個變量。所以，假如你使用二次方程模型迴歸之後發現非線性的證據是有意義的，那麼更好的辦法是接下來擬合一個更加符合實際情況的非線性模型-多項式曲線迴歸模型。 二次方程回顧模型是多項式曲線迴歸模型的最簡單形式，其次是三次方程模型 (其實就是在公式 (32.1) 裏面加一個 \\(+\\beta_3 x_i^3\\))。另一種更加靈活的模型是擬合一個精確的分段式多項式模型，即允許在不同範圍 (被描述爲 “結點 knots”) 的預測變量 \\(X\\) 內擬合不同的模型。其中一種叫做 限制性立方曲線模型 restricted cubic spline model (點這裏看我用了這種方法的論文)： 默認第一個節點之前和最後一個節點以後爲直線模型； 其餘節點之間默認用三次方迴歸模型擬合數據； 在節點處的兩個方程之間用平滑的曲線連接 (強制兩個方程的一階二階導數相等即可 constraining the first and second derivatives of adjacent functions to agree when they meet at the knot point) 32.6 異常值，槓桿值，和庫克距離 觀測值中的異常值很顯然對模型的擬合會有較大的影響。如果某個觀測值對應的擬合值是異常值的話，那麼這樣的值被認爲槓桿值很大。庫克距離 (Cook’s Distance) 是另一種用來衡量異常值的手段。 32.6.1 異常值和標準化殘差 異常值指的是那些通過模型擬合過後，觀測值和擬合值差異很大的那些觀察對象。這些值需要被甄別出來因爲它們 可能是數據錄入階段造成的人爲失誤，或者是有什麼別的原因導致的系統性異常需要讓輸入數據的人員進行進一步的調查； 異常值可能較大的影響迴歸係數的方差估計，造成不精確甚至錯誤的結果； 異常值也會影響迴歸係數本身的估計。 觀測值和擬合值之間的差，被命名爲觀測殘差 (observed residuals)。線性迴歸模型的前提之一是 真實殘差 獨立且方差維持恆定不變。但是觀測殘差卻無可能做到獨立且方差恆定不變。 之所以說觀測殘差不是獨立的，可以這樣來理解：假如擬合某個線性迴歸模型，預測變量是二分類的，且其中一個分類只有兩個觀測值，那麼擬合的直線會通過這兩個觀測值的中心點 (均值)，那麼這兩個觀測值的觀測殘差就恰好分佈在迴歸直線的兩側 (相加之和爲零，呈完美負相關)，它們是相關的！！！ 觀測殘差的方差不可能恆定的理由，可以這樣來理解：同樣假如擬合某個預測變量是二分類的線性迴歸模型，其中一個分類只有一個觀測值，那麼迴歸直線在這個觀測值處的殘差方差是零。 標準化殘差 (standardized residuals) \\((r_i)\\)，被定義爲每個觀測值的殘差和模型估計的殘差標準誤相除獲得的數據。所以符合前提條件的線性模型擬合後，計算的標準化殘差會服從標準正態分佈。從標準正態分佈的知識你也應該知道，\\(95\\%\\) 的觀測值的標準化殘差必須分佈在數值 \\(-2, 2\\) 範圍內。另外一種標準化殘差的方法叫做內學生化殘差 (studentised residual)。內學生化殘差是把觀測值的殘差除以每一個觀測值各自的估計標準誤。在 R 裏面可以通過 rstandard() 命令計算迴歸模型每個觀測值的內學生化殘差。內學生化殘差也是服從標準正態分佈的。 32.6.2 槓桿值 Leverage 如果一個觀測值的擬合值十分極端，那麼該觀測值本身可能對迴歸模型的參數估計影響很大。這個影響程度大小用槓桿值衡量。簡單線性迴歸時，每個觀測值的槓桿值計算公式爲： \\[ \\begin{aligned} l_i = \\frac{1}{n} + \\frac{x_i-\\bar{x}}{SS_{xx}} \\end{aligned} \\tag{32.2} \\] 槓桿值的範圍是 \\(\\frac{1}{n}, 1\\) 之間。槓杆值方程提示這是一個單調函數，它是評價預測變量本身到該變量均值之間距離的指標。槓桿值越大，該觀測值就有越大的可能性對模型擬合造成影響。如果槓桿值大到等於 \\(1\\)，那麼槓桿效應造成的影響極大，觀測值和擬合值就完全一致。意味着在這個觀測值附近，只有它自己，沒有其他觀測值。 (2018-05-14 嘗試過去試題 2014 Paper 2-Q2 時發現槓杆值的問題，在此繼續增加關於多元現行回歸中槓杆值的性質。) 多元線性迴歸時的槓桿值計算公式和 (31.7) 中的帽子矩陣 \\(\\mathbf{P}\\) 有關： \\[ \\begin{aligned} &amp; l_i = \\mathbf{P}_{ii} \\text{ The } i\\text{ th diagonal element of } \\\\ &amp; \\mathbf{X(X^\\prime X)^{-1}X^\\prime} \\end{aligned} \\tag{32.3} \\] In multiple regression, leverage measures “distance” from the centre of the joint distribution of the predecitor variables, but with distance scaled by the directional degree of dispersion. Notice that the point with largest leverage would not have particularly high leverage in either simple linear regression models including only one of the two (or more) predictor variables. Further this point would not be readily identified in plots of each of the predictor variables against the dependent variable. The value of measures such as the leverage is greatest in complex multiple regression models where it can be difficult to identify points with an atypical (非典型) combination of predictor variables using more simple graphical techniques. 32.6.3 庫克距離 Cook’s Distance 當通過計算觀測值的槓桿值之後，發現具有較大槓桿值的那些觀測點，應該被視爲對模型的穩定性有“潛在威脅”。此時就輪到庫克距離的登場。庫克距離可以用來衡量一個觀測值對模型的影響大小 (比較把觀測值移除出模型前後的模型變化)。 對於一個有 \\(p\\) 個預測變量的迴歸模型來說，如果殘差方差的估計值爲 \\(\\hat\\sigma^2\\)，那麼第 \\(i\\) 個觀測值的庫克距離的計算過程就是把該觀測值移除，重新擬合相同的模型，計算獲得該點做的新的擬合值 \\(\\hat y_{j(i)}\\)： \\[ \\begin{aligned} D_i = \\frac{\\sum^n_{j=1}(\\hat y_{j(i)} - \\hat y_j)^2}{(p+1)\\hat\\sigma^2} \\end{aligned} \\tag{32.4} \\] 可以被證明的是，庫克距離其實是結合標準化殘差值 \\((r_i)\\)，和槓桿值 \\((l_i)\\) 的一個綜合量： \\[ \\begin{aligned} D_i &amp; = \\frac{\\sum^n_{j=1}(\\hat y_{j(i)} - \\hat y_j)^2}{(p+1)\\hat\\sigma^2} \\\\ &amp; = \\frac{r^2_il_i}{(p+1)(1-l_i)} \\end{aligned} \\tag{32.5} \\] 所以從庫克距離和標準化殘差，以及槓桿值之間的關係公式 (32.5) 也可以看出，當槓桿值大同時標準化殘差值的絕對值也大的觀測值，庫克距離就會很大。用線性迴歸時，把每個觀測值得庫克距離和擬合值作散點圖，或者把槓桿值和標準化殘差作散點圖是常用的判斷異常值的手段。 32.7 在統計忍者包裏面對模型診斷作圖 擬合好了一個線性迴歸模型以後，plot(Modelname) 即可看到四個診斷圖 (Section 27.8.5)。 32.8 LM practical 06 "],["interaction.html", "第 33 章 交互作用 Interactions 33.1 兩個預測變量之間的線性模型交互作用 33.2 LM practical 07", " 第 33 章 交互作用 Interactions 線性迴歸部分目前爲止我們討論過如何用多元迴歸模型來控制 (或調整) 特定的預測變量 \\((X)\\) 之外的變量。多元迴歸的目的之一是爲了估計預測變量和因變量之間的迴歸係數的同時，保持其他 (想要被調整的) 變量不變。如此一來，其實等於是假定了無論其餘的調整變量取值如何，\\(X,Y\\) 之間的迴歸係數總是相同 (繪製的迴歸線是一組平行線)。本章討論的交互作用，就是探討其中某個變量改變了 \\(X,Y\\) 之間的關係 (modification effect) 的情況。放寬了之前強制所有直線都平行的限制，探討兩個變量之間的線性關係是否因爲某個變量而發生了質的改變。這樣的關係，在流行病學中被定義爲 交互作用 interaction。 本站會探討如何利用線性迴歸模型分析交互作用，如何理解並解釋統計忍者包輸出的報告結果的意義。具體涉及的例子爲：兩個連續型變量，兩個分類型變量，以及一個連續型，一個分類型變量之間的關係的交互作用。 33.1 兩個預測變量之間的線性模型交互作用 33.1.1 交互作用線性模型的一般表達式 假如準備擬合的模型是一個因變量 \\(Y\\)，兩個預測變量 \\(X_1, X_2\\)。同時模型考慮根據 \\(X_2\\) 的值，\\(X_1, Y\\) 之間關係的迴歸係數可以不相等 (直線的斜率不同，即會出現兩條相交的迴歸直線)。這樣的模型其實只要在原有的兩個預測變量的迴歸線性模型中增加一個新的預測變量，新的預測變量是 \\(X_1, X_2\\) 的乘積即可。很簡單，不是麼？ \\[ \\begin{aligned} y_i &amp; = \\alpha + \\beta_1 x_{1i} + \\beta_2 x_{2i} + \\beta_3 x_{3i} + \\varepsilon_i \\\\ \\text{Where, } &amp; \\varepsilon_i \\sim \\text{NID}(0,\\sigma^2) \\\\ y_i &amp; = \\text{value of the dependent variable} \\\\ x_{1i} &amp; = \\text{value of the first predictor variable} \\\\ x_{2i} &amp; = \\text{value of the second predictor variable} \\\\ x_{3i} &amp; = x_{1i} \\times x_{2i} \\\\ \\end{aligned} \\tag{33.1} \\] 爲什麼增加一個 \\(X_1\\times X_2\\) 就能夠分析交互作用呢 (不同直線的斜率)？ 要理解其中的奧妙，我們可以這樣來理解：當像普通的線性迴歸模型那樣調整了 \\(X_2\\) 之後，也就是當 \\(X_2\\) 固定不變時 \\((X_2=k)\\)，迴歸方程 (33.1)，就變成了： \\[ \\begin{equation} y_i = (\\alpha + \\beta_2 k) + (\\beta_1 + \\beta_3 k)x_{1i} + \\varepsilon_i \\end{equation} \\tag{33.2} \\] 此時的 \\(X_1\\) 的斜率從 \\(\\beta_1\\) 變成了 \\((\\beta_1 + \\beta_3 k)\\)，截距從 \\(\\alpha\\) 變成了 \\((\\alpha + \\beta_2 k)\\)。 33.1.2 連續型變量和二分類變量之間的交互作用 一個連續型變臉一個二分類變量的交互作用迴歸方程十分容易理解 (利用啞變量建立模型)： \\[ \\begin{array}{ll} y_i = \\alpha + \\beta_1 x_1i + \\varepsilon_i &amp; \\text{ when } X_2 = 0 \\\\ y_i = (\\alpha + \\beta_2) + (\\beta_1+\\beta_3)x_{1i} + \\varepsilon_i &amp; \\text{ when } X_2 =1 \\end{array} \\tag{33.3} \\] 所以，\\(X_2\\) 取零 或者 取 \\(1\\) 代表了不同的分組，上面的迴歸方程就可以擬合 \\(Y, X_1\\) 在 \\(X_2\\) 的兩組中不同截距，不同斜率的兩條直線。其中各個參數估計，用人話來解釋就是： \\(\\alpha\\) 是當 \\(X_2 = 0\\) 時的截距； \\(\\alpha + \\beta_2\\) 是當 \\(X_2 = 1\\) 時的截距，所以 \\(\\beta_2\\) 就是二分類預測變量 \\(X_2\\) 的兩組之間截距的差； \\(\\beta_1\\) 是當 \\(X_2 = 0\\) 時的斜率； \\((\\beta_1+\\beta_3)\\) 是當 \\(X_2 = 1\\) 時的截距，所以 \\(\\beta_3\\) 就是二分類預測變量 \\(X_2\\) 的兩組之間斜率的差。 33.1.3 兩個二分類變量之間的交互作用 當兩個預測變量都是二分類變量時，可以用兩個啞變量來編碼各自的分組，擬合下面的迴歸模型： \\[ \\begin{array}{lll} y_i = \\alpha + \\varepsilon_i &amp; \\text{ when } X_1 = 0 \\&amp; X_2 = 0 &amp; \\mu_{00} \\\\ y_i = \\alpha + \\beta_1 + \\varepsilon_i &amp; \\text{ when } X_1 = 1 \\&amp; X_2 =0 &amp; \\mu_{10} \\\\ y_i = \\alpha + \\beta_2 + \\varepsilon_i &amp; \\text{ when } X_1 = 0 \\&amp; X_2 =1 &amp; \\mu_{01} \\\\ y_i = \\alpha + \\beta_1 + \\beta_2+ \\beta_3 + \\varepsilon_i &amp; \\text{ when } X_1 = 1 \\&amp; X_2 = 1 &amp; \\mu_{11} \\end{array} \\tag{33.4} \\] 如果用 \\(\\mu_{ij}\\) 表示 \\(X_1 = i, X_2 = j\\) 時的總體均值 (population mean)，那麼模型 (33.4) 各個參數估計及其意義爲： \\(\\alpha\\) 是當 \\(X_1 = 0, \\&amp; X_2 = 0\\) 時 \\(Y\\) 的均值估計 \\((\\mu_{00})\\)； \\(\\alpha+\\beta_1\\) 是當 \\(X_1 = 1 \\&amp; X_2 = 0\\) 時 \\(Y\\) 的均值估計 \\(\\mu_{10}\\)，所以 \\(\\beta_1\\) 是 \\(X_2 = 0\\) 時 \\(X_1\\) 的兩組之間 \\(Y\\) 的均值差，\\(\\mu_{10}-\\mu_{00}\\)； \\(\\alpha+\\beta_2\\) 是當 \\(X_1 = 0 \\&amp; X_2 = 1\\) 時 \\(Y\\) 的均值估計 \\(\\mu_{01}\\)，所以 \\(\\beta_2\\) 是 \\(X_1 = 0\\) 時 \\(X_2\\) 的兩組之間 \\(Y\\) 的均值差，\\(\\mu_{01}-\\mu_{00}\\)； \\(\\alpha + \\beta_1 + \\beta_2 + \\beta_3\\) 是當 \\(X_1 = 1 \\&amp; X_2 = 1\\) 時的均值估計 \\(\\mu_{11}\\)，所以 \\(\\beta_3\\) 是 \\(X_1 = 1\\) 時，\\(X_2\\) 的兩組之間 \\(Y\\) 的均值差 \\(\\mu_{11}-\\mu_{10}\\) 減去 \\(X_2 = 0\\) 時，\\(X_1\\) 的兩組之間的均值差 \\(\\mu_{01}-\\mu_{00}\\)：\\((\\mu_{11}-\\mu_{10}) - (\\mu_{01}-\\mu_{00})\\)。 當 \\(X_1\\) 是連續型變量時，交互作用項的迴歸係數 \\(\\beta_3\\) 的幾何意義是兩個迴歸直線斜率的差。但是本例中，兩個預測變量都是二分類變量的情況下，\\(\\beta_3\\) 的實際意義就變成了，被 \\(X_2\\) 定義的兩組 \\(X_1\\) 之間因變量差的差，\\((\\mu_{11}-\\mu_{10}) - (\\mu_{01}-\\mu_{00})\\)。 33.1.4 兩個連續變量之間的交互作用 前面 (Section 33.1.2) 已經討論過，一個是連續型變量 \\(X_1\\)，另一個是分類變量時 \\(X_2\\)，線性迴歸的交互作用項迴歸係數的含義是因變量 \\(Y\\) 和連續性變量 \\(X_1\\) 在不同的 \\(X_2\\) 組中的迴歸係數之差(斜率之差)。但是，當兩個預測變量 \\(X_1, X_2\\) 都是連續型變量時，交互作用項的迴歸係數該如何解釋呢？直觀的說，此時的交互作用項迴歸係數應該被理解爲：預測變量 \\(X_2\\) 每增加一個單位時，\\(Y, X_1\\) 之間關係的迴歸方程的斜率變化。爲了更好地解釋這個概念，我們沿用前面兒童年齡和身長預測其身高的模型 (Section 31.3.3)，加入年齡和身高的交互作用項結果如下： growgam1 &lt;- read_dta(&quot;../backupfiles/growgam1.dta&quot;) growgam1$sex &lt;- as.factor(growgam1$sex) Model1 &lt;- lm(wt ~ age + len + age*len, data=growgam1) # or equivalently use lm(wt ~ age*len, data=growgam1) summary(Model1) ## ## Call: ## lm(formula = wt ~ age + len + age * len, data = growgam1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3.200 -0.651 0.003 0.522 2.895 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -4.51956 1.90918 -2.37 0.0189 * ## age -0.28490 0.10496 -2.71 0.0073 ** ## len 0.18777 0.02681 7.00 4.4e-11 *** ## age:len 0.00340 0.00129 2.64 0.0090 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.94 on 186 degrees of freedom ## Multiple R-squared: 0.753, Adjusted R-squared: 0.749 ## F-statistic: 189 on 3 and 186 DF, p-value: &lt;2e-16 confint(Model1) ## 2.5 % 97.5 % ## (Intercept) -8.2859887 -0.753130 ## age -0.4919562 -0.077844 ## len 0.1348837 0.240657 ## age:len 0.0008588 0.005937 這裏的模型中，兒童的身長和年齡相乘的部分構成了一個交互作用項。我們用這個擬合的迴歸方程寫出當兒童年齡爲 12 個月時，身長預測體重的方程： \\[ \\begin{aligned} E(\\text{weight|age}=12) &amp; = (-4.5196 - 0.2849\\times12) \\\\ &amp; \\;\\;\\;\\;\\;\\;\\;\\;+ (0.1878 + 0.0034\\times12)\\times\\text{Length} \\\\ &amp; = -7.9384 + 0.2286\\times \\text{Length} \\end{aligned} \\] 類似地，年齡 13 個月時， 預測體重的方程是： \\[ \\begin{aligned} E(\\text{weight|age}=13) &amp; = (-4.5196 - 0.2849\\times13) \\\\ &amp; \\;\\;\\;\\;\\;\\;\\;\\;+ (0.1878 + 0.0034\\times13)\\times\\text{Length} \\\\ &amp; = -8.2233 + 0.2320\\times \\text{Length} \\end{aligned} \\] 年齡 13 個月時， 預測體重的方程是： \\[ \\begin{aligned} E(\\text{weight|age}=14) &amp; = (-4.5196 - 0.2849\\times14) \\\\ &amp; \\;\\;\\;\\;\\;\\;\\;\\;+ (0.1878 + 0.0034\\times14)\\times\\text{Length} \\\\ &amp; = -8.5082 + 0.2354\\times \\text{Length} \\end{aligned} \\] 所以你會看到每個給定的兒童年齡時的方程身長預測體重的方程都是線性方程，截距和斜率都在變化。兒童的年齡每增加 \\(1\\) 個月，身長和體重的相關係數增加 \\(0.0034 \\text{kg/cm}\\)。除了迴歸係數，其餘的數字都是不能用正常的數據來理解的 (沒有兒童身長 或者 體重會等於零)。如果非要解釋，那麼需要把數據全部中心化 (Section 28.3.1)。 epiDisplay::summ(growgam1$age, graph=FALSE); epiDisplay::summ(growgam1$len, graph=FALSE) ## obs. mean median s.d. min. max. ## 190 16.979 16 8.337 5 36 ## obs. mean median s.d. min. max. ## 190 76.697 76.05 7.156 60.1 95.5 growgam1$age_c &lt;- growgam1$age-mean(growgam1$age) growgam1$len_c &lt;- growgam1$len-mean(growgam1$len) Model2 &lt;- lm(wt ~ age_c + len_c + age_c*len_c, data=growgam1) # or equivalently use lm(wt ~ age_c*len_c, data=growgam1) summary(Model2) ## ## Call: ## lm(formula = wt ~ age_c + len_c + age_c * len_c, data = growgam1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3.200 -0.651 0.003 0.522 2.895 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 9.46978 0.09507 99.60 &lt;2e-16 *** ## age_c -0.02427 0.01721 -1.41 0.160 ## len_c 0.24547 0.01947 12.61 &lt;2e-16 *** ## age_c:len_c 0.00340 0.00129 2.64 0.009 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.94 on 186 degrees of freedom ## Multiple R-squared: 0.753, Adjusted R-squared: 0.749 ## F-statistic: 189 on 3 and 186 DF, p-value: &lt;2e-16 confint(Model2) ## 2.5 % 97.5 % ## (Intercept) 9.2822177 9.657345 ## age_c -0.0582290 0.009680 ## len_c 0.2070560 0.283877 ## age_c:len_c 0.0008588 0.005937 你會解釋上面中心化數據以後擬合的迴歸方程的結果，和各個參數估計的意義嗎？ 33.2 LM practical 07 "],["sample-size.html", "第 34 章 樣本量計算問題 34.1 背景 34.2 決定所需樣本量大小的統計學因素 34.3 第一類和第二類錯誤 Type I and type II errors 34.4 比較兩組之間的百分比 (percentages or proportions) 34.5 比較兩組之間的均值 34.6 樣本量計算的調整", " 第 34 章 樣本量計算問題 The Clinical Trials lectures were orgainised by Stuart Pocock and taught by Professor Tim Clayton. 34.1 背景 計劃臨牀實驗的時候，爲了避免偏倚和帶有偏見的結論，應當將注意力放在 如何將實驗對象隨機分配 (randomisation) 設計對照組 (control group) 合適（且必須）的貫徹盲法 (blinding) 另外一個同樣重要的問題是–“我到底需要多少樣本?” 一項臨牀實驗，應該提供足夠的證據來證明新藥物（新治療方法）是否有效，是否安全。影響一個實驗設計的樣本量的因素可能有如下幾種： 統計學方案。 從統計學上可以推算出，需要多少樣本來獲得一個堅實可信的證據來證明藥物的實際有效性。 經濟上的因素。 然而實際上可能還有經濟上，時間上，人力物力資源上的現實因素，會制約到底一個實驗能夠收集到多少樣本量。 倫理道德上的因素。 許多臨牀實驗還必須受制於醫學倫理因素。在倫理上一個實驗到底可以維持多久。或者說，要考慮當實驗中一些受試者的結果不理想，或者是有副作用的時候，我們何時該及時停止該實驗？ 實驗本身的可信度。 如果一個臨牀實驗的規模在設計上就很小，可能它本身的可信度就很低。 這裏我們只考慮沒有其他任何因素的影響下，1. 統計學方案上該如何計算準確的所需樣本量的大小。 比較下列兩個同樣比較了溶栓酶和安慰劑在預防心肌梗塞患者死亡的臨牀實驗： 表 34.1: Results from the 1st Australian and ISIS-2 trials for reducing mortality from post-MI 治療組 溶栓酶 安慰劑 p.values 1st Australian n=264 n=253 死亡人數 26 (9.8%) 32 (12.6%) p = 0.32 評價指標 Risk ratio 0.78 (95% CI: 0.48 to 1.27) ISIS-2 n=8592 n=8595 死亡人數 791 (9.2%) 1029 (12.0%) p &lt; 0.001 評價指標 Risk ratio 0.77 (95% CI: 0.70 to 0.84) 這兩個臨牀實驗獲得的治療效果 (treatment effect)，在數字的百分比上幾乎十分接近。然而由於樣本量巨大的差距，可以看到第一個實驗的信賴區間十分的大，使得實驗結果是無意義的。而第二個大樣本的實驗結果就告訴我們，溶栓酶的治療效果是有效降低了心肌梗死患者死亡概率（降低了23%）。第一個實驗收集了近500個病例，卻仍然不能提供確實有效的證據證明溶栓酶的治療效果（提供了強的關聯結果，卻是極弱的證據。strong correlation, but weak evidence) 。 34.2 決定所需樣本量大小的統計學因素 實驗主要結果的測量/比較方法是什麼？ What is the principal outcome measure of the trial? 一項臨牀實驗的主要結果，應該是切合該實驗的主要目的的。並且應當能夠客觀評價。(如死亡率的改善，治癒率的提高等等) 實驗數據準備分析的方案是什麼？ How will the data be analysed to detect a treatment difference? 實驗結果獲得的數據是連續型的 (血壓，血糖值，BMI)？還是分類的離散變量 (死亡的發生與否，疾病的治癒與否)？統計學上認爲的，治療結果提示有意義的差別時的概率。通常定爲 5%。(p &lt; 0.05) 對照組的試驗期望結果是怎樣的？ What results are expected in the control group? 當然我們不可能事先預知實驗對照組可能出現的結果。此處只討論我們的預期結果。大多數情況下，我們可以從已經進行過的類似臨牀試驗報告中獲得，或者是從非臨牀干預型研究（觀察型研究）報告中獲得對照組的期望結果。 如果實驗藥物在治療上確實有差異，當這個差異最小爲多少時希望能從設計的實驗中被檢測到？ How small a treatment difference, if it exists, is important to detect? 這一條恐怕是每個臨牀實驗在設計階段最重要，最敏感也是最難做出決定的。如果我們已知這個藥物療效和對照相比差別很大，那麼樣本量不用很大，就足以提供值得信賴的證據。不過臨牀上常常會認爲療效差距不必非常的顯著，但是在臨牀意義上也是十分重要的。 常常在這個問題上會引起衆多討論，因爲醫生和患者可能認爲任何一點差異都是有臨牀意義的。但是如果我們想檢測出較小的差距，會需要非常巨大的樣本量，這將會是十分不切合實際的。What needs to be decided upon is the smallest clinically relevant difference that would be important to detect if it were true. 在上面第 4 條被決定了以後，還要確定的是我們需要多大的把握來相信這個被檢測出來的療效差別？ With what degree of certainty is needed to be able to detect the treatment difference in 4? 在實際臨牀實驗中，結論是從觀察數據中得來的，而不是從我們預想的那個“未知的實驗效果”。觀察獲得的療效差別，可能比預想的大（有效），也很可能比預想的小（無效）。設計較好的臨牀實驗應該有足夠機率觀察到有意義的療效差別，即使觀察得到的結果不如預期的大。當然要增加我們觀察到有意義的療效差別，最簡單的辦法是增加樣本量。這個條件的含義是，當療效真差別真實存在，我們要有足夠大的把握把它通過實驗觀察到。 34.3 第一類和第二類錯誤 Type I and type II errors 下面羅列一下我們在進行實驗設計時要用到的概念和相應的標記，注意雖然我們無法知道真正的人羣裏真實參數 (parameter) 的大小，但是我們需要用一些估計 (estimator) 來代替： \\(p_1=\\) the observed percentage in those on standard treatment 意爲施行標準治療法時觀察到的（治癒/有效）百分比 \\(p_2=\\) the observed percentage in those on “new” treatment 意爲施行“新療法”時觀察到的（治癒/有效）的百分比 \\(\\Rightarrow p_1-p_2=\\) observed treatment effect 意爲可以觀察到的治療效果。 \\(\\pi_1=\\) the anticipated percentage in those on standard treatment 意爲施行標準治療法時，我們預期的（治癒/有效）百分比 \\(\\pi_2=\\) the anticipated percentage in those on “new” treatment 意爲施行“新療法”時，我們預期的（治療/有效）百分比 \\(\\Rightarrow \\pi_1-\\pi_2=\\) is the true difference which has been decided it is important to detect 意爲上面第 4 條中我們設定好的希望通過實驗證實的真實的療效差別。 其餘的數學標記包括： \\(\\alpha=\\) 有意義的療效差異，在統計學上的水平 (概率水平，通常設定爲 0.05 or 5%) \\(1-\\beta=\\) Degree of certainty that a true difference of \\(\\pi_1 - \\pi_2\\) would be detected. 效能, power。意爲有多大的把握能通過實驗檢測出療效差別。（通常將目標值設定爲 \\(1-\\beta=90\\%\\)） Table 33.2: Observed trial results compared to the truth of 1) no difference; 2) a true \\(\\pi_1-\\pi_2\\) diffrence 真實情況 Truth 無差別 真實差別存在 \\(\\pi_1-\\pi_2\\) 觀察到不存在有意義差別 \\(1−\\alpha\\) \\(\\beta\\) Type II error 觀察到存在有意義差別 \\(\\alpha\\) Type I error \\(1-\\beta\\) Power 考慮上面這個表格，可以很容易想到，一個理想的實驗設計，我們希望這個臨牀實驗獲得的結果儘可能地落在上表中的 左上角：即如果真實情況是無差別的，實驗結果也應該觀察到不存在有意義的差別。 右下角：即如果真實情況是是存在真實差別 \\(\\pi_1-\\pi_2\\) 的，試驗結果也應該觀察到有意義的差別。 然而，我們在獲得臨牀實驗結果之後常常犯的兩類錯誤，同樣在上面的表格中顯示： Type I error: A type I error is when a treatment difference is claimed based on a statistically significant observed result when in truth no such difference exists, i.e. a false positive result. 左下角爲一類錯誤，即實驗結果觀察到有顯著的療效差異，然而，真實情況是並沒有差異的話，被認爲是假陽性判斷。\\(\\alpha\\) 表示一類錯誤發生的概率。 Type II error: A type II error is when in truth there exists a difference of \\(\\pi_1-\\pi_2\\) but the observed results fail to reach statistical significance, i.e. a false negative result. 右上角爲二類錯誤，即實驗結果觀察到沒有顯著的療效差異，然而，真實情況是有差異的話，被認爲是假陰性判斷。\\(\\beta\\) 表示二類錯誤發生的概率。 Alternative ways of describing \\(\\alpha\\) and \\(\\beta\\) are as follows: \\(\\alpha\\) is the risk of a Type I error; \\(\\alpha\\) 也被叫做檢驗的顯著水平, significant level。 \\(\\beta\\) is the risk of a Type II error. \\(1-\\beta\\) is termed statistical power. 其中 \\(1-\\beta\\) 被叫做檢驗效能。 \\(\\alpha, 1-\\beta\\) 的水平需要事先被確定，否則無法進行進一步的樣本量的計算。 34.4 比較兩組之間的百分比 (percentages or proportions) 34.4.1 樣本量計算公式 (使用顯著水平 5%, 和檢驗效能 90%) \\[n=10.5\\times\\frac{[\\pi_1\\times(100-\\pi_1)+\\pi_2\\times(100-\\pi_2)]}{(\\pi_1-\\pi_2)^2}\\times2\\] 注意： 上面的公式後面有 \\(\\times2\\) 是因爲前一半公式計算的只是一組（治療或對照組）所需的樣本量。 這裏使用的是百分比。所以當使用比例的時候，要把 \\(100\\) 改成 \\(1\\)。 使用公式計算的所需樣本量，並不是說我們需要的病例數就是計算出來的結果。上面的公式獲得的結果只是對所需樣本量的估算。 34.4.2 樣本量計算公式的一般化 (不同的顯著水平和檢驗效能條件下) \\[n=f(\\alpha, \\beta)\\times\\frac{[\\pi_1\\times(100-\\pi_1)+\\pi_2\\times(100-\\pi_2)]}{(\\pi_1-\\pi_2)^2}\\times2\\] 其中， \\(f(\\alpha, \\beta)\\) 指的是關於檢驗顯著水平 \\(\\alpha\\) 和檢驗效能 \\(\\beta\\) 的函數。 可以參考下面的表格： Table 33.2: Values of \\(f(\\alpha, \\beta)\\) for different levels of \\(\\alpha\\) and \\(\\beta\\) \\(\\alpha\\) \\(\\beta\\) 0.05 0.1 0.2 0.5 (\\(95\\%\\) power) (\\(90\\%\\) power) (\\(80\\%\\) power) (\\(50\\%\\) power) 0.05 13.0 10.5 7.85 3.84 0.01 17.8 14.9 11.7 6.63 要注意的是，除了上面表格中提供的 \\(f(\\alpha, \\beta)\\) 數值，可以通過以下公式計算得出： \\[f(\\alpha, \\beta)=(Z_{1-\\frac{\\alpha}{2}}+Z_{1-\\beta})^2\\] 例如： \\(\\alpha=0.05, \\beta=0.1\\) 時：\\(f(\\alpha, \\beta)=(1.96+1.282)^2=10.5\\); \\(\\alpha=0.05, \\beta=0.2\\) 時：\\(f(\\alpha, \\beta)=(1.96+0.84)^2=7.85\\)。 34.5 比較兩組之間的均值 許多臨牀實驗不光關心患者是否被治癒或者死亡，另外還有許多實驗的主要結果是連續變量：例如，腎功能（腎小球濾過率），或收縮期血壓。然而背後的原理其實還是一樣的。 34.5.1 樣本量計算公式 然而，另外一個必須考慮的因素：治療組對照組測量結果的標準差 (standard deviation, \\(sd, \\sigma\\))。這裏先考慮兩者標準差相同的情況。標準差的數據通常來自與先行研究的科學文獻，有些（土豪）實驗會先進行預實驗獲得想要的實驗數據–標準差。通常，建議像比較百分比那樣，調整改變一下不同的檢驗顯著水品和檢驗效能，計算多個所需樣本量來互相比較參考。 比較兩組均值時需要用到的數學標記： \\(\\mu_1=\\) 標準治療法（對照組）的期待平均值； \\(\\mu_2=\\) 新治療法（治療組）的期待平均值； \\(\\sigma=\\) 兩組的標準差（假設兩組標準差相同）； \\(\\alpha=\\) 一類錯誤發生的概率，檢驗顯著水平； \\(\\beta=\\) 二類錯誤發生的概率，\\(1-\\beta\\) 是檢驗效能。 用上面標記表示的公式如下： \\[n=f(\\alpha, \\beta)\\times\\frac{2\\sigma^2}{(\\mu_1-\\mu_2)^2}\\times2\\] 可以認爲，上面的公式中 \\(\\mu_1-\\mu_2\\) ，各組的平均值本身並不重要，兩組之間均值的差是我們關心的。如果用 \\(\\delta\\) 表示兩組之間均值差的期待值，那麼公式可以改寫爲： \\[n=f(\\alpha, \\beta)\\times\\frac{2\\sigma^2}{\\delta^2}\\times2\\] 34.6 樣本量計算的調整 如果我們無法成功隨訪部分患者，那麼這部分人的數據就無法獲得，實驗數據的說服力就會下降。如果我們預估計有 \\(Q\\%\\) 的人會失去隨訪，那麼我們可以將之前步驟中計算獲得的數字乘以 \\(\\frac{1}{1-Q\\%}\\)。 如果實驗設計是我們會在某個時間點允許治療組或對照組中的部分人變更自己的實驗方案（即治療組的參與者改進入對照組，反之亦然）。那麼所需樣本量的計算調整的方法爲： 令 \\(Q_1=\\) 第一組中改成第二組治療方案的人數比例； 令 \\(Q_2=\\) 第二組中改成第一組治療方案的人數比例； 將之前步驟中計算獲得的樣本量數字乘以 \\(\\frac{1}{(1-Q_1-Q_2)^2}\\)。 如果預期參與實驗治療組（而不是對照組）的人中有部分人（比例爲 \\(Q\\)）會中斷實驗進程，那麼調整公式爲：\\(\\frac{1}{(1-Q)^2}\\)。 還有的實驗會使用大於 \\(1:1\\) 的比例設計對照組和實驗組的人數。假設這一比例爲 \\(r:1\\) 那麼調整的樣本量數字還要乘以：\\(\\frac{(r+1)^2}{4r}\\)。 "],["baseline-adjustment-using-ancova.html", "第 35 章 Baseline Adjustment using ANCOVA", " 第 35 章 Baseline Adjustment using ANCOVA "],["robust-intro.html", "第 36 章 穩健統計方法入門", " 第 36 章 穩健統計方法入門 Statistical thinking will one day be as necessary a qualification for efficient citizenship as the ability to read and write. H.G. Wells The Robust Statistic Methods lectures were orgainised and taught by Professor Richard Silverwood. "],["rank-tests.html", "第 37 章 基於秩次的非參數檢驗 37.1 符號檢驗 the Sign test 37.2 Wilcoxon 符號秩和檢驗，the Wilcoxon signed-rank test 37.3 Wilcoxon-Mann-Whitney (WMW) 檢驗 37.4 秩相關，Spearman’s Rank Correlation Coefficient 37.5 基於秩次的非參數檢驗的優缺點", " 第 37 章 基於秩次的非參數檢驗 基於秩次的統計學方法不像其他參數檢驗那樣需要太多的假設和前提 (比如服從正態分佈或者其它假設)。這類方法其實放棄了數據的部分信息 – 那就是數據之間值的差距。通過給數據排序列，我們僅僅知道數據的排序。所以我們可以下結論說 \\(A\\) 大於 \\(B\\)，或者 \\(B\\) 大於 \\(C\\) (因此 \\(A\\) 也大於 \\(C\\))，但是他們之間數值的差距被忽略掉了 (所以我們不能比較 \\(A-B\\) 和 \\(B-C\\) 的大小)。 所以，基於秩次的統計學方法完全只依賴數據的大小排序，觀察獲得數據的真實大小被忽視了。 37.1 符號檢驗 the Sign test 我們以下列一組空腹血糖測量值的數據爲例： 表 37.1: Fasting Glucose Level (mmol/L) n=24 Diabetics 10.3 8.8 5.3 9.5 6.7 6.7 12.2 12.5 5.2 15.1 4.2 13.3 10.8 15.3 7.5 19.0 7.2 4.9 16.1 9.3 19.5 8.1 8.6 11.1 我們如果想要對這組數據的中位數做出假設檢驗，\\(H_0: \\theta = 10; \\text{ v.s. } H_1: \\theta\\neq10\\)。 該選擇哪種檢驗方法來回答這個假設檢驗提出的問題：中位數是否等於 \\(10\\)? 符號檢驗 (the sign test)，可以用來輔助我們對數據的中位數 (median \\(\\theta\\)) 作出推斷 (inference)。雖然往下看你會發現嚴格說來這並不算是基於秩次的檢驗方法。使用符號檢驗時我們需要的唯一假設：數據來自連續分佈 (continuous distribution)。 這種類型的檢驗方法常用的假設檢驗如下： \\[ H_0: \\theta=\\theta_0 \\\\ H_1: \\theta\\neq\\theta_0 \\] 其中，\\(\\theta_0\\) 就是我們想要檢驗的中位數的大小，在上面的例子中，\\(\\theta_0=10\\)。 此時我們用到的檢驗統計量，\\(X\\) 的定義是：樣本數據中比 \\(\\theta_0\\) 大的數據個數，和比 \\(\\theta_0\\) 小的數據個數，兩個個數中較小的那一個。因爲在零假設的條件下，如果觀察數據的中位數等於 \\(\\theta_0\\) 的話，數據中比 \\(\\theta_0\\) 大或者小的數據個數應該是相等的。可以用一個二項分佈，概率爲 \\(0.5\\) 的模型來模擬： \\[X\\sim Bin(n, 0.5)\\] 在本例中，觀察數據有 13 個小於 \\(\\theta_0=10\\)，有 11 個大於 \\(\\theta_0=10\\)。因此 \\(X=11, n=24\\)。假如 \\(\\pi\\) 是一個觀察數據大於 \\(\\theta_0\\) 的概率的話，在零假設的條件下，\\(H_0: \\pi=0.5\\)。檢驗這個假設的雙側概率的計算公式爲： \\[2\\times P(X\\leqslant x|\\pi=0.5)\\] 在本例中， \\(X=11\\)。如果（像在考試的時候沒有電腦輔助）要用查表的方式判斷 \\(p\\) 值大小。可以先下載 一份統計數據的表格。下載好了找到 “Statistical Table 7.1 Critical one- and two-tailed values of x for a Sign test” 在第185頁：(下面只是截圖) \\[\\cdots\\cdots\\cdots\\] 圖 37.1: Critical Values for a Sign test 找到 \\(n=24\\) 這一行，發現顯著性水平是 \\(20\\%\\) 的拒絕域都要小於 \\(8\\)， 所以本例的 \\(p&gt;20\\%\\)。 如果你很幸運沒有在考場上，那麼可以找出自己的電腦下載好 R 之後執行下面的命令： 2*pbinom(11,24, 0.5) ## [1] 0.8388 或者可以使用命令 binom.test 來做一個二項分佈的概率檢驗： options(scipen = 1, digits = 8) # just to show the p values are exactly the same binom.test(11,24,0.5) ## ## Exact binomial test ## ## data: 11 and 24 ## number of successes = 11, number of trials = 24, p-value = 0.83882 ## alternative hypothesis: true probability of success is not equal to 0.5 ## 95 percent confidence interval: ## 0.25553020 0.67179192 ## sample estimates: ## probability of success ## 0.45833333 或者你也可以使用 BSDA 中的 SIGN.test 命令來進行一場轟轟烈烈的符號檢驗： options(scipen = 1, digits = 8) # input the data dt &lt;- c(10.3,9.5,12.2,15.1,10.8,19.0,16.1, 8.1, 8.8, 6.7,12.5, 4.2,15.3, 7.2, 9.3, 8.6, 5.3,6.7 ,5.2,13.3, 7.5, 4.9,19.5,11.1) BSDA::SIGN.test(dt, md=10, alternative=&quot;two.sided&quot;, conf.level=0.95) ## ## One-sample Sign-Test ## ## data: dt ## s = 11, p-value = 0.83882 ## alternative hypothesis: true median is not equal to 10 ## 95 percent confidence interval: ## 7.3988241 12.3011759 ## sample estimates: ## median of x ## 9.4 ## ## Achieved and Interpolated Confidence Intervals: ## ## Conf.Level L.E.pt U.E.pt ## Lower Achieved CI 0.9361 7.5000 12.2000 ## Interpolated CI 0.9500 7.3988 12.3012 ## Upper Achieved CI 0.9773 7.2000 12.5000 “據說”如果你用 Stata 的話還會給你一個絢麗的表格： 圖 37.2: The Stata output of a Sign Test 總而言之無論你用的是哪個方法，查 (水) 表法或是統計武俠包，結果都是一樣的：數據無法提供足夠的證據拒絕零假設，即無證據證明中位數不等於10。 需要注意的是，如果觀察數據中有的值恰好等於 \\(\\theta_0\\) 那麼這些觀察數據就會被剔除之後再進行檢驗，相應的樣本量 (\\(n\\)) 也就變小了。如果觀察數據樣本量足夠大，我們可以使用二項分佈的正態分佈近似 (Section 8.4) 法計算。近似法計算時記得要進行校正 (Section 8.6)： \\[ z=\\frac{\\frac{x}{n}-\\pi}{\\sqrt{\\pi(1-\\pi)/n}}=\\frac{\\frac{x}{n}-0.5}{\\sqrt{0.5(1-0.5)/n}}=\\frac{2x}{\\sqrt{n}}-\\sqrt{n}\\\\ \\text{With the continuity correction, this becomes: }\\\\ z=\\lvert\\frac{2x}{\\sqrt{n}}-\\sqrt{n}\\rvert-\\frac{1}{\\sqrt{n}} \\] 在本例中： \\[z=\\lvert\\frac{2\\times11}{\\sqrt{24}}-\\sqrt{24}\\rvert-\\frac{1}{\\sqrt{24}}=0.204\\] 標準正態分佈的 \\(z\\) 爲 \\(0.204\\) 時的雙側 \\(p\\) 值爲： (1-pnorm(0.204))*2 ## [1] 0.8383535 和前面的直接計算法的結果還算是十分接近滴。 37.1.1 符號檢驗的特點 符號檢驗十分的穩健 (Robust)，因爲我們除了數據連續性的假設之外沒有其他任何假設。但是穩健檢驗是有代價的。因爲進行符號檢驗的同時意味着我們要放棄一個個數據本身能提供的信息。結果導致這類檢驗敏感度較低，檢驗效能 (Power) 較差，以及獲得的信賴區間也就很寬 (不精確)。 37.2 Wilcoxon 符號秩和檢驗，the Wilcoxon signed-rank test Wilcoxon 符號秩和檢驗也可以用來檢驗一組數據的中位數是否和某個已知數字相等。進行本方法時除了像符號檢驗那樣要假設數據是連續的以外，還要假設數據的分佈是左右對稱的。因此，由於假定了左右對稱的前提，中位數也就等於均數，所以它也可以被用於檢驗均數是否等於某個已知的值。 Wilcoxon 符號秩和檢驗的前提可以被認爲是介於符號檢驗和單一樣本 \\(t\\) 檢驗 (還假設數據來自於正態分佈) 之間的一種檢驗。 當一組隨機觀察數據 \\(x_1,\\cdots,x_n\\) 來自於對稱的連續分佈數據。如果它的中位數是 \\(\\theta\\)，在零假設：\\(H_0: \\theta=\\theta_0\\) 的條件下： 將全部觀察數據一一和 \\(\\theta_0\\) 相減，那麼每一個 \\(d_i=x_i-\\theta_0, i=1,2,\\cdots,n\\) 的正負符號概率是相等的； 任何一個和 \\(\\theta_0\\) 相減之後的差 \\(\\lvert d_i \\lvert\\) ，取正負符號的概率是相等的。 這裏我們使用另一個例子來說明 Wilcoxon 檢驗法。下列數據爲，12名女性從平躺姿勢改成直立時心跳次數的變化 (次/分)。 -2, -5, 12, 4, 16, 17, 8, 3, 20, 25, 1, 9 下面來使用 Wilcoxon 符號秩和檢驗法來檢驗中位數 \\(\\theta=15\\)。 首先，先計算每個數據和 \\(15\\) 之間的差值： data &lt;- c(-2, -5, 12, 4, 16, 17, 8, 3, 20, 25, 1, 9) newdata &lt;- data-15 newdata ## [1] -17 -20 -3 -11 1 2 -7 -12 5 10 -14 -6 下一步，計算這些差值的絕對值： abs_newdata &lt;- abs(newdata) abs_newdata ## [1] 17 20 3 11 1 2 7 12 5 10 14 6 Dt &lt;- data.frame(data, newdata, abs_newdata) Dt &lt;- Dt[order(newdata), ] # sort the data by newdata Dt ## data newdata abs_newdata ## 2 -5 -20 20 ## 1 -2 -17 17 ## 11 1 -14 14 ## 8 3 -12 12 ## 4 4 -11 11 ## 7 8 -7 7 ## 12 9 -6 6 ## 3 12 -3 3 ## 5 16 1 1 ## 6 17 2 2 ## 9 20 5 5 ## 10 25 10 10 之後，給絕對值排序： Dt$ranks &lt;- rank(Dt$abs_newdata) Dt ## data newdata abs_newdata ranks ## 2 -5 -20 20 12 ## 1 -2 -17 17 11 ## 11 1 -14 14 10 ## 8 3 -12 12 9 ## 4 4 -11 11 8 ## 7 8 -7 7 6 ## 12 9 -6 6 5 ## 3 12 -3 3 3 ## 5 16 1 1 1 ## 6 17 2 2 2 ## 9 20 5 5 4 ## 10 25 10 10 7 接下來，給小於 \\(15\\) 的數據的排序加上負號： Dt$signed_ranks &lt;- ifelse(Dt$newdata &lt; 0, Dt$ranks*(-1), Dt$ranks) Dt &lt;- Dt[order(Dt$ranks),] Dt ## data newdata abs_newdata ranks signed_ranks ## 5 16 1 1 1 1 ## 6 17 2 2 2 2 ## 3 12 -3 3 3 -3 ## 9 20 5 5 4 4 ## 12 9 -6 6 5 -5 ## 7 8 -7 7 6 -6 ## 10 25 10 10 7 7 ## 4 4 -11 11 8 -8 ## 8 3 -12 12 9 -9 ## 11 1 -14 14 10 -10 ## 1 -2 -17 17 11 -11 ## 2 -5 -20 20 12 -12 對正的負的 signed_ranks 分別求和，絕對值較小的那個就是 Wilcoxon 檢驗的統計量。本例中：\\(S^+=\\) 14，\\(S^-=\\) -64，所以本例中的檢驗統計量等於 \\(14\\)。如果要繼續查表的話，可以找到 \\(0.05&lt;p&lt;0.1\\)： \\[\\cdots\\cdots\\cdots\\] 圖 37.3: Critical Values for a Wilcoxon Signed-Ranks test 精確的 Wilcoxon 符號秩和檢驗可以通過下列代碼在 R 裏完成： wilcox.test(Dt$data, mu=15, paired = FALSE) ## ## Wilcoxon signed rank exact test ## ## data: Dt$data ## V = 14, p-value = 0.052246 ## alternative hypothesis: true location is not equal to 15 如果數據中有觀察值和我們希望比較的數值完全相等的話，和符號檢驗類似的，這些觀察值需要被剔除之後再進行上面的個步驟檢驗。記得還要將樣本量減去相應個數再去查表尋找 \\(p\\) 值。 另外，下面的代碼可以計算正態分佈近似的 Wilcoxon 秩和檢驗，結果十分接近： wilcox.test(Dt$data, mu=15, paired = FALSE, exact = FALSE, correct = FALSE) ## ## Wilcoxon signed rank test ## ## data: Dt$data ## V = 14, p-value = 0.04986 ## alternative hypothesis: true location is not equal to 15 值得注意的是，精確計算時，我們需要剔除那些和比較數值完全一致的觀察值。然而在正態分佈近似法的 Wilcoxon 檢驗中，這些數值並不會被剔除，而是保留下來，並且用於對方差進行調整。Wilcoxon 秩和檢驗可以在我們能夠假設數據左右對稱分佈，且明顯不服從正態分佈時使用 (即概率密度分布圖左右兩端的尾部較厚的時候)。如果數據左右完全對稱，本檢驗方法不太推薦採用。 37.3 Wilcoxon-Mann-Whitney (WMW) 檢驗 本方法用於比較兩組獨立樣本的分佈是否只是左右位移 (或者叫平移)。此檢驗需要的假設前提爲：兩組獨立樣本來自連續型分佈，且僅僅只存在整體的左右位移 (或者叫平移) (location shift)。 例如說，兩組數據各自的累積概率方程分別是 \\(F(\\cdot), G(\\cdot)\\) 時，由上面的假設可知： \\[G(y)=F(y-\\Delta), \\text{ where } -\\infty&lt;\\Delta&lt;\\infty\\] 上面式子中的 \\(\\Delta\\) 就是所謂的 “左右位移 (或者叫平移)”。因此本檢驗的零假設和替代假設爲： \\[H_0: \\Delta=0\\\\ H_1: \\Delta\\neq0\\] 在零假設的條件下，我們可以認爲兩個樣本來自相同的人羣分佈。假如，\\(F, G\\) 都是正態分佈，且同方差。那麼 \\(\\Delta\\) 就等於兩個分佈的均值差。在這種情況下就可以使用兩樣本 \\(t\\) 檢驗。所以說，WMW 檢驗其實就是把假設前提放寬了的 (免去了正態分佈假設) 兩樣本 \\(t\\) 檢驗。 如果兩個獨立樣本分別有樣本量 \\(n, m, \\text{ and } n&lt;m\\)：\\(X_1,\\cdots,X_n\\) 和 \\(Y_1, \\cdots, Y_m\\)。在零假設的條件下，將這兩個樣本合併之後的大樣本 (\\(m+n\\) 個樣本量) ：\\(X_1,\\cdots,X_n,Y_1, \\cdots, Y_m\\) 可以視爲來自同一分佈。那麼在合併後的樣本中，我們給每一個元素賦予它們的合併後數據中的排序 (\\(\\text{Rank}_i: i= 1,2,\\cdots,n, n+1, \\cdots, n+m\\))。那麼我們感興趣的 Wilcoxon 秩和統計量 (Wilcoxon rank sum statistic) \\(W_1\\) 是樣本量較小的那些數字在合併後數據中的排序之和。 \\[W_1=\\sum_{i=1}^n R_i\\] 對於大小相同的數據，排序取他們的排序的平均值。 之後再計算 ： \\[U_1=W_1+\\frac{n(n+1)}{2}\\] 最後拿來判斷的檢驗統計量是 \\(U_1\\) 和 \\(n\\times m -U_1\\) 兩者中較小的數字。(注：如果我們一開始計算樣本量較多的部分的秩和 \\(W_2=\\sum_{i=1}^m R_i\\) 時，將計算的 \\(U_2=W_2-\\frac{m(m+1)}{2}\\)，跟 \\(n\\times m - U_2\\) 中較小的數字作爲檢驗統計量的話，我們會在數學上獲得完全一樣的檢驗統計量。) 其實兩個統計量 \\(W, U\\) 均可以用來作相同的統計推斷，當然各自的 \\(p\\) 值表格不同。但是 \\(U\\) 有另外一種統計學含義：\\(U\\) 是 \\(X_i&gt;Y_j\\)， 也就是所有的 \\((X_i, Y_j)\\) 配對中 \\(X_i\\) 較大的對的個數。 這裏使用下面的例子來解釋如何操作 WMW 檢驗： 採集16名甲亢兒童的血清甲狀腺素濃度值列表如下， 表 37.2: Serum thyroxine levels n=16 hypothyroid children thyr group 34 Slight or no symptoms 45 Slight or no symptoms 49 Slight or no symptoms 55 Slight or no symptoms 58 Slight or no symptoms 59 Slight or no symptoms 60 Slight or no symptoms 62 Slight or no symptoms 86 Slight or no symptoms 5 Marked symptoms 8 Marked symptoms 18 Marked symptoms 24 Marked symptoms 60 Marked symptoms 84 Marked symptoms 96 Marked symptoms 這裏我們需要比較輕微症狀組和嚴重症狀組的血清甲狀腺濃度的分佈是否只是左右位移，\\(H_0: \\Delta=0\\)。 首先，我們要給兩組合併後的濃度排序： dt$rank &lt;- rank(dt$thyr) dt &lt;- dt[order(dt$rank),] dt ## thyr group rank ## 10 5 Marked symptoms 1.0 ## 11 8 Marked symptoms 2.0 ## 12 18 Marked symptoms 3.0 ## 13 24 Marked symptoms 4.0 ## 1 34 Slight or no symptoms 5.0 ## 2 45 Slight or no symptoms 6.0 ## 3 49 Slight or no symptoms 7.0 ## 4 55 Slight or no symptoms 8.0 ## 5 58 Slight or no symptoms 9.0 ## 6 59 Slight or no symptoms 10.0 ## 7 60 Slight or no symptoms 11.5 ## 14 60 Marked symptoms 11.5 ## 8 62 Slight or no symptoms 13.0 ## 15 84 Marked symptoms 14.0 ## 9 86 Slight or no symptoms 15.0 ## 16 96 Marked symptoms 16.0 Wilcoxon 統計量 \\(W_1\\) 是人數少的組的排序之數值和。本樣本中 7 人有嚴重症狀，9人有輕微或無症狀。所以 \\(W_1\\) 就是嚴重症狀組的秩和： \\[W_1=1+2+3+4+11.5+14+16=51.5\\] 再計算統計量 \\(U_1\\)： \\[U_1=W_1-\\frac{n(n+1)}{2}=51.5-\\frac{7\\times(7+1)}{2}=23.5\\] 所以 \\(n\\times m-U_1=7\\times9-23.5=39.5\\)，顯然這兩個數值中小的 \\(23.5\\) 就是我們尋找的 WMW 統計量。繼續查水錶： 圖 37.4: Critical Values of U for a Wilcoxon-Mann-Whitney test 可知 \\(n_1=7, n_2=9\\) 時，統計量要低於 \\(15\\) \\(p\\) 值才會小於 \\(0.1\\)。所以數據給出的 \\(p&gt;0.1\\)。 在 R 裏面用下面的代碼進行 WHW 檢驗： wilcox.test(dt$thyr~dt$group, correct=FALSE) # without continuity correction ## ## Wilcoxon rank sum test ## ## data: dt$thyr by dt$group ## W = 23.5, p-value = 0.39675 ## alternative hypothesis: true location shift is not equal to 0 wilcox.test(dt$thyr~dt$group) # with continuity correction i.e. normal appriximation ## ## Wilcoxon rank sum test with continuity correction ## ## data: dt$thyr by dt$group ## W = 23.5, p-value = 0.42692 ## alternative hypothesis: true location shift is not equal to 0 37.4 秩相關，Spearman’s Rank Correlation Coefficient Spearman 的秩相關 (通常用 \\(\\rho\\))，是一種基於數據排序的相關係數算法。和傳統的 Pearson 相關係數類比，是當數據無法被認定是線性相關時的另一種相關關係檢驗方法。所以秩相關不假定兩組數據之間是線性相關 (linear association)。秩相關只關心一個數據遞增時，另一個數據是否單調遞增。所以可以用於傾向性檢驗。 具體的操作是，在兩組數據中先各自排序，像所有的排序檢驗一樣遇到相同大小的數值將排序取均值。之後使用一般的求相關係數的方法。本法中只用到了數值在各自組中的排序，並沒有使用他們的真實大小。近似法的秩相關計算公式爲： \\[\\hat\\tau=\\frac{\\hat\\rho}{\\sqrt{(1-\\hat\\rho^2)/(n-2)}}\\] 在零假設條件下 \\(H_0: \\rho=0\\)，上面的近似法秩相關服從 \\(t_{n-2}\\) 分佈。 下面用某血友病患者調查數據獲得的血液 \\(T_4, T_8\\) 淋巴球計數 \\((\\times10^9/\\ell)\\) 來詳細解釋計算過程： 表 37.3: Lymphocyte counts n=28 haemophiliacs th4 th8 0.20 0.17 0.27 0.52 0.28 0.25 0.37 0.34 0.38 0.14 0.48 0.10 0.49 0.58 0.56 0.23 0.60 0.24 0.64 0.67 0.64 0.90 0.66 0.26 0.70 0.61 0.77 0.18 0.88 0.74 0.88 0.54 0.88 0.76 0.90 0.62 1.02 0.48 1.10 0.58 1.10 0.34 1.18 0.84 1.20 0.63 1.30 0.46 1.40 0.84 1.60 1.20 1.64 0.59 2.40 1.30 給這組數據繪製散點圖： ## Warning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0. ## ℹ Please use the `linewidth` argument instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated. 圖 37.5: Scatter plot of T4 and T8 counts 可以看見圖中右上角的兩個點幾乎可以認爲是異常值 (outliers)。 分別給 th4, th8 求各自的排序： dt$rank4 &lt;- rank(dt$th4) dt$rank8 &lt;- rank(dt$th8) kable(dt, &quot;html&quot;, align = &quot;c&quot;,caption = &quot;Lymphocyte counts&quot;) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;bordered&quot;)) %&gt;% # collapse_rows(columns = c(1)) %&gt;% add_header_above(c(&quot;n=28 haemophiliacs with ranks&quot; = 4)) %&gt;% scroll_box(width = &quot;400px&quot;, height = &quot;500px&quot;, extra_css=&quot;margin-left: auto; margin-right: auto;&quot;) 表 37.4: Lymphocyte counts n=28 haemophiliacs with ranks th4 th8 rank4 rank8 0.20 0.17 1.0 3.0 0.27 0.52 2.0 13.0 0.28 0.25 3.0 7.0 0.37 0.34 4.0 9.5 0.38 0.14 5.0 2.0 0.48 0.10 6.0 1.0 0.49 0.58 7.0 15.5 0.56 0.23 8.0 5.0 0.60 0.24 9.0 6.0 0.64 0.67 10.5 21.0 0.64 0.90 10.5 26.0 0.66 0.26 12.0 8.0 0.70 0.61 13.0 18.0 0.77 0.18 14.0 4.0 0.88 0.74 16.0 22.0 0.88 0.54 16.0 14.0 0.88 0.76 16.0 23.0 0.90 0.62 18.0 19.0 1.02 0.48 19.0 12.0 1.10 0.58 20.5 15.5 1.10 0.34 20.5 9.5 1.18 0.84 22.0 24.5 1.20 0.63 23.0 20.0 1.30 0.46 24.0 11.0 1.40 0.84 25.0 24.5 1.60 1.20 26.0 27.0 1.64 0.59 27.0 17.0 2.40 1.30 28.0 28.0 接下來再給 th4, th8 的排序做散點圖： 圖 37.6: Scatter plot of T4 and T8 ranks 此時也就沒有了異常值的存在。對二者的排序計算相關係數： cor.test(dt$rank4, dt$rank8) ## ## Pearson&#39;s product-moment correlation ## ## data: dt$rank4 and dt$rank8 ## t = 4.11513, df = 26, p-value = 0.00034606 ## alternative hypothesis: true correlation is not equal to 0 ## 95 percent confidence interval: ## 0.33297073 0.81107104 ## sample estimates: ## cor ## 0.62803129 cor.test(dt$th4, dt$th8) ## ## Pearson&#39;s product-moment correlation ## ## data: dt$th4 and dt$th8 ## t = 5.28031, df = 26, p-value = 0.000016061 ## alternative hypothesis: true correlation is not equal to 0 ## 95 percent confidence interval: ## 0.47328797 0.86128090 ## sample estimates: ## cor ## 0.71934766 秩相關的相關係數爲 \\(0.628\\)。而原始數據的相關係數爲 \\(0.719\\)。 37.5 基於秩次的非參數檢驗的優缺點 優點： 可以讓我們拋棄很多 (正態分佈等的) 前提假設，許多真實數據本身並不能滿足這些條件，這些情況下，基於秩次的非參數檢驗能提供更高的統計效能 (power)。 缺點： 如果數據本身能夠滿足如正態分佈之類的假設，那麼相比較與一般的參數檢驗，基於秩次的非參數檢驗法效能就偏低。 基於秩次的非參數檢驗較難推廣到更加複雜的情況。 這些檢驗法僅僅只能幫助我們進行假設檢驗。但是多數情況下，我們更加希望能使用觀察數據對總體進行點估計 (point estimates) 並且給出信賴區間 (CIs)。通常情況下，基於秩次的非參數檢驗法就很難給出這樣的估計。 "],["permutation.html", "第 38 章 排列置換法 Permutation procedures 38.1 背景介紹 38.2 直接上實例 38.3 排列置換法三板斧 38.4 基於排序置換檢驗法計算信賴區間 38.5 排序置換法的優缺點", " 第 38 章 排列置換法 Permutation procedures 38.1 背景介紹 Good(Good 2006) 曾經提出假設檢驗構建的步驟，這裡引用如下： 分析問題，確認零假設 (null hypothesis)，和可能的替代假設 (alternative hypothesis)。確認這兩種假設決定以後可能伴隨的錯誤 (The potential risk associated with a decision)； 選擇一個檢驗統計量； 計算數據給出的檢驗統計量； 確定檢驗統計量，在零假設時的樣本分佈； 用確定好的樣本分佈，以及數據給出的統計量大小，做出決策！ 本章要介紹的排列置換法 (permutation)，和下一章會介紹的自助重抽法 (bootstrap) ，需要大量的計算機的計算，和較強的電腦性能。這兩種方法有一個共同的特徵，它們都利用手頭獲得的樣本數據輔助生成樣本分佈，同時對該數據的分佈或者特質不進行假設。也就是用在上面羅列步驟的第4步。其餘的步驟則與一般的參數假設檢驗完全相同。 38.2 直接上實例 之前用過的甲亢數據： 表 38.1: Serum thyroxine levels n=16 hypothyroid children thyr group 34 Slight or no symptoms 45 Slight or no symptoms 49 Slight or no symptoms 55 Slight or no symptoms 58 Slight or no symptoms 59 Slight or no symptoms 60 Slight or no symptoms 62 Slight or no symptoms 86 Slight or no symptoms 5 Marked symptoms 8 Marked symptoms 18 Marked symptoms 24 Marked symptoms 60 Marked symptoms 84 Marked symptoms 96 Marked symptoms 我們來計算這個數據中不同組的甲狀腺素的平均值，標準差，中位數等特徵描述量； epiDisplay::summ(dt$thyr, by=dt$group, graph=FALSE) ## For dt$group = Marked symptoms ## obs. mean median s.d. min. max. ## 7 42.143 24 37.481 5 96 ## ## For dt$group = Slight or no symptoms ## obs. mean median s.d. min. max. ## 9 56.444 58 14.222 34 86 這個例子中我們關心的是，兩組之間的甲狀腺素水平是否相同。所以，我們的檢驗統計量在這裡就可以定義為兩組之間均值差，或者中位數差，我們先考慮用均值時的情況。 \\[ T=\\bar{Y}_1 - \\bar{Y}_2 \\] 接下來我們需要這個統計量 \\(T\\) 的樣本分佈，同時我們不對數據進行任何分佈的假設 (數據不被認為是正態分佈或者服從其他任何已知的分佈)。 在排列置換法中，我們利用的原則是，在零假設的條件下，所有觀察值的分組可以隨機改變。也就是說，我們認為，零假設時，所有的觀察數據，均來自於一個相同且未知的分佈，每一個觀察值的分組標籤對平均值沒有影響。故，此例中我們可以這樣認為： 每個人的甲狀腺激素水平相同，不受分組情況影響； 輕微或無症狀組的人如果也在顯著症狀組，他們的甲狀腺激素水平不會改變； 改變任何一個人的組別信息，對均值沒有影響。 利用上述原則，檢驗統計量 \\(T\\) 的樣本分佈，就是所有16個人的組別信息的排列組合的情況下，觀察值的均值差異大小。所以，我們可以對16個觀察對象的組別信息隨機分配，計算每一次分組情況下的觀察值均值差，獲得零假設條件下，檢驗統計量的樣本分佈。 這裡使用 R 進行組別的隨機分配： #用 -sample- 對組別信息重新隨機排列 set.seed(1234) g1 &lt;- sample(dt$group, length(dt$group), FALSE) # FALSE means replace = FALSE g2 &lt;- sample(dt$group, length(dt$group), FALSE) g3 &lt;- sample(dt$group, length(dt$group), FALSE) g4 &lt;- sample(dt$group, length(dt$group), FALSE) g5 &lt;- sample(dt$group, length(dt$group), FALSE) dt &lt;- cbind(dt, g1, g2, g3, g4, g5) kable(dt, &quot;html&quot;, align = &quot;c&quot;,caption = &quot;Serum thyroxine levels with permuted groups&quot;) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;bordered&quot;)) %&gt;% scroll_box(width = &quot;780px&quot;, height = &quot;500px&quot;, extra_css=&quot;margin-left: auto; margin-right: auto;&quot;) 表 38.2: Serum thyroxine levels with permuted groups thyr group g1 g2 g3 g4 g5 34 Slight or no symptoms Marked symptoms Marked symptoms Marked symptoms Slight or no symptoms Slight or no symptoms 45 Slight or no symptoms Marked symptoms Marked symptoms Slight or no symptoms Slight or no symptoms Slight or no symptoms 49 Slight or no symptoms Slight or no symptoms Slight or no symptoms Marked symptoms Marked symptoms Slight or no symptoms 55 Slight or no symptoms Slight or no symptoms Slight or no symptoms Slight or no symptoms Slight or no symptoms Marked symptoms 58 Slight or no symptoms Marked symptoms Marked symptoms Marked symptoms Slight or no symptoms Marked symptoms 59 Slight or no symptoms Slight or no symptoms Slight or no symptoms Slight or no symptoms Marked symptoms Marked symptoms 60 Slight or no symptoms Marked symptoms Marked symptoms Slight or no symptoms Marked symptoms Marked symptoms 62 Slight or no symptoms Marked symptoms Marked symptoms Slight or no symptoms Marked symptoms Slight or no symptoms 86 Slight or no symptoms Slight or no symptoms Marked symptoms Marked symptoms Slight or no symptoms Marked symptoms 5 Marked symptoms Slight or no symptoms Slight or no symptoms Slight or no symptoms Slight or no symptoms Slight or no symptoms 8 Marked symptoms Slight or no symptoms Slight or no symptoms Marked symptoms Marked symptoms Slight or no symptoms 18 Marked symptoms Marked symptoms Marked symptoms Slight or no symptoms Marked symptoms Marked symptoms 24 Marked symptoms Marked symptoms Slight or no symptoms Marked symptoms Slight or no symptoms Marked symptoms 60 Marked symptoms Slight or no symptoms Slight or no symptoms Slight or no symptoms Slight or no symptoms Slight or no symptoms 84 Marked symptoms Slight or no symptoms Slight or no symptoms Slight or no symptoms Slight or no symptoms Slight or no symptoms 96 Marked symptoms Slight or no symptoms Slight or no symptoms Marked symptoms Marked symptoms Slight or no symptoms 接下來我們就可以計算當觀察對象的組別信息不同時，檢驗統計量 \\(T\\) 的分佈： mean(dt$thyr[dt$group==&quot;Slight or no symptoms&quot;]) - mean(dt$thyr[dt$group==&quot;Marked symptoms&quot;]) ## [1] 14.301587 mean(dt$thyr[dt$g1==&quot;Slight or no symptoms&quot;]) - mean(dt$thyr[dt$g1==&quot;Marked symptoms&quot;]) ## [1] 12.777778 mean(dt$thyr[dt$g2==&quot;Slight or no symptoms&quot;]) - mean(dt$thyr[dt$g2==&quot;Marked symptoms&quot;]) ## [1] -2.968254 mean(dt$thyr[dt$g3==&quot;Slight or no symptoms&quot;]) - mean(dt$thyr[dt$g3==&quot;Marked symptoms&quot;]) ## [1] -0.93650794 mean(dt$thyr[dt$g4==&quot;Slight or no symptoms&quot;]) - mean(dt$thyr[dt$g4==&quot;Marked symptoms&quot;]) ## [1] -0.17460317 mean(dt$thyr[dt$g5==&quot;Slight or no symptoms&quot;]) - mean(dt$thyr[dt$g5==&quot;Marked symptoms&quot;]) ## [1] -2.2063492 所以理論上，我們可以把16人中任意7人陪分配到“輕微或無症狀”組的所有排列組合窮舉出來 (有 \\(\\binom{16}{7} = 11,440\\) 不同的分組法)，計算出所有情況下的均值差，組成我們感興趣的統計量的樣本分佈。所以你會看到，當我們的樣本量只有16個人的時候，兩組分配已經達到上萬種之多，樣本量增加之後，計算量是成幾何級倍數在增加的。例如20人中兩組各10人的分組種類有：\\(\\binom{20}{10} = 184,756\\) 種，30人中兩組個15人的分組種類有：\\(\\binom{30}{15} = 1.55\\times10^8\\) 種之多。所以實際情況下，我們通常的解決辦法是，隨機從所有可能的分組法中抽出足夠多的配列組合。下面以這個甲狀腺數據為例，我們對11,440種可能的排列組合隨機抽出10000種排列計算這10000個不同的均值差： set.seed(1) dist &lt;- replicate(10000, t.test(sample(dt$thyr, length(dt$thyr), FALSE) ~ dt$group, var.equal = TRUE)$statistic) 上面的代碼的涵義是從樣本對觀察值進行10000次排列組合，對每個組合進行 \\(t\\) 檢驗，獲取 \\(t\\) 檢驗的統計量。下面把觀察值原本的統計量的位置標記在所有10000次組合給出的統計量的柱狀圖中。 圖 38.1: The sampling distribution of the difference 可以看出來，觀察值的統計量在這10000個新樣本中，並不那麼“極端”。觀察數據的排列置換法 \\(p\\) 值為： #Use the distribution to obtain a p-value for the mean-difference by counting how many permuted mean-differences are more extreme than the one we observed in our actual data: sum(abs(dist) &gt; abs(t.test(dt$thyr ~ dt$group, var.equal = TRUE)$statistic))/10000 ## [1] 0.3072 跟下面用參數檢驗法的 \\(p\\) 值結果做一下對比，就會發現，其實二者的 \\(p\\) 值結果十分接近。 t.test(dt$thyr ~ dt$group, var.equal = TRUE) ## ## Two Sample t-test ## ## data: dt$thyr by dt$group ## t = -1.05935, df = 14, p-value = 0.30738 ## alternative hypothesis: true difference in means between group Marked symptoms and group Slight or no symptoms is not equal to 0 ## 95 percent confidence interval: ## -43.256997 14.653823 ## sample estimates: ## mean in group Marked symptoms mean in group Slight or no symptoms ## 42.142857 56.444444 38.3 排列置換法三板斧 標題黨會不服，其實排列置換法的步驟不止三步 (笑)。 在零假設的前提下，確認觀察數據所屬的組別，是可以任意對調的。(exchangeability) 有時候我們可能對數據進行一些轉換 (transforming)，以滿足這個要求。 確認檢驗統計量 \\(T\\)，用 \\(T_{NULL}\\) 標記。並且確定零假設時，檢驗統計量的期待值。(通常會用 \\(T_{NULL}=0\\)) 計算觀察數據獲得的統計量 \\(T_0\\)。 對觀察對象的組別進行 \\(N\\) 次隨機排列組合。計算每次排列組合情況下的統計量 \\((T_1, T_2, \\cdots, T_N)\\)。 計算 \\((T_1, T_2, \\cdots, T_N)\\) 中比 \\(T_0\\) 更極端的值所佔的比例 (\\(&gt;|T_0|\\))，作為觀察值 \\(T_0\\) 的雙側 \\(p\\) 值。 38.3.1 該如何選用合適的檢驗統計量 \\(T\\)？ 在排列置換法中選用合適的檢驗統計量是一個需要仔細思考的過程。選用的 \\(T\\) 必須要能反映組間的差異，並且要與話題相關。也希望能夠盡量和另假設時的統計量有一定的距離\\(T_{NULL}\\)。然而，選擇了不同的檢驗統計量並不意味著統計結果會有天差地別。最終常常是殊途同歸。另外，檢驗統計量並不一定要是一般參數檢驗時用到的統計量 (\\(t\\) 或者其他的似然比檢驗)，因為我們不需要對統計量的精確度 (標準差標準誤等統統不要) 作判斷，本法的統計學推斷是通過排列置換的過程實現的。 38.3.2 可以在排列置換法中對其他變量進行統計學調整 (adjustment) 嗎？ 用隨機對照試驗做例子。假如在實驗開始前的某個測量變量需要作為共變量被調整 (也就是要用 ANCOVA)，以獲得調整後的 \\(Y\\) 差異。在零假設條件下，\\(Y_i\\) 就不滿足可置換原則 (exchangeable)，因為那個需要被調整的測量變量可能決定了他們之間組別是有差異的。 此時，零假設條件 (沒有組間差異) 下，滿足可置換原則的其實是不考慮組別的情況下對需要校正的變量進行線性回歸後獲得的殘差 \\(R_i\\)： \\[ R_i = Y_i - \\hat{Y}_i = Y_i - \\hat\\alpha - \\hat\\beta X_i \\] 另假設條件下，只有殘差 \\(R_i\\) 才滿足可置換原則，可以用在排列置換法中。當需要調整的變量個數增加時，同樣適用。 38.3.3 排列置換法，基於秩次的非參數檢驗之間的關係 如果你注意到，當我們把原始觀察數據排序之後進行的排序檢驗其實就是我們本章介紹的排列置換法。它在前面的秩次非參數檢驗中以特殊的形式展現。Good (Good 2006) 曾經說的好，“99% of common non-parametric tests are permutation tests in which the observations have been replaced by ranks. The sign is one notable exception.” 所以符號檢驗是非排序檢驗的特例。 38.3.4 排列置換檢驗法，是一種精確檢驗 複合型假設，指的是假設中只提及了所有分佈情況中的一種的例如： \\[\\text{The mean of X is equal to } 0\\] 相反，一個簡單假設，則是對參數分佈進行了詳細描述的假設： \\[X\\sim N(0,4)\\] 所以，對複合型假設進行的統計檢驗法，被稱作精確檢驗法。精確檢驗法的特點是，複合型假設中包含的所有假設發生的概率之和等於該檢驗法的第一類錯誤概率 \\(\\alpha\\)。 A test is said to be exact with respect to a compound hypothesis if the probability of making a type I error is exactly \\(\\alpha\\) for each and every one of the simple hypotheses that are subsumed within the compound hypothesis. 一個大家都聽說過的精確檢驗的例子就是 Fisher 精確檢驗法 (也是一種排列置換檢驗)。所有的排列置換檢驗法都是精確檢驗法。 38.4 基於排序置換檢驗法計算信賴區間 基於排序置換檢驗法的信賴區間計算，是一個有些許繁瑣的過程。我們可以設定多個不同的 \\(N_{NULL}\\) ，但是樣本分佈相同的零假設時的統計量。計算相應的 \\(p\\) 值，95% 信賴區間就是 \\(p\\) 值保持大於等於 \\(0.05\\)的 \\(N_{NULL}\\) 取值範圍。計算量將會是很大的。 用前面的例子來解釋就是，我們可以假設兩組之間甲狀腺素的差異是 \\(T_{NULL} = 10\\)，然後將第二組的觀察值全部加上10 (或者將第一組的觀察值全部減去10)，然後用前面描述的方法來檢驗兩組之間的差是否等於零，獲取 \\(p\\) 值。然後用不同的 \\(T_{NULL}\\) 取值，重複這個過程，直到找到上限和下限的 \\(T_{NULL}\\) 值，他們的檢驗 \\(p\\) 值都是0.05。 38.5 排序置換法的優缺點 優點： 數據如果大大偏離了參數檢驗法的假設 (完全不是正態分佈)，本法則十分適用，且結果穩健 Robust； 所有的排序置換法計算的 \\(p\\) 值都是精確不需要近似的； 排序置換法十分可靠，結果不會偏離對應的參數檢驗法，但是當你的數據樣本量很小，無法使用參數檢驗進行理想的統計分析時，排序置換法是極佳的選擇。 缺點： 可置換原則必須得到滿足； 消耗極大的運算能力，當數據量大時，計算過程將會很緩慢；(Windows的話可能直接就死機了，笑) 用排序置換法計算信賴區間的過程比檢驗本身還好耗時費力。 References "],["bootstrap.html", "第 39 章 自助重抽法 The bootstrap 39.1 定義", " 第 39 章 自助重抽法 The bootstrap 39.1 定義 自助重抽，bootstrap 法是另一種對運算能力有較高要求的非參數檢驗常用手段。 "],["the-sandwich-estimator.html", "第 40 章 The sandwich estimator", " 第 40 章 The sandwich estimator "],["intro-Bayes.html", "第 41 章 貝葉斯統計入門 41.1 概率論推斷的複習 41.2 貝葉斯概率推理/逆概率 Bayesian reasoning/inverse probability 41.3 貝葉斯推理的統計學實現 41.4 Practical Intro-to-Bayes 01", " 第 41 章 貝葉斯統計入門 A Bayesian statistician is one who, vaguely expecting a horse and catching a glimpse of a donkey, strongly concludes he has seen a mule. Guernsey McPearson’s Drug Development Dictionary3 The Introduction to Bayesian Statistics lectures were orgainised and taught by Dr. F. Javier Rubio and Professor Karla DiazOrdaz. 本章節之目的： 介紹 (啓發) 貝葉斯推斷 Bayesian inference 的基本概念。並且與概率論 frequentist inference 推斷實例作比較。 介紹共軛分佈的概念 conjugate distributions。用單一參數家族 (single parameter family) ，特別是二項分佈的圖形來描述共軛分佈；用方差已知的正態分佈均值來描述共軛分佈。 介紹貝葉斯預測分佈 Bayesian prediction distribution。 推薦書目： “Principles of Statistical Inference” by D.R. Cox (D. R. Cox 2006) “Bayesian Data Analysis” by Gelman, Carlin, Stern, Dunson, Vehtari, and Rubin (Gelman et al. 2013), website for the book “Bayesian Biostatistics” by Vehtari and Rubin (Lesaffre and Lawson 2012) 貝葉斯統計推斷，提供了不同於概率論推斷的另一種考察和解決問題的思路。所有的思考，都源於貝葉斯定理 Bayes’ Theorem (Section 2)。起源於英國統計學家托馬斯貝葉斯 (Thomas Bayes) 死後被好友 Richard Price 整理發表的論文: “An essay towards solving a problem in the doctrine of chances.” 概率論推斷與貝葉斯推斷的中心都圍繞似然 likelihood (Section 12) 的概念。然而二者對似然提供的信息之理解和解釋完全不同。即在對於觀察數據提供的信息的理解，和如何應用已有信息來影響未來決策（或提供預測）的問題上常常被認爲是統計學中形成鮮明對比的兩種哲學理念。過去幾個世紀二者之間孰優孰劣的爭論相當激烈。但是，從實際應用的角度來看，我們目前更關心哪種思維能更加實用地描述和模擬真實世界。幸運地是，多數情況下，二者的差距不大。所以無法簡單地從一個實驗或者一次爭論中得出誰更出色的結論。現在的統計學家們通常不再如同信仰之爭那樣的互相水火不容，而是從實用性角度來判斷一些實際情況下，採用哪種思想能使計算過程更加簡便或者計算結果更加接近真實情況。 請思考如下的問題： 什麼是概率？ What is probability? 概率論思想下的定義：某事件在多次重複觀察實驗結果中發生次數所佔的比例。 The probability of an event is the limit of its relative frequency in a large number of trials.” 貝葉斯思想下的定義：概率是你相信某事件會發生的可能性。 Probability is a measure of the degree of belief about an event. 41.1 概率論推斷的複習 思考不同場景： 場景 A：假如我們在監測一個製造鐵絲的工廠，需要測量該工廠生產的鐵絲的強度。 場景 B：假如我們正在進行一個大型隊列研究，該研究是關於心臟病和與之相關的某個危險因子的評價。數據來源是家庭醫生的診療數據庫。 場景 C：假如一名警察凌晨三點在空無一人的街頭巡邏時，突然聽見防盜自動警鈴的報警聲。他立刻循聲望去，對面街上的珠寶店玻璃碎了一地。一個戴着巴拉克拉瓦頭套的人正揹着一個大包從破碎玻璃窗中爬出。該警察毫不猶豫地判定該人就是劫匪，立刻將其逮捕。 在這些場景下，請用概率論思想思考如下幾個問題： 事件是什麼？ 如何解讀總體參數？ 如何使用參數進行概率推斷？ 用經典概率論時，有什麼缺點嗎？ 場景 A： 事件：該工廠製造的鐵絲，長期以來的強度大小是多少。 總體參數：鐵絲的真實強度，或者與鐵絲強度相關的特性。 概率推斷：我們進行鐵絲的強度實驗，即從該工廠已經生產的鐵絲中大量抽取樣本逐一進行強度檢測。用相應的概率模型來模擬抽取的樣本數據，並且使用極大似然估計找到最能體現抽樣數據的參數估計，然後對獲得的極大似然估計進行95%信賴區間的計算。然後如果我們重複這樣相同的實驗無數次，那麼我們計算的所有的信賴區間中，有95%包含了真實的鐵絲強度大小。 在鐵絲強度測量的場景中，經典概率論顯得十分自然，因爲我們真的可以重複這樣的實驗很多很多次以獲得想要的參數的精確估計。 場景 B： 事件：由於我們用的是整個隊列研究的數據。所以從概率論的角度來看，本事件就是假定我們可以在人數無限多的人羣中重複同樣的隊列研究。 總體參數：我們感興趣的心臟病相關危險因子，在抽取該隊列作爲樣本的人羣中的真實值大小。 概率推斷：我們用泊松分佈的概率模型來模擬人羣中從開始觀察時起，至心臟病發病這段時間內和該危險因子之間的關係大小。然後用傳統的極大似然估計法計算獲得 HR, OR 等值來表示危險因素和心臟病的關係。 缺點：實際情況是，經費時間和人力資源的限制下，我們無法“重複相同的隊列研究”。而且該對列本身可能就是十分獨特的，比如只有男性，或者有年齡限制，或者其他的特性使隊列本身在理論上就是不可能被重複的。所以，在這樣的場景下，用經典的概率論思想作統計推斷常常會被認爲是不自然不妥當的。 場景 C： 事件：警察無數次在同樣的時間同樣的地點巡邏時，聽見防盜自動警鈴的報警聲，他看見頭戴巴拉克拉瓦頭套的人從破碎的玻璃窗中爬出…… 總體參數：在無數次上面描述的場景時，發生盜竊案的真實概率。 概率推斷：使用某種可以描述該事件（巡邏時。。。發生盜竊案的概率）的數學模型，我們用極大似然估計來計算發生盜竊案概率的估計和95%信賴區間，然後警察同志再來決定是否要去抓眼前這個頭戴巴拉克拉瓦頭套的人。 缺點：經典概率論在如此場景下很明顯是完全不適用的。1) 這裏經典概率論思維下的概率實際上無法準確定義，充其量是一種發生盜竊案可能性的估計。2) 在如此場景下，警察會根據已經觀察到的現象（已知信息），來判斷一場盜竊案發生的概率是多少。 通過上面不同場景的下的思考，應該能看到傳統概率論中始終假設我們可以重複相同的實驗多次，然後從長遠來估測相關事件發生的概率。許多場景下，即使事件概率能被準確定義，我們是很難知道我們關心的參數的分佈的，從而導致我們常常要用到漸進法估算 (asymptotic approximation)。 41.2 貝葉斯概率推理/逆概率 Bayesian reasoning/inverse probability 首先，不得不承認的一個事實是，所有的概率都是條件概率。 要麼是根據已知的信息。 要麼是一般性大家都接受的某種假設條件。 其次，概率，並不是“長遠”地重複觀察獲得的事件發生頻率。相反地，概率的大小取決與你自己和你感興趣的話題（事件）。思考下列例子： 明天會下雨嗎？ 阿森納下一場比賽會贏還是會輸？ 你的期末考試能不能過？ 41.2.1 演繹推理 deductive reasoning 和 三段論 weak syllogisms 數學要用到邏輯，假設我們用 \\(A,B,C\\) 標記不同的事件。 如果 \\(A\\Rightarrow B\\) (事件 A 可以推導出事件 B) 那麼當我們知道“事件 B 爲真”時，雖然B不一定能倒推回 A，但是我們會相信事件 A 很可能發生了。 例如，A 表示“正在下雨”這件事，B 表示 “天上有烏雲”。那麼從邏輯學上來說，\\(A\\Rightarrow B\\) 。然而有烏雲本身不一定會下雨。但是會讓我們覺得下雨的可能性增加了。 再來思考警察巡邏的例子。A 表示 “在珠寶店正在發生盜竊案”，B 表示 “一個頭戴巴拉克拉瓦頭套的人正在從玻璃窗中爬出”。也是一樣的道理。 所以警察薯熟在做判斷的時候，需要判斷 Pr(A|B)。他需要如下的信息： 珠寶店發生盜竊案的前提下，有個人從碎玻璃窗中爬出來的概率。 該警察薯熟正處於的環境（半夜三點無人的街頭，等場景） 所以，看到這裏是不是覺得貝葉斯使用的是我們的“常識”在思考決斷問題？因爲我們的先驗概率 (prior) 至關重要。這是我們的背景知識和解釋參數似然（推斷）的依據。 41.2.2 如何給可能性定量 Quantifying plausibility 進行可能性定量之前，R.T. Cox 制定了如下的規則(R. T. Cox 1946)： \\(\\text{plausibility}(A)\\) 是一個有邊界的實數； 傳遞性，transitivity：如果 \\(\\text{plaus}(C)&gt;\\text{plaus}(B)\\) and \\(\\text{plaus}(B)&gt;\\text{plaus}(A)\\) then \\(\\text{plaus}(C)&gt;\\text{plaus}(A)\\) 一致性，consistency：事件 \\(A\\) 發生的可能性只取決於所有與 \\(A\\) 直接相關的信息，而不包括那些推理到與 \\(A\\) 相關信息之前的信息。 The plausibility of proposition \\(A\\) depends only on the relevant information on \\(A\\) and not on the path of reasoning followed to arrive at \\(A\\). R.T. Cox 證明了他提出的這些規則可以完全適用於所有的可能性計算，而且可能性 (plausibility) 的這些規則和概率 (probability) 的微積分計算完全一致。 所以利用上面的可能性規則，我們可以對條件概率進行更深層次的定義： \\[\\text{Pr}(A|B)=\\frac{\\text{Pr}(B|A)\\text{Pr}(A)}{\\text{Pr}(B)}\\propto \\text{Pr}(B|A)\\text{Pr}(A)\\] 用文字表述爲： 事後概率 \\(\\propto\\) 似然 \\(\\times\\) 先驗概率 其中： 事後概率，posterior probability：\\(B\\) 發生的條件下, \\(A\\) 發生的概率； \\(\\propto\\) ：與…成正比； 似然，likelihood：\\(A\\) 發生的條件下，\\(B\\) 發生的概率； 先驗概率，prior probability：事件 \\(A\\) 發生的概率。 這就是貝葉斯定理。這個定理也告訴我們爲什麼貝葉斯論證在18，19世紀時被叫做“逆概率推理, inverse probability reasoning”。因爲似然 (\\(A\\) 發生的條件下，\\(B\\) 發生的概率) 在與先驗概率相乘以後，概率發生了逆轉–事後概率 (\\(B\\) 發生的條件下, \\(A\\) 發生的概率)。 回頭再來看之前的珠寶店盜竊案： 事件 \\(A\\)：珠寶店正在發生盜竊案； 事件 \\(B\\)：一個頭戴巴拉克拉瓦頭套的人正在從玻璃窗中爬出。 所以： \\(\\text{Pr}(A)=\\) 珠寶店發生盜竊案的概率 – 先驗概率 (prior probability); \\(\\text{Pr}(B|A)=\\) 當珠寶店發生盜竊案時，觀察到“一個頭戴巴拉克拉瓦頭套的人正在從玻璃窗中爬出”事件的可能性 – 似然 (likelihood); \\(\\text{Pr}(A|B)\\) 當觀察到“一個頭戴巴拉克拉瓦頭套的人正在從玻璃窗中爬出”事件時，倒推珠寶店發生了盜竊案的概率 – 事後概率 (posterior probability)。 用例子來解釋貝葉斯推理之後你會發現，其實貝葉斯思想也是純粹的概率理論。與經典概率論不同的是，我們沒有必要認爲某些事件發生的概率需要被重複實驗驗證。貝葉斯對整個世界的理解源於我們每個人自己認爲的事件發生概率 (personalisitic probability)，或者叫信念度（degree of belief）。 41.3 貝葉斯推理的統計學實現 在經典概率論中，概率分佈的標記 \\(f_X(x;\\theta)\\) 的涵義爲： 對於一個隨機變量 \\(X\\)，它在我們假設的某種固定的真實（上帝才知道是多少的）參數 \\(\\theta\\) 的分佈框架下，不斷重複相同的實驗之後獲得的概率分佈。 在貝葉斯統計推理中，一切都被看作是一個服從概率分佈的隨機變量。利用貝葉斯定理，我們將先驗隨機概率分佈 (prior probability distribution)，和觀察數據作條件概率 (condition on the observed data)，從而獲得事後概率分佈 (posterior probability distribution)。 41.3.1 醫學診斷測試 diagnostic testing 貝葉斯推理最常用的實例是在診斷測試中，即當一個人拿着陽性的檢驗報告結果來找你，你如何判斷這個人有多大的概率真的患有該疾病。 用 \\(D\\) 標記患病， \\(\\bar{D}\\) 標記不患病；\\(T\\) 標記檢查結果爲陽性，\\(\\bar{T}\\) 標記檢查結果爲陰性。那麼，陽性檢查結果時，真的患病的概率 \\(\\text{Pr}(D|T)\\)： \\[ \\begin{aligned} \\text{Pr}(D|T) &amp;= \\frac{\\text{Pr}(T|D)\\text{Pr}(D)}{\\text{Pr}(T)}\\\\ &amp;=\\frac{\\text{Pr}(T|D)\\text{Pr}(D)}{\\text{Pr}(T|D)\\text{Pr}(D)+\\text{Pr}(T|\\bar{D})\\text{Pr}(\\bar{D})} \\end{aligned} \\] 其中分母的轉換用到了 Law of Total Probability (L.T.P): \\[ \\begin{aligned} \\text{Pr}(T) &amp;= \\text{Pr}(T \\cap D) + \\text{Pr}(T \\cap \\bar{D}) \\\\ &amp;= \\text{Pr}(T|D)\\text{Pr}(D)+\\text{Pr}(T|\\bar{D})\\text{Pr}(\\bar{D}) \\end{aligned} \\] 所以說，貝葉斯定理在這裏告訴我們，要計算 \\(\\text{Pr}(D|T)\\) 我們只需要下列幾個信息： 患病率： \\(\\text{Pr}(D)\\) 檢測手段的敏感度 (sensitivity)： \\(\\text{Pr}(T|D)\\) 檢測手段的 1 - 特異度 (specificity)： \\(\\text{Pr}(T|\\bar{D})=1-\\text{Pr}(\\bar{T}|\\bar{D})\\) 41.3.2 HIV 檢查時的應用 假設人羣中患病率爲 \\(1/1000\\)，所用的 HIV 檢測手段的敏感度爲 \\(0.99\\)， 特異度爲 \\(0.98\\)。試計算該檢測HIV手段的事後概率（即拿到陽性結果時，患病的概率 \\(\\text{Pr}(D|T)\\)）。 解 令 \\(D=\\text{HIV positive}, \\bar{D}=\\text{HIV negative}\\\\ T=\\text{test postive}, \\bar{T}=\\text{test negative}\\) \\[ \\begin{aligned} \\text{Pr}(D|T) &amp;= \\frac{\\text{Pr}(T|D)\\text{Pr}(D)}{\\text{Pr}(T|D)\\text{Pr}(D)+\\text{Pr}(T|\\bar{D})\\text{Pr}(\\bar{D})} \\\\ &amp;= \\frac{0.99\\times0.001}{0.99\\times0.001+(1-0.98)\\times0.999} \\\\ &amp;= 0.0472 \\end{aligned} \\] 如果 特異度能達到 \\(0.99\\) \\[ \\begin{aligned} \\text{Pr}(D|T) &amp;= \\frac{\\text{Pr}(T|D)\\text{Pr}(D)}{\\text{Pr}(T|D)\\text{Pr}(D)+\\text{Pr}(T|\\bar{D})\\text{Pr}(\\bar{D})} \\\\ &amp;= \\frac{0.99\\times0.001}{0.99\\times0.001+(1-0.99)\\times0.999} \\\\ &amp;= 0.0901 \\end{aligned} \\] 如果特異度能達到 \\(0.999\\) \\[ \\begin{aligned} \\text{Pr}(D|T) &amp;= \\frac{\\text{Pr}(T|D)\\text{Pr}(D)}{\\text{Pr}(T|D)\\text{Pr}(D)+\\text{Pr}(T|\\bar{D})\\text{Pr}(\\bar{D})} \\\\ &amp;= \\frac{0.99\\times0.001}{0.99\\times0.001+(1-0.999)\\times0.999} \\\\ &amp;= 0.497 \\end{aligned} \\] 可見，對於像 HIV 這樣人羣中患病率較爲罕見的疾病，其檢驗手段的敏感度，特異度都要達到極高才能讓檢驗結果可靠，即拿到陽性結果的人的確患有該疾病。其中當敏感度爲 \\(0.99\\)，特異度爲 \\(0.999\\) 時，才能讓這樣的檢驗手段達到接近一半的可靠程度 (即只有接近一半的陽性結果是真陽性)。 注意本例爲貝葉斯理論的特例，即我們使用的是一個固定的先驗概率 (prior) 和似然 (likelihood)。一般情況下，先驗概率和似然會有自己的概率分佈 (probability distribution)，而很少會是一個固定的值， 其相應的事後概率 (posterior) 也擁有概率分佈，並且使用它本身的均值和方差來描述。 41.3.3 離散概率分佈實例：遺傳學分析 這裏輔助我們理解的實例來自經典書目 BDA (Gelman et al. 2013) 第一章節 1.4 小節 P8-9。這一實例同樣可以讓我們清晰的理解先驗概率，似然，和後驗概率。 已知血友病（Hemophilia）是一種遺傳性疾病。它是X-染色體隱性疾病。也就是說，當性別為男性時，攜帶該缺陷基因意味著必然會發病，因為男性只有一條X染色體。相反，女性則需要兩條X染色體同時攜帶該缺陷基因才會發病。而且女性患有血友病的話，是很致命的，意味著患有血友病的女性長到成年並育有子女的概率極為罕見。 41.3.3.1 先驗概率 Prior distribution 假如來了一名女性就醫者進行遺傳諮詢，她訴說她的一個同父同母的親兄弟是血友病患者。那麼，我們可以推論該女性的母親應該是一位血友病基因攜帶者。且該女性告訴我們她的父親不是血友病患者，故她本人是否攜帶血友病缺陷基因本身是取決於她的母親，也就是各有 50% 概率。所以，總結目前已知的信息，該女性關心的問題，她本人是不是攜帶者只有兩個答案：是攜帶者 \\(\\text{Pr}(\\theta =1) = 0.5\\)，不是攜帶者 \\(\\text{Pr}(\\theta = 0) = 0.5\\)。 41.3.3.2 似然 likelihood 假如該女性又告訴我們，她已經育有兩個男孩，他們不是同卵雙胞胎，而且兩個男孩都不是血友病患者，也就是說，我們獲得了兩個觀察數據 \\[ y_1 = 0; y_2 = 0 \\] 那麼我們可根據這個數據計算下列的似然函數： \\[ \\begin{aligned} \\text{Pr}(y_1 = 0, y_2 = 0 | \\theta = 1) &amp; = 0.5 \\times 0.5 = 0.25 \\\\ \\text{Pr}(y_1 = 0, y_2 = 0 | \\theta = 0) &amp; = 1 \\times 1 = 1 \\end{aligned} \\] 第一行似然函數是說，如果該女性本身是攜帶者，那麼不再遺傳給兩個男孩的概率分別都是 \\(0.5\\)。 第二行似然函數是說，如果該女性本身不是攜帶者，那麼本身兩個男孩不患有血友病的概率就都是 \\(1\\)。 41.3.3.3 事後概率 Posterior distribution 下面我們可以利用貝葉斯定理，把先驗概率結合數據給出的似然，計算我們希望獲得的事後概率，也就是在已知上述條件下，該女性是血友病缺陷基因攜帶者的概率 \\(\\text{Pr}(\\theta = 1| y_1, y_2)\\)： \\[ \\begin{aligned} \\text{Pr}(\\theta | y_1, y_2) &amp; = \\frac{p(y_1, y_2|\\theta = 1)\\text{Pr}(\\theta = 1)}{p(y_1, y_2|\\theta = 1)\\text{Pr}(\\theta = 1) + p(y_1, y_2|\\theta = 0)\\text{Pr}(\\theta = 0)} \\\\ &amp; = \\frac{0.25 \\times 0.5}{(0.25 \\times 0.5) + 1 \\times 0.5} = \\frac{0.125}{0.625} = 0.20 \\end{aligned} \\] 其實我們不用計算可能也能猜出來，因為當一個女性生下無血友病的男孩成為事實時，她本人是血友病缺陷基因攜帶者的概率（在我們腦海裡推算中）會變小。那麼貝葉斯定理是把這個變小的過程直接呈現給我們看。從原先的一半一半的概率，現在在知道了該女性生下兩名健康的男嬰之後，同樣事件的概率下降到了 \\(0.2\\)。 這個計算過程同樣可以使用先驗比值 (prior odds) 和後驗/事後比值 (posterior odds) 之間的關係來推理。從已知的背景看，該女性是攜帶者的先驗比值是： \\[ \\text{Prior odds} = \\frac{\\text{Pr}(\\theta =1) = 0.5}{\\text{Pr}(\\theta =0) = 0.5} = 1 \\] 根據已知兩個健康男嬰的數據計算的似然比是： \\[ \\text{Likelihood ratio} = \\frac{\\text{Pr}(y_1 = 0, y_2 = 0 | \\theta = 1)}{\\text{Pr}(y_1 = 0, y_2 = 0 | \\theta = 0)} = \\frac{0.25}{1} = 0.25 \\] 於是，事後比值的結果顯而易見就是： \\[ \\text{Posterior odds} = \\text{Prior odds} \\times \\text{Likelihood ratio} = 1 \\times 0.25 = 0.25 \\] 然後我們再把比值和概率之間進行數學轉換，獲得事後概率： \\[ \\frac{\\text{Pr}(\\theta | y_1, y_2)}{1 - \\text{Pr}(\\theta | y_1, y_2)} = 0.25 \\\\ \\rightarrow \\text{Pr}(\\theta | y_1, y_2) = 0.2 \\] 41.3.3.4 更新我們的認知： 如果該女性下次再來諮詢時，生下了第三名健康男嬰。也就是 \\(y_3 =0\\)，我們取得了新的數據。此時我們更新該女性是血友病缺陷基因攜帶者的概率最簡便的方法是，直接使用上面計算過的 \\(\\text{Pr}(\\theta | y_1, y_2) = 0.2\\)，作為此時的先驗概率 (prior)： \\[ \\text{Pr}(\\theta | y_1, y_2, y_3) = \\frac{0.5 \\times 0.2}{0.5 \\times 0.2 + 1 \\times 0.8} = 0.111 \\] 類似地，如果該女性第三胎生下的是一名患有血友病的男嬰，那麼相應地，該女性是攜帶者的概率會被更新為 100%： \\[ \\text{Pr}(\\theta | y_1, y_2, y_3) = \\frac{0.5 \\times 0.2}{0.5 \\times 0.2 + 0 \\times 0.8} = 1 \\] 41.3.4 說點小歷史 圖 41.1: Sir Ronald Fisher Ronald Aylmer Fisher (1890-1962) 推動了統計學在20世紀前半頁的重大發展。他鞏固了概率論統計學堅實的基礎，並且積極提倡這一套理論(Fisher 1922)。但是 Fisher 本人對於統計學的“統計學意義, level of significance” 的認識卻是隨着時間和他年齡的變化而變化的： 表 40.1: Fisher’s interpretation of ‘level of significance’ and the Neyman-Pearson interpretation 早期 Fisher (1935) 晚期 Fisher (1956) Neyman and Pearson 統計學有意義的水平（傳統上使用 \\(\\alpha=5\\%\\)），必須在實施統計檢驗之前就被決定。因此，統計學意義的水平是相應統計學檢驗本身的性質之一。 Thus, the level of significance is a property of the test. 統計學意義的水平，應該被精確計算並且在報告中明確 \\(p\\) 值的大小，故統計學意義的水平本身是在實施了統計檢驗之後計算的。它應該是屬於觀察數據的固有性質。 Here the level of significance is a property of the data. \\(\\alpha\\) 和 \\(\\beta\\) 作爲統計檢驗的第一類錯誤和第二類錯誤指標，應該在實施統計檢驗之前被決定。所以 \\(\\alpha, \\beta\\) 是屬於統計檢驗的性質。 Yet, to determine \\(\\alpha, \\beta\\) no convention is required, but rather a cost-benefit estimation of the severity of the two kinds of error. 隨着马尔科夫蒙特卡洛 (Markov-Chain Monte Carlo, MCMC) 法的廣泛應用，貝葉斯統計學在事後概率計算上（計算量超大的）棘手問題，得到了解決。 41.4 Practical Intro-to-Bayes 01 從經典概率論的角度，準確定義 \\(95\\%\\) 信賴區間。思考，在貝葉斯統計理論中，它會如何被定義。 解 概率論： 對於一個總體參數 \\(\\theta\\) 來說，\\(95\\%\\) 信賴區間是一個從觀察數據中計算得到的數值區間。如果重複相同的實驗無數次，我們從無數個觀察數據中計算這個區間，那麼這些無數多的信賴區間 (confidence interval, CI) 裏有 \\(95\\%\\) 包含了總體參數 \\(\\theta\\)。 貝葉斯： 對於一組觀察數據，它可以計算獲得可信區間 (credible interval, CI)。如果使用 \\(L, U\\) 分別表示下限和上限的值，\\(\\theta\\) 表示參數，\\(x\\) 表示觀察數據，\\(\\pi(\\theta|x)\\) 表示事後概率分佈的密度方程， posterior distribution。那麼有： \\[\\text{Pr}(\\theta \\in (L,U)) = \\int_L^U\\pi(\\theta|x)\\text{d}\\theta = 95\\%\\] 即，在貝葉斯理論下，95% 可信區間就是這一個區間包含了參數的概率是95%。 證明貝葉斯定理。 並且用二項分佈隨機變量的例子來證明：\\(\\text{posterior odds} = \\text{prior odds}\\times\\text{likelihood ratio}\\) 用前面提到的 HIV 的案例來說明這個公式的實際應用。 解 參照上面的標記法： \\(\\theta\\) 表示參數 \\(x\\) 表示觀察數據 \\(\\pi(\\theta|x)\\) 表示事後概率分佈的密度方程， posterior distribution \\(f(\\theta,x)\\) 表示參數和數據的聯合分佈， joint distribution \\(f(x)\\) 表示先驗概率分佈的密度方程， prior distribution \\[ \\begin{aligned} \\pi(\\theta|x) &amp;= \\frac{f(\\theta, x)}{f(x)} \\\\ &amp;=\\frac{f(\\theta, x)}{f(x)}\\cdot\\frac{1/\\pi(\\theta)}{1/\\pi(\\theta)} \\\\ &amp;=\\frac{\\frac{f(\\theta,x)}{\\pi(\\theta)}}{\\frac{f(x)}{\\pi(\\theta)}} \\end{aligned} \\] 其中分子部分 \\(\\frac{f(\\theta,x)}{\\pi(\\theta)}\\) 就是條件概率 \\(f(x|\\theta)\\)。 分母的 \\(f(x)\\) 部分 \\[ \\begin{aligned} f(x) &amp;= \\int f(x,\\theta) \\text{d}\\theta \\\\ &amp;= \\int \\frac{f(x,\\theta)}{\\pi(\\theta)} \\cdot \\pi(\\theta) \\text{d}\\theta \\\\ &amp;= \\int f(x|\\theta) \\cdot \\pi(\\theta) \\text{d}\\theta \\end{aligned} \\] 所以， \\[\\pi(\\theta|x)=\\frac{f(x|\\theta)\\pi(\\theta)}{\\int f(x|\\theta) \\cdot \\pi(\\theta) \\text{d}\\theta}\\] 用二項分佈隨機變量 (\\(\\theta=1, 0\\)) 來證明：\\(\\text{posterior odds} = \\text{prior odds}\\times\\text{likelihood ratio}\\) 解 假設 \\(\\theta\\) 是一個二項分佈的隨機變量，那麼 \\(f(\\theta|x)=\\text{Pr}(\\theta |x)\\)。 \\[ \\begin{aligned} \\text{posterior odds} &amp;= \\frac{\\text{Pr}(\\theta=1|x)}{\\text{Pr}(\\theta=0|x)} \\\\ &amp;= \\frac{\\frac{\\text{Pr}(x|\\theta=1)\\text{Pr}(\\theta=1)}{\\text{Pr}(x)}}{\\frac{\\text{Pr}(x|\\theta=0)\\text{Pr}(\\theta=0)}{\\text{Pr}(x)}}\\\\ &amp;=\\frac{\\text{Pr}(\\theta=1)}{\\text{Pr}(\\theta=0)}\\cdot\\frac{\\text{Pr}(x|\\theta=1)}{\\text{Pr}(x|\\theta=0)} \\\\ &amp;=\\text{prior odds}\\times\\text{likelihood ratio} \\end{aligned} \\] 用前面提到的 HIV 案例來驗證： HIV的患病率爲 \\(1/1000\\)，所以 \\(\\text{prior odds}=1:999\\)，似然比 \\(\\text{likelihood ratio}=0.99:(1-0.98)\\)。所以就有： \\[ \\begin{aligned} \\text{posterior odds} &amp;=\\text{prior odds}\\times\\text{likelihood ratio} \\\\ &amp;= \\frac{1}{999}\\times\\frac{0.99}{1-0.98} \\\\ &amp;= \\frac{0.99}{19.98} \\\\ &amp;= \\frac{1}{20.18182} \\end{aligned} \\] 所以事後概率（陽性結果患病的概率）爲 \\(1/(1+20.18182)=0.0472\\)。 史密斯先生有2個孩子，其中之一是男孩。另一個孩子是女孩的概率是多少？ 如下前提默認成立： 男女比例爲: 50-50。 這個家庭中沒有對男孩或者女孩的偏好。 這兩個孩子不是同胞雙胞胎。 一個家庭有兩個孩子的性別組合的所有可能性： 第一個孩子性別 第二個孩子性別 男孩 男孩 男孩 女孩 女孩 男孩 女孩 女孩 所以根據已知條件，其中之一是男孩，所以最後一種情況：“兩個女孩” 是不可能的。故另一孩子是女孩的概率就是 \\(\\frac{2}{3}\\)。 如果用貝葉斯理論來正式計算的話： \\[ \\begin{aligned} &amp; \\text{Pr (1 girl in family of 2 | family does not have 2 girls)} \\\\ &amp;= \\frac{\\text{Pr(family doesn&#39;t have 2 girls|1 girl in a family of 2)}\\times \\\\ \\text{Pr(1 girl in a family of 2 )}}{\\sum_{j=0,1,2}\\text{Pr(family doesn&#39;t have 2 girls|j girl in a family of 2)}\\times\\\\\\text{Pr(j girl in a family of 2)}} \\\\ &amp;= \\frac{1\\times\\frac{1}{2}}{1\\times\\frac{1}{4}+1\\times\\frac{1}{2}+0\\times\\frac{1}{4}} \\\\ &amp;= \\frac{\\frac{1}{2}}{\\frac{3}{4}}=\\frac{2}{3} \\end{aligned} \\] 也是一樣的結論。 下表是全國普查以後得出的家庭有兩個孩子，且至少一個是男孩的數據分佈： 第一個孩子性別 第二個孩子性別 家庭數量 男孩 男孩 657 男孩 女孩 591 女孩 男孩 610 女孩 女孩 0 求同樣的概率問題： 解 另一個孩子是女孩的概率是：\\(\\frac{610+591}{610+591+657}=0.646\\) References "],["single-para-model.html", "第 42 章 貝葉斯定理的應用：單一參數模型 Single-parameter models 42.1 從二進制數據中估計概率 Estimating a probability from binomial data 42.2 貝葉斯理論下的事後二項分佈概率密度方程 notation for probability density functions in binomial data 42.3 \\(\\theta\\) 的先驗概率 42.4 附贈–加量不加價 42.5 Practical Intro-to-Bayes 02", " 第 42 章 貝葉斯定理的應用：單一參數模型 Single-parameter models 從前一章節我們可以深切體會到，貝葉斯統計是如何讓我們的先驗概率，在觀察到數據之後，更新信息，獲得事後概率 (這是一個通過數據自我學習，進化的過程)。(How a prior belief about an event can be updated, given data, to a posterior belief.) 所以說，在貝葉斯模型中，我們期待使用觀察數據來學習，以增加現有的對相關參數的知識和信息。本章我們把重點放在二項分佈，用二項分佈作爲單一參數模型來瞭解怎樣推導事後分佈。 42.1 從二進制數據中估計概率 Estimating a probability from binomial data 在簡單的二項分佈模型中，我們討論的目的是希望從一系列的“柏努利試驗 Bernoulli trials”的結果來估計一個未知的總體百分比 (unknown population proportion)。既 \\(y_1, y_2, \\dots, y_n\\) 的結果是 \\(0,1\\)。所以二項分佈的採樣模型可以寫作是： \\[ p(y | \\theta) = \\text{Bin}(y | n, \\theta) = {n \\choose y}\\theta^y(1- \\theta)^{n -y} \\] Example 42.1 估計新生兒中女嬰的比例。 作為二項分佈模型最典型的應用之一，估計新生兒中男女性別的比例，也就是男嬰或者女嬰的百分比估計是長期以來茶餘飯後的話題之一。二百年前，歐洲人群中就有好事者估計過，新生兒中女嬰的比例應該是小於50%的。現在大家更加關心的其實是，有哪些因素可能會影響新生兒中女嬰的比例。如今，大多數科學界認可的歐洲人口中新生兒女嬰的比例是 0.485。 在這個例子中，我們定義 這個未知的新生兒女嬰比例是 \\(\\theta\\)。當然可能有人不同意，或者更樂意使用男女新生兒人數比例 \\(\\phi = \\frac{(1 - \\theta)}{\\theta}\\)，來描述這個問題，這個大同小異。 \\(y\\) 是新生兒中女嬰的人數。 \\(n\\) 是新生兒總人數。 當我們決定使用二項分佈模型來模擬上述情境的數據時，我們默認了新生兒性別比例這一條件是決定性別的唯一條件，也就是說，除了這個 \\(\\theta\\) 之外，性別是完全隨機且互相獨立的（此處需要先忽略掉一胞多胎，和同一家庭因素等可能對新生兒性別造成的影響）。那麼應用了貝葉斯定理之後，我們可以推導獲得 \\(\\theta\\) 的事後概率分佈是 \\[ \\begin{equation} p(\\theta | y) \\propto \\theta^y (1 - \\theta)^{n - y} \\end{equation} \\tag{42.1} \\] 由於 \\(n,y\\) 都是常數項，僅由他們構成的最前面的部分就是一個不會根據 \\(\\theta\\) 取值發生改變的部分，所以在計算事後概率分佈的事後，我們可以把這部分忽略掉，使用它的非。根據 Beta 分佈的性質，不難發現，公式 (42.1) 其實就是一個參數為 \\(y + 1, n - y + 1\\) 的 Beta 分佈： \\[ \\begin{equation} \\theta | y \\sim \\text{Beta}(y + 1, n - y + 1) \\end{equation} \\tag{42.2} \\] 42.1.1 事後概率分佈是數據和先驗概率分佈之間的妥協 貝葉斯推斷的過程是從先驗概率分佈 \\(p(\\theta)\\) 過渡到事後概率分佈 \\(p(\\theta | y)\\) 的過程。我們應該會很自然地認為，這先驗和事後之間的概率分佈必然存在這某種聯繫。例如，我們可能會很純粹的認為，因為事後概率分佈增加了手上數據的信息，那麼它相應地應該比先驗概率分佈不那麼分散（less variable than the prior）。這個思考過程可以通過下面的數學關係來呈現： \\(\\theta\\) 的事後概率分佈的期望 \\(E(\\theta | y)\\) 和它的先驗概率分佈的期望 \\(E(\\theta)\\) 之間的關係： \\[ \\begin{equation} E(\\theta) = E(E(\\theta | y)) \\end{equation} \\tag{42.3} \\] 事後概率分佈的期望 公式(42.3) 很好理解。先驗概率分佈的 \\(\\theta\\) 均值 \\(E(\\theta)\\)，等於事後概率分佈的 \\(\\theta\\)，在所有觀察點 \\(y\\) 時的值的平均值。 \\(\\theta\\) 的事後概率分佈的方差 \\(\\text{var}(\\theta | y)\\) 和先驗概率分佈方差之間的關係 \\[ \\begin{equation} \\text{var}(\\theta) = E(\\text{var}(\\theta | y)) + \\text{var}(E(\\theta | y)) \\end{equation} \\tag{42.4} \\] 方差關係的方程式 (42.4) 其實說的是先驗概率分佈的方差，在獲取了新的數據 \\(y\\) 之後被分成了兩部分。一個是事後概率分佈本身的方差的均值 \\(E(\\text{var}(\\theta | y))\\)，還有一部分是事後概率分佈均值的方差 \\(\\text{var}(E(\\theta | y))\\)。 證明方差關係的公式 (42.4) 參考概率論部分期望與方差的關係 (Chapter 3) \\[ \\begin{aligned} E(\\text{var}(\\theta | y)) + \\text{var}(E(\\theta | y)) &amp; = E(E(\\theta^2 | y) - (E(\\theta | y))^2) + E([E(\\theta | y)]^2) - [E(E(\\theta | y))]^2 \\\\ &amp; = E(\\theta^2) - E([E(\\theta | y)]^2) + E([E(\\theta | y)]^2) - [E(\\theta)]^2 \\\\ &amp; = E(\\theta^2) - [E(\\theta)]^2 \\\\ &amp; = \\text{var}(\\theta) \\end{aligned} \\] 理解了上述關係之後，可以說，事後概率分佈的方差總是比先驗概率分佈的方差要小一些。如果能想方設法使事後概率分佈均值的方差 \\(\\text{var}(E(\\theta | y))\\) 這部分佔據更大部分，我們就能提高對 \\(\\theta\\) 的事後估計精確度。(the greater the latter variation, the more the potential for reducing our uncertainty with regard to \\(\\theta\\)). 這也是貝葉斯統計推斷的基本特徵之一，事後概率分佈的中心，一般是位於先驗概率分佈的中心，和觀察數據的中心之間的某個地方，它是先驗概率分佈和數據之間相互妥協的結果。 Example 42.2 估計有前置胎盤的母親生下的新生兒中女嬰的比例。 一個早期來自德國的研究觀察到，980 名孕期有前置胎盤的母親生下的新生兒中，有 437 名是女嬰。那麼，如何來比較這個觀察數據和已知的，在總體人群 (general population) 中的女嬰出生比例 0.485之間的差異？ 當先驗概率分佈使用均一分佈 (uniform distribution: \\(\\theta \\sim \\text{Beta}(a = 1, b = 1)\\)) 時，我們獲得的數據是 \\(n = 980, y = 437\\)。那麼根據共軛的性質可以計算出事後概率分佈是服從另一個 Beta 分佈: \\(p(\\theta | y,n) = \\text{Beta}(a + y, b + n - y) = \\text{Beta}(438, 544)\\) # 95% Credible Intervals L &lt;- qbeta(0.025, 438, 544) U &lt;- qbeta(0.975, 438, 544) post &lt;- Vectorize(function(theta) dbeta(theta, 438, 544)) # Illustration x1 &lt;- seq(0.375, 0.525,length=10000) y1 &lt;- post(x1) plot(x1, y1, type = &quot;l&quot;, xlab=~theta, ylab=&quot;Density&quot;, main = &quot;Uniform prior -&gt; Posterior is Beta(438, 544)&quot;, lwd = 2, frame.plot = FALSE) abline(v = 0.488, col = &quot;blue&quot;, lty = 3, lwd = 2) polygon(c(L, x1[x1&gt;=L &amp; x1&lt;= U], U), c(0, y1[x1&gt;=L &amp; x1&lt;=U], 0), col=&quot;lightblue&quot;) 圖 42.1: Probability of a girl given placenta previa (BDA3, p.37). 使用 ggplot2 繪圖的方法如下，參考原作者的代碼 # seq creates evenly spaced values df1 &lt;- data.frame(theta = seq(0.375, 0.525, 0.001)) a &lt;- 438 b &lt;- 544 # dbeta computes the posterior density df1$p &lt;- dbeta(df1$theta, a, b) ## 計算95%可信區間 # seq creates evenly spaced values from 2.5% quantile # to 97.5% quantile (i.e., 95% central interval) # qbeta computes the value for a given quantile given parameters a and b df2 &lt;- data.frame(theta = seq(qbeta(0.025, a, b), qbeta(0.975, a, b), length.out = 100)) # compute the posterior density df2$p &lt;- dbeta(df2$theta, a, b) ggplot(mapping = aes(theta, p)) + geom_line(data = df1) + # Add a layer of colorized 95% posterior interval geom_area(data = df2, aes(fill=&#39;1&#39;)) + # Add the proportion of girl babies in general population geom_vline(xintercept = 0.488, linetype=&#39;dotted&#39;) + # Decorate the plot a little labs(title=&#39;Uniform prior -&gt; Posterior is Beta(438,544)&#39;, y = &#39;&#39;) + scale_y_continuous(expand = c(0, 0.1), breaks = NULL) + scale_fill_manual(values = &#39;lightblue&#39;, labels = &#39;95% posterior interval&#39;) + theme(legend.position = &#39;bottom&#39;, legend.title = element_blank()) 圖 42.2: Probability of a girl given placenta previa (BDA3, p.37), same figure in ggplot format. 可以看到這裡我們計算獲得的事後可信區間是 [0.415, 0.477]，它的上限也低於總體人群的女嬰出生概率= 0.485。所以，應該可以認為如果有孕期有前置胎盤，女嬰出生的概率比人群水平更低。 L;U ## [1] 0.41506549 ## [1] 0.47719977 42.1.2 不同先驗概率分佈對事後概率分佈估計的影響 參考原作者代碼 # Observed data: 437 girls and 543 boys a &lt;- 437 b &lt;- 543 # Evaluate densities at evenly spaced points between 0.375 and 0.525 df1 &lt;- data.frame(theta = seq(0.375, 0.525, 0.001)) # Posterior with Beta(1,1), ie. uniform prior df1$pu &lt;- dbeta(df1$theta, a+1, b+1) # 3 different choices for priors # Beta(0.488*2,(1-0.488)*2) # Beta(0.488*20,(1-0.488)*20) # Beta(0.488*200,(1-0.488)*200) n &lt;- c(2, 20, 200) # prior counts apr &lt;- 0.488 # prior ratio of success # helperf returns for given number of prior observations, prior ratio # of successes, number of observed successes and failures and a data # frame with values of theta, a new data frame with prior and posterior # values evaluated at points theta. helperf &lt;- function(n, apr, a, b, df) cbind(df, pr = dbeta(df$theta, n*apr, n*(1-apr)), po = dbeta(df$theta, n*apr + a, n*(1-apr) + b), n = n) # lapply function over prior counts n and gather results into key-value pairs. df2 &lt;- lapply(n, helperf, apr, a, b, df1) %&gt;% # calculate posterior points do.call(rbind, args = .) %&gt;% # combine lists gather(grp, p, -c(theta, n), factor_key = T) # add correct labels for plotting df2$title &lt;- factor(paste0(&#39;alpha/(alpha+beta)=0.488, alpha+beta=&#39;,df2$n)) levels(df2$grp) &lt;- c(&#39;Posterior with unif prior&#39;, &#39;Prior&#39;, &#39;Posterior&#39;) # Plot distributions ggplot(data = df2) + geom_line(aes(theta, p, color = grp)) + geom_vline(xintercept = 0.488, linetype = &#39;dotted&#39;) + facet_wrap(~title, ncol = 1) + labs(x = &#39;&#39;, y = &#39;&#39;) + scale_y_continuous(breaks = NULL) + theme(legend.position = &#39;bottom&#39;, legend.title = element_blank()) 圖 42.3: Probability of a girl given placenta previa (BDA3, p.37), illustrate the effect of prior and compare posteriro distributions with different parameter values for the beta prior distribution. 不難觀察到，隨著先驗概率分佈的信息量增加（越往下的圖中先驗概率分佈的樣本量越多），事後概率分佈會被先驗概率分佈帶著往先驗概率的方向（也就是上圖中的右側）走，這始終顯示了事後概率分佈是先驗概率和數據本身相互妥協的結果。 42.1.3 從已知的事後概率分佈中採樣，對採集的事後樣本數據轉換 參考原作者代碼 # 我們從事後概率分佈 Beta(438, 544) 中採集事後樣本，存儲到向量 `theta` 中 a &lt;- 438 b &lt;- 544 theta &lt;- rbeta(10000, a, b) # 計算每一個採集樣本的比值比 odds ratio phi &lt;- (1 - theta) / theta # 計算事後概率分佈樣本，及其轉換之後的比值比的的 2.5% 和 97.5% 位點估計 quantiles &lt;- c(0.025, 0.975) thetaq &lt;- quantile(theta, quantiles) phiq &lt;- quantile(phi, quantiles) # 繪製事後樣本（及轉換的比值比）的 histogram # merge the data into one data frame for plotting df1 &lt;- data.frame(phi,theta) %&gt;% gather() # merge quantiles into one data frame for plotting df2 &lt;- data.frame(phi = phiq, theta = thetaq) %&gt;% gather() ggplot() + geom_histogram(data = df1, aes(value), bins = 30) + geom_vline(data = df2, aes(xintercept = value), linetype = &#39;dotted&#39;) + facet_wrap(~key, ncol = 1, scales = &#39;free_x&#39;) + labs(x = &#39;&#39;, y = &#39;&#39;) + scale_y_continuous(breaks = NULL) 圖 42.4: Probability of a girl given placenta previa (BDA3, p.37), simulate samples from Beta(438, 544), draw a histogram with quantiles, and do the same for a transformed variable (the odds ratio). 42.1.4 使用非共軛先驗概率計算事後概率分佈 當使用非共軛先驗概率分佈時，事後概率分佈的計算就是直接用該非共軛先驗概率乘以數據的似然 (multiplying the non-conjugate prior and the likelihood at each data point)。從計算獲得的事後概率分佈中再採集樣本。 參考原作者的代碼。 # 觀察數據 (437, 543) a &lt;- 437 b &lt;- 543 # 計算0.1~1之間相同間距(0.001)的事後概率密度（使用單一分佈Beta(1,1)作為先驗概率分佈） df1 &lt;- data.frame(theta = seq(0.1, 1, 0.001)) df1$con &lt;- dbeta(df1$theta, a, b) # 計算離散型非共軛先驗概率分佈的數據點上的概率密度 pp &lt;- rep(1, nrow(df1)) pi &lt;- sapply(c(0.388, 0.488, 0.588), function(pi) which(df1$theta == pi)) pm &lt;- 11 pp[pi[1]:pi[2]] &lt;- seq(1, pm, length.out = length(pi[1]:pi[2])) pp[pi[3]:pi[2]] &lt;- seq(1, pm, length.out = length(pi[3]:pi[2])) # 除以概率密度總和 normalize the prior df1$nc_p &lt;- pp / sum(pp) # 計算每個離散點上的非共軛事後概率分佈 po &lt;- dbeta(df1$theta, a, b) * pp # 除以事後概率分佈的總和 normalize the posterior df1$nc_po &lt;- po / sum(po) # 繪製使用單一分佈後的事後概率，非共軛概率分佈本身，及其對應的非共軛事後概率分佈 # gather the data frame into key-value pairs # and change variable names for plotting df2 &lt;- gather(df1, grp, p, -theta, factor_key = T) levels(df2$grp) &lt;- c(&#39;Posterior with uniform prior&#39;, &#39;Non-conjugate prior&#39;, &#39;Non-conjugate posterior&#39;) ggplot(data = df2) + geom_line(aes(theta, p)) + facet_wrap(~grp, ncol = 1, scales = &#39;free_y&#39;) + coord_cartesian(xlim = c(0.35,0.6)) + scale_y_continuous(breaks=NULL) + labs(x = &#39;&#39;, y = &#39;&#39;) 圖 42.5: Probability of a girl given placenta previa (BDA3, p.37). Calculate the posterior distribution on a discrete grid of points by multiplying the likelihood and a non-conjugate prior at each point, and normalizing over the points. 下面從非共軛事後概率分佈中採集樣本，使用逆累積密度函數 (inverse cdf sampling) # 計算事後累積密度 df1$cs_po &lt;- cumsum(df1$nc_po) # 從單一分佈中採樣 Uniform(0, 1) set.seed(2601) # runif(k) returns k uniform random numbers from interval [0,1] r &lt;- runif(10000) # 逆累積密度函數樣本採集 inverse-cdf sampling # function to find the smallest value theta at which the cumulative # sum of the posterior densities is greater than r. invcdf &lt;- function(r, df) df$theta[sum(df$cs_po &lt; r) + 1] # sapply function for each sample r. The returned values s are now # random draws from the distribution. s &lt;- sapply(r, invcdf, df1) # 繪製三個圖形 p1 是非共軛事後概率分佈；p2 是非共軛事後概率分佈的累積密度函數；p3 為從非共軛事後概率分佈中採集的樣本直方圖 p1 &lt;- ggplot(data = df1) + geom_line(aes(theta, nc_po)) + coord_cartesian(xlim = c(0.35, 0.6)) + labs(title = &#39;Non-conjugate posterior&#39;, x = &#39;&#39;, y = &#39;&#39;) + scale_y_continuous(breaks = NULL) p2 &lt;- ggplot(data = df1) + geom_line(aes(theta, cs_po)) + coord_cartesian(xlim = c(0.35, 0.6)) + labs(title = &#39;Posterior-cdf&#39;, x = &#39;&#39;, y = &#39;&#39;) + scale_y_continuous(breaks = NULL) p3 &lt;- ggplot() + geom_histogram(aes(s), binwidth = 0.003) + coord_cartesian(xlim = c(0.35, 0.6)) + labs(title = &#39;Histogram of posterior samples&#39;, x = &#39;&#39;, y = &#39;&#39;) + scale_y_continuous(breaks = NULL) # combine the plots grid.arrange(p1, p2, p3) 圖 42.6: Probability of a girl given placenta previa (BDA3, p.37). Simulate samples from the resulting non-standard posterior distribution using inverse cdf and the discrete grid. 42.2 貝葉斯理論下的事後二項分佈概率密度方程 notation for probability density functions in binomial data \\(R\\) 用來表示服從一個二項分佈的隨機變量， \\(R\\sim \\text{Bin}(n, \\theta)\\)。 \\(r\\) 表示觀察到 \\(r\\) 次成功實驗，實驗次數爲 \\(n\\)。 先驗概率分佈： \\(\\pi_\\Theta(\\theta)\\) 應用貝葉斯定理： \\[ \\begin{aligned} \\pi_{\\Theta|R}(\\theta|r) &amp;= \\frac{f_R(r|\\theta)\\pi_\\Theta(\\theta)}{\\int_0^1f_R(r|\\theta)\\pi_\\Theta(\\theta)\\text{ d}\\theta}\\\\ &amp;= \\frac{f_R(r|\\theta)\\pi_\\Theta(\\theta)}{f_R(r)} \\end{aligned} \\] 如果我們的先驗概率分佈： \\[\\begin{equation} \\pi_\\Theta(\\theta)=\\begin{cases} 1 \\text{ if } \\theta=0.2\\\\ 0 \\text{ otherwise} \\end{cases} \\end{equation}\\] 意思就是，我們 100% 相信 \\(\\theta\\) 絕對就等於 0.2，不相信 \\(\\theta\\) 竟然還能取任何其他值（霸道自大又狂妄的我們）。 如果先驗概率分佈： \\[\\begin{equation} \\pi_\\Theta(\\theta)=\\begin{cases} 0.4 \\text{ if } \\theta=0.2\\\\ 0.6 \\text{ if } \\theta=0.7 \\end{cases} \\end{equation}\\] 意思就是，我們有 60% 的把握相信 \\(\\theta=0.7\\)，有 40% 的把握相信 \\(\\theta=0.2\\)，稍微傾向於 \\(\\theta=0.7\\)。 假設進行10次實驗，觀察到3次成功。當 \\(\\theta=0.2\\) 時，觀察數據的似然 (likelihood) 爲： \\[f_R(3|\\theta=0.2)=\\binom{10}{3}0.2^3(1-0.2)^7\\] 當 \\(\\theta=0.7\\) 時，觀察數據的似然爲： \\[f_R(3|\\theta=0.7)=\\binom{10}{3}0.7^3(1-0.7)^7\\] 應用貝葉斯定理計算事後概率分佈： \\[ \\begin{equation} \\pi_{\\Theta|R}(\\theta|3)=\\begin{cases} \\frac{\\binom{10}{3}0.2^3(1-0.2)^7\\times0.4}{\\binom{10}{3}0.2^3(1-0.2)^7\\times0.4+\\binom{10}{3}0.7^3(1-0.7)^7\\times0.6}=0.937 \\text{ if } \\theta=0.2\\\\ \\frac{\\binom{10}{3}0.7^3(1-0.7)^7\\times0.6}{\\binom{10}{3}0.7^3(1-0.7)^7\\times0.6+\\binom{10}{3}0.2^3(1-0.2)^7\\times0.4}=0.063 \\text{ if }\\theta=0.7 \\end{cases} \\end{equation} \\] 所以，我們從一開始認爲只有40%的把握相信 \\(\\theta=0.2\\)，觀察數據告訴我們 10 次實驗，3次獲得了成功。所以我們現在有 93.7% 的把握相信 \\(\\theta=0.2\\)。也就是說，觀察數據讓我們對參數 \\(\\theta\\) 的取值可能性發生了質的變化，從原先的傾向於 \\(\\theta=0.7\\) 到現在幾乎接近 100% 的認爲 \\(\\theta=0.2\\)。也就是，觀察數據獲得的信息改變了我們的立場。 上面的例子很直觀，但是有下面幾個問題： 如果我們無法對參數 \\(\\theta\\) 賦予先驗概率的點估計時，該怎麼辦？ 如果事後概率不是一個離散的分佈時，該如何才能表達事後概率？ 42.3 \\(\\theta\\) 的先驗概率 一種選擇是，我們用均一分佈 (uniform distribution)，即我們對數據一無所知，認爲所有的 \\(\\theta\\) 的可能性都一樣，概率密度方程爲 \\(1\\)。在這一情況下，先驗概率爲 1： \\(\\pi_\\Theta(\\theta)=1\\)，其事後概率分佈爲： \\[ \\begin{equation} \\pi_{\\Theta|R}(\\theta|r)=\\frac{\\binom{n}{r}\\theta^r(1-\\theta)^{n-r}}{\\int_0^1\\binom{n}{r}\\theta^r(1-\\theta)^{n-r} \\text{ d}\\theta} \\tag{42.5} \\end{equation} \\] 看到即使在如此簡單的先驗概率下，我們還是要使用複雜的微積分進行計算。幸運的是，像 (42.5) 的分母這樣的積分公式其實是有跡可循的。這就是 beta (\\(\\beta\\)) 分佈。 42.3.1 beta 分佈 the beta distribution 圖 42.7: Beta distribution functions for various values of a, b 你會發現，beta分佈的圖形特徵由它的兩個超參數 (hyperparameter) a, b 決定。當相對地 a 比較大的時候，beta分佈的概率多傾向於較靠近橫軸右邊，也就是1的位置（較高概率），相對地 b 比較大的時候，beta分佈的曲線多傾向於靠近橫軸左邊，也就是0的位置（較低概率）。如果 a 和 b同時都在變大的話，beta分佈的曲線就變得比較“瘦”。這樣決定概率分佈形狀的參數，又被叫做形狀參數 (shape parameters) 我們定義 \\(a&gt;0\\) 時伽馬方程爲 \\[\\Gamma(a)=\\int_0^\\infty x^{a-1}e^{-ax}\\text{ d}x\\] 當 \\(a\\) 取正整數時， \\(\\Gamma(a)\\) 是 \\((a-1)!\\)。例如，當 \\(a=4, \\Gamma(a)=3\\times2\\times1=6\\)。 對於 \\(\\theta\\in[0,1]\\) 時，beta 方程 \\(Beta(a,b)\\) 被定義爲： \\[ \\begin{aligned} \\pi\\Theta(\\theta|a,b) &amp;= \\theta^{a-1}(1-\\theta)^{b-1}\\frac{\\Gamma(a+b)}{\\Gamma(a)\\Gamma(b)}\\\\ &amp;= \\frac{\\theta^{a-1}(1-\\theta)^{b-1}}{B(a,b)} \\end{aligned} \\] 其中 \\[B(a,b)=\\frac{\\Gamma(a)\\Gamma(b)}{\\Gamma(a+b)} = \\int_0^1\\theta^{a-1}(1-\\theta)^{b-1}\\text{d}\\theta\\] 莫要混淆 B 函數和 Beta 方程。B 函數的性質和詳細定義可以參照其維基百科頁面。 利用 Beta 方程作爲先驗概率顯得十分便捷且靈活。圖 42.7 展示的是 6 種不同的 \\((a,b)\\) 取值下的先驗概率分佈示意圖。其實我們可以看到，包括均一分佈在內的各種可能性都可以通過 Beta 分佈實現。其中 \\((a,b)\\) 被叫做超參數 (hyperparameter)。\\((a,b)\\) 取值越大，先驗概率分佈的方差越小。 關於 Beta 分佈的幾個性質： 均值：\\(\\text{mean}=\\frac{a}{a+b}\\)； 衆數：\\(\\text{mode}=\\frac{a-1}{a+b-2}\\)； 方差：\\(\\text{variance}=\\frac{ab}{(a+b)^2(a+b+1)}\\)。 回到均一分佈的簡單例子 (42.5) 上： \\(\\pi_\\Theta(\\theta)=Beta(1,1)\\) 是 \\(\\theta\\in[0,1]\\) 上的均一分佈。所以事後概率 posterior 和下面的式子成正比： \\[\\theta^r(1-\\theta)^{n-r}\\] 換句話說，事後概率分佈服從 \\(Beta(r+1,n-r+1)\\) 分布，均值爲 \\(\\frac{r+1}{n+2}\\)，方差爲 \\(\\frac{(1+r)(n-r+1)}{(n+2)^2(n+3)}\\)。 由此可見，在貝葉斯統計思維下，先驗概率爲均一分佈的二項分佈數據，其事後概率分佈的均值和方差，和經典概率論下的極大似然估計 \\(r/n\\) 不同，和它的漸進樣本方差 \\(r(n-r)/n^3\\) 也不同。但是，當 \\(n\\) 越來越大，獲得的觀察數據越多提供的信息越來越多以後，我們會發現事後概率分佈的均值和方差也會越來越趨近於經典概率論下的極大似然估計和它的方差。 於是這裏可以總結以下兩點： 即使先驗概率對參數毫無用處（不能提供有效信息，或者我們對所觀察的數據一無所知），也可能會對事後概率分佈結果提供一些意外的信息。 當樣本量增加，似然就主導了整個貝葉斯方程，在數學計算上，經典概率論和貝葉斯推理的估計結果將會十分接近。當然，其各自的意義還是截然不同的。 42.3.2 二項分佈數據事後概率分佈的一般化：共軛性 當 \\(r\\sim \\text{Binomial}(n,\\theta)\\) 時，如果先驗概率 \\(\\pi_\\Theta(\\theta)=\\text{Beta}(a,b)\\)。那麼參數 \\(\\theta\\) 的事後概率分佈的密度方程滿足： \\[\\pi_{\\Theta|r}(\\theta|r)=\\text{Beta}(a+r, b+n-r)\\] 它的事後概率分佈均值爲： \\[E[\\theta|r]=\\frac{a+r}{a+b+n}\\] 事後概率分佈的衆數爲： \\[\\text{Mode}[\\theta|r]=\\frac{a+r-1}{n+a+b-2}\\] 事後概率分佈方差爲： \\[\\text{Var}[\\theta|r]=\\frac{(a+r)(b+n-r)}{(a+b+n)^2(a+b+n+1)}\\] 因此，我們看到先驗概率服從 \\(\\text{Beta}(a,b)\\) 分佈，觀察數據爲二項分佈時，事後概率分佈還是服從 \\(\\text{Beta}\\) 分佈，僅僅只是超參數發生了轉變（更新）。這就是共軛分佈的實例。\\(\\text{Beta}\\) 分佈是二項分佈的共軛先驗概率分佈 (the \\(\\text{Beta}(a,b)\\) is the conjugate prior for the binomial likelihood)。 在經典概率論的框架下，參數 \\(\\theta\\) 的估計就是極大似然估計 (MLE)。在二項分佈的例子中， \\(\\text{MLE}=\\hat\\theta=r/n\\)，當樣本量 \\(n\\rightarrow\\infty\\) 時，事後概率分佈均值： \\[E[\\theta|r]=\\frac{a+r}{a+b+n}=\\frac{\\frac{r}{n}+\\frac{a}{n}}{1+\\frac{a+b}{n}}\\approx\\frac{r}{n}=\\text{MLE}\\] 事後概率分佈的衆數爲： \\[ \\begin{aligned} \\text{Mode}[\\theta|r] &amp;=\\frac{a+r-1}{n+a+b-2} \\\\ &amp;= \\frac{\\frac{r}{n}+\\frac{a-1}{n}}{1+\\frac{a+b-2}{n}}\\\\ &amp;\\approx \\frac{r}{n} \\end{aligned} \\] 事後概率分佈的方差爲： \\[\\frac{(a+r)(b+n+r)}{(a+b+n)^2(a+b+n+1)}\\approx0\\] 當 \\(n\\)，樣本越來越大時，我們獲得更多的來自數據的信息，所以來自數據的信息逐漸主導 (dominate) 了整個貝葉斯推斷的過程，事後均值等衆多統計結果都越來越趨近於概率論統計思想下的極大似然估計等結論。 我們也可以注意到，當 \\(a\\rightarrow0, b\\rightarrow0\\) 時，事後概率分佈的均值 \\(E[\\theta|r] = \\frac{a+r}{a+b+n} \\rightarrow \\frac{r}{n}\\)，方差也趨向於樣本漸進方差 (asymptotic sample variance)。但是當 \\(a\\rightarrow 0, b\\rightarrow0\\) 時，先驗概率是沒有被定義的，可是此例下事後概率卻可以正常被定義。所以當先驗概率分佈無法被定義，或者被定義的不恰當時，事後概率分佈依然不受太大影響。所以特別是對於均值（或迴歸係數，regression coefficients）等參數，我們常常會使用均一分佈這樣的無信息先驗概率。 42.4 附贈–加量不加價 當樣本數據服從二項分布時使用 \\(\\text{Beta}(a,b)\\) 作爲先驗概率分布，試推導事後概率分布。並且證明 Beta 分布是二項分布的共軛分布 (conjugate distribution)。 當數據服從二項分布時，其似然方程 (或概率方程) 爲: \\[f(n,r|\\theta) = \\binom{n}{r}\\theta^r(1-\\theta)^{n-r}\\] 用 \\(\\text{Beta}(a,b)\\) 做先驗概率分布 (\\(a,b\\) 是 \\(\\theta\\) 的超參數)，那麼 \\[ \\begin{aligned} \\pi(\\theta) &amp;= \\text{Beta}(\\theta|a,b) \\\\ &amp; = \\theta^{a-1}(1-\\theta)^{b-1}\\frac{\\Gamma(a+b)}{\\Gamma(a)\\Gamma(b)} \\\\ &amp; = \\frac{\\theta^{a-1}(1-\\theta)^{b-1}}{B(a,b)} \\\\ \\text{Where } B(a,b) &amp;=\\frac{\\Gamma(a)\\Gamma(b)}{\\Gamma(a+b)} = \\int_0^1\\theta^{a-1}(1-\\theta)^{b-1}\\text{d}\\theta \\end{aligned} \\] 利用貝葉斯定理，後概率分布就可以推導爲 \\[ \\begin{aligned} \\pi(\\theta|n,r) &amp; = \\frac{f(n,r|\\theta)\\pi(\\theta)}{\\int f(n,r |\\theta)\\pi(\\theta)\\text{d}\\theta} \\\\ &amp; = \\frac{\\binom{n}{r}\\theta^r(1-\\theta)^{n-r}\\pi(\\theta)}{\\int_0^1\\binom{n}{r}\\theta^r(1-\\theta)^{n-r} \\pi(\\theta) \\text{ d}\\theta} \\\\ &amp; = \\frac{\\binom{n}{r}\\theta^r(1-\\theta)^{n-r}\\frac{\\theta^{a-1}(1-\\theta)^{b-1}}{B(a,b)}}{\\int_0^1\\binom{n}{r}\\theta^r(1-\\theta)^{n-r} \\frac{\\theta^{a-1}(1-\\theta)^{b-1}}{B(a,b)} \\text{ d}\\theta} \\\\ &amp; = \\frac{\\binom{n}{r}\\theta^{r+a-1}(1-\\theta)^{n+b-r-1}}{\\int_0^1\\binom{n}{r}\\theta^{r+a-1}(1-\\theta)^{n+b-r-1} \\text{ d}\\theta} \\\\ &amp; = \\frac{\\theta^{r+a-1}(1-\\theta)^{n+b-r-1}}{B(r+a, n+b-r)} \\\\ &amp; \\sim \\text{Beta}(r+a, n+b-r) \\end{aligned} \\] 這個推導的結果告訴我們，先驗概率 \\(\\pi(\\theta) = \\frac{\\theta^{a-1}(1-\\theta)^{b-1}}{B(a,b)}\\sim \\text{Beta}(a,b)\\)，通過和二項分布的似然方程相乘，獲得後驗概率 \\(\\pi(\\theta|n,r) = \\frac{\\theta^{r+a-1}(1-\\theta)^{n+b-r-1}}{B(r+a, n+b-r)}\\sim\\text{Beta}(r+a, n+b-r)\\)。這兩個概率都服從 \\(\\text{Beta}\\) 分布，也就是證明了 \\(\\text{Beta}\\) 分布，是二項分布的共軛分布。新產生的事後概率的性質有: \\(\\theta\\) 的均值 mean \\(\\mu= \\frac{a+r}{a+b+n}\\); \\(\\theta\\) 的方差 variance \\(\\sigma^2 = \\frac{(a+r)(n+b-r)}{(a+b+n)^2(a+b+n+1)}\\); 42.5 Practical Intro-to-Bayes 02 42.5.1 Q1 當先驗概率分佈服從 \\(\\text{Beta}(0.5,0.5)\\)，觀察數據記錄到 \\(5\\) 個患者中 \\(3\\) 人死亡的事件。 試求： 死亡發生概率 \\(\\theta\\) 的 95% 可信區間 (credible intervals)。 解 根據 Section 42.3.2 的公式，當先驗概率爲 \\(\\pi_{\\Theta|r}(\\theta|r)=\\text{Beta}(a=0.5,b=0.5)\\) ，數據 \\(n=5, r=3\\)。參數 \\(\\theta\\) 的事後概率分佈 \\(\\pi_{\\Theta|r}(\\theta|r)=\\text{Beta}(a+r,b+n-r)=\\text{Beta}(3.5,2.5)\\)。 在 R 裏進行貝葉斯計算十分簡便： # 95% Credible Intervals L &lt;- qbeta(0.025, 3.5, 2.5) U &lt;- qbeta(0.975, 3.5, 2.5) print(c(L,U)) ## [1] 0.20941666 0.90560967 事後分佈 \\(\\pi_{\\Theta|r}(\\theta|r)=\\text{Beta}(3.5,2.5)\\) 的分佈圖形如下： post &lt;- Vectorize(function(theta) dbeta(theta, 3.5, 2.5)) # Illustration x &lt;- seq(0,1,length=10000) y &lt;- post(x) plot(x,y, type = &quot;l&quot;, xlab=~theta, ylab=&quot;Density&quot;, lwd=2, frame.plot = FALSE) polygon(c(L, x[x&gt;=L &amp; x&lt;= U], U), c(0, y[x&gt;=L &amp; x&lt;=U], 0), col=&quot;grey&quot;) 圖 42.8: Posterior distribution of Beta(3.5,2.5) 我們可以自己寫一個求可信區間的公式來計算： # Credible Interval function: # a, b : shape / super parameters # level: probability level (0,1) cred.int &lt;- function(a,b,level){ L &lt;- qbeta((1-level)/2, a, b) # Lower limit U &lt;- qbeta((1+level)/2, a, b) # Upper limit return(c(L,U)) } cred.int(3.5,2.5,0.95) ## [1] 0.20941666 0.90560967 95%可信區間 \\((0.2094, 0.9056)\\) 告訴我們，參數 \\(\\theta\\in(0.2094, 0.9056)\\) 的概率是 \\(0.95\\)。 下面我們嘗試寫 Beta 分佈的其他統計量：均值，衆數，方差等。 # a, b: shape / super parameters MeanBeta &lt;- function(a,b) a/(a+b) ModeBeta &lt;- function(a,b) { m &lt;- ifelse(a&gt;1 &amp; b&gt;1, (a-1)/(a+b-2), NA) return(m) } VarianceBeta &lt;- function(a,b) (a*b)/((a+b)^2*(a+b+1)) # mean MeanBeta(3.5,2.5) ## [1] 0.58333333 # mode ModeBeta(3.5,2.5) ## [1] 0.625 # Variance VarianceBeta(3.5, 2.5) ## [1] 0.034722222 # SD sqrt(VarianceBeta(3.5, 2.5)) ## [1] 0.186339 42.5.2 Q2 假如數據還是 Q1 的數據，然而先驗概率讓我們認爲可能在 5 名受試對象中觀察到 1 次事件。 試求超參數 \\((a,b)\\) 滿足先驗概率的 Beta 分佈。(不止一組) 解 我們認爲最有可能發生 “5 名受試對象中觀察到 1 次事件” 的情況，那麼先驗概率的均值爲 \\(\\frac{a}{a+b}=0.2\\)。所以，在實數中有無數組超參數都可以用來模擬先驗概率分佈。例如 \\(a=1, b=4; a=10, b=40; a=100, b=400; a=0.317, b=1.268, \\cdots\\)。 假如觀察數據是 \\(n=5, r=1\\)，計算事後概率分佈及其均值，標準差。 解 先來嘗試寫一個計算貝葉斯二項分佈的方程： # binbayes function in R #------------------------------ # a, b: shape / super parameters # r : number of successes # n : number of trials binbayes &lt;- function(a, b, r, n) { prior &lt;- c(a, b, NA, MeanBeta(a,b), sqrt(VarianceBeta(a, b)), qbeta(0.025, a, b), qbeta(0.5, a, b), qbeta(0.975, a, b)) posterior &lt;- c(a+r, b+n-r, r/n, MeanBeta(a+r, b+n-r), sqrt(VarianceBeta(a+r, b+n-r)), qbeta(0.025, a+r, b+n-r), qbeta(0.5, a+r, b+n-r), qbeta(0.975, a+r, b+n-r)) out &lt;- rbind(prior, posterior) out &lt;- round(out, 4) colnames(out) &lt;- c(&quot;a&quot;,&quot;b&quot;,&quot;r/n&quot;,&quot;Mean&quot;, &quot;SD&quot;, &quot;2.5%&quot;, &quot;50%&quot;, &quot;97.5%&quot;) return(out) } # a=1, b=4, r=1, n=5 binbayes(1,4,1,5) ## a b r/n Mean SD 2.5% 50% 97.5% ## prior 1 4 NA 0.2 0.1633 0.0063 0.1591 0.6024 ## posterior 2 8 0.2 0.2 0.1206 0.0281 0.1796 0.4825 # a=10, b=40, r=1, n=5 binbayes(10,40,1,5) ## a b r/n Mean SD 2.5% 50% 97.5% ## prior 10 40 NA 0.2 0.0560 0.1024 0.1960 0.3202 ## posterior 11 44 0.2 0.2 0.0535 0.1063 0.1963 0.3143 通過繪製先驗概率分佈圖和事後概率分佈圖來比較二者的變化： # Prior vs posterior graphs # a,b : shape / super parameters # r : number of successes # n : number of trials graph.binbayes &lt;- function(a,b,r,n) { prior &lt;- Vectorize(function(theta) dbeta(theta, a,b)) posterior &lt;- Vectorize(function(theta) dbeta(theta, a+r, b+n-r)) YL &lt;- max(prior(seq(0.001,0.999,by=0.001)),posterior(seq(0.001,0.999,by=0.001))) curve(prior, xlab=~theta, ylab=&quot;Density&quot;, lwd=1, lty=2,n=10000,ylim=c(0,YL), frame.plot = FALSE) curve(posterior, xlab=~theta,lwd=2,lty = 1, add=T,n=10000) } graph.binbayes(1,4,1,5) 圖 42.9: Prior (dashed) Beta(1,4) vs. Posterior (cont.) Beta(2,8) graph.binbayes(10,40,1,5) 圖 42.10: Prior (dashed) Beta(10,40) vs. Posterior (cont.) Beta(11, 44) 我們可以很清楚的看見，先驗概率相同時，\\(\\text{Beta} (a,b)\\) 的超參數如果越大，先驗概率的分佈就越趨近與對稱圖形，且極大值也就越出現在均值的地方 (本例中是 \\(0.2\\))。而且也會使事後概率的 HPD (highest posterior density) 的區間更狹窄 (意爲對事後概率的預測越準確)，同時事後概率分佈也更加接近左右對稱。 42.5.3 Q3 我們事先估計某個事件在 \\(n=20\\) 名患者中發生的概率爲 \\(15\\%\\)。當實際觀察數據爲 \\(n=15,r=3\\) 時，計算相應的事後概率。 解 # because 15% events happened in 20 subjects, assuming prior Beta(a=3, b=17) # observed n=15, r=3 binbayes(3,17,3,15) ## a b r/n Mean SD 2.5% 50% 97.5% ## prior 3 17 NA 0.1500 0.0779 0.0338 0.1383 0.3314 ## posterior 6 29 0.2 0.1714 0.0628 0.0676 0.1651 0.3106 graph.binbayes(3,17,3,15) 圖 42.11: Prior (dashed) Beta(3,17) vs. Posterior (cont.) Beta(6,29) 試着繪製先驗概率服從 \\(\\text{Beta} (1,1)\\)，回憶之前本章開頭的圖 42.7，這個先驗概率的含義就是我們沒有任何背景知識，對數據完全陌生的情況： graph.binbayes(1,1,3,15) 圖 42.12: Prior (dashed) Beta(1,1) vs. Posterior (cont.) Beta(4,13) 42.5.4 Q4 試給出上面各題中參數 \\(\\theta\\) 落在 \\((0.1,0.25)\\) 之間的概率。 # function to calculate probabilities in a interval # a, b: super parameters # r : number of successes # n : number of trials # L : Lower limit of the probability interval # U : Upper limit of the probability interval prob.int &lt;- function(a,b,r,n,L,U){ prior0 &lt;- pbeta(U,a,b) - pbeta(L,a,b) posterior0 &lt;- pbeta(U,a+r,n-r+b) - pbeta(L,a+r,n-r+b) prob &lt;- as.matrix(c(prior0, posterior0)) prob &lt;- round(prob,4) colnames(prob) &lt;- paste(&quot;Probability of theta lies between the Interval&quot;, L, U) rownames(prob) &lt;- c(&quot;Prior&quot;,&quot;Posterior&quot;) return(prob) } # Prior Beta(0.317,1.286) n = 5, r=1 binbayes(0.317, 1.286, 1, 5) ## a b r/n Mean SD 2.5% 50% 97.5% ## prior 0.317 1.286 NA 0.1978 0.2469 0.000 0.0823 0.8516 ## posterior 1.317 5.286 0.2 0.1995 0.1449 0.013 0.1684 0.5493 prob.int(0.317, 1.286, 1, 5,0.1,0.25) ## Probability of theta lies between the Interval 0.1 0.25 ## Prior 0.1711 ## Posterior 0.3911 graph.binbayes(0.317, 1.286, 1, 5) 圖 42.13: Prior (dashed) Beta(0.317,1.286) vs. Posterior (cont.) Beta(1.317, 5.286) # Prior Beta(10,40) n = 5, r=1 binbayes(10, 40, 1, 5) ## a b r/n Mean SD 2.5% 50% 97.5% ## prior 10 40 NA 0.2 0.0560 0.1024 0.1960 0.3202 ## posterior 11 44 0.2 0.2 0.0535 0.1063 0.1963 0.3143 prob.int(10, 40, 1, 5,0.1,0.25) ## Probability of theta lies between the Interval 0.1 0.25 ## Prior 0.7951 ## Posterior 0.8099 所以在範圍固定的時候，事後概率分佈總是能夠比先驗概率分佈給出更高的累計概率。 42.5.5 Q5 一個臨牀試驗要進行兩個階段 (two phases)，第一階段我們觀察到 \\(10\\) 個患者中 \\(1\\) 個事件。第二階段，觀察到 \\(n=50, r=5\\)。 兩個階段都使用 \\(\\text{Beta}(1,1)\\) 作先驗概率。求兩個實驗階段參數 \\(\\theta&lt;0.1\\) 的概率。 # Phase I binbayes(1, 1, 1, 10) ## a b r/n Mean SD 2.5% 50% 97.5% ## prior 1 1 NA 0.5000 0.2887 0.0250 0.500 0.9750 ## posterior 2 10 0.1 0.1667 0.1034 0.0228 0.148 0.4128 prob.int(1,1,1,10,0,0.1) ## Probability of theta lies between the Interval 0 0.1 ## Prior 0.1000 ## Posterior 0.3026 graph.binbayes(1, 1, 1, 10) 圖 42.14: Prior (dashed) Beta(1,1) vs. Posterior (cont.) Beta(2, 10) # Phase II binbayes(1, 1, 5, 50) ## a b r/n Mean SD 2.5% 50% 97.5% ## prior 1 1 NA 0.5000 0.2887 0.0250 0.5000 0.9750 ## posterior 6 46 0.1 0.1154 0.0439 0.0444 0.1105 0.2141 prob.int(1,1,5,50,0,0.1) ## Probability of theta lies between the Interval 0 0.1 ## Prior 0.1000 ## Posterior 0.4024 graph.binbayes(1, 1, 5, 50) 圖 42.15: Prior (dashed) Beta(1,1) vs. Posterior (cont.) Beta(6, 46) 繼續使用先驗概率分佈 \\(\\text{Beta}(1,1)\\)，合併兩個實驗階段，求此時的事後概率分佈，以及參數 \\(\\theta&lt;0.1\\) 的概率。 # Combining both phases binbayes(1, 1, 6, 60) ## a b r/n Mean SD 2.5% 50% 97.5% ## prior 1 1 NA 0.5000 0.2887 0.0250 0.5000 0.9750 ## posterior 7 55 0.1 0.1129 0.0399 0.0474 0.1087 0.2019 prob.int(1,1,6,60,0,0.1) ## Probability of theta lies between the Interval 0 0.1 ## Prior 0.1000 ## Posterior 0.4105 graph.binbayes(1, 1, 6, 60) 圖 42.16: Prior (dashed) Beta(1,1) vs. Posterior (cont.) Beta(7, 55) 用第一階段的實驗結果做第二階段實驗的先驗概率分佈，再計算事後概率分佈，以及 \\(\\theta&lt;0.1\\) 的概率。 # Using Phase I results as a prior for Phase II binbayes(2, 10, 5, 50) ## a b r/n Mean SD 2.5% 50% 97.5% ## prior 2 10 NA 0.1667 0.1034 0.0228 0.1480 0.4128 ## posterior 7 55 0.1 0.1129 0.0399 0.0474 0.1087 0.2019 prob.int(2,10,5,50,0,0.1) ## Probability of theta lies between the Interval 0 0.1 ## Prior 0.3026 ## Posterior 0.4105 graph.binbayes(2, 10, 5, 50) 圖 42.17: Prior (dashed) Beta(2,10) vs. Posterior (cont.) Beta(7, 55) 第2，3兩個小問題提示我們，無論是將第一階段實驗結果作爲第二階段實驗的先驗假設還是將兩次實驗合併，最終的結果是不會改變的。Both approaches are equivalent. 42.5.6 Q6 藥物 A 和藥物 B 都被批准用於治療某種疾病。在 5000 例病例中使用藥物 A，發現有 3 人發生了不良副作用。在另外 7000 例病例中使用藥物 B，發現只有 1 例發生了副作用。 先使用單一分佈作爲先驗概率 (uniform prior: \\(\\text{Beta}(1,1)\\))。求藥物 A 和藥物 B 各自發生不良反應的事後概率。 藥物 A # Drug A binbayes(1,1, 3, 5000) ## a b r/n Mean SD 2.5% 50% 97.5% ## prior 1 1 NA 0.5000 0.2887 0.0250 0.5000 0.9750 ## posterior 4 4998 0.0006 0.0008 0.0004 0.0002 0.0007 0.0018 圖 42.18: Prior (dashed) Beta(1,1) vs. Posterior (cont.) Beta(4, 4998) 藥物 B # Drug B binbayes(1,1, 1, 7000) ## a b r/n Mean SD 2.5% 50% 97.5% ## prior 1 1 NA 0.5000 0.2887 0.025 0.5000 0.9750 ## posterior 2 7000 0.0001 0.0003 0.0002 0.000 0.0002 0.0008 圖 42.19: Prior (dashed) Beta(1,1) vs. Posterior (cont.) Beta(2, 7000) 使用 \\(\\text{Beta}(0.00001,0.00001)\\) 作爲先驗概率，重複上面的計算 藥物 A # Drug A binbayes(0.00001, 0.00001, 3, 5000) ## a b r/n Mean SD 2.5% 50% 97.5% ## prior 0 0 NA 0.5000 0.5000 0.0000 0.5000 1.0000 ## posterior 3 4997 0.0006 0.0006 0.0003 0.0001 0.0005 0.0014 圖 42.20: Prior (dashed) Beta(0.00001,0.00001) vs. Posterior (cont.) Beta(3, 4997) 藥物 B # Drug B binbayes(0.00001, 0.00001, 1, 7000) ## a b r/n Mean SD 2.5% 50% 97.5% ## prior 0 0 NA 0.5000 0.5000 0 0.5000 1.0000 ## posterior 1 6999 0.0001 0.0001 0.0001 0 0.0001 0.0005 圖 42.21: Prior (dashed) Beta(0.00001,0.00001) vs. Posterior (cont.) Beta(1, 6999) 現在使用概率論的計算信賴區間 (confidence intervals) 的方法，求上面數據的精確二項分佈 95% 信賴區間。之前兩問中使用的哪個先驗概率更加接近概率論算法？ #------------------------------------------------ # Binomial confidence intervals #------------------------------------------------ # r : number of successes # n : number of trials # level: confidence level binom.confint &lt;- function(r,n,level){ p &lt;- r/n conf &lt;- as.vector(binom.test(r,n,conf.level = 0.95)$conf.int) out &lt;- c(p,conf) out &lt;- as.matrix(t(round(out,8))) colnames(out) &lt;- c(&quot;MLE&quot;, &quot;L&quot;, &quot;U&quot;) return(out) } # Drug A binom.confint(3,5000,0.95) ## MLE L U ## [1,] 0.0006 0.00012375 0.00175244 # Drug B binom.confint(1,7000,0.95) ## MLE L U ## [1,] 0.00014286 3.62e-06 0.00079569 明顯可以看到，先驗概率使用 \\(\\text{Beta}(0.00001,0.00001)\\) 時，事後概率的均值和可信區間的下限值更接近概率論算法。使用先驗概率 \\(\\text{Beta}(1,1)\\) 時，事後概率的可信區間的上限值更接近概率論算法。 如果需要你來下結論說，藥物 B 和藥物 A 哪個更加安全？ 求 \\(\\text{Pr}(\\theta_B &lt; \\theta_A|data)\\)。 解 貝葉斯 在計算機的輔助下，這是一個十分簡單的計算。我們從各自的事後分佈中採集大量隨機樣本，然後求 \\(\\theta_B-\\theta_A\\) 然後看有多少比例這個數值是小於零的就可以得出結論： # Simulating from each posterior set.seed(1001) post.thetaA &lt;- rbeta(1000000, 3, 4997) post.thetaB &lt;- rbeta(1000000, 1, 6999) # Taking the differences theta.diff0 &lt;- post.thetaB - post.thetaA # Histogram of the differences hist(theta.diff0,probability = TRUE, breaks = 50, xlab=expression(theta[B] - theta[A]),main = &quot;&quot;) abline(v=0, col=&quot;red&quot;, lwd=2) box() 圖 42.22: Histogram of Drug B - Drug A 也可以不採用直方圖而是使用連續曲線： # Continuous version plot(density(theta.diff0), xlab=expression(theta[B] - theta[A]), lwd=2, main = &quot;&quot;, frame=FALSE) abline(v=0, col=&quot;red&quot;, lwd=2) box() 圖 42.23: Density of Drug B - Drug A 計算 \\(\\text{Pr}(\\theta_B &lt; \\theta_A|data)\\) 和可信區間： # P(theta[B] &lt; theta[A] | Data) mean(theta.diff0 &lt;0) ## [1] 0.927829 # Credible interval for theta[B] - theta[A] quantile(theta.diff0, c(0.05,0.95)) ## 5% 95% ## -0.001142862872 0.000052484912 quantile(theta.diff0, c(0.10,0.90)) ## 10% 90% ## -0.00094605885 -0.00004674857 # Simulating from each posterior set.seed(1001) post.thetaA &lt;- rbeta(1000000, 4, 4998) post.thetaB &lt;- rbeta(1000000, 2, 7000) # Taking the differences theta.diff1 &lt;- post.thetaB - post.thetaA hist(theta.diff1,probability = TRUE, breaks = 50, xlab=expression(theta[B] - theta[A]),main = &quot;&quot;) abline(v=0, col=&quot;red&quot;, lwd=2) box() 圖 42.24: Histogram of Drug B - Drug A # Continuous version plot(density(theta.diff1), xlab=expression(theta[B] - theta[A]), lwd=2,main = &quot;&quot;) abline(v=0, col=&quot;red&quot;, lwd=2) box() 圖 42.25: Density of Drug B - Drug A 計算 \\(\\text{Pr}(\\theta_B &lt; \\theta_A|data)\\) 和可信區間： # P(theta[B] &lt; theta[A] | Data) mean(theta.diff1 &lt;0) ## [1] 0.899677 # Credible interval for theta[B] - theta[A] quantile(theta.diff1, c(0.05,0.95)) ## 5% 95% ## -0.00131289334 0.00013423126 quantile(theta.diff1, c(0.10,0.90)) ## 10% 90% ## -1.0955252e-03 6.5146438e-07 概率論算法 # Normal Approximation diff_mle &lt;- (1/7000)-(3/5000) diff_se &lt;- sqrt( 1*6999/7000^3 + 3*4997/5000^3 ) U &lt;- diff_mle + 1.28*diff_se L &lt;- diff_mle - 1.28*diff_se print(c(U,L)) ## [1] 0.000022358961 -0.000936644675 norm.app &lt;- Vectorize(function(x) dnorm(x,diff_mle,diff_se)) # Comparison plot(density(theta.diff0), xlab=expression(theta[B] - theta[A]), xlim= c(-0.002,0.001), lwd=2, col=&quot;red&quot;,main = &quot;&quot;) points(density(theta.diff1), xlab=expression(theta[B] - theta[A]), type = &quot;l&quot;, col = &quot;blue&quot;, lwd=2) curve(norm.app,-0.0045,0.002,add=T,lwd=2,n=10000) legend(-0.0021, 1300, c(&quot;Posterior with B(0,0)&quot;,&quot;Posterior with B(1,1)&quot;,&quot;Frequentist Normal App&quot;), col=c(&quot;red&quot;,&quot;blue&quot;,&quot;black&quot;), text.col = &quot;black&quot;, lty = c(1, 1, 1), lwd = c(2,2,2), merge = TRUE, bg = &quot;gray90&quot;,cex=0.8) box() 圖 42.26: Comparison of different prior distribution and frequentist approximation "],["normal-distr.html", "第 43 章 貝葉斯理論在正態分布數據中的應用 Normal distribution applying Bayes’ Theorem 43.1 事後概率的總結方法 43.2 貝葉斯統計推斷中的正態分布 43.3 事後預測分佈 Posterior predictive distribution", " 第 43 章 貝葉斯理論在正態分布數據中的應用 Normal distribution applying Bayes’ Theorem … every now and then delightful ideas spring to view; the idea that we shall all be Bayesian by 2020… – D.V. Lindley (1973)4 43.1 事後概率的總結方法 在貝葉斯統計推斷中，如何總結和報告計算獲得的事後概率分布呢？首先想到的大概是均值 (mean)，因爲均值不論在貝葉斯還是傳統的概率論統計學中都是十分有效的描述數據的一個指標，特別是當後驗概率分布本身是左右對稱的時候。事實上，類似概率論統計學觀點，貝葉斯學派裏中心極限定理同樣是適用的。也就是說，無論先驗概率是怎樣的分布，當收集的樣本足夠多，其事後概率的分布均可被認爲趨近於正態分布: 貝葉斯中心極限定理 Bayesian Central limit theorem: \\[ (\\frac{\\theta - \\text{E}[\\theta|y]}{\\sqrt{\\text{Var}(\\theta|y)}}) \\rightarrow N(0,1) \\] 貝葉斯後驗概率獨立性定理 Berstein-von Mises theorem: 這條定理說的是，當樣本量十分巨大時，後驗概率其實和 “我們認爲” 的先驗概率之間是相互獨立的。也就是說，數據足夠多的時候，似然本身起到了最主導的作用，先驗概率的取值變得不再那麼重要。 所以，當你擁有足夠多的數據的時候，完全可以理直氣壯地直接使用這個中心極限定理，用均值方差就能準確地描述事後概率分布。 除了均值和方差可以用於描述事後概率分布。要記住，在寫報告的時候，我們應當先把事後概率分布給繪制出來，看看實際的圖形是怎樣的，計算一下其四分位數都是些怎樣的數值，如果這些描述提示計算獲得的事後概率分布不能被認爲是左右對稱的時候，僅僅只匯報均值和方差就顯得有些偏頗。如果事後概率分布的密度分布圖告訴我們它並不能用正態分布來近似的話，我們就應該報告包括均值在內的衆數，中位數，以及其他的百分位數，用於更加精確地描述事後概率分布。 除此之外，我們還可以報告可信區間 (credible intervals)。這個可信區間，和信賴區間相似地，是一個有上限和下限的範圍。用 \\(\\alpha \\in (0,1)\\) 表示我們的可信程度，可信區間 \\(I\\) 的上限和下線分別用 \\(U, L\\) 來表示，那麼用某個參數 \\(\\theta\\) 描述的事後概率，以及 \\(\\alpha\\) 之間的關系就是: \\[ \\text{Pr}(\\theta \\in I | \\text{Data}) = \\int_L^U\\pi(\\theta | \\text{Data}) = \\alpha \\] 但是值得注意的是，和概率論信賴區間的 “一次實驗只計算一個信賴區間” 不同，貝葉斯可以計算完整的事後概率分布曲線，所以整個分布上包含了 95% 曲線下面積我們其實可以獲得無數個不同長度大小的可信區間。在這些許許多多的可信區間裏面，我們可以找到一個上下限之間距離最短的可信區間，名之爲最高密度事後概率區間 (the Highest Posterior Density, HPD interval)。如果事後概率分布是標準正態分布，那麼其 95% HPD 區間就是 \\((-1.96, 1.96)\\)。 43.2 貝葉斯統計推斷中的正態分布 本章節我們只考慮最最簡單的情形，方差已知的正態分布數據。在這裏，只有一個參數–均值 \\(\\mu\\) ，且我們用另一個方式來標記方差: \\(y \\sim N(\\mu, \\sigma^2 = \\tau^{-1})\\)。如果參數 \\(\\mu\\) 的先驗概率分布的均值是 \\(\\nu\\)，精確度 (precision, 等同於方差的倒數) 是 \\(\\gamma\\)。 那麼應用貝葉斯定理推導有: \\[ \\begin{aligned} \\text{Posterior} &amp; = \\text{Prior}\\times\\text{likelihood} \\\\ \\pi(\\mu|y) &amp; = \\sqrt{\\frac{\\gamma}{2\\pi}}\\text{exp}\\{ -\\frac{\\gamma}{2}(\\mu - \\nu)^2 \\} \\times\\sqrt{\\frac{\\tau}{2\\pi}}\\text{exp}\\{ -\\frac{\\tau}{2}(y - \\mu)^2 \\} \\\\ &amp; \\propto \\text{exp}\\{ -\\frac{\\tau}{2}(y - \\mu)^2 - \\frac{\\gamma}{2}(\\mu - \\nu)^2\\} \\\\ &amp; \\propto \\text{exp}\\{ -\\frac{1}{2}[(\\tau + \\gamma)\\mu^2 - 2(\\tau y + \\nu\\gamma)\\mu] \\} \\\\ &amp; \\propto \\text{exp}\\{ -\\frac{(\\tau+\\gamma)}{2}(\\mu - \\frac{\\tau y + \\nu\\gamma}{\\tau + \\gamma})^2 \\} \\\\ &amp; \\propto N\\{ \\frac{\\tau y+ \\gamma\\nu}{\\tau + \\gamma}, \\text{precision} = (\\tau + \\gamma) \\} \\end{aligned} \\tag{43.1} \\] 可以看出，正態分布本身是自己的共軛分布 (先驗概率分布是正態分布的，事後概率分布也服從正態分布)。事後概率分布的精確度 (precision) 就等於先驗概率的精確度和似然方程的精確度之和。其均值則等於數據本身的均值和先驗概率均值乘以權重之和，其各自的權重分別是彼此精確度在兩個精確度之和中所佔的比例。 現在假設手頭我們收集到的數據服從標準正態分布 \\(N(\\mu=0,\\sigma^2 = \\tau^{-1} = 1)\\)，圖 43.1 展示了四種似然方程，先驗概率，和事後概率分布的組合圖。 圖 43.1 的左上角中，先驗概率均值，精確度分別是 \\(\\nu = 0, \\gamma = 1/16\\) (精確度 \\(1/16\\) 等同於標準差等於 \\(4\\))。可以看出這個先驗概率幾乎對數據提供的似然方程毫無影響。事後概率分布計算的 HPD 可信區間，將會和數據提供的似然方程計算獲得的信賴區間十分地接近 (因爲他們二者的圖形幾乎是重疊的，不過要記得他們各自的含義不同)。 圖 43.1 的右上角中，先驗概率均值被設定爲 \\(\\nu = 2\\)，精確度不變。可以確認就是和左上角圖顯示的類似，此時的先驗概率對事後概率的分布影響十分有限。 圖 43.1 的左下角中，先驗概率分布的均值和精確度被設定爲 \\(\\nu = 2, \\gamma = 1\\)，精確度變得和似然方程是相同的，所以，事後概率分布的均值，精確度分別是 \\(1, 2\\)，所以此時事後概率分布的標準差是 \\(1/\\sqrt{2}\\)。由於先驗概率分布和數據的似然方程提供的信息旗鼓相當，事後概率分布就落在了二者之間，但是值得注意的是，事後概率分布估計的精確度比似然方程本身好了一些 (數據結合了先驗概率信息，所以用於估計的信息量增加，精確度自然就增加)。 圖 43.1 的右下角中，先驗概率分布變成了主導，因爲它的均值和精確度分別是 \\(\\nu = 3, \\gamma = 8\\)。可以看到事後概率分布由於先驗概率分布佔據了主導而被先驗概率分布拉向了右邊，此時的數據提供的信息相對先驗概率分布的信息權重較低。 圖 43.1: Posterior for the normal distribution, when likelihood is N(0,1) with four different priors 43.2.1 \\(n\\) independent identically distributed observations 假設觀察數據爲: \\[ y_i, \\cdots, y_n \\stackrel{i.i.d}{\\sim} N(\\mu, \\sigma^2 = \\frac{1}{\\tau}) \\] \\(\\tau\\) 依然被定義爲精確度。那麼這組數據的均值的時候概率分布，可以有兩種計算手段: 利用公式 (43.1): 根據正態分布的性質 \\(\\bar{y} \\sim N(\\mu, \\frac{\\sigma^2}{n} = \\frac{1}{n\\tau})\\)，我們可以直接計算均值的事後概率分布是均值爲 \\(\\frac{n\\tau\\bar{y} + \\gamma\\nu}{n\\tau + \\gamma}\\)，精確度爲 \\(n\\tau + \\gamma\\) 的正態分布; 利用觀察數據推導: \\[ \\begin{aligned} y_i, \\cdots, y_n &amp; \\stackrel{i.i.d}{\\sim} N(\\mu, \\sigma^2=\\frac{1}{\\tau}) \\\\ \\Rightarrow \\text{The likelihood: } &amp; (\\frac{\\tau}{2\\pi})^{\\frac{n}{2}}\\text{exp}\\{ -\\frac{\\tau}{2}\\sum_{i=1}^n(y_i - \\mu)^2 \\} \\\\ \\because \\sum_{i=1}^n(y_i - \\mu)^2 &amp; = \\sum_{i=1}^n(y_i - \\bar{y} + \\bar{y} - \\mu)^2 \\\\ &amp; = \\sum_{i=1}^n(y_i - \\bar{y})^2 + n(\\bar{y} - \\mu)^2 \\\\ &amp; = (n-1)s^2 + n(\\bar{y} - \\mu)^2 \\\\ \\text{Where } s^2 &amp; = \\frac{(y_i - \\bar{y})^2}{n-1} \\\\ \\Rightarrow \\text{The } &amp; \\text{likelihood become: } \\\\ &amp; (\\frac{\\tau}{2\\pi})^{\\frac{n}{2}}\\text{exp}\\{ -\\frac{\\tau}{2}[(n-1)s^2 + n(\\bar{y} - \\mu)^2] \\} \\\\ \\text{Ignoring } &amp; \\text{terms without } \\mu \\\\ &amp; \\text{exp} \\{ -\\frac{n\\tau}{2}(\\bar{y} - \\mu)^2 \\} \\\\ \\Rightarrow \\text{Posterior } &amp; \\text{mean distribution: }\\\\ &amp; N\\{ \\frac{n\\tau\\bar{y} + \\gamma\\nu}{n\\tau + \\gamma}, \\text{precision} = (n\\tau + \\gamma) \\} \\end{aligned} \\] 43.3 事後預測分佈 Posterior predictive distribution 對於一個接下來將要被收集數據的預測，\\(\\tilde{y}\\)。在已經有的數據的條件下，它的條件分佈是 \\(p(\\tilde{y} | y)\\)。可以通過積分來運算： \\[ \\begin{aligned} p(\\tilde{y} | y) &amp; = \\int p(\\tilde{y|}\\theta) p(\\theta | y) d\\theta \\\\ &amp; = \\int \\exp(-\\frac{1}{2\\sigma^2} (\\tilde{y} - \\theta)^2) \\exp(-\\frac{1}{2\\tau_1^2}(\\theta - \\mu_1^2))d\\theta \\end{aligned} \\] 其中， \\(\\mu_1 = \\frac{\\frac{1}{\\tau_0^2}\\mu_0 + \\frac{1}{\\sigma^2}y}{\\frac{1}{\\tau_0^2} + \\frac{1}{\\sigma^2}}\\) \\(\\frac{1}{\\tau_1^2} = \\frac{1}{\\tau_0^2} + \\frac{1}{\\sigma^2}\\) 我們又可以根據公式 (42.3) 和 (42.4) 來進一步推導預測變量在已有的觀察數據的基礎上的均值和方差： \\[ \\begin{aligned} E(\\tilde{y}|y) &amp; = E(E(\\tilde{y}|\\theta, y) | y) \\\\ \\because &amp; \\tilde{y}\\perp y \\text{ new data is independent from the data collected} \\\\ &amp; = E(E(\\tilde{y}|\\theta) | y) \\\\ \\because &amp; E(\\tilde{y} | \\theta) = \\theta \\\\ &amp; = E(\\theta |y) = \\mu_1 \\end{aligned} \\] \\[ \\begin{aligned} \\text{var}(\\tilde{y} | y) &amp; = E(\\text{var}(\\tilde{y}|\\theta , y) | y) + \\text{var}(E(\\tilde{y | \\theta, y}) | y) \\\\ &amp; = E(\\sigma^2 | y) + \\text{var}(\\theta | y) \\\\ &amp; = \\sigma^2 + \\tau_1^2 \\end{aligned} \\] 也就是說我們希望預測的新數據的 \\(\\tilde{y}\\) 的均值等於 \\(\\theta\\) 的事後概率分佈的均值 \\(\\mu_1\\)，方差則由兩部分構成，一是模型方差 \\(\\sigma^2\\)，一是事後概率分佈的方差 \\(\\tau_1^2\\)。 上述過程很容易被擴展到有多個獨立同分佈 (independent and identically distributed) 觀察變量 \\(y = (y_1, \\dots, y_n)\\) 時的情況： \\[ \\begin{aligned} p(\\theta | y) &amp; \\propto p(\\theta)p(y | \\theta) \\\\ &amp; = p(\\theta) \\prod_{i = 1}^n p(y_i | \\theta) \\\\ &amp; = \\exp(-\\frac{1}{2\\tau_0^2} (\\theta - \\mu_0)^2)\\prod_{i = 1}^n \\exp(-\\frac{1}{2\\sigma^2}(y_i - \\theta)^2) \\\\ &amp; = \\exp(-\\frac{1}{2}(\\frac{1}{\\tau_0^2}(\\theta - \\mu_0)^2 + \\frac{1}{\\sigma^2}\\prod_{i =1}^n(y_i - \\theta)^2)) \\end{aligned} \\] 事實上根據獨立同分佈正（常）態分佈數據的特徵可知，事後概率分佈此時取決於這 \\(n\\) 個獨立同分佈樣本的均值 \\(\\bar{y} = \\frac{1}{n}\\sum y_i\\) 本身。於是有 \\(\\bar{y} | \\theta, \\sigma^2 \\sim N(\\theta, \\sigma^2/n)\\)，此時把 \\(\\bar{y}\\) 本身作為一個單一觀察變量的模型即可獲得： \\[ p(\\theta | y_1, \\dots, y_n) = p(\\theta | \\bar{y}) = N(\\theta | \\mu_n, \\tau^2_n) \\] 其中， \\[ \\mu_n = \\frac{\\frac{1}{\\tau_0^2}\\mu_0 + \\frac{n}{\\sigma^2}\\bar{y}}{\\frac{1}{\\tau_0^2} + \\frac{n}{\\sigma^2}} \\text{ and } \\frac{1}{\\tau_n^2} = \\frac{1}{\\tau_0^2} + \\frac{n}{\\sigma^2} \\] References "],["其他典型的單一參數模型-other-standard-single-parameter-models.html", "第 44 章 其他典型的單一參數模型 Other standard single-parameter models 44.1 正（常）態分佈僅均值已知（方差未知） Normal distribution with known mean but unknown variance 44.2 泊松分佈模型的貝葉斯思路 Poisson distribution model under Bayesian framework 44.3 泊松模型的其他表達形式 poisson model parameterized in terms of rate and exposure", " 第 44 章 其他典型的單一參數模型 Other standard single-parameter models 44.1 正（常）態分佈僅均值已知（方差未知） Normal distribution with known mean but unknown variance 對於獨立同分佈 (i.i.d) 數據 \\(y_1, y_2, \\dots, y_n\\) 如果它服從均值 \\(\\theta\\) 已知，但方差未知的正（常）態分佈，\\(p(y | \\theta, \\sigma^2) = N(y | \\theta, \\sigma^2)\\)，那麼它的似然 likelihood 可以寫作： \\[ \\begin{aligned} p(y | \\sigma^2) &amp; \\propto (\\frac{1}{\\sqrt{\\sigma^2}})^n \\exp(-\\frac{1}{2\\sigma^2}\\sum_{i = 1}^n(y_i - \\theta)^2) \\\\ &amp; = (\\sigma^2)^{ - \\frac{n}{2}} \\exp(-\\frac{n}{2\\sigma^2}v) \\end{aligned} \\] 其中， \\[ v = \\frac{1}{n}\\sum_{i =1}^n(y_i - \\theta)^2 \\] 是該未知方差的充分統計量 (sufficient statistic)。 這個似然函數對應的共軛先驗概率分佈是伽馬負分佈 (inverse-gamma distribution) \\[ p(\\sigma^2) \\propto (\\sigma^2)^{-(\\alpha + 1 )}\\exp(-\\beta/{\\sigma^2}) \\] 其超參數是 \\((\\alpha, \\beta)\\)。 更加方便的是，我們使用伽馬負分佈的近親– 縮放比例為 \\(\\sigma_0^2\\)，自由度為 \\(\\nu\\) 卡方負分佈 (inverse-\\(\\chi^2\\))。也就是說，我們可以使用 \\(\\sigma^2 \\sim \\text{Inv-}\\chi^2(\\nu_0, \\sigma_0^2)\\) 作未知方差的先驗概率密度。由此，我們可以獲得未知方差的事後概率分佈： \\[ \\begin{aligned} p(\\sigma^2 |y) &amp; \\propto p(\\sigma^2)\\times p(y | \\sigma^2) \\\\ &amp; \\propto (\\frac{\\sigma_0^2}{\\sigma^2})^{\\frac{\\nu_0}{2} + 1} \\exp\\left( - \\frac{\\nu_0\\sigma_0^2}{2\\sigma^2}\\right) \\times (\\sigma^2)^{ - \\frac{n}{2}} \\exp(-\\frac{n}{2\\sigma^2}v) \\\\ &amp; \\propto (\\sigma^2)^{-(\\frac{n + \\nu_0}{2} +1)}\\exp\\left( -\\frac{1}{2\\sigma^2}(\\nu_0\\sigma_0^2 + n v) \\right) \\\\ \\Rightarrow \\sigma^2|y &amp; \\sim \\text{Inv-}\\chi^2\\left(n + \\nu_0, \\frac{\\nu_0\\sigma_0^2 + nv}{n + \\nu_0}\\right) \\end{aligned} \\] 所以你看見未知方差的事後概率分佈在使用了對應的縮放卡方負分佈(scaled inverse-\\(\\chi^2\\))作先驗概率分佈之後獲得的事後概率分佈依然還是一個縮放卡方負分佈，更新後的參數中，自由度是先驗概率分佈的自由度和觀測數據自由度之和，縮放參數是先驗概率分佈的縮放比例和觀測數據的縮放比例的權重之和。 44.2 泊松分佈模型的貝葉斯思路 Poisson distribution model under Bayesian framework 泊松分佈是一種常見的離散分佈，其特徵詳見 (Chapter 6)。對單一觀察對象 \\(y\\) 來說，它如果服從泊松分佈，他的概率計算方法為： \\[ p(y|\\theta) = \\frac{\\theta^y e^{-\\theta}}{y !} \\text{, for } y = 0, 1, 2, \\dots \\] 那對於一組來自泊松分佈的獨立同分佈數據來說，它的似然函數 likelihood 就是： \\[ \\begin{aligned} p(y | \\theta) &amp; = \\prod_{i = 1}^n \\frac{1}{y_i!} \\theta^{y_i} e^{-\\theta} \\\\ &amp; \\propto \\theta^{t(y)}e^{-n\\theta} \\end{aligned} \\] 其中，\\(t(y) = \\sum_{i = 1}^n y_i\\) 是上述似然函數的充分統計量 (sufficient statistic)。 上述似然函數可以改寫成指數的形式： \\[ p(y|\\theta) \\propto e^{-n\\theta} e^{t(y) \\log\\theta} \\] 仔細觀察可以判斷，它的自然共軛先驗概率分佈是超參數 (hyperparameters) 為 \\((\\eta, \\nu)\\) 的函數： \\[ p(\\theta) \\propto (e^{-\\theta})^\\eta e^{\\nu \\log\\theta} \\] 或者從另一個角度來看這個似然函數，它的形式是 \\(\\theta^a e^{-b\\theta}\\)，所以它對應的先驗概率函數也最好是相似的結構：\\(p(\\theta) \\propto \\theta^A e^{-B\\theta}\\)。如果說你熟悉伽馬分佈 Gamma distribution，可能一眼就看出了它就是泊松分佈似然的先驗概率函數的最佳選擇： \\[ p(\\theta) \\propto e^{-\\beta \\theta} \\theta^{\\alpha - 1} \\] 這個伽馬分佈的概率密度函數的超參數是 \\(\\Gamma(\\alpha, \\beta)\\)。比較似然函數和這個伽馬分佈構成的先驗概率分佈函數，不難看出，他們結合之後的事後概率分佈是也是一個 \\(\\Gamma\\) 分佈，它更新以後的參數分別是 \\(\\alpha + n\\bar{y}, \\beta + n\\)： \\[ \\theta | y \\sim \\text{Gamma} (\\alpha + n\\bar{y}, \\beta + n) \\] 由於泊松分佈似然，伽馬分佈的概率密度函數都是閉合式可以有算數解的。它們二者結合之後可以用來計算並獲取整個數據的邊際分佈 (marginal distribution) \\(p(y)\\)，當只有一個觀察變量時： \\[ \\begin{aligned} p(y) &amp; = \\frac{p(y | \\theta) p(\\theta)}{p(\\theta | y)} \\\\ &amp; = \\frac{\\text{Poisson}(y | \\theta) \\text{Gamma}(\\theta | \\alpha, \\beta)}{\\text{Gamma}(\\theta | \\alpha + y, \\beta + 1)} \\\\ &amp; = \\frac{\\frac{1}{y !}\\theta^y e^{-\\theta} \\times \\frac{1}{\\Gamma(\\alpha)}\\frac{(\\beta\\theta)^\\alpha}{\\theta}e^{-\\beta\\theta}}{\\frac{1}{\\Gamma(\\alpha + y)}\\frac{[(1 + \\beta)\\theta]^{\\alpha +y} e^{-(1 + \\beta)\\theta}}{\\theta}} \\\\ &amp; = \\frac{\\Gamma(\\alpha + y) \\beta^\\alpha}{\\Gamma(\\alpha) y! (1 + \\beta)^{\\alpha + y}} \\end{aligned} \\] 於是，上面這個邊際分佈函數可以再次變形為： \\[ p(y) = {\\alpha + y -1\\choose \\alpha -1}\\left( \\frac{\\beta}{\\beta + 1} \\right)^\\alpha \\left( \\frac{1}{\\beta + 1} \\right)^y \\] 這就是大名鼎鼎的負二項分佈的概率函數(negative binomial density)。 上面的推導過程同時也證明了，負二項分佈其實是泊松分佈和伽馬分佈的混合體，其中泊松分佈中的參數 \\(\\theta\\) 是來自一個參數為 \\(\\alpha, \\beta\\) 的伽馬分佈。 \\[ \\text{Neg-bin}(y | \\alpha, \\beta) = \\int \\text{Poisson}(y | \\theta) \\text{Gamma}(\\theta | \\alpha, \\beta) d\\theta \\] 44.3 泊松模型的其他表達形式 poisson model parameterized in terms of rate and exposure 在許多流行病學的應用中，大家可能更加熟悉的泊松分佈模型是下面的表達方式（參考 Chapter 12.6）： \\[ y_i \\sim \\text{Poisson}(x_i \\theta) \\] 其中你可能熟悉的解釋是上述模型中的 \\(\\theta\\) 是某些事件（如死亡或新發生疾病的）發生率 (rate)。\\(x_i\\) 則是每一名觀察對象的觀察時間，也就是一個非負的解釋變量 (positive explanatory variable)。 那麼這個模型的似然函數 likelihood 可以表達為： \\[ p(y | \\theta) \\propto \\theta^{\\sum_i y_i} e^{-(\\sum_i x_i)\\theta } \\] 類似地，伽馬分佈也可以作它的共軛先驗概率分佈， \\[ \\theta \\sim \\text{Gamma}(\\alpha, \\beta) \\] 獲得的事後概率分佈的參數也一樣被更新： \\[ \\theta | y \\sim \\text{Gamma}\\left( \\alpha + \\sum_{i = 1}^n y_i , \\beta + \\sum_{i = 1}^nx_i \\right) \\] "],["多參數模型-introduction-to-multiparameter-models.html", "第 45 章 多參數模型 Introduction to multiparameter models 45.1 把不需要的噪音參數平均出去 Averaging over ‘nuisance parameters’ 45.2 未知均值也未知方差的正（常）態分佈數據 normal data with unknown mean and variance 45.3 R 演示 正常態數據但均值方差均未知 45.4 R 演示 分析二進制數據 (BDA3 P.74)", " 第 45 章 多參數模型 Introduction to multiparameter models 45.1 把不需要的噪音參數平均出去 Averaging over ‘nuisance parameters’ 從數學上表達聯合事後分佈 (joint posterior distribution) 和邊際事後分佈 (marginal posterior distribution) 其實不困難，可以想像我們想要了解的參數 \\(\\theta\\) 其實是有兩個部分的，用 \\(\\theta = (\\theta_1, \\theta_2)\\) 表示。更進一步想像，我們其實真正只對這兩部分參數中的其中一個 \\(\\theta_1\\) 感興趣。那麼另一個就是所謂的“噪音參數 nuisance parameter”。例如我們在使用正（常）態分佈數據時，有兩個未知的參數，均值 \\(\\mu\\)，和方差 \\(\\sigma^2\\)。但是實際上有時候我們可能只對其中一個感興趣，更多時候僅僅是均值，也有的時候是方差。 \\[ y | \\mu, \\sigma^2 \\sim N(\\mu, \\sigma^2) \\] 那麼我們就需要尋找，其中一部分的參數在收集到的數據的條件下的分佈，\\(p(\\theta_1 | y)\\)。 這裡需要仔細解釋一下如何求上述的數據條件參數分佈。當給定了數據 \\(y\\)，通過微分思想，可以認為，未知參數 \\(\\theta\\) 的期望值（或均值），可以通過在 \\(y\\) 的每一個小段的區間上的值的均值來獲得： \\[ E_{p(\\theta | y)}[\\theta] \\approx \\frac{1}{S}\\sum_{S = 1}^S \\theta^{(S)} \\] 當這個區間 \\(S \\rightarrow 0\\)，也就是趨近於零時，上面的式子就轉化成了一個積分方程式： \\[ E_{p(\\theta | y)}[\\theta] \\approx \\frac{1}{S}\\sum_{S = 1}^S \\theta^{(S)} = \\int\\theta p(\\theta | y) \\] 那麼當參數不只一個的時候，它們的事後聯合分佈 (Joint posterior distribution)，可以認為是： \\[ p(\\theta_1, \\theta_2 | y) \\propto p(y | \\theta_1, \\theta_2) p(\\theta_1, \\theta_2) \\] 之後的任務是要把 \\(p(\\theta_1, \\theta_2 | y)\\) 中的噪音參數 \\(\\theta_2\\) 通過積分的方法去除掉。類似地，使用微分思想，我們把 \\(p(\\theta_2|y)\\) 這個分佈分割成無數小的區間來計算每個區間裡的 \\(\\theta_1\\)，再求它的均值： \\[ p(\\theta_1 |y) \\approx \\frac{1}{S} \\sum_{S = 1}^S p(\\theta_1, \\theta_2^{(S)} | y) \\] 其中，\\(\\theta_2\\) 可以使用蒙特卡洛 (Monte Carlo) 過程從 \\(p(\\theta_2 | y)\\) 中隨機採集。當這個無數小的區間的面積無限趨近於零時，\\(S \\rightarrow 0\\)，上面的方程式就變成了一個關於 \\(\\theta_2\\) 的積分方程式： \\[ p(\\theta_1 |y) \\approx \\frac{1}{S} \\sum_{S = 1}^S p(\\theta_1, \\theta_2^{(S)} | y) = \\int p(\\theta_1, \\theta_2 | y) d\\theta_2 \\] 這個過程被叫做邊際化 (marginalization)。進一步地，上面的積分方程中間的 \\(p(\\theta_1, \\theta_2 | y)\\) 又可以被理解成由兩個部分組成：一個是 \\(p(\\theta_1 | \\theta_2, y)\\)，即增加了噪音參數 \\(\\theta_2\\) 的條件事後分佈 (conditional posterior distribution given the nuisance parameter)；另一個是 \\(p(\\theta_2 | y)\\)，也就是給定了數據 \\(y\\) 之後不同的 \\(\\theta_2\\) 的取值的權重 (weighting function for the different possible values of \\(\\theta_2\\))： \\[ p(\\theta_1 | y) = \\int p(\\theta_1 |\\theta_2 , y) p(\\theta_2 | y) d\\theta_2 \\] 45.2 未知均值也未知方差的正（常）態分佈數據 normal data with unknown mean and variance 作為一個經典的例子，我們思考從數據中估計一個未知的平均值。假設該數據是一維的 \\(n\\) 個獨立樣本 \\(y\\) 服從正（常）態分佈 \\(N(\\mu, \\sigma^2)\\)。 45.2.1 無信息先驗概率分佈 noninformative prior distribution 根據 Jeffreys prior 對無信息先驗概率分佈的定義，我們給這個未知均值也未知方差的數據的兩個參數的無信息先驗概率分佈分別是：均值 \\(\\mu\\) 使用均一分佈 (uniform distribution)，方差 \\(\\sigma^2\\) 使用 \\(\\sigma^{-2}\\)： \\[ p(\\mu, \\sigma^2) \\propto \\sigma^{-2} \\] 於是，該數據的聯合事後概率分佈可以被推導為： \\[ \\begin{aligned} p(\\mu, \\sigma^2 | y) &amp; \\propto \\sigma^{-2} \\prod_{i =1}^n \\frac{1}{\\sqrt{2\\pi} \\sigma} \\exp\\left( -\\frac{1}{2\\sigma^2}(y_i - \\mu)^2 \\right) \\\\ &amp; = \\sigma^{-n - 2} \\exp\\left(-\\frac{1}{2\\sigma^2}\\sum_{i =1}^n (y_i - \\mu)^2 \\right) \\\\ &amp; = \\sigma^{-n - 2} \\exp\\left(-\\frac{1}{2\\sigma^2}\\sum_{i =1}^n (y_i^2 - 2y_i\\mu + \\mu^2) \\right) \\\\ &amp; = \\sigma^{-n - 2} \\exp\\left(-\\frac{1}{2\\sigma^2}\\sum_{i =1}^n (y_i^2 - 2y_i\\mu + \\mu^2 -\\bar{y}^2 + \\bar{y}^2 - 2y_i\\bar{y} + 2y_i\\bar{y} ) \\right) \\\\ &amp; = \\sigma^{-n - 2} \\exp\\left(-\\frac{1}{2\\sigma^2}\\left[\\sum_{i =1}^n (y_i^2 - 2y_i\\bar{y} + \\bar{y}^2) + \\sum_{i = 1}^n(\\mu^2 - 2y_i\\mu - \\bar{y}^2 + 2y_i\\bar{y}) \\right]\\right) \\\\ &amp; = \\sigma^{-n - 2} \\exp\\left(-\\frac{1}{2\\sigma^2}\\left[\\sum_{i =1}^n (y_i^2 - 2y_i\\bar{y} + \\bar{y}^2) + n(\\mu^2 - 2\\bar{y}\\mu - \\bar{y}^2 + 2\\bar{y}^2) \\right]\\right) \\\\ &amp; = \\sigma^{-n - 2} \\exp\\left(-\\frac{1}{2\\sigma^2}\\left[\\sum_{i =1}^n (y - \\bar{y})^2 + n(\\bar{y} - \\mu)^2 \\right]\\right) \\\\ \\color{darkred}{\\text{Where } \\bar{y}} &amp; \\color{darkred}{= \\frac{1}{n}\\sum_{i = 1}^n y_i} \\\\ &amp; = \\sigma^{-n - 2} \\exp\\left(-\\frac{1}{2\\sigma^2}\\left[(n - 1)s^2 + n(\\bar{y} - \\mu)^2 \\right]\\right) \\\\ \\color{darkred}{\\text{Where } s^2} &amp; \\color{darkred}{= \\frac{1}{n - 1}\\sum_{i = 1}^n (y_i - \\bar{y})^2} \\\\ \\end{aligned} \\] 此時，其實我們有兩種邊際分佈選擇，一種是把方差作為噪音參數，另一種是把均值作為噪音參數。先是 \\(\\mu\\) 的邊際分佈，它是通過把 \\(\\sigma\\) 積分出去獲得的： \\[ p(\\mu | y) = \\int p(\\mu, \\sigma^2 | y) d\\sigma^2 \\] 其次是 \\(\\sigma^2\\) 的邊際分佈，它是通過把 \\(\\mu\\) 積分出去獲得的： \\[ p(\\sigma^2 | \\mu) = \\int p(\\mu, \\sigma^2 | y) d \\mu \\] 下面我們來推導把均值積分出去的過程： \\[ \\begin{aligned} p(\\sigma^2 | y) &amp; \\propto \\int p(\\mu, \\sigma^2 | y) d \\mu \\\\ &amp; \\propto \\int \\sigma^{-n - 2} \\exp\\left(-\\frac{1}{2\\sigma^2}\\left[(n - 1)s^2 + n(\\bar{y} - \\mu)^2 \\right]\\right) d\\mu \\\\ \\text{Move terms } &amp; \\text{does not include } \\mu \\text{ outside of the intergral } \\\\ &amp; \\propto \\sigma^{-n - 2} \\exp\\left( -\\frac{1}{2\\sigma^2}(n - 1)s^2 \\right) \\int\\exp\\left( -\\frac{n}{2\\sigma^2}(\\bar{y} - \\mu)^2 \\right) d\\mu \\\\ \\because \\int \\frac{1}{\\sqrt{2\\pi\\sigma^2}} &amp; \\exp\\left(- \\frac{1}{2\\sigma^2}(y - \\theta) \\right)d\\theta = 1 \\text{ integration of the pdf of a normal distribution} \\\\ &amp; \\propto \\sigma^{-n - 2} \\exp\\left( -\\frac{1}{2\\sigma^2}(n - 1)s^2 \\right) \\times \\sqrt{\\frac{2\\pi\\sigma^2}{n}} \\\\ &amp; \\propto (\\sigma^2)^{-(\\frac{n -1}{2} + 1)} \\exp\\left( -\\frac{(n -1 )s^2}{2\\sigma^2} \\right) \\end{aligned} \\] 你會發現這個邊際分佈的概率函數竟然成了一個逆卡方分佈： \\[ p(\\sigma^2 | y) = \\text{Inv-}\\chi^2 (\\sigma^2 | n - 1, s^2) \\] 對比正常態分佈數據已知均值，求它方差的邊際分佈的時候我們用到的逆卡方分佈的特徵值如下 （參考 Chapter 44.1）： \\[ \\begin{aligned} \\sigma^2 | y &amp; \\sim \\text{Inv-}\\chi^2(\\sigma^2| n, v) \\\\ \\text{Where } v &amp; = \\frac{1}{n}\\sum_{i =1}^n(y_i - \\theta)^2 \\end{aligned} \\] 而此時我們推導出的未知均值，需要用樣本均值來估計時的方差邊際分佈為： \\[ \\begin{aligned} \\sigma^2 | y &amp; \\sim \\text{Int-}\\chi^2(n - 1, s^2) \\\\ \\text{Where } s^2 &amp; = \\frac{1}{n -1}\\sum_{i = 1}^n(y_i - \\bar{y})^2 \\end{aligned} \\] 也就是說，在均值未知時，由於此時需要對均值作額外的估計，它本身的不確定性使得方差在估計的時候也增加了不確定性（雙側尾部變厚）。 所以，一個未知均值也未知方差的正常態分佈數據，我們採集兩個未知參數的事後概率分佈的過程其實可以描述成為下面的過程： \\[ \\begin{aligned} \\text{The posterior} &amp; \\text{ joint distribution is:} \\\\ p(\\mu, \\sigma^2 | y) &amp; = \\color{darkred}{p(\\mu | \\sigma^2, y)} \\color{darkgreen}{p(\\sigma^2 | y)} \\\\ \\color{darkgreen}{p(\\sigma^2 | y)} &amp; = \\text{Inv-}\\chi^2 (\\sigma^2 | n-1, s^2) \\\\ (\\sigma^2)^{(s)} &amp; \\sim \\color{darkgreen}{p(\\sigma^2 | y)} \\\\ \\color{darkred}{p(\\mu | \\sigma^2, y)} &amp; = N(\\mu | \\bar{y}, \\sigma^2 /n) \\color{grey}{\\propto \\exp\\left( -\\frac{n}{2\\sigma^2}(\\bar{y} - \\mu)^2 \\right)} \\\\ \\mu^{(s)} &amp; \\sim \\color{darkred}{p(\\mu | \\sigma^2, y)} \\\\ \\mu^{(s)}, (\\sigma^2)^{(s)} &amp; \\sim p(\\mu, \\sigma^2 | y) \\end{aligned} \\] 45.2.2 均值的事後邊際概率分佈 marginal posterior distribution of \\(\\mu\\) 通常我們在均值和方長二者之間會更關心總體的均值 (population mean) \\(\\mu\\)。那麼通過把方差從二者的事後聯合分佈中積分出去的方法，可以獲得： \\[ \\begin{aligned} p(\\mu | y) &amp; = \\int_0^\\infty p(\\mu, \\sigma^2 |y) d\\sigma^2 \\\\ &amp; \\propto \\int_0^\\infty \\sigma^{-n - 2} \\exp\\left(-\\frac{1}{2\\sigma^2}\\left[(n - 1)s^2 + n(\\bar{y} - \\mu)^2 \\right]\\right) d\\sigma^2 \\end{aligned} \\] 對上述函數進行簡化的過程中，需要用到下面的轉換輔助理解其過程： \\[ A = (n - 1)s^2 + n(\\bar{y} - \\mu)^2 \\text{ and } z = \\frac{A}{2\\sigma^2} \\] 那麼上面的公式可以被修改成關於 \\(z\\) 的積分函數： \\[ \\begin{aligned} p(\\mu | y) &amp; \\propto A^{-n/2} \\int_0^\\infty z^{(n - 2)/2} \\exp(-z)dz \\\\ \\color{gray}{\\text{Recognize }}&amp; \\color{gray}{\\text{Gamma intergral }\\Gamma(u) = \\int_0^\\infty x^{u-1}\\exp(-x)dx} \\\\ \\color{gray}{\\text{Although t}}&amp; \\color{gray}{\\text{here are different power terms, }} \\\\ \\color{gray}{\\text{but we kno}}&amp; \\color{gray}{\\text{w this intergral will give us a constant value.}} \\\\ \\color{gray}{\\text{therefore o}}&amp; \\color{gray}{\\text{nly the } A \\text{ part is left in the proporional portions}} \\\\ &amp; \\propto \\left[ (n - 1)s^2 + n(\\bar{y} - \\mu)^2 \\right]^{-n/2} \\\\ &amp; \\propto \\left[ 1 + \\frac{n(\\bar{y} - \\mu)^2}{(n - 1)s^2} \\right]^{-n/2} \\\\ \\Rightarrow p(\\mu | y) &amp; \\propto t_{n-1}(\\mu | \\bar{y}, \\frac{s^2}{n}) \\color{gray}{\\text{ is a Student&#39;s } t \\text{ distribution}} \\end{aligned} \\] 我們成功推導出未知方差未知均值的正常態數據的事後概率分佈是一個 \\(t\\) 分佈。 45.3 R 演示 正常態數據但均值方差均未知 參考原著作者代碼 一串可能是正常態分佈的數據 y &lt;- c(93, 112, 122, 135, 122, 150, 118, 90, 124, 114) 該數據的充分統計量 n &lt;- length(y) s2 &lt;- var(y) my &lt;- mean(y) 我們希望採集樣本的事後聯合分佈可以被理解為兩個條件分佈的乘積： \\[ p(\\mu, \\sigma^2 | y) = p(\\sigma^2 | y) p(\\mu | \\sigma^2, y) \\] 由於我們知道方差的事後概率分佈是逆縮放卡方分佈 (scaled inverse chi-squared distribution)，我們需要兩個輔助函數，一個是隨機採樣函數，一個是概率密度函數： # random sampler for scaled inverse chi-squared distribution rsinvchisq &lt;- function(n, nu, s2, ...) nu*s2 / rchisq(n, nu, ...) # probabilityb density function for scaled inverse chi-squared distribution dsinvchisq &lt;- function(x, nu, s2){ exp(log(nu/2)*nu/2 - lgamma(nu/2) + log(s2)/2*nu - log(x)*(nu/2+1) - (nu*s2/2)/x) } # 上述概率密度函數其實是把縮放逆卡方分佈的概率密度函數本身先取對數，再作 exp 提高計算效率 從 \\(p(\\sigma^s | y)\\) 中採集 1000 個樣本 ns &lt;- 1000 sigma2 &lt;- rsinvchisq(ns, n-1, s2) 從 \\(p(\\mu | \\sigma^2 , y)\\) 中採集樣本 mu &lt;- rnorm(ns, my, sqrt(sigma2/n)) # or equivalently # mu &lt;- my + sqrt(sigma2/n)*rnorm(length(sigma2) 從預測分佈中採集樣本 \\(p(\\tilde{y} | y)\\) sigma &lt;- sqrt(sigma2) ynew &lt;- rnorm(ns, mu, sigma) 為計算 sigma, mu, ynew 在一些範圍內的小區隔之間的密度準備 t1l &lt;- c(90, 150) t2l &lt;- c(10, 60) nl &lt;- c(50, 185) t1 &lt;- seq(t1l[1], t1l[2], length.out = ns) t2 &lt;- seq(t2l[1], t2l[2], length.out = ns) xynew &lt;- seq(nl[1], nl[2], length.out = ns) 計算 \\(\\mu\\) 的精確邊際分佈密度 (the exact marginal density of \\(p(\\mu)\\))，記得它是一個自由度為 \\(n-1\\) 的 t 分佈。 # multiplication by 1./sqrt(s2/n) is due to the transformation of # variable z=(x-mean(y))/sqrt(s2/n) pm &lt;- dt((t1-my) / sqrt(s2/n), n-1) / sqrt(s2/n) 從採集的均值樣本推算以這些均值的高斯內核近似估計：(estimate the marginal density using samples and ad hoc Gaussian kernel approximation) pmk &lt;- density(mu, adjust = 2, n = ns, from = t1l[1], to = t1l[2])$y 類似地，計算標準差本身的精確邊際分佈密度 (the marginal density of \\(p(\\sigma^2)\\))，它是一個逆縮放卡方分佈，自由度是 \\(n-1\\)，縮放尺度是 \\(s^2\\) # the multiplication by 2*t2 is due to the transformation of # variable z=t2^2, see BDA3 p. 21 ps &lt;- dsinvchisq(t2^2, n-1, s2) * 2*t2 計算採集得到的事後標準差樣本本身的高斯內核估計 (estimate the marginal density using samples and ad hoc Gaussian kernel approximation) psk &lt;- density(sigma, n = ns, from = t2l[1], to = t2l[2])$y 計算精確的預測值本身的分佈密度 (compute the exact predictive density) # multiplication by 1./sqrt(s2/n) is due to the transformation of variable # see BDA3 p. 21 p_new &lt;- dt((xynew-my) / sqrt(s2*(1+1/n)), n-1) / sqrt(s2*(1+1/n)) 估計事後聯合分佈的密度。 # Combine grid points into another data frame # with all pairwise combinations dfj &lt;- data.frame(t1 = rep(t1, each = length(t2)), t2 = rep(t2, length(t1))) dfj$z &lt;- dsinvchisq(dfj$t2^2, n-1, s2) * 2*dfj$t2 * dnorm(dfj$t1, my, dfj$t2/sqrt(n)) # breaks for plotting the contours cl &lt;- seq(1e-5, max(dfj$z), length.out = 6) 45.3.1 繪製聯合事後密度分佈及均值和方差各自的邊際分佈 visualise the joint and marginal densities 下面的代碼用於生成均值的邊際分佈 dfm &lt;- data.frame(t1, Exact = pm, Empirical = pmk) %&gt;% gather(grp, p, -t1) margmu &lt;- ggplot(dfm) + geom_line(aes(t1, p, color = grp)) + coord_cartesian(xlim = t1l) + labs(title = &#39;Marginal of mu&#39;, x = &#39;&#39;, y = &#39;&#39;) + scale_y_continuous(breaks = NULL) + theme(legend.background = element_blank(), legend.position = c(0.75, 0.8), legend.title = element_blank()) 下面的代碼用於生成標準差的邊際分佈 dfs &lt;- data.frame(t2, Exact = ps, Empirical = psk) %&gt;% gather(grp, p, -t2) margsig &lt;- ggplot(dfs) + geom_line(aes(t2, p, color = grp)) + coord_cartesian(xlim = t2l) + coord_flip() + labs(title = &#39;Marginal of sigma&#39;, x = &#39;&#39;, y = &#39;&#39;) + scale_y_continuous(breaks = NULL) + theme(legend.background = element_blank(), legend.position = c(0.75, 0.8), legend.title = element_blank()) ## Coordinate system already present. Adding new coordinate system, which will replace the existing one. 下面的代碼用於繪製聯合事後分佈密度 joint1labs &lt;- c(&#39;Samples&#39;,&#39;Exact contour&#39;) joint1 &lt;- ggplot() + geom_point(data = data.frame(mu,sigma), aes(mu, sigma, col = &#39;1&#39;), size = 0.1) + geom_contour(data = dfj, aes(t1, t2, z = z, col = &#39;2&#39;), breaks = cl) + coord_cartesian(xlim = t1l,ylim = t2l) + labs(title = &#39;Joint posterior&#39;, x = &#39;&#39;, y = &#39;&#39;) + scale_y_continuous(labels = NULL) + scale_x_continuous(labels = NULL) + scale_color_manual(values=c(&#39;blue&#39;, &#39;black&#39;), labels = joint1labs) + guides(color = guide_legend(nrow = 1, override.aes = list( shape = c(16, NA), linetype = c(0, 1), size = c(2, 1)))) + theme(legend.background = element_blank(), legend.position = c(0.5, 0.9), legend.title = element_blank()) 合併上面三個圖 # blank plot for combining the plots bp &lt;- grid.rect(gp = gpar(col = &#39;white&#39;)) 圖 45.1: The joint density and marginal densities of the posterior of normal distribution with unknown mean and variance grid.arrange(joint1, margsig, margmu, bp, nrow = 2) 圖 45.2: The joint density and marginal densities of the posterior of normal distribution with unknown mean and variance 45.3.2 單獨繪製邊際分佈的每一個部分 繪製另外一個聯合事後分佈橢圓等高線圖 # data frame for the conditional of mu and marginal of sigma dfc &lt;- data.frame(mu = t1, marg = rep(sigma[1], length(t1)), cond = sigma[1] + dnorm(t1 ,my, sqrt(sigma2[1]/n)) * 100) %&gt;% gather(grp, p, marg, cond) # legend labels for the following plot joint2labs &lt;- c(&#39;Exact contour plot&#39;, &#39;Sample from joint post.&#39;, &#39;Cond. distribution of mu&#39;, &#39;Sample from the marg. of sigma&#39;) joint2 &lt;- ggplot() + geom_contour(data = dfj, aes(t1, t2, z = z, col = &#39;1&#39;), breaks = cl) + geom_point(data = data.frame(m = mu[1], s = sigma[1]), aes(m , s, color = &#39;2&#39;)) + geom_line(data = dfc, aes(mu, p, color = grp), linetype = &#39;dashed&#39;) + coord_cartesian(xlim = t1l,ylim = t2l) + labs(title = &#39;Joint posterior&#39;, x = &#39;&#39;, y = &#39;&#39;) + scale_x_continuous(labels = NULL) + scale_color_manual(values=c(&#39;blue&#39;, &#39;darkgreen&#39;,&#39;darkgreen&#39;,&#39;black&#39;), labels = joint2labs) + guides(color = guide_legend(nrow = 2, override.aes = list( shape = c(NA, 16, NA, NA), linetype = c(1, 0, 1, 1)))) + theme(legend.background = element_blank(), legend.position = c(0.5, 0.85), legend.title = element_blank()) 繪製標準差的邊際密度函數 margsig2 &lt;- ggplot(data = data.frame(t2, ps)) + geom_line(aes(t2, ps), color = &#39;blue&#39;) + coord_cartesian(xlim = t2l) + coord_flip() + labs(title = &#39;Marginal of sigma&#39;, x = &#39;&#39;, y = &#39;&#39;) + scale_y_continuous(labels = NULL) ## Coordinate system already present. Adding new coordinate system, which will replace the existing one. 合併兩個圖 grid.arrange(joint2, margsig2, ncol = 2) 圖 45.3: Visualise factored sampling and the corresponding marginal and conditional densities. 45.3.3 繪製事後均值的概率密度分佈 計算每一個樣本的概率密度分佈 condpdfs &lt;- sapply(t1, function(x) dnorm(x, my, sqrt(sigma2/n))) 繪製其中25個樣本 # data frame of 25 first samples dfm25 &lt;- data.frame(t1, t(condpdfs[1:25,])) %&gt;% gather(grp, p, -t1) condmu &lt;- ggplot(data = dfm25) + geom_line(aes(t1, p, group = grp), linetype = &#39;dashed&#39;) + labs(title = &#39;Conditional distribution of mu for first 25 samples&#39;, y = &#39;&#39;, x = &#39;&#39;) + scale_y_continuous(breaks = NULL) 繪製這些事後均值樣本的均值 dfsam &lt;- data.frame(t1, colMeans(condpdfs), pm) %&gt;% gather(grp,p,-t1) # labels mulabs &lt;- c(&#39;avg of sampled conds&#39;, &#39;exact marginal of mu&#39;) meanmu &lt;- ggplot(data = dfsam) + geom_line(aes(t1, p, size = grp, color = grp)) + labs(y = &#39;&#39;, x = &#39;mu&#39;) + scale_y_continuous(breaks = NULL) + scale_size_manual(values = c(2, 0.8), labels = mulabs) + scale_color_manual(values = c(&#39;orange&#39;, &#39;black&#39;), labels = mulabs) + theme(legend.position = c(0.8, 0.8), legend.background = element_blank(), legend.title = element_blank()) 合併 grid.arrange(condmu, meanmu, ncol = 1) 圖 45.4: Visualise the marginal distribution of mu 45.4 R 演示 分析二進制數據 (BDA3 P.74) 在藥物研發，或者化學物品毒性測量的試驗中，常常需要對試驗動物使用不同的藥物或者毒性劑量做劑量反應試驗。一般來說，動物試驗的時候我們多數情況下會使用死亡/生存，或者發生腫瘤/未發生腫瘤作為該劑量反應觀察的結果。這樣的實驗獲得的數據結果基本上是這樣形式的： \\[ (x_i, n_i, y_i); i = 1, \\dots, k \\] 其中， \\(k\\) 是藥物/毒物劑量水平的分組； \\(x_i\\) 是第 \\(i\\) 劑量組的實際藥物濃度，通常會取對數； \\(n_i\\) 是第 \\(i\\) 劑量組的實驗動物數量； \\(y_i\\) 是第 \\(i\\) 劑量組的實驗動物死亡（或發現腫瘤的動物）數量。 某個實驗的結果如下，實驗一共使用了20只動物，其中每個劑量組有五隻，每個劑量組死亡動物數分別是 0, 1, 3, 5： df1 &lt;- data.frame( x = c(-0.86, -0.30, -0.05, 0.73), n = c(5, 5, 5, 5), y = c(0, 1, 3, 5) ) df1 ## x n y ## 1 -0.86 5 0 ## 2 -0.30 5 1 ## 3 -0.05 5 3 ## 4 0.73 5 5 根據我們的假設，第 \\(i\\) 劑量組內的實驗動物本身是可以替換的 (exchangeable)，相互獨立的 (independent)，死亡概率應該在相同的劑量下是相同的 (equal probabilities)，那麼這樣的數據測量到的 \\(y_i\\) 是一個典型的服從二項分佈的數據： \\[ y_i|\\theta_i \\sim \\text{Bin}(n_i, \\theta_i) \\] 其中， \\(\\theta_i\\) 是第\\(i\\)劑量組實驗動物的死亡概率，該組劑量是 \\(x_i\\)； 那麼該數據的標準解決方案是使用羅輯回歸模型： \\[ \\begin{equation} \\text{logit}(\\theta_i) = \\log(\\frac{\\theta_i}{1 - \\theta_i})\\\\ \\text{logit}(\\theta_i) = \\alpha + \\beta x_i \\end{equation} \\tag{45.1} \\] 繪製該數據的散點圖 ggplot(df1, aes(x=x, y=y)) + geom_point(size=2, color=&#39;red&#39;) + scale_x_continuous(breaks = df1$x, minor_breaks=NULL, limits = c(-1.5, 1.5)) + scale_y_continuous(breaks = 0:5, minor_breaks=NULL) + labs(title = &#39;Bioassay&#39;, x = &#39;Dose (log g/ml)&#39;, y = &#39;Number of deaths&#39;) + theme(panel.grid.major = element_blank()) 圖 45.5: The Bioassay example data. 根據該數據的模型函數 (Model (45.1))，我們可以寫下本數據的似然 likelihood： \\[ \\begin{equation} p(y_i|\\alpha, \\beta) \\propto \\left[ \\text{logit}^{-1}(\\alpha + \\beta x_i) \\right]^{y_i}\\left[ 1- \\text{logit}^{-1}(\\alpha + \\beta x_i) \\right]^{n_i - y_i} \\end{equation} \\tag{45.2} \\] 於是該模型的事後概率分佈為： \\[ \\begin{aligned} p(\\alpha, \\beta | y) &amp; \\propto p(\\alpha, \\beta) p(y | \\alpha, \\beta) \\\\ &amp; \\propto p(\\alpha, \\beta) \\prod_{i = 1}^k p(y | \\alpha, \\beta) \\end{aligned} \\tag{45.3} \\] 為了便於計算，可推導似然函數 (Likelihood function (45.2)) 變成如下的對數似然 (log-likelihood)： \\[ \\ell_i \\propto y_i(\\alpha + \\beta x_i) - n_i \\log\\left[ 1 + \\exp(\\alpha + \\beta x_i) \\right] \\] - 在 R 裡設定好這個對數似然函數： logl &lt;- function(df, a, b) df[&#39;y&#39;]*(a + b * df[&#39;x&#39;]) - df[&#39;n&#39;]*log1p(exp(a + b * df[&#39;x&#39;])) 設定參數 \\(\\alpha, \\beta\\) 可能的範圍，然後準備好用於事後概率密度採樣使用的小格子 A = seq(-4, 8, length.out = 50) B = seq(-10, 40, length.out = 50) cA &lt;- rep(A, each = length(B)) cB &lt;- rep(B, length(A)) 計算該數據 df1 的似然： p &lt;- apply(df1, 1, logl, cA, cB) %&gt;% rowSums() %&gt;% exp() 從這些小格子裡根據似然來採集樣本（with replacement） nsamp &lt;- 1000 samp_indices &lt;- sample(length(p), size = nsamp, replace = T, prob = p/sum(p)) samp_A &lt;- cA[samp_indices[1:nsamp]] samp_B &lt;- cB[samp_indices[1:nsamp]] # Add random jitter, see BDA3 p. 76 samp_A &lt;- samp_A + runif(nsamp, (A[1] - A[2])/2, (A[2] - A[1])/2) samp_B &lt;- samp_B + runif(nsamp, (B[1] - B[2])/2, (B[2] - B[1])/2) 生成樣本數據 samps &lt;- tibble(ind = 1:nsamp, alpha = samp_A, beta = samp_B) %&gt;% mutate(ld50 = - alpha/beta) 繪製採集的邏輯曲線 invlogit &lt;- plogis xr &lt;- seq(-1.5, 1.5, length.out = 100) dff &lt;- pmap_df(samps[1:100,], ~ tibble(x = xr, id=..1, f = invlogit(..2 + ..3*x))) ppost &lt;- ggplot(df1, aes(x=x, y=y/n)) + geom_line(data=dff, aes(x=x, y=f, group=id), linetype=1, color=&#39;blue&#39;, alpha=0.2) + geom_point(size=2, color=&#39;red&#39;) + scale_x_continuous(breaks = df1$x, minor_breaks=NULL, limits = c(-1.5, 1.5)) + scale_y_continuous(breaks = seq(0,1,length.out=3), minor_breaks=NULL) + labs(title = &#39;Bioassay&#39;, x = &#39;Dose (log g/ml)&#39;, y = &#39;Proportion of deaths&#39;) + theme(panel.grid.major = element_blank()) # add 50% death line and LD50 dots ppost + geom_hline(yintercept = 0.5, linetype = &#39;dashed&#39;, color = &#39;gray&#39;) + geom_point(data=samps[1:100,], aes(x=ld50, y=0.5), color=&#39;blue&#39;, alpha=0.2) 圖 45.6: Draws of logistic curves of the bioassay data, with 50% deaths line and LD50 dots. 繪製事後概率密度圖 # limits for the plots xl &lt;- c(-2, 8) yl &lt;- c(-2, 40) pos &lt;- ggplot(data = data.frame(cA ,cB, p), aes(cA, cB)) + geom_raster(aes(fill = p, alpha = p), interpolate = T) + geom_contour(aes(z = p), colour = &#39;black&#39;, size = 0.2) + coord_cartesian(xlim = xl, ylim = yl) + labs(title = &#39;Posterior density evaluated in grid&#39;, x = &#39;alpha&#39;, y = &#39;beta&#39;) + scale_fill_gradient(low = &#39;yellow&#39;, high = &#39;red&#39;, guide = F) + scale_alpha(range = c(0, 1), guide = F) sam &lt;- ggplot(data = samps) + geom_point(aes(alpha, beta), color = &#39;blue&#39;) + coord_cartesian(xlim = xl, ylim = yl) + labs(title = &#39;Posterior draws&#39;, x = &#39;alpha&#39;, y = &#39;beta&#39;) grid.arrange(pos, sam, nrow=2) ## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please use `guide = &quot;none&quot;` instead. ## It is deprecated to specify `guide = FALSE` to remove a guide. Please use `guide = &quot;none&quot;` instead. 圖 45.7: Plot of the posterior joint density. 繪製事後 LD50 的直方圖，這裡 LD50 的含義是，在多大的濃度時，動物死亡/發生腫瘤的概率會是50%。 his &lt;- ggplot(data = samps) + geom_histogram(aes(ld50), binwidth = 0.02, fill = &#39;steelblue&#39;, color = &#39;black&#39;) + coord_cartesian(xlim = c(-0.5, 0.5)) + labs(x = &#39;LD50 = -alpha/beta&#39;) his 圖 45.8: Histogram of the draws from the posterior distribution of LD50 on the scale of log dose in g/ml. "],["簡單線型回歸模型---地心說模型-linear-regression-is-the-geocentric-model-of-applied-statistics.html", "第 46 章 簡單線型回歸模型 - 地心說模型 Linear regression is the geocentric model of applied statistics 46.1 為什麼正（常）態分佈是正常的 why normal distribution is normal? 46.2 身高的高斯模型 Gaussian model of height", " 第 46 章 簡單線型回歸模型 - 地心說模型 Linear regression is the geocentric model of applied statistics 這裡的簡單筆記來自經典教學書 Statistical Rethinking。 46.1 為什麼正（常）態分佈是正常的 why normal distribution is normal? Keep in mind that using a model is not equivalent to swearing an oath on it. The golem is your servant, not the other way around. Richard McElreath 概率分佈如果是離散型的，如二項分佈，描述它的分佈函數被叫做概率質量函數 (probability mass functions)。當概率分佈是連續型的，如正（常）態/高斯分佈，描述它的分佈函數被叫做概率密度函數 (probability density functions)。概率密度本身的取值是可以大於1的，如： dnorm(0, 0, 0.1) # mean = 0, sd = 0.1 ## [1] 3.9894228 是讓 R 幫助我們計算 \\(p(0 | 0, (\\sqrt{0.1})^2)\\) 的取值。其結果差不多要等於4。這並沒有出錯，概率密度的概念其實是累積概率的增長速率 (the rate of change in cumulative probability)。所以在概率密度函數的平滑曲線上，累積概率增加的越快的區間，它的增長速率，也就是概率密度很容易超過1。但是，概率密度函數的曲線下面積，則永遠不可能超過1。 46.2 身高的高斯模型 Gaussian model of height # library(rethinking) data(&quot;Howell1&quot;) d &lt;- Howell1 str(d) ## &#39;data.frame&#39;: 544 obs. of 4 variables: ## $ height: num 152 140 137 157 145 ... ## $ weight: num 47.8 36.5 31.9 53 41.3 ... ## $ age : num 63 63 65 41 51 35 32 27 19 54 ... ## $ male : int 1 0 0 1 0 1 0 1 0 1 ... precis(d) ## mean sd 5.5% 94.5% histogram ## height 138.26359632 27.60244764 81.1085500 165.735000 ▁▁▁▁▁▁▁▂▁▇▇▅▁ ## weight 35.61061759 14.71917818 9.3607214 54.502894 ▁▂▃▂▂▂▂▅▇▇▃▂▁ ## age 29.34439338 20.74688822 1.0000000 66.135000 ▇▅▅▃▅▂▂▁▁ ## male 0.47242647 0.49969861 0.0000000 1.000000 ▇▁▁▁▁▁▁▁▁▇ # filter out non-adults d2 &lt;- d[ d$age &gt;= 18, ] 寫下身高的模型， \\[ \\begin{aligned} h_i &amp; \\sim \\text{Normal}(\\mu, \\sigma) &amp;\\text{ [Likelihood]} \\\\ \\mu &amp; \\sim \\text{Normal}(178, 20) &amp;\\text{ [prior for } \\mu] \\\\ \\sigma &amp; \\sim \\text{Uniform}(0, 50) &amp;\\text{ [prior for } \\sigma]\\\\ \\end{aligned} \\] 觀察一下我們設定的先驗概率分佈的形狀： curve( dnorm( x, 178, 20), from = 100, to = 250, xlab = ~mu) 圖 46.1: The shape for prior distribution of the mean. curve( dunif( x, 0, 50), from = -10, to = 60, xlab = ~sigma) 圖 46.2: The shape for prior distribution of the standard deviation. 當你選定了參數 \\(h, \\mu, \\sigma\\) 的先驗概率分佈時，你其實同時選定了他們的聯合分佈 (joint distribution)。從這個聯合先驗概率分佈中採集一些樣本，可以輔助我們判斷選擇這樣的先驗概率分佈是否是合適/不壞的。 sample_mu &lt;- rnorm(10000, 178, 20) sample_sigma &lt;- runif(10000, 0, 50) prior_h &lt;- rnorm(10000, sample_mu, sample_sigma) dens( prior_h ) 圖 46.3: The shape for samplings from prior distribution of the height generated from the joint distrition chosen for the mean and standard deviation. 看起來身高的先驗概率分佈似乎合乎常理，可以暫且認為均值和標準差的先驗概率選擇並不太糟糕。 當你刻意去選擇更加寬泛的先驗概率分佈給均值時，可能導致不合理的數據出現。如下圖 46.4 中顯示的那樣，當刻意給身高的均值 \\(\\mu\\) 賦予更加“不含信息”，或者模糊的先驗概率 \\(\\text{Normal}(178, 100)\\)，時給出的身高的先驗概率分佈中出現了不少身高為負數的情況，這就是不合理的先驗概率分佈。 sample_mu &lt;- rnorm(10000, 178, 100) prior_h &lt;- rnorm(10000, sample_mu, sample_sigma) dens( prior_h ) 圖 46.4: The shape for samplings from prior distribution of the height generated from the joint distrition chosen for the mean and standard deviation, with flatter and less information prior for the mean (mu ~ N(178, 100)). 模型的貝葉斯定理表達式： \\[ \\text{Pr}(\\mu, \\sigma | h) = \\frac{\\prod_i \\text{Normal}(h_i|\\mu, \\sigma)\\text{Normal}(\\mu | 178, 20)\\text{Uniform}(\\sigma|0,50)}{\\int\\int \\prod_i \\text{Normal}(h_i|\\mu, \\sigma)\\text{Normal}(\\mu | 178, 20)\\text{Uniform}(\\sigma|0,50) d\\mu d\\sigma} \\] 46.2.1 小方格估計法近似事後概率分佈 # 在 150 - 160 之間產生100個數據區間 mu_list &lt;- seq( from = 150, to = 160, length.out = 100) # 在 7-9 之間產生 100 個數據區間 sigma_list &lt;- seq( from = 7, to = 9, length.out = 100) # 用上面生成的方差和均值交叉做出 10000 個均值和方差的數據格子 post &lt;- expand.grid( mu = mu_list, sigma = sigma_list) # 在對數尺度上用加法運算，會節約計算成本 post$LL &lt;- sapply( 1:nrow(post), function(i) sum( dnorm( d2$height, post$mu[i], post$sigma[i], log = TRUE) )) # 計算取對數下的事後概率分佈的分母部分 post$prod &lt;- post$LL + dnorm( post$mu, 178, 20, log = TRUE) + dunif(post$sigma, 0, 50, log = TRUE) # Scale all of the log-products by the maximum log-product post$prob &lt;- exp( post$prod - max(post$prod)) 可以繪製簡單的事後均值，事後標準差的等高圖分佈，登高線本身使用上面代碼計算的身高的相對事後概率分佈。 contour_xyz( post$mu, post$sigma, post$prob) 圖 46.5: Simple contour plot of the posterior means and standard deviations of height with relative posterior probability distribution. image_xyz(post$mu, post$sigma, post$prob) 圖 46.6: Simple heat map plot of the posterior means and standard deviations of height with relative posterior probability distribution. 46.2.2 從計算獲得的事後概率分佈中採樣 sample.rows &lt;- sample(1 : nrow(post), size = 10000, replace = TRUE, prob = post$prob) sample.mu &lt;- post$mu[ sample.rows ] sample.sigma &lt;- post$sigma[ sample.rows] plot(sample.mu, sample.sigma, cex = 0.7, pch = 16, col = col.alpha(rangi2, 0.2)) 圖 46.7: Samples from the posterior distribution for the heights data. dens(sample.mu) dens(sample.sigma) PI(sample.mu) ## 5% 94% ## 153.93939 155.25253 PI(sample.sigma) ## 5% 94% ## 7.3232323 8.2525253 46.2.3 使用二次方程近似法 使用R語言定義我們的身高模型： \\[ \\begin{aligned} h_i &amp; \\sim \\text{Normal}(\\mu, \\sigma) &amp;\\text{ [Likelihood]} \\\\ \\mu &amp; \\sim \\text{Normal}(178, 20) &amp;\\text{ [prior for } \\mu] \\\\ \\sigma &amp; \\sim \\text{Uniform}(0, 50) &amp;\\text{ [prior for } \\sigma]\\\\ \\end{aligned} \\] flist &lt;- alist( height ~ dnorm( mu, sigma ), mu ~ dnorm( 178, 20 ), sigma ~ dunif( 0 , 50 ) ) m4.1 &lt;- quap( flist, data = d2) precis( m4.1 ) ## mean sd 5.5% 94.5% ## mu 154.6069052 0.41197188 153.9484946 155.2653158 ## sigma 7.7309053 0.29134572 7.2652786 8.1965321 繪製該數據中身高曲線之間的關係圖： # plot(d2$height, d2$weight) ggplot(data = d2, aes(x = weight, y = height)) + geom_point(shape = 1, size = 2) + theme_bw() + theme(panel.grid = element_blank()) 圖 46.8: Plot adults height against weight. 如何使用身高來做體重的預測變量，從而建立一個簡單線型回歸模型？ \\[ \\begin{aligned} h_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) &amp; [\\text{likelihood}]\\\\ \\mu_i &amp; = \\alpha + \\beta (x_i - \\bar{x}) &amp; [\\text{linear model}]\\\\ \\alpha &amp; \\sim \\text{Normal}(178, 20) &amp; [\\text{prior for } \\alpha]\\\\ \\beta &amp; \\sim \\text{Normal}(0, 10) &amp; [\\text{prior for } \\beta]\\\\ \\sigma &amp; \\sim \\text{Uniform}(0, 50) &amp; [\\text{prior for } \\sigma] \\end{aligned} \\] 46.2.4 關於 \\(\\beta\\) 的先驗概率 Priors 代碼來自書中(P95 Rcode 4.38)： set.seed(2971) N &lt;- 100 #n number of simulation lines a &lt;- rnorm( N, 178, 20) b &lt;- rnorm( N, 0, 10) plot( NULL, xlim = range(d2$weight) , ylim = c(-100, 400), xlab = &quot;weight&quot;, ylab = &quot;height&quot;) abline( h = 0, lty = 2) abline( h = 272, lty = 1, lwd = 0.5) mtext(&quot;b ~ dnorm(0, 10)&quot; ) xbar &lt;- mean(d2$weight) for ( i in 1:N) curve( a[i] + b[i]*(x - xbar) , from = min(d2$weight), to = max(d2$weight), add = TRUE, col = col.alpha(&quot;black&quot;, 0.2) ) 圖 46.9: Prior predictive simulation for the height and weight model. Simulation using the beta ~ N(0, 10) prior. 相同圖形使用 tidyverse 和 ggplot2 來製作(參考 Statistical rethinking with brms, ggplot2, and the tidyverse: Second edition： set.seed(4) # how many lines would you like? n_lines &lt;- 100 lines &lt;- tibble(n = 1:n_lines, a = rnorm(n_lines, mean = 178, sd = 20), b = rnorm(n_lines, mean = 0, sd = 10)) %&gt;% tidyr::expand(tidyr::nesting(n, a, b), weight = range(d2$weight)) %&gt;% mutate(height = a + b * (weight - mean(d2$weight))) head(lines) ## # A tibble: 6 × 5 ## n a b weight height ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 182. 6.85 31.1 87.0 ## 2 1 182. 6.85 63.0 306. ## 3 2 167. -1.15 31.1 183. ## 4 2 167. -1.15 63.0 146. ## 5 3 196. -3.56 31.1 245. ## 6 3 196. -3.56 63.0 132. lines %&gt;% ggplot(aes(x = weight, y = height, group = n)) + geom_hline(yintercept = c(0, 272), linetype = 2:1, size = 1/3) + geom_line(alpha = 1/10) + coord_cartesian(ylim = c(-100, 400)) + ggtitle(&quot;b ~ dnorm(0, 10)&quot;) + theme_classic() 圖 46.10: Prior predictive simulation for the height and weight model. Simulation using the beta ~ N(0, 10) prior. 可見這樣的身高作為先驗概率明顯是不合理的，因為有大量的數據低於 0 cm，甚至於大於人類的極限身高272cm。如何將這個關於身高的先驗概率合理化呢？解決方法的一種是使用對數正（常）態分佈。對數正（常）態分佈，其實就是指，一組取了對數之後的數值服從正（常）態分佈。 \\[ \\beta \\sim \\text{Log-Normal}(0, 1) \\] # b &lt;- rlnorm(10000, 0, 1) # dens(b, xlim = c(0, 5), adj = 0.1) set.seed(4) tibble(b = rlnorm(10000, mean = 0, sd = 1)) %&gt;% ggplot(aes(x = b)) + geom_density(fill = &quot;grey70&quot;) + coord_cartesian(xlim = c(0, 5)) + theme_classic() 圖 46.11: The density shape for lognormal (0,1), it is the distribution whose logarithm is normally distributed. 我們還可以把採集的對數正（常）態分佈樣本取對數，和標準正（常）態分佈做一個圖形上的比較。 set.seed(4) tibble(rnorm = rnorm(100000, mean = 0, sd = 1), `log(rlognorm)` = log(rlnorm(100000, mean = 0, sd = 1))) %&gt;% pivot_longer(everything()) %&gt;% ggplot(aes(x = value)) + geom_density(fill = &quot;grey70&quot;) + coord_cartesian(xlim = c(-3, 3)) + theme_classic() + facet_wrap( ~ name, nrow = 2) 圖 46.12: The density shape for log(lognormal (0, 1)) and normal(0, 1), they are the same. 使用對數正（常）態分佈作為 \\(\\beta\\) 的先驗概率分佈，試試看它給出的身高預測範圍大致是怎樣的。 set.seed(2971) N &lt;- 100 #n number of simulation lines a &lt;- rnorm( N, 178, 20) # b &lt;- rnorm( N, 0, 10) b &lt;- rlnorm( N, 0, 1) plot( NULL, xlim = range(d2$weight) , ylim = c(-100, 400), xlab = &quot;weight&quot;, ylab = &quot;height&quot;) abline( h = 0, lty = 2) abline( h = 272, lty = 1, lwd = 0.5) mtext(&quot;b ~ dlognorm(0, 1)&quot; ) xbar &lt;- mean(d2$weight) for ( i in 1:N) curve( a[i] + b[i]*(x - xbar) , from = min(d2$weight), to = max(d2$weight), add = TRUE, col = col.alpha(&quot;black&quot;, 0.2) ) 圖 46.13: Prior predictive simulation for the height and weight model. Simulation using the beta ~ log-normal(0, 1) prior, within much reasonable human ranges. 使用 ggplot2 做一邊相同的事。 # make a tibble to annotate the plot Text &lt;- tibble(weight = c(34, 43), height = c(0 - 25, 272 + 25), label = c(&quot;Embryo&quot;, &quot;World&#39;s tallest person (272 cm)&quot;)) # simulate set.seed(4) tibble(n = 1:n_lines, a = rnorm(n_lines, mean = 178, sd = 20), b = rlnorm(n_lines, mean = 0, sd = 1)) %&gt;% tidyr::expand(tidyr::nesting(n, a, b), weight = range(d2$weight)) %&gt;% mutate(height = a + b * (weight - mean(d2$weight))) %&gt;% # plot ggplot(aes(x = weight, y = height, group = n)) + geom_hline(yintercept = c(0, 272), linetype = 2:1, size = 1/3) + geom_line(alpha = 1/10) + annotate(geom = &quot;text&quot;, x = c(34, 43), y = c(-25, 297), label = c(&quot;Embryo&quot;, &quot;World&#39;s tallest person (272 cm)&quot;), size = 5) + coord_cartesian(ylim = c(-100, 400)) + ggtitle(&quot;log(b) ~ dnorm(0, 1)&quot;) + theme_classic() 圖 46.14: Prior predictive simulation for the height and weight model. Simulation using the beta ~ log-normal(0, 1) prior, within much reasonable human ranges. A serious problem in contemporary applied statistics is “p-hacking,” the practice of adjusting the model and the data to achieve a desired result. The desired result is usually a p-value less than 5%. — Richard McElreath 於是我們現在把修改了 \\(\\beta\\) 的先驗概率分佈之後的模型定義： \\[ \\begin{aligned} h_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) &amp; [\\text{likelihood}]\\\\ \\mu_i &amp; = \\alpha + \\beta (x_i - \\bar{x}) &amp; [\\text{linear model}]\\\\ \\alpha &amp; \\sim \\text{Normal}(178, 20) &amp; [\\text{prior for } \\alpha]\\\\ \\beta &amp; \\sim \\text{Log-Normal}(0, 1) &amp; [\\text{prior for } \\beta]\\\\ \\sigma &amp; \\sim \\text{Uniform}(0, 50) &amp; [\\text{prior for } \\sigma] \\end{aligned} \\] 於是用這個模型來獲取我們需要的事後概率分佈的方法就顯而易見了： # define the average weight, x-bar xbar &lt;- mean(d2$weight) # fit model m4.3 &lt;- quap( alist( height ~ dnorm( mu, sigma ), mu &lt;- a + b * (weight - xbar), a ~ dnorm(178, 20), b ~ dlnorm(0, 1), sigma ~ dunif( 0, 50 ) ), data = d2 ) precis(m4.3) ## mean sd 5.5% 94.5% ## a 154.60136214 0.270307732 154.16935817 155.0333661 ## b 0.90328092 0.041923643 0.83627884 0.9702830 ## sigma 5.07188228 0.191154912 4.76637981 5.3773848 d2 &lt;- d2 %&gt;% mutate(weight_c = weight - mean(weight)) b4.3 &lt;- brm(data = d2, family = gaussian, height ~ 1 + weight_c, prior = c(prior(normal(178, 20), class = Intercept), prior(lognormal(0, 1), class = b), prior(uniform(0, 50), class = sigma)), iter = 28000, warmup = 27000, chains = 4, cores = 4, seed = 4) ## Warning: It appears as if you have specified a lower bounded prior on a parameter that has no natural lower bound. ## If this is really what you want, please specify argument &#39;lb&#39; of &#39;set_prior&#39; appropriately. ## Warning occurred for prior ## b ~ lognormal(0, 1) ## Warning: It appears as if you have specified an upper bounded prior on a parameter that has no natural upper bound. ## If this is really what you want, please specify argument &#39;ub&#39; of &#39;set_prior&#39; appropriately. ## Warning occurred for prior ## &lt;lower=0&gt; sigma ~ uniform(0, 50) b4.3 ## Family: gaussian ## Links: mu = identity; sigma = identity ## Formula: height ~ 1 + weight_c ## Data: d2 (Number of observations: 352) ## Draws: 4 chains, each with iter = 28000; warmup = 27000; thin = 1; ## total post-warmup draws = 4000 ## ## Population-Level Effects: ## Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS ## Intercept 154.60 0.28 154.05 155.13 1.00 4836 2988 ## weight_c 0.90 0.04 0.82 0.99 1.01 564 633 ## ## Family Specific Parameters: ## Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS ## sigma 5.10 0.19 4.74 5.51 1.00 2780 2116 ## ## Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS ## and Tail_ESS are effective sample size measures, and Rhat is the potential ## scale reduction factor on split chains (at convergence, Rhat = 1). 觀察各個參數事後樣本之間的協方差 (covariances)，幾乎可以忽略不計。 round( vcov(m4.3), 3) ## a b sigma ## a 0.073 0.000 0.000 ## b 0.000 0.002 0.000 ## sigma 0.000 0.000 0.037 posterior_samples(b4.3) %&gt;% dplyr::select(-lp__) %&gt;% cov() %&gt;% round(digits = 3) ## Warning: Method &#39;posterior_samples&#39; is deprecated. Please see ?as_draws for recommended ## alternatives. ## b_Intercept b_weight_c sigma lprior ## b_Intercept 0.077 0.000 0.000 0.005 ## b_weight_c 0.000 0.002 0.000 -0.002 ## sigma 0.000 0.000 0.037 0.000 ## lprior 0.005 -0.002 0.000 0.002 pairs(m4.3) knitr::include_graphics(&quot;img/fig46_15m4_3.png&quot;) 圖 46.15: Both marginal posteriors and the covariance. pairs(b4.3) knitr::include_graphics(&quot;img/fig46_16b4_3.png&quot;) 圖 46.16: Both marginal posteriors and the covariance. 繪製事後估計獲得的均值給出的回歸直線。 plot( height ~ weight, data = d2, col = rangi2) post &lt;- extract.samples(m4.3) a_map &lt;- mean(post$a) b_map &lt;- mean(post$b) curve( a_map + b_map * (x - xbar), add = TRUE) 圖 46.17: Height in centimeters plotted against weight in kilograms, with the line at the posterior mean plotted in black. ggplot2繪圖結果： d2 %&gt;% ggplot(aes(x = weight_c, y = height)) + geom_abline(intercept = fixef(b4.3)[1], slope = fixef(b4.3)[2]) + geom_point(shape = 1, size = 2, color = &quot;royalblue&quot;) + theme_classic() 圖 46.18: Height in centimeters plotted against weight in kilograms, with the line at the posterior mean plotted in black. 為了顯示斜率和截距本身的不確定性，我們來從參數的事後聯合概率分佈中採集一些樣本出來做觀察： post &lt;- extract.samples( m4.3 ) post[1:5, ] ## a b sigma ## 1 154.24215 0.92575830 5.0813050 ## 2 154.35254 0.85979998 5.4050406 ## 3 154.69705 0.91139697 4.7723642 ## 4 154.89703 0.90982746 5.0811381 ## 5 154.21879 0.88113559 5.2115981 postb &lt;- posterior_samples(b4.3) ## Warning: Method &#39;posterior_samples&#39; is deprecated. Please see ?as_draws for recommended ## alternatives. postb %&gt;% slice(1:5) ## b_Intercept b_weight_c sigma lprior lp__ ## 1 154.49526 0.95169276 4.9132319 -9.3879361 -1079.9065 ## 2 155.13846 0.95387692 4.8782468 -9.3528391 -1082.2285 ## 3 154.64719 0.95120759 4.7777654 -9.3785528 -1080.8369 ## 4 154.52284 0.96689084 4.8037664 -9.4015009 -1081.1762 ## 5 154.30844 0.93941249 5.4269053 -9.3866976 -1081.0399 這些 a, b 的無數配對，就是該線型回歸給出的事後回歸線的截距和斜率的無數的組合，每一個組合，是一條事後回歸直線。這些事後截距和事後斜率的均值，是圖 46.18 和 46.17 中的那條事後均值提供的直線。事實上，這些截距和斜率本身的不確定性才是更加值得關注的。 下面的計算過程是先使用 d2 數據中前10個人的身高體重做相同的事後回歸直線分析，然後逐漸增加數據量，你會觀察到這些事後斜率和事後截距的不確定性在發生的一個動態變化： N &lt;- 10 dN &lt;- d2[1:N, ] mN &lt;- quap( alist( height ~ dnorm( mu, sigma ), mu &lt;- a + b*(weight - mean(weight)), a ~ dnorm( 178, 20 ), b ~ dlnorm( 0, 1 ), sigma ~ dunif( 0, 50 ) ), data = dN ) 接下來繪製 mN 模型中給出的事後回歸直線的一部分： # extract 20 samples from the posterior post &lt;- extract.samples( mN, n = 20) # display raw data and sample size plot(dN$weight, dN$height, xlim = range(d2$weight), ylim = range(d2$height), col = rangi2, xlab = &quot;weight&quot;, ylab = &quot;height&quot;) mtext(concat( &quot;N = &quot;, N)) # plot the lines with transparency for ( i in 1:20) curve( post$a[i] + post$b[i] * (x - mean(dN$weight)), col = col.alpha(&quot;black&quot;, 0.3), add = TRUE) 圖 46.19: Samples from the quadratic approximate posterior distribution for the height/weight model with 20 samples of data. 20 Lines sampled from the posterior distribution. 增加樣本量，你只需要修改上述 N = 10 中的數字，然後逐個繪圖就能觀察。下面的代碼使用 brms 包來實現： N &lt;- 10 b4.3 &lt;- brm(data = d2 %&gt;% slice(1:N), family = gaussian, height ~ 1 + weight_c, prior = c(prior(normal(178, 20), class = Intercept), prior(lognormal(0, 1), class = b), prior(uniform(0, 50), class = sigma)), iter = 28000, warmup = 27000, chains = 4, cores = 4, seed = 4) ## Warning: It appears as if you have specified a lower bounded prior on a parameter that has no natural lower bound. ## If this is really what you want, please specify argument &#39;lb&#39; of &#39;set_prior&#39; appropriately. ## Warning occurred for prior ## b ~ lognormal(0, 1) ## Warning: It appears as if you have specified an upper bounded prior on a parameter that has no natural upper bound. ## If this is really what you want, please specify argument &#39;ub&#39; of &#39;set_prior&#39; appropriately. ## Warning occurred for prior ## &lt;lower=0&gt; sigma ~ uniform(0, 50) ## Warning: There were 1 divergent transitions after warmup. See ## https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup ## to find out why this is a problem and how to eliminate them. ## Warning: Examine the pairs() plot to diagnose sampling problems N &lt;- 50 b4.3_50 &lt;- brm(data = d2 %&gt;% slice(1:N), family = gaussian, height ~ 1 + weight_c, prior = c(prior(normal(178, 20), class = Intercept), prior(lognormal(0, 1), class = b), prior(uniform(0, 50), class = sigma)), iter = 28000, warmup = 27000, chains = 4, cores = 4, seed = 4) ## Warning: It appears as if you have specified a lower bounded prior on a parameter that has no natural lower bound. ## If this is really what you want, please specify argument &#39;lb&#39; of &#39;set_prior&#39; appropriately. ## Warning occurred for prior ## b ~ lognormal(0, 1) ## Warning: It appears as if you have specified an upper bounded prior on a parameter that has no natural upper bound. ## If this is really what you want, please specify argument &#39;ub&#39; of &#39;set_prior&#39; appropriately. ## Warning occurred for prior ## &lt;lower=0&gt; sigma ~ uniform(0, 50) N &lt;- 150 b4.3_150 &lt;- brm(data = d2 %&gt;% slice(1:N), family = gaussian, height ~ 1 + weight_c, prior = c(prior(normal(178, 20), class = Intercept), prior(lognormal(0, 1), class = b), prior(uniform(0, 50), class = sigma)), iter = 28000, warmup = 27000, chains = 4, cores = 4, seed = 4) ## Warning: It appears as if you have specified a lower bounded prior on a parameter that has no natural lower bound. ## If this is really what you want, please specify argument &#39;lb&#39; of &#39;set_prior&#39; appropriately. ## Warning occurred for prior ## b ~ lognormal(0, 1) ## Warning: It appears as if you have specified an upper bounded prior on a parameter that has no natural upper bound. ## If this is really what you want, please specify argument &#39;ub&#39; of &#39;set_prior&#39; appropriately. ## Warning occurred for prior ## &lt;lower=0&gt; sigma ~ uniform(0, 50) N &lt;- 352 b4.3_352 &lt;- brm(data = d2 %&gt;% slice(1:N), family = gaussian, height ~ 1 + weight_c, prior = c(prior(normal(178, 20), class = Intercept), prior(lognormal(0, 1), class = b), prior(uniform(0, 50), class = sigma)), iter = 28000, warmup = 27000, chains = 4, cores = 4, seed = 4) ## Warning: It appears as if you have specified a lower bounded prior on a parameter that has no natural lower bound. ## If this is really what you want, please specify argument &#39;lb&#39; of &#39;set_prior&#39; appropriately. ## Warning occurred for prior ## b ~ lognormal(0, 1) ## Warning: It appears as if you have specified an upper bounded prior on a parameter that has no natural upper bound. ## If this is really what you want, please specify argument &#39;ub&#39; of &#39;set_prior&#39; appropriately. ## Warning occurred for prior ## &lt;lower=0&gt; sigma ~ uniform(0, 50) post010 &lt;- posterior_samples(b4.3) ## Warning: Method &#39;posterior_samples&#39; is deprecated. Please see ?as_draws for recommended ## alternatives. post050 &lt;- posterior_samples(b4.3_50) ## Warning: Method &#39;posterior_samples&#39; is deprecated. Please see ?as_draws for recommended ## alternatives. post150 &lt;- posterior_samples(b4.3_150) ## Warning: Method &#39;posterior_samples&#39; is deprecated. Please see ?as_draws for recommended ## alternatives. post352 &lt;- posterior_samples(b4.3_352) ## Warning: Method &#39;posterior_samples&#39; is deprecated. Please see ?as_draws for recommended ## alternatives. p1 &lt;- ggplot(data = d2[1:10 , ], aes(x = weight_c, y = height)) + geom_abline(intercept = post010[1:20, 1], slope = post010[1:20, 2], size = 1/3, alpha = .3) + geom_point(shape = 1, size = 2, color = &quot;royalblue&quot;) + coord_cartesian(xlim = range(d2$weight_c), ylim = range(d2$height)) + labs(subtitle = &quot;N = 10&quot;) p2 &lt;- ggplot(data = d2[1:50 , ], aes(x = weight_c, y = height)) + geom_abline(intercept = post050[1:20, 1], slope = post050[1:20, 2], size = 1/3, alpha = .3) + geom_point(shape = 1, size = 2, color = &quot;royalblue&quot;) + coord_cartesian(xlim = range(d2$weight_c), ylim = range(d2$height)) + labs(subtitle = &quot;N = 50&quot;) p3 &lt;- ggplot(data = d2[1:150 , ], aes(x = weight_c, y = height)) + geom_abline(intercept = post150[1:20, 1], slope = post150[1:20, 2], size = 1/3, alpha = .3) + geom_point(shape = 1, size = 2, color = &quot;royalblue&quot;) + coord_cartesian(xlim = range(d2$weight_c), ylim = range(d2$height)) + labs(subtitle = &quot;N = 150&quot;) p4 &lt;- ggplot(data = d2[1:352 , ], aes(x = weight_c, y = height)) + geom_abline(intercept = post352[1:20, 1], slope = post352[1:20, 2], size = 1/3, alpha = .3) + geom_point(shape = 1, size = 2, color = &quot;royalblue&quot;) + coord_cartesian(xlim = range(d2$weight_c), ylim = range(d2$height)) + labs(subtitle = &quot;N = 352&quot;) (p1 + p2 + p3 + p4) &amp; scale_x_continuous(&quot;weight&quot;, breaks = c(-10, 0, 10), labels = c(1, 2, 3)) &amp; theme_classic() 圖 46.20: Samples from the quadratic approximate posterior distribution for the height/weight model with 20 to 352 (increasing) samples of data. 20 Lines sampled from the posterior distribution. 可以看見，當數據越多，事後直線估計給出的穩定性越好，不確定性越小。 post &lt;- extract.samples( m4.3 ) mu_at50 &lt;- post$a + post$b * (50 - xbar) head(mu_at50) ## [1] 158.79180 158.92651 159.26911 158.82235 158.31136 158.65401 也就是說，當體重為 50 kg 時，身高的事後概率分佈可以繪製為： dens(mu_at50, col = rangi2, lwd = 2, xlab = &quot;mu | weight = 50&quot;) 圖 46.21: The quadratic approximate posterior distribution of the mean height, when weight is 50 kg. 相似的，完成上述圖形的不同代碼可以寫作： mu_at_50 &lt;- postb %&gt;% transmute(mu_at_50 = b_Intercept + b_weight_c + 5.01) head(mu_at_50) ## mu_at_50 ## 1 160.45695 ## 2 161.10234 ## 3 160.60840 ## 4 160.49973 ## 5 160.25785 ## 6 160.39972 mu_at_50 %&gt;% ggplot(aes(x = mu_at_50, y = 0)) + stat_halfeye(point_interval = mode_hdi, .width = .95, fill = &quot;royalblue&quot;) + scale_y_continuous(NULL, breaks = NULL) + xlab(expression(mu[&quot;height | weight = 50&quot;])) + theme_classic() 圖 46.22: The quadratic approximate posterior distribution of the mean height, when weight is 50 kg. 如果說你要給他增加一個可信區間，那麼當體重為 50 kg時，身高的事後預測89% 區間是： PI(mu_at50, prob = 0.89) ## 5% 94% ## 158.57187 159.67895 但是其實我們更希望使用這事後概率分佈來繪製平均事後截距，平均事後斜率給出的直線本身的不確定性（也就是這條直線本身的89%區間）。函數 link() 提供了每一名參加實驗對象的事後身高均值的分佈。 mu &lt;- link( m4.3 ) str(mu) ## num [1:1000, 1:352] 157 157 157 158 157 ... 然後我們使用一段體重的區間來做身高的預測值： # define sequence of weights to compute predictions for # these values will be on the horizontal axis weight.seq &lt;- seq( from = 25, to = 70, by = 1) 使用 link() 函數來計算這些體重的事後身高分佈： # use link to compute mu # for each sample from posterior # and for each weight in weight.seq mu &lt;- link(m4.3, data = data.frame(weight = weight.seq)) str(mu) ## num [1:1000, 1:46] 136 137 138 136 137 ... 繪製這些體重值上的預測事後身高均值： # use type = &quot;n&quot; to hide raw data plot( height ~ weight, d2, type = &quot;n&quot;) # loop over samples and plot each mu value for ( i in 1:100) points( weight.seq, mu[i, ], pch = 16, col = col.alpha(rangi2, 0.1)) 圖 46.23: The first 100 values in the distribution of mu at each weight value. 可以看到每一個體重點上的事後身高預測分佈都是一個類似圖 46.21 那樣的正（常）態分佈。而且也能注意到，身高的事後分佈的不確定性，他們每一個體重值上的事後身高分佈的方差其實是根據不同的身高而有大小區別之分。 # summarize the distribution of mu mu.mean &lt;- apply( mu, 2, mean ) mu.PI &lt;- apply( mu, 2, PI, prob = 0.89) # plot raw data # fading out points to make line and interval more visible plot( height ~ weight, data = d2, col = col.alpha(rangi2, 0.5)) # plot the MAP line, aka the mean mu for each weight lines( weight.seq, mu.mean ) # plot a shaded region for 89% PI shade( mu.PI, weight.seq ) 圖 46.24: The height data with 89% compatibility interval of the mean indicated by the shaded region. Compare this region to the distributions of blue points. 考慮身高本身的方差進來： sim.height &lt;- sim(m4.3, data = list(weight = weight.seq)) str(sim.height) ## num [1:1000, 1:46] 142 136 126 137 144 ... height.PI &lt;- apply( sim.height, 2, PI, prob = 0.89) # plot raw data plot( height ~ weight, d2, col = col.alpha(rangi2, 0.5)) # draw MAP line lines( weight.seq, mu.mean ) # draw HPDI region for line # mu.HPDI &lt;- HPDI() shade( mu.PI, weight.seq ) # draw PI for simulated heights shade( height.PI, weight.seq) 圖 46.25: 89% prediction interval for height, as a function of weight. The solid line is the average line for the mean height at each weight. The two shaded regions show different 89% plausible regions. The narrow shaded interval around the line is the distribution of mu. The wider shaded region represents the region within which the model expects to find 89% of actual heights in the population, at each weight. "],["直線和曲線-curves-and-lines.html", "第 47 章 直線和曲線 curves and lines 47.1 多項式回歸模型 47.2 平滑曲線 Splines", " 第 47 章 直線和曲線 curves and lines 兩種方式，一種是多項式回歸模型 (polynomial regression)，另一種是 B-spline。 47.1 多項式回歸模型 使用二次，三次或者多次項構建預測變量的結構。 data(&quot;Howell1&quot;) d &lt;- Howell1 plot( height ~ weight, d) 圖 47.1: The relationship is visibly curved, because we have included the non-adult individuals. 顯然我們有理由考慮使用二次方程的拋物線形式來做這個數據的模型： \\[ \\mu_i = \\alpha + \\beta_1 x_i + \\beta_2 x_i^2 \\] 其完整的模型可以描述為： \\[ \\begin{aligned} h_i &amp; \\sim \\text{Normal}(\\mu_u, \\sigma) \\\\ \\mu_i &amp; = \\alpha + \\beta_1 x_i + \\beta_2 x_i^2 \\\\ \\alpha &amp; \\sim \\text{Normal}(178, 20) \\\\ \\beta_1 &amp; \\sim \\text{Log-normal}(0, 1) \\\\ \\beta_2 &amp; \\sim \\text{Normal}(0, 1) \\\\ \\sigma &amp; \\sim \\text{Uniform}(0, 50) \\end{aligned} \\] d$weight_s &lt;- (d$weight - mean(d$weight)) / sd(d$weight) d$weight_s2 &lt;- d$weight_s^2 m4.5 &lt;- quap( alist( height ~ dnorm( mu, sigma), mu &lt;- a + b1*weight_s + b2*weight_s2, a ~ dnorm( 178, 20 ), b1 ~ dlnorm( 0, 1 ), b2 ~ dnorm( 0, 1 ), sigma ~ dunif(0 , 50) ), data = d ) precis(m4.5) ## mean sd 5.5% 94.5% ## a 146.0574158 0.36897479 145.4677228 146.6471088 ## b1 21.7330542 0.28888840 21.2713548 22.1947537 ## b2 -7.8032786 0.27418323 -8.2414764 -7.3650809 ## sigma 5.7744619 0.17646418 5.4924380 6.0564857 weight.seq &lt;- seq( from = -2.2, to = 2, length.out = 30) pred_dat &lt;- list(weight_s = weight.seq, weight_s2 = weight.seq^2) mu &lt;- link( m4.5, data = pred_dat) mu.mean &lt;- apply(mu, 2, mean) mu.PI &lt;- apply( mu, 2, PI, prob = 0.89) sim.height &lt;- sim( m4.5, data = pred_dat) height.PI &lt;- apply( sim.height, 2, PI, prob = 0.89) plot( height ~ weight_s, d, col = col.alpha(rangi2, 0.5)) lines( weight.seq, mu.mean ) shade( mu.PI, weight.seq) shade(height.PI, weight.seq) 圖 47.2: Polynomial (a second order, quadratic) regressions of height on weight (standardized) for the height data. The solid curves show the path of mu in the model, and the shaded regions show the 89% interval of the mean (close to the solid curve), and the 89% interval of predictions (wider). 你可以更進一步，使用一個三次方（cubic）模型來看看是否接近實際數據本身的分佈。 \\[ \\begin{aligned} h_i &amp; \\sim \\text{Normal}(\\mu_u, \\sigma) \\\\ \\mu_i &amp; = \\alpha + \\beta_1 x_i + \\beta_2 x_i^2 + \\beta_3x_i^3\\\\ \\alpha &amp; \\sim \\text{Normal}(178, 20) \\\\ \\beta_1 &amp; \\sim \\text{Log-normal}(0, 1) \\\\ \\beta_2 &amp; \\sim \\text{Normal}(0, 1) \\\\ \\beta_3 &amp; \\sim \\text{Normal}(0, 1) \\\\ \\sigma &amp; \\sim \\text{Uniform}(0, 50) \\end{aligned} \\] d$weight_s3 &lt;- d$weight_s^3 m4.6 &lt;- quap( alist( height ~ dnorm( mu, sigma), mu &lt;- a + b1*weight_s + b2*weight_s2 + b3*weight_s3, a ~ dnorm( 178, 20 ), b1 ~ dlnorm( 0, 1 ), b2 ~ dnorm( 0, 1 ), b3 ~ dnorm( 0, 1 ), sigma ~ dunif(0 , 50) ), data = d ) precis(m4.6) ## mean sd 5.5% 94.5% ## a 146.3945405 0.30998713 145.8991212 146.8899598 ## b1 15.2197281 0.47626526 14.4585642 15.9808920 ## b2 -6.2026117 0.25715822 -6.6136002 -5.7916232 ## b3 3.5833790 0.22877341 3.2177549 3.9490031 ## sigma 4.8298893 0.14694262 4.5950466 5.0647320 weight.seq &lt;- seq( from = -2.2, to = 2, length.out = 30) pred_dat &lt;- list(weight_s = weight.seq, weight_s2 = weight.seq^2, weight_s3 = weight.seq^3) mu &lt;- link( m4.6, data = pred_dat) mu.mean &lt;- apply(mu, 2, mean) mu.PI &lt;- apply( mu, 2, PI, prob = 0.89) sim.height &lt;- sim( m4.6, data = pred_dat) height.PI &lt;- apply( sim.height, 2, PI, prob = 0.89) plot( height ~ weight_s, d, col = col.alpha(rangi2, 0.5)) lines( weight.seq, mu.mean ) shade( mu.PI, weight.seq) shade(height.PI, weight.seq) 圖 47.3: Polynomial (a third order, cubic) regressions of height on weight (standardized) for the height data. The solid curves show the path of mu in the model, and the shaded regions show the 89% interval of the mean (close to the solid curve), and the 89% interval of predictions (wider). 在使用標準化的 Z 值計算之後，如果你希望恢復到原來的尺度，而不是標準化的 x 軸，可以按照以下步驟： plot( height ~ weight_s, d, col = col.alpha(rangi2, 0.50), xaxt = &quot;n&quot;) at &lt;- c(-2, -1, 0, 1, 2) labels &lt;- at*sd(d$weight) + mean(d$weight) axis( side = 1, at = at, labels = round(labels, 1)) 圖 47.4: Converting back to natural scale. 47.2 平滑曲線 Splines B-Splines 是基礎 (basic) 平滑曲線的涵義。下面的數據紀錄了每年春天櫻花開放的日期： data(&quot;cherry_blossoms&quot;) d &lt;- cherry_blossoms precis(d) ## mean sd 5.5% 94.5% histogram ## year 1408.0000000 350.88459641 867.77000 1948.23000 ▇▇▇▇▇▇▇▇▇▇▇▇▁ ## doy 104.5405079 6.40703618 94.43000 115.00000 ▁▂▅▇▇▃▁▁ ## temp 6.1418861 0.66364787 5.15000 7.29470 ▁▃▅▇▃▂▁▁ ## temp_upper 7.1851512 0.99292057 5.89765 8.90235 ▁▂▅▇▇▅▂▂▁▁▁▁▁▁▁ ## temp_lower 5.0989413 0.85034959 3.78765 6.37000 ▁▁▁▁▁▁▁▃▅▇▃▂▁▁▁ 其中每年第一次確認的開花的日期被紀錄為 doy 變量。它的範圍是在每年的第 86 (三月底) ~124 (五月初)天: range(d$doy, na.rm = TRUE) ## [1] 86 124 plot(d$year, d$doy) 圖 47.5: 橫軸是年份，縱軸是每年第一天開花的日子 為了評估這個每年第一天開花紀錄的日期是否隨著時間有怎樣的變化趨勢，我們選擇使用基礎平滑曲線的方法： \\[ \\mu_i = \\alpha + w_1 B_{i,1} + w_2 B_{i,2} + w_3 B_{i,3} + \\dots \\] 其中， \\(B_{i,n}\\) 是橫軸第 \\(i\\) 年份的第 \\(n\\) 個區間的基礎函數 (basis function) \\(w_n\\) 是該基礎函數本身的權重 假定我們選擇使用 15 個節點 (knots)，也就是 \\(n = 15\\)，來繪製該數據的平滑曲線： d2 &lt;- d[complete.cases(d$doy), ] # complete cases on doy num_knots &lt;- 15 knot_list &lt;- quantile( d2$year, probs = seq(0, 1, length.out = num_knots)) str(knot_list) ## Named num [1:15] 812 1036 1174 1269 1377 ... ## - attr(*, &quot;names&quot;)= chr [1:15] &quot;0%&quot; &quot;7.142857%&quot; &quot;14.28571%&quot; &quot;21.42857%&quot; ... knot_list # 15 dates ## 0% 7.142857% 14.28571% 21.42857% 28.57143% 35.71429% 42.85714% 50% 57.14286% 64.28571% ## 812 1036 1174 1269 1377 1454 1518 1583 1650 1714 ## 71.42857% 78.57143% 85.71429% 92.85714% 100% ## 1774 1833 1893 1956 2015 我們來建立一個三次方平滑曲線，cubic spline： B &lt;- bs(d2$year, knots = knot_list[ - c(1, num_knots)] , degree = 3, intercept = TRUE ) head(B) ## 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 ## [1,] 1.00000000 0.000000000 0.00000000000 0.0000000e+00 0 0 0 0 0 0 0 0 0 0 0 0 0 ## [2,] 0.96035713 0.039312303 0.00032983669 7.2860303e-07 0 0 0 0 0 0 0 0 0 0 0 0 0 ## [3,] 0.76650948 0.220745951 0.01255948103 1.8509216e-04 0 0 0 0 0 0 0 0 0 0 0 0 0 ## [4,] 0.56334070 0.385673722 0.04938483524 1.6007409e-03 0 0 0 0 0 0 0 0 0 0 0 0 0 ## [5,] 0.54526700 0.398683678 0.05418946879 1.8598537e-03 0 0 0 0 0 0 0 0 0 0 0 0 0 ## [6,] 0.45273210 0.459759692 0.08371386242 3.7943487e-03 0 0 0 0 0 0 0 0 0 0 0 0 0 B 其實是一個 827 行，17 列的矩陣。每一行是一個年份，對應 d2 數據框的每一行。每一列，則是對應一個基礎函數 basic function。為了繪製這些基礎函數，我們可以把他們和對應的年份作圖： plot(NULL, xlim = range(d2$year), ylim = c(0, 1), xlab = &quot;year&quot;, ylab = &quot;basis&quot;) for( i in 1:ncol(B)) lines( d2$year, B[, i]) 圖 47.6: the basic functions of the blossom data with 15 knots. 模型本身只是一個簡單線型回歸其實： \\[ \\begin{aligned} D_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) \\\\ \\mu_i &amp; = \\alpha + \\sum_{k = 1}^K w_k B_{k,i} \\\\ \\text{Priors :} &amp; \\\\ \\alpha &amp; \\sim \\text{Normal}(100, 10) \\\\ w_j &amp; \\sim \\text{Normal}(0, 10) \\\\ \\sigma &amp; \\sim \\text{Exponential} (1) \\end{aligned} \\] 對於像方差，標準差這樣必須大於零的參數來說，選用指數分佈作為先驗概率分佈其實是比較常見的。 實際運算這個模型，獲取 \\(w_j\\) 們的事後概率分佈： m4.7 &lt;- quap( alist( D ~ dnorm( mu, sigma ), mu &lt;- a + B %*% w , a ~ dnorm(100, 10), w ~ dnorm(0, 10), sigma ~ dexp(1) ), data = list(D = d2$doy, B = B), start = list( w = rep(0, ncol(B))) ) precis(m4.7, depth = 2) ## mean sd 5.5% 94.5% ## w[1] -3.01975939 3.86116673 -9.190649574 3.15113078 ## w[2] -0.83435191 3.87014567 -7.019592169 5.35088835 ## w[3] -1.05229324 3.58491642 -6.781682058 4.67709559 ## w[4] 4.84212482 2.87708709 0.243983966 9.44026566 ## w[5] -0.83877820 2.87429504 -5.432456817 3.75490041 ## w[6] 4.32684717 2.91481867 -0.331596025 8.98529036 ## w[7] -5.32336368 2.80017706 -9.798587450 -0.84813991 ## w[8] 7.84857262 2.80203636 3.370377332 12.32676792 ## w[9] -1.00540484 2.88100207 -5.609802577 3.59899290 ## w[10] 3.03456155 2.91006945 -1.616291474 7.68541458 ## w[11] 4.67146784 2.89167834 0.050007362 9.29292832 ## w[12] -0.15856869 2.86936616 -4.744370007 4.42723262 ## w[13] 5.56832971 2.88738944 0.953723710 10.18293571 ## w[14] 0.70828833 2.99925702 -4.085103668 5.50168033 ## w[15] -0.79633311 3.29347388 -6.059940468 4.46727424 ## w[16] -6.96872059 3.37571746 -12.363769079 -1.57367209 ## w[17] -7.66032665 3.22272168 -12.810858321 -2.50979497 ## a 103.34854121 2.36968067 99.561333816 107.13574861 ## sigma 5.87661606 0.14375338 5.646870395 6.10636172 繪製增加了權重 \\(w_j\\) 和基礎函數結合的平滑曲線： post &lt;- extract.samples( m4.7 ) w &lt;- apply( post$w, 2, mean ) plot(NULL, xlim = range(d2$year), ylim = c(-6, 6), xlab = &quot;year&quot;, ylab = &quot;basis * weight&quot;) for( i in 1 : ncol(B)) lines( d2$year, w[i]*B[,i]) 圖 47.7: The cubic spline of the blossom data with 15 knots. (each basis weighted by its correponding parameter) mu &lt;- link( m4.7 ) dim(mu) ## [1] 1000 827 mu_PI &lt;- apply( mu, 2, PI, 0.97) dim(mu_PI) ## [1] 2 827 mu_mean &lt;- apply( mu, 2, mean) plot( d2$year, d2$doy, col = col.alpha(rangi2, 0.3), pch = 16) lines(d2$year, mu_mean) shade(mu_PI, d2$year, col = col.alpha(&quot;black&quot;, 0.5)) 圖 47.8: The cubic spline of the blossom data with 15 knots. (the sum of these weighted basis functions, at each point, produces the spline. displayed as 97% posterior interval of mu.) 圖形顯示的開花時間和年份之間的曲線關係，可見在1500年前後發生了某些情況。而且近年來似乎有提早開花的傾向。 "],["多重線性回歸模型-many-more-variables.html", "第 48 章 多重線性回歸模型 many more variables 48.1 虛假的相關性 48.2 繪製輔助我們理解的有向無環圖 48.3 多重線性回歸模型的表達 48.4 被掩蓋起來的關係 48.5 分類型變量 categorical variables", " 第 48 章 多重線性回歸模型 many more variables 48.1 虛假的相關性 一起來看看一個關於結婚，離婚，和美國每個州的華夫餅餐廳的個數的數據： data(&quot;WaffleDivorce&quot;) d &lt;- WaffleDivorce head(d) ## Location Loc Population MedianAgeMarriage Marriage Marriage.SE Divorce Divorce.SE WaffleHouses ## 1 Alabama AL 4.78 25.3 20.2 1.27 12.7 0.79 128 ## 2 Alaska AK 0.71 25.2 26.0 2.93 12.5 2.05 0 ## 3 Arizona AZ 6.33 25.8 20.3 0.98 10.8 0.74 18 ## 4 Arkansas AR 2.92 24.3 26.4 1.70 13.5 1.22 41 ## 5 California CA 37.25 26.8 19.1 0.39 8.0 0.24 0 ## 6 Colorado CO 5.03 25.7 23.5 1.24 11.6 0.94 11 ## South Slaves1860 Population1860 PropSlaves1860 ## 1 1 435080 964201 0.45 ## 2 0 0 0 0.00 ## 3 0 0 0 0.00 ## 4 1 111115 435450 0.26 ## 5 0 0 379994 0.00 ## 6 0 0 34277 0.00 把數據標準化： d$D &lt;- standardize( d$Divorce ) d$M &lt;- standardize( d$Marriage ) d$A &lt;- standardize( d$MedianAgeMarriage ) 先粗略繪製年齡中位數和離婚率標準化之後的散點圖： plot(d$D, d$A) 圖 48.1: Divorce rate looks inversely associated with median age at marriage. 結婚時年齡的中位數和離婚率之間的關係如果假定是線性的，那麼我們描述它的模型如下： \\[ \\begin{aligned} D_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) \\\\ \\mu_i &amp; = \\alpha + \\beta_A A_i \\\\ \\alpha &amp; \\sim \\text{Normal}(0, 0.2) \\\\ \\beta_A &amp; \\sim \\text{Normal}(0, 0.5) \\\\ \\sigma &amp; \\sim \\text{Exponential}(1) \\end{aligned} \\] 其中， \\(D_i\\) 是第 \\(i\\) 個州的標準化後的離婚率 (均值為零，標準差為1) \\(A_i\\) 是第 \\(i\\) 個州的標準化後的結婚年齡中位數 由於預測變量和結果變量都被標準化了，他們組成的線型回歸函數的截距 \\(\\alpha\\) 應該十分接近 0。至於斜率 \\(\\beta_A\\)，它的涵義是，每增加一個標準差單位的結婚年齡中位數，隨之增加的標準差離婚率。那麼一個單位的結婚年齡標準差是多少呢？ sd( d$MedianAgeMarriage ) ## [1] 1.2436303 上述先驗概率分佈 \\(\\beta_A \\sim \\text{Normal}(0, 0.5)\\) 其實暗示我們認為這個斜率大於 1 的概率很低，低於 2.275%： 1 - pnorm(1, 0, 0.5) ## [1] 0.022750132 實際使用二次方程近似法獲取其事後概率分佈的代碼如下： m5.1 &lt;- quap( alist( D ~ dnorm( mu, sigma ), mu &lt;- a + bA * A, a ~ dnorm(0, 0.2), bA ~ dnorm(0, 0.5), sigma ~ dexp(1) ), data = d ) precis(m5.1) ## mean sd 5.5% 94.5% ## a -8.3387299e-07 0.097378736 -0.15563086 0.15562919 ## bA -5.6840335e-01 0.109999760 -0.74420421 -0.39260249 ## sigma 7.8832536e-01 0.078011255 0.66364831 0.91300241 看看我們的先驗概率分佈都會給出哪些可能性： set.seed(10) prior &lt;- extract.prior( m5.1 ) mu &lt;- link(m5.1, post = prior, data = list(A = c(-2, 2))) plot(NULL, xlim = c(-2, 2), ylim = c(-2, 2), xlab = &quot;Median age married (std)&quot;, ylab = &quot;Divorce rate (std)&quot;) for( i in 1:50) lines(c(-2, 2), mu[i, ], col = col.alpha(&quot;black&quot;, 0.4)) 圖 48.2: Plausible regression lines implied by the priors in m5.1. These are weakly informative priors that they allow some implusbly strong relationships but generally bound the lines to possible ranges of the variables. 繪製實際事後估計的回歸直線： # compute percentile interval of mean A_seq &lt;- seq(from = -3, to = 3.2, length.out = 30) mu &lt;- link(m5.1, data = list(A = A_seq)) mu.mean &lt;- apply( mu, 2, mean ) mu.PI &lt;- apply(mu, 2, PI) # plot plot( D ~ A, data = d, col = rangi2, xlab = &quot;Median age married (std, years)&quot;, ylab = &quot;Divorce rate (std, per/1000 adults)&quot;, xaxt = &quot;n&quot;, yaxt = &quot;n&quot;) at &lt;- c(-2, -1, 0, 1, 2, 3) labels &lt;- at*sd(d$MedianAgeMarriage) + mean(d$MedianAgeMarriage) labelsy &lt;- at*sd(d$Divorce) + mean(d$Divorce) lines( A_seq, mu.mean, lwd = 2) shade( mu.PI, A_seq ) axis( side = 1, at = at, labels = round(labels, 1)) axis( side =2, at = at, labels = round(labelsy, 2)) 圖 48.3: Divorce rate is negatively associated with median age at marriage. 我們可以使用相似的方法計算並繪製結婚率和離婚率之間可能存在的線性關係： m5.2 &lt;- quap( alist( D ~ dnorm( mu, sigma ), mu &lt;- a + bM * M, a ~ dnorm( 0, 0.2 ), bM ~ dnorm( 0, 0.5 ), sigma ~ dexp(1) ), data = d ) precis(m5.2) ## mean sd 5.5% 94.5% ## a 2.9180230e-07 0.10824642 -0.17299839 0.17299897 ## bM 3.5005402e-01 0.12592744 0.14879765 0.55131038 ## sigma 9.1026531e-01 0.08986239 0.76664786 1.05388277 # compute percentile interval of mean M_seq &lt;- seq(from = -3, to = 3.2, length.out = 30) mu &lt;- link(m5.2, data = list(M = M_seq)) mu.mean &lt;- apply( mu, 2, mean ) mu.PI &lt;- apply(mu, 2, PI) # plot plot( D ~ M, data = d, col = rangi2, xlab = &quot;Marriage rate (std, per/1000 adults)&quot;, ylab = &quot;Divorce rate (std, per/1000 adults)&quot;, xaxt = &quot;n&quot;, yaxt = &quot;n&quot;) at &lt;- c(-2, -1, 0, 1, 2, 3) labels &lt;- at*sd(d$Marriage) + mean(d$Marriage) labelsy &lt;- at*sd(d$Divorce) + mean(d$Divorce) lines( A_seq, mu.mean, lwd = 2) shade( mu.PI, A_seq ) axis( side = 1, at = at, labels = round(labels, 1)) axis( side =2, at = at, labels = round(labelsy, 2)) 圖 48.4: Divorce rate is negatively associated with median age at marriage. 似乎結婚率和離婚率存在著正關係。 48.2 繪製輔助我們理解的有向無環圖 # library(dagitty) dag5.1 &lt;- dagitty( &quot;dag{ A -&gt; D; A -&gt; M; M -&gt; D }&quot; ) coordinates(dag5.1) &lt;- list( x=c(A=0,D=1,M=2) , y=c(A=0,D=1,M=0) ) drawdag( dag5.1 ) 圖 48.5: A possible DAG for the divorce rate data. (A = median of age at marriage; M = marriage rate; D = divorce rate) 圖 48.5 顯示了三者之間的關係： A直接影響D M直接影響D A直接影響M 也就是說，A有兩個路徑可以影響到D： A \\(\\rightarrow\\) D A \\(\\rightarrow\\) M \\(\\rightarrow\\) D # library(dagitty) dag5.1.1 &lt;- dagitty( &quot;dag{ A -&gt; D; A -&gt; M }&quot; ) coordinates(dag5.1.1) &lt;- list( x=c(A=0,D=1,M=2) , y=c(A=0,D=1,M=0) ) drawdag( dag5.1.1 ) 圖 48.6: Another possible DAG for the divorce rate data, M does not influence D. (A = median of age at marriage; M = marriage rate; D = divorce rate) 在第二個 DAG 圖 48.6 中，一個可以被驗證的關係是： \\[ D \\perp\\!\\!\\!\\perp M |A \\] 可以通過 dagitty 的提示告訴我們相同的信息： {r introBayes08-07, cache=TRUE} DMA_dag2 &lt;- dagitty('dag{ D &lt;- A -&gt; M }') impliedConditionalIndependencies(DMA_dag2) 第一個 DAG 圖的關係如下： DMA_dag1 &lt;- dagitty(&#39;dag{ D &lt;- A -&gt; M -&gt; D}&#39;) impliedConditionalIndependencies(DMA_dag1) 你會看見你的計算機不給出任何結果，這是因為此時沒有條件獨立性的關係。 多重線型回歸，其實是幫我們描述這樣一個問題： 當已知的變量都已經控制了的時候，新增的一個變量，是否會對結果變量的信息還有任何額外的貢獻？ Is there any additional value in knowing a variable, once I already know all of the other predictor variables? 48.3 多重線性回歸模型的表達 入果我們為離婚率數據設定結婚年齡中位數，和結婚率兩個變量作為預測變量的線性回歸模型，可以描述成； \\[ \\begin{aligned} D_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) &amp; \\text{[Probability of data]} \\\\ \\mu_i &amp; = \\alpha + \\beta_M M_i + \\beta_A A_i &amp; \\text{[Linear model]} \\\\ \\alpha &amp; \\sim \\text{Normal}(0, 0.2) &amp; \\text{[Prior for } \\alpha] \\\\ \\beta_M &amp; \\sim \\text{Normal}(0, 0.5) &amp; \\text{[Prior for } \\beta_M] \\\\ \\beta_A &amp; \\sim \\text{Normal}(0, 0.5) &amp; \\text{[Prior for } \\beta_A] \\\\ \\sigma &amp; \\sim \\text{Exponential}(1) &amp; \\text{[Prior for } \\sigma] \\end{aligned} \\] 實際運行這個模型： m5.3 &lt;- quap( alist( D ~ dnorm(mu, sigma), mu &lt;- a + bM * M + bA * A, a ~ dnorm(0, 0.2), bM ~ dnorm(0, 0.5), bA ~ dnorm(0, 0.5), sigma ~ dexp(1) ), data = d ) precis(m5.3) ## mean sd 5.5% 94.5% ## a 6.1457915e-06 0.097075027 -0.15513850 0.15515079 ## bM -6.5398990e-02 0.150771110 -0.30636034 0.17556236 ## bA -6.1352639e-01 0.150981657 -0.85482423 -0.37222854 ## sigma 7.8510739e-01 0.077840766 0.66070281 0.90951197 我們來比較一下 bM, bA 在不同模型中的表現： plot( coeftab(m5.1, m5.2, m5.3), par = c(&quot;bA&quot;, &quot;bM&quot;), xlab = &quot;Posterior with 89% credible intervals&quot;) text(-0.8, 9, &quot;bA&quot;, font = 2) text(-0.3, 4, &quot;bM&quot;, font = 2) 圖 48.7: The posterior distributions for parameters of bA and bM among all models. 這個圖顯示的是回歸係數 bA, bM 在不同模型中的表現。 m5.1是只放了一個結婚率 M m5.2是只放了一個結婚年齡中位數 A m5.3是同時放入結婚率M，和年齡中位數 A 可以觀察到，年齡中位數的回歸係屬並不因為是否模型中加入了結婚率 M 這個變量有多大的變化。但是反過來，結婚率 M 和離婚率的關係的回歸係屬，只有在沒有加入年齡中位數變量的 m5.2 模型中才顯現出來，也就是說：“當我們已經知道了結婚年齡的中位數，增加結婚率這個變量並不會對我們了解離婚率有幫助。” 上面廢話了這麼多，其實就是：\\(D \\perp\\!\\!\\!\\perp M |A\\)。所以我們探討的兩個描述這個數據的 DAG 圖 48.5 和圖 48.6 中，前者不能提供上述信息，它被排除了。保留圖 48.6 作為合理的關係圖。也就是說，事實上在 m5.2 中我們看到的結婚率(M)和離婚率(D) 之間的關係事實上是一個虛假的，帶有欺騙性的關係 (spurious)。 48.3.1 預測變量殘差圖 predictor residual plots 預測殘差圖展示的是結果變量 (outcome) 和預測變量殘差 (residual predictor)。有助於理解模型本身。 在模型 m5.3 中，我們加入了兩個預測變量一個是結婚率 M，一個是結婚時年齡中位數 A。計算預測變量殘差，就是把其中一個預測變量做另一個預測變量的結果變量： \\[ \\begin{aligned} M_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) \\\\ \\mu_i &amp; = \\alpha + \\beta A_i\\\\ \\alpha &amp; \\sim \\text{Normal}(0, 0.2)\\\\ \\beta &amp; \\sim \\text{Normal}(0, 0.5) \\\\ \\sigma &amp; \\sim \\text{Exponential}(1) \\end{aligned} \\] m5.4 &lt;- quap( alist( M ~ dnorm( mu, sigma ), mu &lt;- a + bAM * A, a ~ dnorm(0, 0.2), bAM ~ dnorm(0, 0.5), sigma ~ dexp(1) ), data = d ) precis(m5.4) ## mean sd 5.5% 94.5% ## a 9.0545762e-08 0.086847816 -0.13879949 0.13879967 ## bAM -6.9473759e-01 0.095726903 -0.84772767 -0.54174751 ## sigma 6.8173667e-01 0.067580003 0.57373077 0.78974257 之後，我們計算結婚率的殘差的方法就是取觀測到的結婚率和上述模型給出的預測結婚率： mu &lt;- link(m5.4) mu_mean &lt;- apply( mu, 2, mean ) mu_resid &lt;- d$M - mu_mean 當一個州的結婚率殘差是正的，表示結婚率觀測值高於上述模型給出的已知該州結婚年齡中位數時的結婚率預測值。 d$mu_res &lt;- mu_resid m5.4res &lt;- quap( alist( D ~ dnorm( mu, sigma ), mu &lt;- a + bMres * mu_res, a ~ dnorm( 0, 0.2 ), bMres ~ dnorm( 0, 0.5 ), sigma ~ dexp(1) ), data = d ) # compute percentile interval of mean M_seq &lt;- seq(from = -1.8, to = 1.8, length.out = 30) mu &lt;- link(m5.4res, data = list(mu_res = M_seq)) mu.mean &lt;- apply( mu, 2, mean ) mu.PI &lt;- apply(mu, 2, PI) # plot plot( D ~ mu_res, data = d, col = rangi2, xlab = &quot;Marriage rate residuals&quot;, ylab = &quot;Divorce rate (std, per/1000 adults)&quot;) lines( M_seq, mu.mean, lwd = 2) shade( mu.PI, M_seq ) abline(v = 0, lty = 2) 圖 48.8: Plotting marriage rate residuals against the outcome (divorce rate). Residual variation in marriage rate shows little association with divorce rate. 我們使用相同的步驟，來繪製結婚時年齡中位數的預測殘差與結果變量之間的關係圖： # build the model A regress on M m5.41 &lt;- quap( alist( A ~ dnorm( mu, sigma ), mu &lt;- a + bMA * M, a ~ dnorm(0, 0.2), bMA ~ dnorm(0, 0.5), sigma ~ dexp(1) ), data = d ) # calculate the predictor residual for A mu &lt;- link(m5.41) mu_mean &lt;- apply( mu, 2, mean ) mu_resid &lt;- d$A - mu_mean # build model D regress on A residuals d$muA_res &lt;- mu_resid m5.4Ares &lt;- quap( alist( D ~ dnorm( mu, sigma ), mu &lt;- a + bAres * muA_res, a ~ dnorm( 0, 0.2 ), bAres ~ dnorm( 0, 0.5 ), sigma ~ dexp(1) ), data = d ) # compute percentile interval of mean M_seq &lt;- seq(from = -1.8, to = 2.5, length.out = 30) mu &lt;- link(m5.4Ares, data = list(muA_res = M_seq)) mu.mean &lt;- apply( mu, 2, mean ) mu.PI &lt;- apply(mu, 2, PI) # plot plot( D ~ muA_res, data = d, col = rangi2, xlab = &quot;Age at marriage residuals&quot;, ylab = &quot;Divorce rate (std, per/1000 adults)&quot;) lines( M_seq, mu.mean, lwd = 2) shade( mu.PI, M_seq ) abline(v = 0, lty = 2) 圖 48.9: Plotting age at marriage residuals against the outcome (divorce rate). Divorce rate on age at marriage residuals, showing remaining variation, and this variation is associated with divorce rate. 48.3.2 事後分佈預測圖 posterior prediction plots # call link without specifying new data # so it uses original data mu &lt;- link(m5.3) # summarize samples across cases mu_mean &lt;- apply( mu, 2, mean ) mu_PI &lt;- apply(mu, 2, PI) # simulate observations # again no new data, uses original data D_sim &lt;- sim(m5.3, n = 10000) D_PI &lt;- apply(D_sim, 2, PI) 繪製觀測值和預測值之間的散點圖： plot( mu_mean ~ d$D, col = rangi2, ylim = range(mu_PI), xlab = &quot;observed divorce rate&quot;, ylab = &quot;predicted divorce rate&quot;) abline(a = 0, b = 1, lty = 2) for (i in 1 : nrow(d)) lines( rep(d$D[i], 2), mu_PI[, i], col = rangi2) 圖 48.10: Posterior predictive plot for the divorce model, m5.3. The horizontal axis is the observed divorce rate in each state. The vertical axis is the model’s posterior predicted divorce rate, given each state’s median age at marriage and marriage rate. The blue line segments are 89% compatibility intervals. The diagonal line shows where posterior predictions exactly match the sample. 48.3.3 反現實圖 counterfactual plots m5.3_A &lt;- quap( alist( ## A -&gt; D &lt;- M D ~ dnorm(mu, sigma), mu &lt;- a + bM * M + bA * A, a ~ dnorm(0, 0.2), bM ~ dnorm(0, 0.5), bA ~ dnorm(0, 0.5), sigma ~ dexp(1), ## A -&gt; M M ~ dnorm(mu_M, sigma_M), mu_M &lt;- aM + bAM * A, aM ~ dnorm(0, 0.2), bAM ~ dnorm(0, 0.5), sigma_M ~ dexp(1) ), data = d ) precis(m5.3_A) ## mean sd 5.5% 94.5% ## a -5.4525492e-06 0.097077587 -0.15515419 0.15514328 ## bM -6.5343162e-02 0.150776172 -0.30631261 0.17562628 ## bA -6.1347710e-01 0.150986826 -0.85478321 -0.37217099 ## sigma 7.8513448e-01 0.077847493 0.66071915 0.90954981 ## aM 4.4937359e-06 0.086850291 -0.13879905 0.13880803 ## bAM -6.9473193e-01 0.095730203 -0.84772729 -0.54173658 ## sigma_M 6.8176061e-01 0.067585925 0.57374525 0.78977597 可以看見 bAM 是負的，-0.69, (-0.85， 0.54)。也就是說 A 和 M 之間是呈現強烈負相關的。我們來嘗試改變 A，看看會發生什麼。先定義一組A的數據： A_seq &lt;- seq(from = -2, to = 2, length.out = 30) 然後利用 sim() 函數來獲取 simulated 數據： # prep data sim_dat &lt;- data.frame( A = A_seq) # Simulate M and then D, using A_seq s &lt;- sim( m5.3_A, data = sim_dat, vars = c(&quot;M&quot;, &quot;D&quot;)) 繪製 simulated 數據的圖： plot( sim_dat$A, colMeans(s$D), ylim = c(-2, 2), type = &quot;l&quot;, xlab = &quot;Manipulated A&quot;, ylab = &quot;counterfactual D&quot;) shade(apply(s$D, 2, PI), sim_dat$A) mtext(&quot;Total counterfactual effect of A on D&quot;) 圖 48.11: Visualize the predicted effect of manipulating age at marriage A on divorce rate D. (Total causal effect of A on D, A -&gt; D, and A -&gt; M -&gt; D bot effects included. plot( sim_dat$A, colMeans(s$M), ylim = c(-2, 2), type = &quot;l&quot;, xlab = &quot;Manipulated A&quot;, ylab = &quot;counterfactual M&quot;) shade(apply(s$M, 2, PI), sim_dat$A) mtext(&quot;Counterfactual A -&gt; M&quot;) 圖 48.12: Visualize the predicted effect of manipulating age at marriage A on marriage rate M. (Simulated values of M show the estimated influence A -&gt; M. 我們之前已經知道當調整了 A 之後 M 對 D 的貢獻率幾乎可以忽略不計。所以你看到 48.11 和 48.12 相差不明顯。因為 A \\(\\rightarrow\\) M \\(\\rightarrow\\) D 中的第二個箭頭並無多大貢獻。 當然這樣的 simulation 也可以允許我們進行一些數據的總結運算。例如，把結婚年齡的中位數從 20 歲提高到 30 歲的話，帶來的因果效果 (causal effect) 可以這樣來計算； mean(d$MedianAgeMarriage); sd(d$MedianAgeMarriage) ## [1] 26.054 ## [1] 1.2436303 # new data frame, standardized to mean 26.1 and sd 1.24 sim2_dat &lt;- data.frame( A = (c(20, 30 )- 26.1 ) / 1.24) s2 &lt;- sim(m5.3_A, data = sim2_dat, vars = c(&quot;M&quot;, &quot;D&quot;)) mean(s2$D[ , 2] - s2$D[, 1]) ## [1] -4.5458282 標準化離婚率降低了 4.5 個標準差。這是相當大的變化。 值得注意的是，當我們人為的修改了某個預測變量 \\(X\\)，我們實際上打斷了其他所有變量對 \\(X\\) 的影響。這相當於是我們把 DAG 圖修改成為一個無任何變量會影響 \\(X\\) 的版本的 DAG： # library(dagitty) dag5.1.1 &lt;- dagitty( &quot;dag{ A -&gt; D; M -&gt; D }&quot; ) coordinates(dag5.1.1) &lt;- list( x=c(A=0,D=1,M=2) , y=c(A=0,D=1,M=0) ) drawdag( dag5.1.1 ) 圖 48.13: Manipulating M means we break the arrow from A to M. 正如圖 48.13 顯示的那樣，當我們人為修改控制了離婚率 M，那麼 A 結婚年齡中位數就不再對 M 有任何影響。 sim_dat &lt;- data.frame( M = seq(from = -2 , to = 2, length.out = 30), A = 0) s &lt;- sim(m5.3_A, data = sim_dat, vars = &quot;D&quot;) plot(sim_dat$M, colMeans(s), ylim = c(-2, 2), type = &quot;l&quot;, xlab = &quot;manipulated M&quot;, ylab = &quot;counterfactual D&quot;) shade(apply( s, 2, PI), sim_dat$M) mtext( &quot;Total counterfactual effect of M on D&quot;) 圖 48.14: The counterfactual effect of manipulating marriage rate M on divorce rate D. Since M -&gt; D was estimated to be very small, there is no strong trend here. By manipulating M, we break the influence of A on M, and this removes the association between M and D. 48.4 被掩蓋起來的關係 從上述結婚率離婚率的例子中我們學到了，多重線性回歸可以幫助我們找出虛假的關係。另外一個使用多重線性回歸的好處是，我們可以具體的把多個變量同時對一個結果變量的影響給呈現出來。當某兩個變量之間是相關的（correlated），但是其中的每一個和結果變量之間的關係可能是相反方向的時候，問題就很突出。我們來看一個評價奶品質的數據： data(milk) d &lt;- milk str(d) ## &#39;data.frame&#39;: 29 obs. of 8 variables: ## $ clade : Factor w/ 4 levels &quot;Ape&quot;,&quot;New World Monkey&quot;,..: 4 4 4 4 4 2 2 2 2 2 ... ## $ species : Factor w/ 29 levels &quot;A palliata&quot;,&quot;Alouatta seniculus&quot;,..: 11 8 9 10 16 2 1 6 28 27 ... ## $ kcal.per.g : num 0.49 0.51 0.46 0.48 0.6 0.47 0.56 0.89 0.91 0.92 ... ## $ perc.fat : num 16.6 19.3 14.1 14.9 27.3 ... ## $ perc.protein : num 15.4 16.9 16.9 13.2 19.5 ... ## $ perc.lactose : num 68 63.8 69 71.9 53.2 ... ## $ mass : num 1.95 2.09 2.51 1.62 2.19 5.25 5.37 2.51 0.71 0.68 ... ## $ neocortex.perc: num 55.2 NA NA NA NA ... 讓我們重點來看 kcal.per.g（每克奶含有的卡路里），mass（平均母體體重, kg）和 neocortex.perc（大腦新皮質neocortex百分比）這三個變量。通常地認為，腦新皮質含量高的哺乳動物產的奶含有的能量卡路里會較高，主要是為了使之後代的大腦發育更加充分和快速。這裡使用的數據希望能夠進一步了解這樣的問題：“奶的能量含量，這裡是以千卡為單位測量的，和大腦新皮質百分比之間的關係有多大”。讓我們先把這三個變量標準化： d$K &lt;- standardize( d$kcal.per.g ) d$N &lt;- standardize( d$neocortex.perc ) d$M &lt;- standardize( log(d$mass) ) 第一個能想到的模型是簡單的以新皮質百分比做預測變量，奶能量做結果變量的簡單線性回歸模型： \\[ \\begin{aligned} K_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) \\\\ \\mu_i &amp; = \\alpha + \\beta_NN_i \\end{aligned} \\] 讓我們來試著使用二次方近似法獲取上述簡單線性回歸模型各個參數的事後樣本分佈： m5.5_draft &lt;- quap( alist( K ~ dnorm( mu, sigma ), mu &lt;- a + bN * N, a ~ dnorm( 0, 1 ), bN ~ dnorm( 0, 1 ), sigma ~ dexp( 1 ) ), data = d ) 你會看到你的計算機給出下面的警告： Error in quap(alist(K ~ dnorm(mu, sigma), mu &lt;- a + bN * N, a ~ dnorm(0, : initial value in &#39;vmmin&#39; is not finite The start values for the parameters were invalid. This could be caused by missing values (NA) in the data or by start values outside the parameter constraints. If there are no NA values in the data, try using explicit start values. 這主要是因為數據中的 N，是有缺失值的： d$neocortex.perc ## [1] 55.16 NA NA NA NA 64.54 64.54 67.64 NA 68.85 58.85 61.69 60.32 NA NA 69.97 ## [17] NA 70.41 NA 73.40 NA 67.53 NA 71.26 72.60 NA 70.24 76.30 75.49 我們暫且先把這些缺失值無視掉： dcc &lt;- d[ complete.cases(d$K, d$N, d$M), ] dcc ## clade species kcal.per.g perc.fat perc.protein perc.lactose mass ## 1 Strepsirrhine Eulemur fulvus 0.49 16.60 15.42 67.98 1.95 ## 6 New World Monkey Alouatta seniculus 0.47 21.22 23.58 55.20 5.25 ## 7 New World Monkey A palliata 0.56 29.66 23.46 46.88 5.37 ## 8 New World Monkey Cebus apella 0.89 53.41 15.80 30.79 2.51 ## 10 New World Monkey S sciureus 0.92 50.58 22.33 27.09 0.68 ## 11 New World Monkey Cebuella pygmaea 0.80 41.35 20.85 37.80 0.12 ## 12 New World Monkey Callimico goeldii 0.46 3.93 25.30 70.77 0.47 ## 13 New World Monkey Callithrix jacchus 0.71 38.38 20.09 41.53 0.32 ## 16 Old World Monkey Miopithecus talpoin 0.68 40.15 18.08 41.77 1.55 ## 18 Old World Monkey M mulatta 0.97 55.51 13.17 31.32 3.24 ## 20 Old World Monkey Papio spp 0.84 54.31 10.97 34.72 12.30 ## 22 Ape Hylobates lar 0.62 34.51 12.57 52.92 5.37 ## 24 Ape Pongo pygmaeus 0.54 37.78 7.37 54.85 35.48 ## 25 Ape Gorilla gorilla gorilla 0.49 27.18 16.29 56.53 79.43 ## 27 Ape Pan paniscus 0.48 21.18 11.68 67.14 40.74 ## 28 Ape P troglodytes 0.55 36.84 9.54 53.62 33.11 ## 29 Ape Homo sapiens 0.71 50.49 9.84 39.67 54.95 ## neocortex.perc K N M ## 1 55.16 -0.94004081 -2.0801960251 -0.45583571 ## 6 64.54 -1.06395528 -0.5086412889 0.12744080 ## 7 64.54 -0.50634016 -0.5086412889 0.14075054 ## 8 67.64 1.53824860 0.0107424725 -0.30715809 ## 10 68.85 1.72412031 0.2134696826 -1.07626974 ## 11 58.85 0.98063348 -1.4619618059 -2.09783010 ## 12 61.69 -1.12591252 -0.9861392631 -1.29379736 ## 13 60.32 0.42301836 -1.2156733771 -1.52018933 ## 16 69.97 0.23714666 0.4011180093 -0.59103922 ## 18 70.41 2.03390648 0.4748369948 -0.15680955 ## 20 73.40 1.22846242 0.9757910098 0.62883970 ## 22 67.53 -0.13459675 -0.0076872739 0.14075054 ## 24 71.26 -0.63025463 0.6172486713 1.25273549 ## 25 72.60 -0.94004081 0.8417564908 1.72735910 ## 27 70.24 -1.00199805 0.4463546595 1.33415005 ## 28 76.30 -0.56829740 1.4616661415 1.21202044 ## 29 75.49 0.42301836 1.3259561909 1.51036602 只剩下了 17 行的數據。我們把這個數據喂到之前 m5.5_draft 模型中去試試看： m5.5_draft &lt;- quap( alist( K ~ dnorm( mu, sigma ), mu &lt;- a + bN * N, a ~ dnorm( 0, 1 ), bN ~ dnorm( 0, 1 ), sigma ~ dexp( 1 ) ), data = dcc ) 繪製我們在 m5.5_draft 中設定的先驗概率分佈中的任意 50 條回歸直線看看我們的先驗概率分佈選擇是否合理： prior &lt;- extract.prior( m5.5_draft ) xseq &lt;- c(-2, 2) mu &lt;- link( m5.5_draft, post = prior, data = list(N = xseq)) plot(NULL, xlim = xseq, ylim = xseq, bty=&quot;n&quot;, xlab = &quot;neocorrtex percent (std)&quot;, ylab = &quot;kilocal per g (std)&quot;, main = &quot;a ~ dnorm(0, 1) \\nbN ~ dnorm(0, 1)&quot;) for( i in 1:50){ lines( xseq, mu[i, ], col = col.alpha(&quot;black&quot;, 0.3)) } 圖 48.15: Prior predictive distribution for the first primate milk model. The vague first guess of prior choices. These priors are clearly silly. 看圖 48.13 給出的先驗分佈直線是不是有點荒謬。可見無信息的先驗概率分佈不一定是合理的先驗概率分佈。值得推薦的是，我們可以把截距控制在 0 附近，因為顯然當結果變量和預測變量都是標準化的數值之後，他們之間的關係在預測變量是零的事後，結果變量也應該在零附近才合理。另外，斜率的分佈也可以控制在使之盡可能不要出現一些極端情況的斜率： m5.5 &lt;- quap( alist( K ~ dnorm( mu, sigma ), mu &lt;- a + bN * N, a ~ dnorm( 0, 0.2 ), bN ~ dnorm( 0 , 0.5 ), sigma ~ dexp(1) ), data = dcc ) prior &lt;- extract.prior( m5.5 ) xseq &lt;- c(-2, 2) mu &lt;- link( m5.5, post = prior, data = list(N = xseq)) plot(NULL, xlim = xseq, ylim = xseq, bty=&quot;n&quot;, xlab = &quot;neocorrtex percent (std)&quot;, ylab = &quot;kilocal per g (std)&quot;, main = &quot;a ~ dnorm(0, 0.2) \\nbN ~ dnorm(0, 0.5)&quot;) for( i in 1:50){ lines( xseq, mu[i, ], col = col.alpha(&quot;black&quot;, 0.3)) } 圖 48.16: Prior predictive distribution for the first primate milk model. Slightly less silly priors that at least stay within the potential space of observations. 實際 m5.5 給出的事後概率分佈估計是怎樣的呢： precis(m5.5) ## mean sd 5.5% 94.5% ## a 0.039939305 0.15449076 -0.20696676 0.28684537 ## bN 0.133235973 0.22374682 -0.22435467 0.49082661 ## sigma 0.999820124 0.16470797 0.73658498 1.26305527 這個表格到底告訴我們什麼信息了呢？敏感的人應該看得出來，每個參數的事後概率分佈都很不精確，標準差相對均值都較大。把它的事後回歸直線及其 89% 可信區間範圍繪製成如圖 48.17 所示。可見其平均回歸線的斜率本身的確很小，且可信區間很寬，估計十分不精確，事後給出的腦皮質容量比例和每克能量含量之間的關係可能有正也有負。 xseq &lt;- seq( from = min(dcc$N) - 0.15, to = max(dcc$N) + 0.15, length.out = 30) mu &lt;- link( m5.5, data = list(N = xseq)) mu_mean &lt;- apply(mu, 2, mean) mu_PI &lt;- apply(mu, 2, PI) plot( K ~ N, data = dcc , col = rangi2, xlab = &quot;neocortex percent (std)&quot;, ylab = &quot;kilocal per g (std)&quot;) lines( xseq, mu_mean, lwd = 2 ) shade( mu_PI, xseq ) 圖 48.17: Milk energy and neocortex. Weak association between standardized neocortex percent and milk energy. 現在我們思考成年母體的平均體重 mass 這一預測變量。我們使用它的對數值。據說體重這一類身體指標應該盡量使用對數值來進行一些統計學建模。因為我們通常認為取了對數以後的數值是該變量的數量級 (magnitude)。也就是說，我們認為體重的數量級 (magnitude)，而不是體重的測量值 (measure) 本身和產的奶的能量密度有關。 m5.6 &lt;- quap( alist( K ~ dnorm( mu, sigma ) , mu &lt;- a + bM * M, a ~ dnorm(0, 0.2), bM ~ dnorm( 0, 0.5 ), sigma ~ dexp(1) ), data = dcc ) precis(m5.6) ## mean sd 5.5% 94.5% ## a 0.046621524 0.15128173 -0.19515590 0.288398949 ## bM -0.282530276 0.19288794 -0.59080247 0.025741914 ## sigma 0.949314068 0.15707619 0.69827598 1.200352160 體重的對數，和能量密度似乎成負關係。其關係應該比大腦皮質單獨和能量密度之間的關係要強烈一些，且方向是相反的 (圖48.18)。 xseq &lt;- seq( from = min(dcc$M) - 0.15, to = max(dcc$M) + 0.15, length.out = 30) mu &lt;- link( m5.6, data = list(M = xseq)) mu_mean &lt;- apply(mu, 2, mean) mu_PI &lt;- apply(mu, 2, PI) plot( K ~ M, data = dcc , col = rangi2, xlab = &quot;log body mass (std)&quot;, ylab = &quot;kilocal per g (std)&quot;) lines( xseq, mu_mean, lwd = 2 ) shade( mu_PI, xseq ) 圖 48.18: Milk energy and neocortex. Seems stronger but still weak association between standardized log body mass and milk energy. 接下來，我們把兩個預測變量同時加入線性回歸模型中取看看會發生什麼。 \\[ \\begin{aligned} K_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) \\\\ \\mu_i &amp; = \\alpha + \\beta_N N_i + \\beta_M M_i \\\\ \\alpha &amp; \\sim \\text{Normal}(0, 0.2) \\\\ \\beta_N &amp; \\sim \\text{Normal}(0, 0.5) \\\\ \\beta_M &amp; \\sim \\text{Normal}(0, 0.5) \\\\ \\sigma &amp; \\sim \\text{Exponential}(1) \\end{aligned} \\] m5.7 &lt;- quap( alist( K ~ dnorm( mu, sigma ) , mu &lt;- a + bN * N + bM * M, a ~ dnorm( 0, 0.2 ), bN ~ dnorm( 0 , 0.5 ), bM ~ dnorm( 0 , 0.5 ), sigma ~ dexp(1) ), data = dcc ) precis(m5.7) ## mean sd 5.5% 94.5% ## a 0.067997423 0.13399955 -0.14615973 0.28215458 ## bN 0.675156396 0.24829873 0.27832707 1.07198572 ## bM -0.703084221 0.22078035 -1.05593386 -0.35023459 ## sigma 0.738023665 0.13246646 0.52631667 0.94973066 我們驚奇地發現，當兩個變量同時放入模型中時，它們各自和奶能量密度這一結果變量之間的關係都變得更加顯著了 (圖48.19)。每個參數，也就是新皮質比例，和母體重的對數值的事後均值在 m5.7，也就是同時調整了對方的情況下都更加偏離 0。 plot( coeftab(m5.5, m5.6, m5.7), par = c(&quot;bM&quot;, &quot;bN&quot;), xlab = &quot;Posterior estimates with 89% credible intervals&quot;) text(-0.8, 9, &quot;bM&quot;, font = 2) text(-0.3, 4, &quot;bN&quot;, font = 2) abline(v = 0, lty = 2) 圖 48.19: The posterior distributions for parameters of bM and bN among all models. 為什麼這兩個變量同時放入模型之後，他們和結果變量，奶能量密度之間的關係均被增強了呢？在這裡，我們的上下文中其實告訴我們，這兩個預測變量同時都和結果變量是相關的，且其中一個是負相關，另一個是正相關。而同時，他們二者之間本身存在著正相關 (圖48.20)。 pairs( ~ K + M + N, col = rangi2, dcc) 圖 48.20: Simple scatter plots between the three variables. xseq &lt;- seq( from = min(dcc$N) - 0.15, to = max(dcc$N) + 0.15, length.out = 30) mu &lt;- link(m5.7, data = data.frame( N = xseq, M = 0 )) mu_mean &lt;- apply(mu, 2, mean) mu_PI &lt;- apply(mu, 2, PI) plot( NULL, xlim = range(dcc$N), ylim = range(dcc$K) , xlab = &quot;neocortex percent (std)&quot;, ylab = &quot;kilocal per g (std)&quot;, main = &quot;Counterfactual holding M = 0&quot;) lines( xseq, mu_mean, lwd = 2) shade( mu_PI, xseq ) 圖 48.21: Milk energy and neocortex. A model with both neocortex percent (N) and log body mass (M) shows stronger association. xseq &lt;- seq( from = min(dcc$M) - 0.15, to = max(dcc$M) + 0.15, length.out = 30) mu &lt;- link(m5.7, data = data.frame( M = xseq, N = 0 )) mu_mean &lt;- apply(mu, 2, mean) mu_PI &lt;- apply(mu, 2, PI) plot( NULL, xlim = range(dcc$M), ylim = range(dcc$K) , xlab = &quot;log body mass (std)&quot;, ylab = &quot;kilocal per g (std)&quot;, main = &quot;Counterfactual holding N = 0&quot;) lines( xseq, mu_mean, lwd = 2) shade( mu_PI, xseq ) 圖 48.22: Milk energy and log body mass. A model with both neocortex percent (N) and log body mass (M) shows stronger association. 48.5 分類型變量 categorical variables 48.5.1 二進制型變量 使用之前在簡單線性回歸章節介紹過的 Howell1 數據來做演示： data(&quot;Howell1&quot;) d &lt;- Howell1 str(d) ## &#39;data.frame&#39;: 544 obs. of 4 variables: ## $ height: num 152 140 137 157 145 ... ## $ weight: num 47.8 36.5 31.9 53 41.3 ... ## $ age : num 63 63 65 41 51 35 32 27 19 54 ... ## $ male : int 1 0 0 1 0 1 0 1 0 1 ... 該數據中還有一個性別的變量。這裡我們有不同的方式來使用和表達這個二進制型的預測變量。第一種是使用指示變量 (indicator variable)。先無視體重，僅僅使用性別作為身高的預測變量： \\[ \\begin{aligned} h_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) \\\\ \\mu_i &amp; = \\alpha + \\beta_m m_i \\\\ \\alpha &amp; \\sim \\text{Normal}(178, 20) \\\\ \\beta_m &amp; \\sim \\text{Normal}(0, 10) \\\\ \\delta &amp; \\sim \\text{Uniform}(0, 50) \\end{aligned} \\] 這裡 \\(m_i\\) 被稱作是啞變量 dummy variable。當它等於 \\(0\\) 時，\\(\\mu_i = \\alpha\\) ，表示女性的身高。所以 \\(\\beta_m\\) 又可以被理解為是男女的身高差的期望值（或平均值）。 我們看看這幾個先驗概率分佈本身給出的男女身高的預期值是怎樣的： mu_female &lt;- rnorm(10000, 178, 20) mu_male &lt;- rnorm(10000, 178, 20) + rnorm(10000, 0, 10) precis( data.frame(mu_female, mu_male) ) ## mean sd 5.5% 94.5% histogram ## mu_female 177.90358 19.965747 145.84333 210.01769 ▁▁▃▇▇▂▁▁ ## mu_male 178.19590 22.292638 142.64384 213.83733 ▁▁▁▃▇▇▃▁▁ 可見使用啞變量的方法標記會導致男性的身高先驗概率分佈相對女性的方差略微增加了一些（更大的不確定性）。 但其實我們還有另外一種選擇，不使用啞變量，而是是用索引變量 (index variable)。 d$sex &lt;- ifelse( d$male == 1, 2, 1) str(d$sex) ## num [1:544] 2 1 1 2 1 2 1 2 1 2 ... \\[ \\begin{aligned} h_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) \\\\ \\mu_i &amp; = \\alpha_{\\text{SEX}[i]} \\\\ \\alpha_j &amp; \\sim \\text{Normal}(178, 20) &amp; \\text{for } j = 1,2\\\\ \\sigma &amp; \\sim \\text{Uniform}(0, 50) \\end{aligned} \\] 使用上述索引變量的好處是，我們可以放心地給兩個二進制分類變量中的分類賦予相同的先驗概率分佈。 m5.8 &lt;- quap( alist( height ~ dnorm( mu, sigma ), mu &lt;- a[sex], a[sex] ~ dnorm( 178, 20 ), sigma ~ dunif( 0, 50 ) ), data = d ) precis( m5.8, depth = 2) ## mean sd 5.5% 94.5% ## a[1] 134.90938 1.60696208 132.341146 137.477618 ## a[2] 142.57693 1.69750106 139.863999 145.289869 ## sigma 27.31043 0.82807779 25.987001 28.633858 我們還可以通過事後概率分佈的樣本來計算男女的身高差估計值和範圍： post &lt;- extract.samples(m5.8) post$diff_fm &lt;- post$a[, 1] - post$a[, 2] precis(post, depth = 2) ## mean sd 5.5% 94.5% histogram ## sigma 27.2997646 0.82765597 25.970309 28.6042150 ▁▁▁▁▃▇▇▇▃▂▁▁▁▁ ## a[1] 134.8965669 1.62091844 132.307845 137.4731245 ▁▁▁▂▅▇▇▅▂▁▁▁▁ ## a[2] 142.5820213 1.69425567 139.853618 145.3199543 ▁▁▁▁▂▃▇▇▇▃▂▁▁▁▁ ## diff_fm -7.6854544 2.34629363 -11.430447 -3.9080228 ▁▁▁▁▃▇▇▃▁▁▁ 48.5.2 多於兩個分類的分類變量 當分類變量的類型數量遠遠多於兩個時，你會發現啞變量法，也就是指示變量法 (indicator variable) 並不是一個好方法。每增加一個分類，你就要增加一個啞變量。有 \\(k\\) 個分類，你就需要 \\(k - 1\\) 個啞變量。我們建議當存在多個分類的變量時，使用索引變量法會更加有效率。其優點還包括先驗概率分佈的指定變得一致且簡單明瞭。而且這種方法可以直接幫助我們把模型擴展到多層回歸模型 (multilevel models)，也就是混合效應模型 (mixed effect models)。 下面使用相同的哺乳動物產奶能量密度的數據來進行多個分類別量模型的示範： data(milk) d &lt;- milk levels(d$clade) ## [1] &quot;Ape&quot; &quot;New World Monkey&quot; &quot;Old World Monkey&quot; &quot;Strepsirrhine&quot; clade 是一個有四個分類的多分類型變量。分類學上來說這個分類的範圍更加寬泛。生成一個這個變量的索引變量： d$clade_id &lt;- as.integer(d$clade) 用數學模型描述： \\[ \\begin{aligned} K_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) \\\\ \\mu_i &amp; = \\alpha_{\\text{CLADE}[i]} \\\\ \\alpha_j &amp; \\sim \\text{Normal}(0, 0.5) &amp; \\text{ for } j = 1,2,3,4\\\\ \\sigma &amp; \\sim \\text{Exponential}(1) \\end{aligned} \\] 這裡特地把 \\(\\alpha\\) 的先驗概率分佈的方差設置的稍微寬一些些，以允許不同類別的哺乳動物的均值分佈可以有不同的方差： d$K &lt;- standardize( d$kcal.per.g ) m5.9 &lt;- quap( alist( K ~ dnorm(mu, sigma), mu &lt;- a[clade_id], a[clade_id] ~ dnorm(0, 0.5), sigma ~ dexp(1) ), data = d ) precis(m5.9, depth = 2) ## mean sd 5.5% 94.5% ## a[1] -0.48434884 0.217639509 -0.832178807 -0.13651887 ## a[2] 0.36630059 0.217056342 0.019402636 0.71319855 ## a[3] 0.67530601 0.257529169 0.263724658 1.08688736 ## a[4] -0.58580987 0.274507108 -1.024525248 -0.14709449 ## sigma 0.71963849 0.096531092 0.565363158 0.87391382 看這四個不同靈長類物種的奶能量密度的均值事後分佈： labels &lt;- paste(&quot;a[&quot;, 1:4, &quot;]:&quot;, levels(d$clade), sep = &quot;&quot;) plot(precis(m5.9, depth = 2, pars = &quot;a&quot;), labels = labels, xlab = &quot;expected kcal (std)&quot;) 圖 48.23: Posterior distributions of the milk energy density from four different species of primate. "],["有向無環圖-dag-可怕的因果-causal-terror.html", "第 49 章 有向無環圖 DAG &amp; 可怕的因果 Causal Terror 49.1 多重共線性問題 multicollinearity 49.2 治療後偏倚 post-treatment bias 49.3 對撞因子偏倚 collider bias 49.4 直面混雜效應", " 第 49 章 有向無環圖 DAG &amp; 可怕的因果 Causal Terror The most newsworthy scientific studies are the least trustworthy. Maybe popular topics attract more and worse researchers, like flies drawn to the smell of honey? Richard McElreath Berkson’s paradox, 又被叫做是選擇性扭曲現象（selection-distortion effect）。 set.seed(1914) N &lt;- 200 # num grant proposals p &lt;- 0.1 # proportion to select # uncorrelated newsworthiness and trustworthiness nw &lt;- rnorm(N) tw &lt;- rnorm(N) # select top 10 of combined scores s &lt;- nw + tw # total score q &lt;- quantile( s, 1-p ) # top 10% threshold selected &lt;- ifelse( s &gt;= q, TRUE, FALSE) cor(tw[selected], nw[selected]) ## [1] -0.76800831 proposal &lt;- data.frame(nw, tw, selected) with(proposal, plot(nw[!selected], tw[!selected], col=c(&quot;black&quot;), xlim = c(-3,3.5), ylim = c(-3.5,3), bty=&quot;n&quot;, xlab = &quot;newsworthiness&quot;, ylab = &quot;trustworthiness&quot;)) points(proposal$nw[proposal$selected], proposal$tw[proposal$selected], col = c(&quot;blue&quot;), pch = 16) abline(lm(proposal$nw[proposal$selected] ~ proposal$tw[proposal$selected]), lty = 2, lwd = 2, col = c(&quot;blue&quot;)) text(1, -2.8, &quot;rejected&quot;) text(2, 2.5, &quot;selected&quot;, col = c(&quot;blue&quot;)) 圖 49.1: Why the most newsworthy studies might be least trustworthy. 200 research proposals are ranked by combined trustworthiness and news worthiness. The top 10% are selected for funding. While there is no correlation before selection, the two criteria are strongly negatively correlated after selection. The correlation here is -0.77. 49.1 多重共線性問題 multicollinearity 多重共線性，通常當模型的預測變量之間有較強的相互關係的時候會出現。它造成的結果是你的模型給出的事後概率分佈會表現的似乎和任何一個預測變量之間都沒什麼關係，即便事實上其中的一個甚至幾個都可能和結果變量存在著相互依賴的關係。這樣的模型對於研究目的是使用模型來做預測的情形下沒有什麼本質的影響。 想像一下我們想使用一個人的腿長度來預測他/她的身高。你覺得模型中同時放入左右兩條腿的長度作為預測變量的話，事情會變成怎樣的呢？ 下面的代碼是通過計算機模擬生成100個人的身高和腿長度。 N &lt;- 100 # number of individuals set.seed(909) height &lt;- rnorm(N, 10, 2) # sim total height for each leg_prop &lt;- runif(N, 0.4, 0.5) # leg as proportion of height leg_left &lt;- leg_prop * height + # sim left leg as proportion + error rnorm( N, 0, 0.02 ) leg_right &lt;- leg_prop * height + # sim right leg as proportion + error rnorm( N, 0, 0.02 ) # combine into data frame d &lt;- data.frame(height, leg_left, leg_right) head(d) ## height leg_left leg_right ## 1 5.9314170 2.6794115 2.7092861 ## 2 6.5129833 2.6764277 2.6800068 ## 3 9.3466279 3.9271549 3.9849467 ## 4 9.2330335 3.9641911 3.9933889 ## 5 10.3571282 4.4275932 4.4187658 ## 6 10.0889226 4.9566406 4.9718779 如果我們同時使用兩腿的長度作為預測身高的變量建立簡單線性回歸模型的話，我們會期待獲得怎樣的結果？從生成數據的過程我們已知平均地，腿長度佔身高的比例是45%。所以我們其實會期待腿長度的回歸係數應該在 \\(10/4.5 \\approx 2.2\\) 左右。但事實是怎樣呢？ m6.1 &lt;- quap( alist( height ~ dnorm( mu, sigma ), mu &lt;- a + bl * leg_left + br * leg_right, a ~ dnorm( 10, 100 ), bl ~ dnorm(2, 10), br ~ dnorm(2, 10), sigma ~ dexp( 1 ) ), data = d ) precis(m6.1) ## mean sd 5.5% 94.5% ## a 0.98119382 0.28396068 0.52736981 1.43501783 ## bl 0.21384749 2.52707954 -3.82491370 4.25260868 ## br 1.78170461 2.53129314 -2.26379072 5.82719994 ## sigma 0.61711409 0.04343629 0.54769451 0.68653367 左右腿的數據同時放到一個模型裡給出的結果似乎是令人困惑的。 plot(precis(m6.1)) 圖 49.2: If both legs have almost identical lengths, and height is so strongly associated with leg length, then why is this posterior distribution so weird? 我們看模型 m6.1 給出的 bl, br 的事後聯合分佈 (joint posterior distribution)： post &lt;- extract.samples(m6.1) plot(bl ~ br, post, col = col.alpha(rangi2, 0.1), pch = 16) 圖 49.3: Posterior distribution of the association of each leg with hegiht, from model m6.1. Since both variables contain almost identical information, the posterior is a narrow ridge of negatively correlated values. 如圖 49.3 顯示的那樣，當 bl 很大時，br 就很小，反之亦然。 sumblbr &lt;- post$bl + post$br dens(sumblbr, col = rangi2, lwd = 2, xlab = &quot;sum of bl and br&quot;) 圖 49.4: The posterior distribution of the sum of the two parameters is cnetered on the proper association of eight leg with height. 於是我們知道我們應該從模型中去掉其中一個腿的信息，從而獲得正確的模型和計算結果： m6.2 &lt;- quap( alist( height ~ dnorm( mu, sigma ), mu &lt;- a + bl * leg_left, a ~ dnorm( 10, 100 ), bl ~ dnorm(2, 10), sigma ~ dexp( 1 ) ), data = d ) ## Caution, model may not have converged. ## Code 1: Maximum iterations reached. precis(m6.2) ## mean sd 5.5% 94.5% ## a 0.79529830 0.295561841 0.32293340 1.2676632 ## bl 2.03356681 0.063693716 1.93177195 2.1353617 ## sigma 0.64122746 0.047734243 0.56493892 0.7175160 49.1.1 哺乳動物奶質量數據中的共線性 重新打開哺乳動物奶質量數據。我們看其中的含脂肪百分比和含乳糖百分比這兩個變量。把他們標準化： data(milk) d &lt;- milk d$K &lt;- standardize( d$kcal.per.g ) d$F &lt;- standardize( d$perc.fat ) d$L &lt;- standardize( d$perc.lactose ) 下面的模型使用標準化的脂肪百分比和乳糖百分比兩個變量作為預測變量來預測奶的能量密度： # kcal.per.g regressed on perc.fat m6.3 &lt;- quap( alist( K ~ dnorm( mu, sigma ), mu &lt;- a + bF * F, a ~ dnorm( 0, 0.2 ), bF ~ dnorm( 0, 0.5 ), sigma ~ dexp(1) ), data = d ) # kcal.per.g regressed on perc.lactose m6.4 &lt;- quap( alist( K ~ dnorm( mu, sigma ), mu &lt;- a + bL * L, a ~ dnorm( 0, 0.2 ), bL ~ dnorm( 0, 0.5 ), sigma ~ dexp(1) ), data = d ) precis( m6.3 ) ## mean sd 5.5% 94.5% ## a 1.5355260e-07 0.077251946 -0.12346338 0.12346368 ## bF 8.6189697e-01 0.084260876 0.72723181 0.99656212 ## sigma 4.5101794e-01 0.058707561 0.35719192 0.54484396 precis( m6.4 ) ## mean sd 5.5% 94.5% ## a 7.4388174e-07 0.066616333 -0.10646502 0.10646651 ## bL -9.0245498e-01 0.071328484 -1.01645167 -0.78845828 ## sigma 3.8046526e-01 0.049582594 0.30122270 0.45970783 當單獨使用其中之一作為能量密度的預測變量時，我們發現他們各自的回歸係數似乎互相成鏡像數據，一個是正的，另一個是負的。而且二者的回歸係屬的事後概率分佈都很精確，我們認為這兩個單獨變量都是可以用來預測奶能量密度的極佳預測變量。因為脂肪百分比越高，能量密度越高，反之，乳糖含量比例越高，那麼能量密度則越低。我們來看把他們兩個同時加入模型中會發生什麼現象： m6.5 &lt;- quap( alist( K ~ dnorm( mu, sigma ), mu &lt;- a + bF * F + bL * L, a ~ dnorm( 0, 0.2 ), bF ~ dnorm( 0, 0.5 ), bL ~ dnorm( 0, 0.5 ), sigma ~ dexp( 1 ) ), data = d ) precis( m6.5 ) ## mean sd 5.5% 94.5% ## a -3.1721684e-07 0.066035771 -0.10553823 0.10553760 ## bF 2.4349835e-01 0.183578648 -0.04989579 0.53689248 ## bL -6.7808254e-01 0.183776698 -0.97179320 -0.38437188 ## sigma 3.7674180e-01 0.049183935 0.29813637 0.45534722 你看現在 m6.5 模型中同時加入了脂肪百分比，和乳糖百分比的兩個變量。都比單獨使用時給出的回歸係屬更接近 0。而且各自的事後概率分佈的標準差都比單獨使用時大了許多（幾乎兩倍）。這並非是來自計算機模擬的數據，而是真正現實中存在的奶製品測量之後的數據。脂肪百分比和乳糖百分比二者之間存在的很強的互相預測的關係。我們從他們的三點圖可以看出其中的奧妙： pairs( ~ kcal.per.g + perc.fat + perc.lactose, data = d, col = rangi2) 圖 49.5: A pairs plot of the total energy, percent fat, and percent lactose variables from the primate milk data. Percent fat and percent lactose are strongly negatively correlated with one another, providing mostly the same information. 49.2 治療後偏倚 post-treatment bias set.seed(71) # number of plants N &lt;- 100 # simulate initial heights h0 &lt;- rnorm(N, 10, 2) # assign treatments and simulate fungus and growth treatment &lt;- rep(0:1, each = N/2) fungus &lt;- rbinom( N, size = 1, prob = 0.5 - treatment * 0.4) h1 &lt;- h0 + rnorm( N, 5 - 3*fungus ) # compose a clean data frame d &lt;- data.frame( h0 = h0, h1 = h1, treatment = treatment, fungus = fungus) head(d) ## h0 h1 treatment fungus ## 1 9.1363156 14.345788 0 0 ## 2 9.1056256 15.623924 0 0 ## 3 9.0428548 14.386665 0 0 ## 4 10.8342908 15.837422 0 0 ## 5 9.1641987 11.469124 0 1 ## 6 7.6256722 11.107757 0 0 precis(d) ## mean sd 5.5% 94.5% histogram ## h0 9.959780 2.10116231 6.5703278 13.078737 ▁▂▂▂▇▃▂▃▁▁▁▁ ## h1 14.399204 2.68808705 10.6180024 17.933694 ▁▁▃▇▇▇▁▁ ## treatment 0.500000 0.50251891 0.0000000 1.000000 ▇▁▁▁▁▁▁▁▁▇ ## fungus 0.230000 0.42295258 0.0000000 1.000000 ▇▁▁▁▁▁▁▁▁▂ 49.2.1 設定模型 \\[ \\begin{aligned} h_{1,i} &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) \\\\ \\mu_i &amp; = h_{0,i} \\times p \\end{aligned} \\] 其中， \\(h_{0,i}\\) 是在時間 \\(t = 0\\) 時的植物高度； \\(h_{1,i}\\) 是在時間 \\(t = 1\\) 時植物的高度； \\(p\\) 是比例係數，也就是 \\(h_{1,i}\\) 和 \\(h_{0,i}\\) 之間的比值，\\(p = \\frac{h_{1,i}}{h_{0,i}}\\)。如果 \\(p = 1\\) 說明在時間 \\(t = 1\\) 時植物並沒有比在時間 \\(t = 0\\) 時有長高。 這裡我們對 \\(p\\) 使用的先驗概率分佈，應該會集中在 1 的附近，因為無信息表示我們認為植物的高度不會隨時間發生變化。但是這個比例 \\(p\\) 不能為負數。因為它是一個值和另一個值的比值。我們之前使用過相似特質的先驗概率分佈，也就是對數正（常）態分佈（Log-Normal distribution）： \\[ \\beta \\sim \\text{Log-Normal}(0, 0.25) \\] 看看這個先驗概率分佈的密度曲線是什麼樣子： sim_p &lt;- rlnorm(10000, 0, 0.25) precis(sim_p) ## mean sd 5.5% 94.5% histogram ## sim_p 1.03699 0.26298937 0.67068301 1.4963969 ▁▁▃▇▇▃▁▁▁▁▁▁ dens( sim_p, xlim = c(0,3), adj = 0.1) 圖 49.6: Distribution density funciton of Log-Normal(0,0.25) 也就是說，我們給出的這個先驗概率分佈認為，植物在不同時間點之間的生長比例範圍在 0.67 和 1.49 之間，也就是要麼縮水33%，或者最多長高50%。 建立該模型： m6.6 &lt;- quap( alist( h1 ~ dnorm(mu, sigma), mu &lt;- h0 * p , p ~ dlnorm( 0, 0.25 ), sigma ~ dexp(1) ), data = d ) precis(m6.6) ## mean sd 5.5% 94.5% ## p 1.4266259 0.017609916 1.3984818 1.4547699 ## sigma 1.7932857 0.125172622 1.5932357 1.9933357 \\(p\\) 的事後概率分佈均值是 1.43，也就是預估平均每單位時間植物會長高大約 40%。接下來如果加入另外兩個變量，治療組，和是否出現菌落。我們會把這兩個變量對植物施加的影響使用線性回歸模型的方式加到 \\(p\\) 上去： \\[ \\begin{aligned} h_{1, i} &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) \\\\ \\mu_i &amp; = h_{0,i} \\times p \\\\ p &amp; = \\alpha + \\beta_T T_i + \\beta_F F_i \\\\ \\alpha &amp; \\sim \\text{Log-Normal}(0, 0.25) \\\\ \\beta_T &amp; \\sim \\text{Normal}(0, 0.5) \\\\ \\beta_F &amp; \\sim \\text{Normal}(0, 0.5) \\\\ \\sigma &amp; \\sim \\text{Exponential}(1) \\end{aligned} \\] 上述模型的R代碼如下： m6.7 &lt;- quap( alist( h1 ~ dnorm(mu, sigma), mu &lt;- h0 * p , p &lt;- a + bt * treatment + bf * fungus, a ~ dlnorm( 0, 0.2 ), bt ~ dnorm(0, 0.5), bf ~ dnorm(0, 0.5), sigma ~ dexp(1) ), data = d ) precis(m6.7) ## mean sd 5.5% 94.5% ## a 1.4813914677 0.024510693 1.442218647 1.520564289 ## bt 0.0024122219 0.029869649 -0.045325247 0.050149691 ## bf -0.2667189147 0.036547721 -0.325129231 -0.208308598 ## sigma 1.4087974415 0.098620704 1.251182509 1.566412374 這裡似乎在說，治療本身對植物生長速度並無效果，但是有菌落卻對生長比例造成了負影響。可是我們明明知道菌落是否存在，是取決於治療本身的，也就是菌落是治療對土壤造成的結果之一。上述模型似乎在告訴我們，當我們知道了治療造成的結果之一 – 是否有菌落，那麼治療本身對植物生長比例的影響就消失了。正確的模型是，我們應該把菌落這個變量從模型中拿掉，從而尋找治療對植物生長率的效果： m6.8 &lt;- quap( alist( h1 ~ dnorm(mu, sigma), mu &lt;- h0 * p, p &lt;- a + bt * treatment, a ~ dlnorm(0, 0.25), bt ~ dnorm(0, 0.5), sigma ~ dexp(1) ), data = d ) precis(m6.8) ## mean sd 5.5% 94.5% ## a 1.381693513 0.025197600 1.341422882 1.4219641 ## bt 0.083654229 0.034313231 0.028815059 0.1384934 ## sigma 1.746295968 0.121908002 1.551463435 1.9411285 上述的分析過程和結果告訴我們，如果我們把由於治療本身造成的結果之一也錯誤地放進預測變量中的話，治療本身的效果會消失。 這些變量之間的關係還可以用下面的DAG圖來輔助理解： plant_dag &lt;- dagitty(&quot;dag{ H_0 -&gt; H_1 F -&gt; H_1 T -&gt; F }&quot;) coordinates( plant_dag ) &lt;- list(x = c(H_0 = 0 , T = 2, F = 1.5, H_1 = 1), y = c(H_0 = 0 , T = 0, F = 0, H_1 = 0)) drawdag(plant_dag) 圖 49.7: The DAG of the fungus and treatment effect on the grow of plant. 如果我們錯誤地把 \\(F\\) 也放入預測變量中去的話，就把實際治療變量的效果這條通路給堵住了。這在因果推斷中被叫做，由於控制了 F 變量，我們錯誤地在模型中引入了 D - separation。這裡的 D，指的是 directional（方向）。D-separation 在因果推斷中指的是，某個變量在DAG圖中和其他所有變量都獨立。在本例中， 由於控制了 \\(F\\) 而導致從治療變量 \\(T\\) 通往結果變量 \\(H_1\\) 之間的的通路被阻斷了 (\\(T \\rightarrow F \\rightarrow H_1\\))，使得 \\(H_1\\) 和 \\(T\\) 之間變得失去了依賴關係（相互獨立）。 事實上，錯誤地在預測變量中放入治療結果造成的結果不只是可能使我麼誤認為治療無效，也可能使我們誤認為原本無效的治療是有效的。看如下圖 49.8 所提示的因果關係。它的涵義是，該治療土壤的方法確實導致了某些奇怪的菌落的生長，但是，我們種的那個植物並不會被菌落的生長所影響。但是假設有一個未知未測量的變量 “M”，它會同時影響植物和菌落的生長（例如空氣濕度）。這時如果我們建立一個簡單線型回歸模型來尋找治療 \\(T\\) 和植物生長 \\(H_1\\) 之間的關係的話，不小心加入了菌落這一變量會導致本來沒有關係的二者突然出現了治療效果一樣的聯繫。我們來試著模擬一下這個現象。 # define our coordinates dag_coords &lt;- tibble(name = c(&quot;H0&quot;, &quot;H1&quot;, &quot;M&quot;, &quot;F&quot;, &quot;T&quot;), x = c(1, 2, 2.5, 3, 4), y = c(2, 2, 1, 2, 2)) # save our DAG dag &lt;- dagify(F ~ M + T, H1 ~ H0 + M, coords = dag_coords) # plot dag %&gt;% ggplot(aes(x = x, y = y, xend = xend, yend = yend)) + geom_dag_point(aes(color = name == &quot;M&quot;), alpha = 1/2, size = 6.5, show.legend = F) + geom_point(x = 2.5, y = 1, size = 6.5, shape = 1, stroke = 1, color = &quot;orange&quot;) + geom_dag_text(color = &quot;black&quot;) + geom_dag_edges() + scale_color_manual(values = c(&quot;steelblue&quot;, &quot;orange&quot;)) + theme_dag() 圖 49.8: The other DAG of the fungus and treatment effect on the grow of plant. set.seed(71) N &lt;- 1000 h0 &lt;- rnorm(N, 10, 2) treatment &lt;- rep(0:1, each = N/2) M &lt;- rbern(N) fungus &lt;- rbinom( N, size = 1, prob = 0.5 - treatment * 0.5 + 0.4 * M) h1 &lt;- h0 + rnorm( N, 5 + 3 * M) d2 &lt;- data.frame( h0 = h0, h1 = h1, treatment = treatment, fungus = fungus) precis(d2) ## mean sd 5.5% 94.5% histogram ## h0 10.123143 1.99233421 6.9383408 13.428682 ▁▁▂▂▅▇▇▅▃▂▁▁▁▁ ## h1 16.627464 2.64352784 12.3803465 20.692560 ▁▁▃▇▇▇▂▁▁ ## treatment 0.500000 0.50025019 0.0000000 1.000000 ▇▁▁▁▁▁▁▁▁▇ ## fungus 0.461000 0.49872610 0.0000000 1.000000 ▇▁▁▁▁▁▁▁▁▇ # incorrectly included fugus m6.7 &lt;- quap( alist( h1 ~ dnorm(mu, sigma), mu &lt;- h0 * p , p &lt;- a + bt * treatment + bf * fungus, a ~ dlnorm( 0, 0.2 ), bt ~ dnorm(0, 0.5), bf ~ dnorm(0, 0.5), sigma ~ dexp(1) ), data = d2 ) precis(m6.7) ## mean sd 5.5% 94.5% ## a 1.510467260 0.014175421 1.487812200 1.53312232 ## bt 0.066780015 0.015124908 0.042607491 0.09095254 ## bf 0.160977251 0.015183925 0.136710406 0.18524410 ## sigma 2.109488131 0.047098656 2.034215382 2.18476088 # the correct model to see the treatment effect m6.8 &lt;- quap( alist( h1 ~ dnorm(mu, sigma), mu &lt;- h0 * p, p &lt;- a + bt * treatment, a ~ dlnorm(0, 0.25), bt ~ dnorm(0, 0.5), sigma ~ dexp(1) ), data = d2 ) precis(m6.8) ## mean sd 5.5% 94.5% ## a 1.625584183 0.009623561 1.61020387 1.6409644919 ## bt -0.016667949 0.013620282 -0.03843579 0.0050998921 ## sigma 2.222813048 0.049621079 2.14350898 2.3021171159 此時你發現加入 fungus 變量依然對正確的對斷造成了干擾。使得本來不應該出現的治療效果似乎突然成了有效的促進植物生長的治療。 49.3 對撞因子偏倚 collider bias 使用本章節開頭的申請研究經費的例子，我們認為研究的可靠性 (Trustworthiness, T)，和新穎程度 (Newsworthiness, N) 之間是無關聯性的（圖 49.1）。但是，他們二者都會對是否該科研項目被選中 (Selected, S) 造成影響。這樣的關係可以使用下面的 DAG 來表達： grant_dag &lt;- dagitty(&quot;dag{ T -&gt; S N -&gt; S }&quot;) coordinates( grant_dag ) &lt;- list(x = c(T = 0.5, S = 1, N = 1.5), y = c(T = 0, S = 0, N = 0)) drawdag(grant_dag) 圖 49.9: The DAG of the grant selection problem: two unrelated variables (T and N) influence S, a collider example. 對撞因子偏倚的現象很有趣，當上述模型中加入對撞因子 S，就會在統計學上給出影響該對撞因子的變量之間的錯誤的關聯性，這裡就是本不該有關聯的 N 和 T 之間會出現統計學上的關聯性。因為，從邏輯上來說，當你知道了某個項目被選中了，也就是圖 49.1 中藍色的部分，那麼本來不相關的兩個變量之間就存在了互相可以預測的掛係，即，如果此時你又對該科研項目的可信度或者是新穎度之一有所了解的話，你就可以大致猜測它的新穎度或者是可信度。也就是說，在這些被選中接受科研經費贊助的藍色項目中，如果你知道某項目的新穎程度很高很高，那麼你大概可以認為它給出的科研成果的可信度會比較低。同樣的，如果你知道某個科研項目並不是特別新穎的內容，但是它既然被選中了，這就說明該項目本身將會給出的科研成果會是十分令人信服的。 49.3.1 虛假的傷心對撞因子 collider of false sorrow 思考年齡和信服感之間的關係。年齡是否會和幸福感有關係呢？如果有關係，他們之間的關係能算作是因果關係嗎？這裡我們大膽假定每個人出生時幸福感就已被定格，不會隨著年齡而變化。我們已知幸福感會影響一個人是否結婚的概率，大概天天比較樂觀開心表現的有幸福感的人，結婚的概率也相對高一些。另一個可能影響結婚與否的變量一般認為是年齡。很顯然，存活的時間越長，越有機會結婚。這三者之間的關係類似地也可以表達成為 DAG 因果關係圖： marriage_dag &lt;- dagitty(&quot;dag{ H -&gt; M A -&gt; M }&quot;) coordinates( marriage_dag ) &lt;- list(x = c(H = 0.5, M = 1, A = 1.5), y = c(H = 0, M = 0, A = 0)) drawdag(marriage_dag) 圖 49.10: The DAG of the happiniess problem: two unrelated variables (H and A) influence marriage. 根據我們理解的理論，年齡和幸福感各自都會影響結婚與否。結婚這個變量就是一個對撞因子 (collider)。即使我們知道年齡和幸福感之間不應該存在直接的關係，但是假如我們有一個模型，結果變量是幸福感，預測變量是年齡（或者反過來）的話，在預測變量裡增加結婚這個變量會導致本來沒有關係的二者變得有“統計學關係”。這就顯然會誤導我們認為年齡增加和幸福感的增加或者減少是有關聯的（而事實上應該是無關的）。 我們用一個較為極端的例子來做一次計算機模擬： 每年有20名實驗對象出生，且他們擁有符合均一分佈特徵的幸福感。 每年，實驗對象年齡自然會增加一歲。然而幸福感並不會因年齡的增加而增加或減少。 當實驗對象18歲時，有些人會結婚。結婚本身的比值 (odds) 則於該實驗對象的幸福感成一定的比例關係 (proportional)。 當一名實驗對象結婚了以後，她/他保持結婚的狀態，不會離婚。 年齡到65歲之後，該實驗對象離開本次研究。 d &lt;- sim_happiness( seed = 1977, N_years = 1000) precis(d) ## mean sd 5.5% 94.5% histogram ## age 3.3000000e+01 18.7688832 4.0000000 62.0000000 ▇▇▇▇▇▇▇▇▇▇▇▇▇ ## married 3.0076923e-01 0.4587690 0.0000000 1.0000000 ▇▁▁▁▁▁▁▁▁▃ ## happiness 6.8321417e-19 1.2144211 -1.7894737 1.7894737 ▇▅▇▅▅▇▅▇ 這個實驗性的計算機模擬數據本身包含了0-65歲的1300名實驗對象的幸福感和結婚與否的數據。 d %&gt;% mutate(married = factor(married, labels = c(&quot;unmarried&quot;, &quot;married&quot;))) %&gt;% ggplot(aes(x = age, y = happiness)) + geom_point(aes(color = married), size = 1.75) + scale_color_manual(NULL, values = c(&quot;grey85&quot;, &quot;forestgreen&quot;)) + scale_x_continuous(expand = c(.015, .015)) + theme(panel.grid = element_blank()) 圖 49.11: Simulated data, assuming that happiness is uniformly distributed and never changes. Each point is a person. Married individuals are shown with filled blue points. At each age after 18, the happiest individuals are more likely to be married. At later ages, more individuals tend to be married. Marriage status is a collider of age and happiness: A -&gt; M &lt;- H. If we condition on marriage in a regression, it will mislead us to believe that happiness declines with age. 這時，我們希望用這個數據來回答：“年齡是否和幸福感有關係？”這樣的問題。假設你不知道我們在生成這組數據時遵循的上述 1 - 5 條原則。所以你在建立模型的時候很可能自然而然的認為婚姻本身是年齡和幸福感之間關係的混雜因子。也就是你大概會認為結婚的人莫名其妙地就應該比相對更加（不）幸福。這樣的模型應該是這樣子的； \\[ \\mu_i = \\alpha_{\\text{MID}[i]} + \\beta_A A_i \\] 其中， \\(\\text{MID}[i]\\) 是實驗對象 \\(i\\) 是否已經結婚的索引變量 (index variable)，當它等於1時表示單身，等於2時表示已婚。 這其實是我們人為地給已婚者和單身者的幸福感和年齡之間關係的直線設定了各自的截距。 這時，由於18歲以後才可以結婚，我們把該數據的人口年齡限定在18歲及以上者。另外我們再把年齡的尺度縮放一下使得 18-65 歲之間的比例是1： d2 &lt;- d[ d$age &gt; 17, ] # adults only d2$A &lt;- (d2$age - 18) / (65 - 18 ) 經過上述的數據處理，我們使得年齡變量 A 的範圍控制在 0-1 之間，其中 0 代表 18 歲，1 代表 65 歲。幸福感則是一個範圍在 -2, 2 之間的數值。這樣的話，假定年齡和幸福感之間呈現的是極其強烈的正關係，那麼這最極端的斜率也就是 \\((2 - (-2)) / 1 = 4\\)。所以，一個較為合理的斜率的先驗概率分佈，可以是95%的斜率取值分佈在小於極端斜率之內的範圍。其次是為截距 \\(\\alpha\\) 設定合理的先驗概率分佈。因為 \\(\\alpha\\) 本身是年齡等於零，也就是18歲時的幸福感，我們需要這個數據能夠覆蓋所有可能的幸福感取值，-2，2 之間。那麼，標準正（常）態分佈是一個不錯的選擇。 d2$mid &lt;- d2$married + 1 # construct the marriage status index variable m6.9 &lt;- quap( alist( happiness ~ dnorm(mu, sigma), mu &lt;- a[mid] + bA * A, a[mid] ~ dnorm(0, 1), bA ~ dnorm(0, 2), sigma ~ dexp(1) ), data = d2 ) precis(m6.9, depth = 2) ## mean sd 5.5% 94.5% ## a[1] -0.23508769 0.063489864 -0.33655675 -0.13361862 ## a[2] 1.25855173 0.084959885 1.12276943 1.39433404 ## bA -0.74902744 0.113201124 -0.92994470 -0.56811018 ## sigma 0.98970796 0.022557999 0.95365592 1.02576000 看，這個模型似乎很確定，年齡和幸福感是呈現負關係的。對比一下沒有假如婚姻狀態的變量的模型給出的估計結果： m6.10 &lt;- quap( alist( happiness ~ dnorm(mu, sigma), mu &lt;- a + bA * A, a ~ dnorm( 0, 1 ), bA ~ dnorm(0, 2), sigma ~ dexp(1) ), data = d2 ) precis(m6.10) ## mean sd 5.5% 94.5% ## a 1.7251672e-07 0.076750151 -0.12266139 0.12266174 ## bA -2.9070804e-07 0.132259761 -0.21137693 0.21137635 ## sigma 1.2131876e+00 0.027660803 1.16898031 1.25739492 m6.10 才是正確的模型。它正確的給出了年齡和幸福感之間並無關係的結果。模型 m6.9 錯誤地把對撞因子 – 婚姻狀況作為預測變量之一加入了模型中，而婚姻狀況在這個數據背景下，同時是年齡和幸福感的結果（common consequence of age and happiness）。結果就會像 m6.9 那樣，出現年齡和幸福感之間虛假的負關係 (false negative association between the two causes)。m6.9 告訴我們看起來似乎年齡的增長和幸福感呈現負關係，這種僅僅在模型中給出的變量之間的關係應該嚴格來說只能算是一種“統計學的關係 (statistical association)”，不能算是真實的因果關係 (causal association)。正如圖 49.11 所顯示的。當已知實驗對象是已婚或者未婚，實驗對象的年齡似乎能告訴我們他/她的幸福度。看綠色點的部分，這些人都是已婚者，年齡越大，越多人結婚，那麼這個已婚人群的幸福度數值就會平均被拉低。相似的，看空白點的部分，這些人都是未婚者，年齡越大，其中幸福感較強的人都結婚而加入了已婚人群陣營，那麼剩下的人就會感覺幸福度越來越低。所以，當把人群分成未婚和已婚兩個部分的話，這兩個人群中的幸福度都隨著年齡增加而呈現下降趨勢。但是，我們知道，這並不是真實的因果關係。 碰撞因子偏倚本身會出現在當模型中的預測變量加入了某個同時是結果和某一個預測變量的結果的變量（common consequence）。 49.3.2 對撞因子偏倚另一實例（未測量變量造成的碰撞偏倚） 當我們知道並了解了這樣的對撞因子偏倚現象之後，DAG圖非常有助於幫助我們避免陷入這樣的困境。但是，最可怕的其實是未知（未測量）變量可能造成的對撞偏倚。 假設我們想通過數據了解父母親的受教育程度 (P)，祖父母的受教育程度 (G)，和子女的學習成績 (C)，之間的關係，特別是 P, G 對 C 可能的貢獻或者影響。我們很容易就能理解圖 49.12 中所表示的這三個變量之間應該存在的相互因果關係。祖父母的受教育程度很顯然也會對子女的學習成績造成影響 (\\(G \\rightarrow C\\))。 dag6.3.2 &lt;- dagitty( &quot;dag{ G -&gt; P; P -&gt; C; G -&gt; C }&quot; ) coordinates(dag6.3.2) &lt;- list( x=c(G=0,P=1,C=1) , y=c(G=0,P=0,C=1) ) drawdag( dag6.3.2 ) 圖 49.12: Educational achievements between parents (P), grandparents (G), and children (C). 如果此時我們發現，可能有一個未被測量的變量可能同時影響父母 (P)，和子女 (C)，但是對祖父母的教育程度並無直接影響，例如父母和子女生活的社區的環境 (U)，通常祖父母不一定和子女和孫輩生活在一個社區。那麼這個未觀察的社區變量就很可能會造成一個碰撞偏倚： dag6.3.2_u &lt;- dagitty( &quot;dag{ G -&gt; P; P -&gt; C; G -&gt; C ; U -&gt; P ; U -&gt; C U [unobserved]}&quot; ) coordinates(dag6.3.2_u) &lt;- list( x=c(G=0,P=1,C=1,U=1.3) , y=c(G=0,P=0,C=1,U=0.5) ) drawdag( dag6.3.2_u ) 圖 49.13: Educational achievements between parents (P), grandparents (G), and children (C), with an unobserved neighborhood variable (U). 如果因果關係 49.13 成立的話，那麼 P 就是 G 和 U 之間的對撞因子。如果此時我們建立 \\(G \\rightarrow C\\) 模型時把 \\(P\\) 加入預測變量中，即便我們並沒有測量這個 U 變量，對撞因子偏倚也變得不可避免。 我們實際使用計算機模擬來理解這一過程。數據模擬符合下列條件 P 是 G, U 共同影響的結果 (common consequence)。 C 則是 G, U, P 三者共同預測的結果。 G 和 U 不受任一變量的影響（完全獨立）。 N &lt;- 200 # number of grandparent-parent-child traids b_GP &lt;- 1 # direct effect of G on P b_GC &lt;- 0 # direct effect of G on C b_PC &lt;- 1 # direct effect of P on C b_U &lt;- 2 # direct effect of U on P and C 上面的模擬參數其實類似於回歸模型中的回歸係數。注意到我們假設祖父母對孫輩學習成績的影響是 0。接下來我們用這些回歸係數來採集一些符合上述設定的隨機樣本數據： set.seed(1) U &lt;- 2 * rbern( N, 0.5 ) - 1 G &lt;- rnorm( N ) P &lt;- rnorm( N, b_GP * G + b_U * U) C &lt;- rnorm( N, b_PC * P + b_GC * G + b_U * U ) d &lt;- data.frame(C = C, P = P, G = G, U = U) 那麼，該怎樣設定一個模型來分析祖父母對孫輩學習成績的影響呢？我們認為祖父母的教育程度會通過父母親這條通路，影響到子女的學習成績，所以模型中應該要控制 P。那麼下面的代碼建立的是一個簡單的線性回歸模型，結果變量是 C，預測變量是 P 和 G，注意這裡我們假裝沒有測量到，也不知道 U 變量的存在： m6.11 &lt;- quap( alist( C ~ dnorm( mu, sigma ), mu &lt;- a + b_PC * P + b_GC * G, a ~ dnorm(0, 1), c(b_PC, b_GC) ~ dnorm(0, 1), sigma ~ dexp(1) ), data = d ) precis(m6.11) ## mean sd 5.5% 94.5% ## a -0.11747518 0.099195743 -0.27600914 0.041058772 ## b_PC 1.78689146 0.044553553 1.71568628 1.858096644 ## b_GC -0.83895371 0.106140454 -1.00858666 -0.669320768 ## sigma 1.40948908 0.070111393 1.29743753 1.521540626 看模型 m6.11 給出的父母子女的學習成績的影響是多麼的顯著。甚至比我們設定的關係還要大兩倍。這並不奇怪，因為這裡給出的一部分 \\(P \\rightarrow C\\) 的關係應該歸功於 \\(U\\)，但是該模型本身不知道 \\(U\\) 的存在。但是更令人感到驚訝的是，本來設定的祖父母不影響子女學習成績的關係在這個模型中變得顯著呈現負相關，這是有悖常識的。再怎麼說祖父母的受教育程度越高也不能給子女的學習成績帶來負面的影響才是。這個數學模型本身並沒有錯，但是它不能被賦予一個因果關係的解釋。這裏的對撞因子偏倚是如何形成的呢？ d$G_st &lt;- standardize(d$G) d$C_st &lt;- standardize(d$C) d$P_st &lt;- standardize(d$P) P_45 &lt;- quantile(d$P_st, prob = .45) P_60 &lt;- quantile(d$P_st, prob = .60) with(d, plot(G_st[(P_st &lt; P_45 | P_st &gt; P_60) &amp; U == -1], C_st[(P_st &lt; P_45 | P_st &gt; P_60) &amp; U == -1], col = c(&quot;black&quot;), xlim = c(-3,3), ylim = c(-2.5, 2.3), bty=&quot;n&quot;, main = &quot;Parents in 45th to 60th centiles&quot;, xlab = &quot;grandparent education (G)&quot;, ylab = &quot;grandchild education (C)&quot;)) with(d, points(G_st[(P_st &gt;= P_45 &amp; P_st &lt;= P_60) &amp; U == -1], C_st[(P_st &gt;= P_45 &amp; P_st &lt;= P_60) &amp; U == -1], col = c(&quot;black&quot;), pch = 16)) with(d, points(G_st[(P_st &lt; P_45 | P_st &gt; P_60) &amp; U == 1], C_st[(P_st &lt; P_45 | P_st &gt; P_60) &amp; U == 1], col = rangi2)) with(d, points(G_st[(P_st &gt;= P_45 &amp; P_st &lt;= P_60) &amp; U == 1], C_st[(P_st &gt;= P_45 &amp; P_st &lt;= P_60) &amp; U == 1], col = rangi2, pch = 16)) with(d, abline(lm(C_st[(P_st &gt;= P_45 &amp; P_st &lt;= P_60)] ~ G_st[(P_st &gt;= P_45 &amp; P_st &lt;= P_60)]), lty = 2, lwd = 1, col = c(&quot;blue&quot;))) text(-1.5, 2.1, &quot;Good neighborhoods&quot;, col = rangi2) text(0.5, -2.1, &quot;Bad neighborhoods&quot;) 圖 49.14: Unobserved confounds and collider bias. In this example, grandparents influence grandkids only indirectly, through parents. However, unobserved neighborhood effects on parents and their children create the illusion that grand parents harm their grandkids education. Parental education is a collider: once we condition on it, grandparental education becomes negatively associated with grand child education. 繪製祖父母教育水平和子女學習成績之間的散點圖如圖 49.14 所示，橫軸是祖父母的受教育水平，縱軸是子女的學習成績。其中根據未知的變量 U ，也就是子女和父母生活的社區環境的優越與否分成了藍色和黑色兩個部分的散點雲。可以看見不論是在優越街區 (U = 1) 還是在較差的街區 (U = 2)，祖父母的教育水平應該都和子女的學習成績成正相關才對。但是這一關係在我們模擬的數據中是100%通過父母親的受教育水平來體現的，因為我們一開始強制 b_GC &lt;- 0 # direct effect of G on C，也就是 G 直接對 C 的影響的理論值是零。當模型中的預測變量加入了對撞因子，父母親的受教育水平 P 這一變量之後，我們相當於是在強制比較父母受相似教育水平的孩子之間的學習成績。如圖 49.14 中藍色和黑色實心點的部分兒童。當僅使用這些點來做回歸直線時，給出的回歸係數就是負的。這就是模型 m6.11 給出的 b_GC = -0.84 這樣的負數的回歸係屬估計的原因。之所以會出現這樣有趣的對撞因子偏倚，我們可以這樣認為：當我們已知父母親的受教育水平 P 之後，如果再了解了祖父母的受教育水平 G，等於是間接知道了子女和父母生活的街區 (U) 的一部分信息。這裡反覆需要強調的是，街區這一變量是未知未測的變量。所以，假如我們選出兩個小孩，他們的父母親有相似的受教育程度，其中一個的祖父母受教育程度低，在圖49.14的藍色區域，另一個小孩的祖父母受教育程度較高，在圖49.14的黑色區域。那麼之所以這兩個小孩的父母親受教育水平相似，只能是被不同的生活街區所影響（但是這個變量其實是未觀測變量）。所以這時候孩子之間的成績差異其實並非是由祖父母造成的，而是間接地被未知的變量 - 生活街區的優越與否給影響了的。所以我們會看見這樣神奇的現象，也就是父母親相似的教育水平時，如果祖父母受教育水平高，則他們大多生活在不怎麼樣的街區，從而間接導致了小孩學習成績不佳。看起來似乎是祖父母的受教育水平反而對子女學習成績造成了負影響一樣。 這裡，未測量的街區這一變量使得父母親受教育程度這一變量變成了對撞因子，解決對撞因子偏倚的方法其實是，認識到有未測量變量的存在，然後去獲取該變量，加入到你的模型中去： m6.12 &lt;- quap( alist( C ~ dnorm( mu, sigma ), mu &lt;- a + b_PC * P + b_GC * G + b_U * U, a ~ dnorm(0, 1), c(b_PC, b_GC, b_U) ~ dnorm(0, 1), sigma ~ dexp(1) ), data = d ) precis(m6.12) ## mean sd 5.5% 94.5% ## a -0.121992141 0.071924341 -0.23694113 -0.0070431518 ## b_PC 1.011376124 0.065970755 0.90594212 1.1168101310 ## b_GC -0.040922712 0.097285255 -0.19640334 0.1145579143 ## b_U 1.996291887 0.147702000 1.76023556 2.2323482096 ## sigma 1.019577262 0.050799108 0.93839048 1.1007640480 這樣子模型 m6.12 就能準確地給出我們模擬他們的關係的回歸係數。 49.4 直面混雜效應 49.4.1 兩條通路 dag_6.1 &lt;- dagitty(&quot;dag{ U [unobserved] X -&gt; Y X &lt;- U &lt;- A -&gt; C -&gt; Y U -&gt; B &lt;- C }&quot;) coordinates(dag_6.1) &lt;- list( x=c(X = 0, Y = 1, U = 0, A = 0.5, B = 0.5, C = 1), y=c(X = 0, Y = 0, U = -1, A = -1.3, B = -0.7, C = -1) ) drawdag(dag_6.1) 圖 49.15: Two roads DAG. Exposure of interest X, outcome of interest Y, an unbserved variable U, and three observed covariates (A, B, and C) 我們主要關心的是 \\(X \\rightarrow Y\\) 之間的通路，也就是暴露和結果之間的直接因果關係。那在圖 49.15 這一DAG因果關係中的各種變量之間，你應該怎樣選擇加入模型中作為協變量（調整變量）呢？我們尋找一下從起點（暴露變量）到終點（結果變量）之間的所有可行通路： \\(X \\leftarrow U \\leftarrow A \\rightarrow C \\rightarrow Y\\) \\(X \\leftarrow U \\rightarrow B \\leftarrow C \\rightarrow Y\\) \\(X \\rightarrow Y\\) 其中 1. 2. 都含有後門通路 (backdoor paths)，這兩條通路都可能導致我們的推斷受混雜的影響。我們需要通過數學模型把可能存在的後門通路關閉。如果說某個後門通路已經被關閉了，我們則需要小心不要不經意把不該加入模型中的變量給加入然後導致其被偷偷打開。 我們看通路 1.，這條通路通過 \\(A\\)，且沒有任何對撞因子，所以這條通路需要通過調整其變量關閉之，但是 \\(U\\) 是未知未測量變量，無法控制，那我們只好退而求其次，調整 \\(A\\) 或者 \\(C\\)： adjustmentSets( dag_6.1, exposure = &quot;X&quot;, outcome = &quot;Y&quot;) ## { C } ## { A } 如果能調整 \\(U\\) 當然最好，但是它是未測量的變量。\\(A\\) 或者 \\(C\\) 二選一的話，選擇 \\(C\\) 會是更加理想的選擇， 因為它應該同時還能提高對 \\(X\\rightarrow Y\\) 因果關係測量的精確度（increase precision）。 再思考通路 2.，這條通路經過 \\(B\\)，且這個 \\(B\\) 很顯然是一個對撞因子。也就是說這裡的通路已經被這個對撞因子關閉掉了。所以你看計算機也並未建議調整這條通路上的變量。如果有誰不小心把這裡的 \\(B\\) 控制進去的話，反而會打開這條通路，造成對撞因子偏倚。於是我們應該記住這樣一個經驗教訓，在你的模型中假如增加了一個變量導致 \\(X\\rightarrow Y\\)的關係發生了較為顯著的變化，甚至反轉關係，並不一定意味著這個增加的變量提升了你模型的準確度或者是改善了模型的預測能力，而要時時刻刻當心對撞因子偏倚存在的可能性。 49.4.2 華夫餅的後門 回到華夫餅店鋪數量這個數據 (Chapter 48.1) 上來。我們來為這個數據繪製一個 DAG 因果關係圖。我們關心的暴露變量是每個州的瓦夫餅餐廳數量，和結果變量 – 離婚率之間的總體因果關係： dag_6.2 &lt;- dagitty(&quot;dag{ A -&gt; D A -&gt; M -&gt; D A &lt;- S -&gt; M S -&gt; W -&gt; D }&quot;) coordinates(dag_6.2) &lt;- list( x=c(A = 0, D = 1, M = 0.5, S = 0, W = 1), y=c(A = 0, D = 0, M = -0.5, S = -1, W = -1)) drawdag(dag_6.2) 圖 49.16: The waffle backdoor DAG. 圖 49.16 中， S 是所在州是否屬於南方州； A 是所在州的結婚年齡中位數； M 是所在州的結婚率； W 是所在州的瓦夫餅餐廳數量； D 是所在州的離婚率。 上述DAG的涵義在於： 南方州的話，結婚年齡中位數較低 \\(S \\rightarrow A\\)； 南方州的話，結婚率較高 \\(S \\rightarrow M\\)； 上述 \\(S \\rightarrow M\\) 的關係同時還經過 \\(A\\)，也就是 \\(S \\rightarrow A \\rightarrow M\\)； 南方州的華夫餅餐廳數量較多 \\(S \\rightarrow W\\)； 年齡中位數 \\(A\\)，結婚率 \\(M\\)，還有華夫餅餐廳數量 \\(W\\) 都直接影響離婚率，\\(A\\rightarrow D; M\\rightarrow D; W \\rightarrow D\\)。 如果把暴露變量 \\(W\\) 作為通路起點，離婚率 \\(D\\) 作為通路通路終點的話，有三條有後門的通路： \\(W \\leftarrow S \\rightarrow A \\rightarrow D\\) \\(W \\leftarrow S \\rightarrow M \\rightarrow D\\) \\(W \\leftarrow S \\rightarrow A \\rightarrow M \\rightarrow D\\) 你會發現他們的共同點是都經過 \\(S\\)。所以很簡單地，只要控制了 \\(S\\)，那麼全部三條後門通路就都會被關閉。 adjustmentSets( dag_6.2, exposure = &quot;W&quot;, outcome = &quot;D&quot;) ## { A, M } ## { S } 計算機也告訴我們一致的答案，但是除了單獨控制 \\(S\\)，我們還可以選擇同時控制 \\(A, M\\)，來關閉這些後門通路。上述DAG因果關係圖中，所蘊含的條件獨立性關係為： impliedConditionalIndependencies( dag_6.2 ) ## A _||_ W | S ## D _||_ S | A, M, W ## M _||_ W | S 分別表示， 當控制了是否是南方州(\\(S\\))之後，華夫餅餐廳\\(W\\) 和結婚年齡中位數 \\(A\\) 之間相互獨立。 當同時控制了\\(A\\)，\\(M\\)，\\(W\\)之後，\\(S\\) 和離婚率之間相互獨立。 當控制了 \\(S\\) 之後，\\(W\\) 和 結婚率 \\(M\\) 之間相互獨立。 "],["模型選擇-model-selection.html", "第 50 章 模型選擇 model selection 50.1 預測變量越多越好嗎 50.2 信息熵 information entropy 50.3 模型之間的比較", " 第 50 章 模型選擇 model selection 50.1 預測變量越多越好嗎 50.1.1 變量越多總是會提高模型的擬合程度 過度擬合的實例 overfitting：下面的數據是一組關於類人猿平均腦容量和平均體重的數據。 sppnames &lt;- c( &quot;afarensis&quot;, &quot;africanus&quot;, &quot;habilis&quot;, &quot;boisei&quot;, &quot;rudolfensis&quot;, &quot;ergaster&quot;, &quot;sapiens&quot;) brainvolcc &lt;- c(438, 452, 612, 521, 752, 871, 1350) masskg &lt;- c(37.0, 35.5, 34.5, 41.5, 55.5, 61.0, 53.5) d &lt;- data.frame( species = sppnames, brain = brainvolcc, mass = masskg) d ## species brain mass ## 1 afarensis 438 37.0 ## 2 africanus 452 35.5 ## 3 habilis 612 34.5 ## 4 boisei 521 41.5 ## 5 rudolfensis 752 55.5 ## 6 ergaster 871 61.0 ## 7 sapiens 1350 53.5 不同種類的猿人中，體重和腦容量呈現高度相關性並不稀奇。我們更加關心的是，當考慮了體重大小之後，是否某些種類的猿人的腦容量比我們預期的要大很多？常見的解決方案是用一個把體重作為預測變量，腦容量作為結果變量的簡單線性回歸模型來描述該數據。我們現看看該數據的散點圖： # with(d, plot(mass, brain, # xlab = &quot;body mass (kg)&quot;, # ylab = &quot;brain volumn (cc)&quot;)) # library(ggrepel) d %&gt;% ggplot(aes(x = mass, y = brain, label = species), ggtheme = theme_bw()) + geom_point(color = rangi2) + geom_text_repel(size = 5) + labs(x = &quot;body mass (kg)&quot;, y = &quot;brain volume (cc)&quot;) + xlim(30, 65) + theme( axis.text = element_text(face = &quot;bold&quot;, color = &quot;black&quot;, size = 13), axis.title = element_text(face = &quot;bold&quot;, color = &quot;black&quot;, size = 15) ) 圖 50.1: Average brain volume in cubic centimeters against body mass in kilograms, for six hominin species. What model best describes the relationship between brain size and body size? 接下來我們來建立一系列越來越複雜的模型。最簡單的模型就是線性回歸模型。在建立模型之前，先把體重變量標準化，然後把腦容量變量的單位縮放一下成爲一個範圍是 0-1 的變量： d$mass_std &lt;- (d$mass - mean(d$mass)) / sd(d$mass) d$brain_std &lt;- d$brain / max(d$brain) d ## species brain mass mass_std brain_std ## 1 afarensis 438 37.0 -0.77946669 0.32444444 ## 2 africanus 452 35.5 -0.91701964 0.33481481 ## 3 habilis 612 34.5 -1.00872160 0.45333333 ## 4 boisei 521 41.5 -0.36680786 0.38592593 ## 5 rudolfensis 752 55.5 0.91701964 0.55703704 ## 6 ergaster 871 61.0 1.42138044 0.64518519 ## 7 sapiens 1350 53.5 0.73361571 1.00000000 我們想要建立的第一個模型是這樣的： \\[ \\begin{aligned} b_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) \\\\ \\mu_i &amp; = \\alpha + \\beta m_i \\\\ \\alpha &amp; \\sim \\text{Normal}(0.5, 1) \\\\ \\beta &amp; \\sim \\text{Normal}(0, 10) \\\\ \\sigma &amp; \\sim \\text{Log-Normal}(0, 1) \\end{aligned} \\] m7.1 &lt;- quap( alist( brain_std ~ dnorm( mu, exp(log_sigma) ), mu &lt;- a + b * mass_std, a ~ dnorm( 0.5, 1 ), b ~ dnorm( 0, 10 ), log_sigma ~ dnorm( 0, 1 ) ), data = d ) precis(m7.1) ## mean sd 5.5% 94.5% ## a 0.52854298 0.068425652 0.419185571 0.63790039 ## b 0.16710917 0.074079702 0.048715501 0.28550284 ## log_sigma -1.70670654 0.293780113 -2.176223904 -1.23718918 # compared with traditional OLS estimation m7.1_OLS &lt;- lm(brain_std ~ mass_std, data = d) summary(m7.1_OLS) ## ## Call: ## lm(formula = brain_std ~ mass_std, data = d) ## ## Residuals: ## 1 2 3 4 5 6 7 ## -0.073970 -0.040612 0.093232 -0.081451 -0.124891 -0.121031 0.348722 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.528677 0.070569 7.4916 0.0006697 *** ## mass_std 0.167118 0.076223 2.1925 0.0798469 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.18671 on 5 degrees of freedom ## Multiple R-squared: 0.49016, Adjusted R-squared: 0.38819 ## F-statistic: 4.807 on 1 and 5 DF, p-value: 0.079847 下面的代碼計算該模型 m7.1 的 \\(R^2\\)。 set.seed(12) s &lt;- sim( m7.1 ) r &lt;- apply(s, 2, mean) - d$brain_std resid_var &lt;- var2(r) outcome_var &lt;- var2(d$brain_std) 1 - resid_var / outcome_var ## [1] 0.47745889 把上面的計算過程製作成一個函數，以便重複調用： R2_is_bad &lt;- function( quap_fit ){ set.seed(12) s &lt;- sim( quap_fit, refresh = 0) r &lt;- apply(s, 2, mean) - d$brain_std 1 - var2(r)/var2(d$brain_std) } R2_is_bad(m7.1) ## [1] 0.47745889 接下來，我們把這個模型擴展開，讓它更加複雜一些，增加一個二次項，試圖提升模型擬合度。 \\[ \\begin{aligned} b_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma)\\\\ \\mu_i &amp; = \\alpha + \\beta_1 m_i + \\beta_2 m_i^2 \\\\ \\beta_j &amp; \\sim \\text{Normal}(0, 10) &amp; \\text{for } j = 1, 2\\\\ \\sigma &amp; \\sim \\text{Log-Normal}(0,1) \\end{aligned} \\] m7.2 &lt;- quap( alist( brain_std ~ dnorm( mu, exp(log_sigma) ), mu &lt;- a + b[1] * mass_std + b[2] * mass_std^2, a ~ dnorm(0.5, 1) , b ~ dnorm(0, 10), log_sigma ~ dnorm(0, 1) ), data = d, start = list(b = rep(0, 2)) ) precis(m7.2, depth = 2) ## mean sd 5.5% 94.5% ## b[1] 0.195147908 0.081147769 0.065458101 0.32483772 ## b[2] -0.097978296 0.137571508 -0.317844137 0.12188754 ## a 0.612177669 0.134474740 0.397261061 0.82709428 ## log_sigma -1.749768093 0.294872400 -2.221031139 -1.27850505 接下來，我們頭腦發熱狂加多次項到模型中去看會發生什麼： m7.3 &lt;- quap( alist( brain_std ~ dnorm( mu, exp(log_sigma) ), mu &lt;- a + b[1] * mass_std + b[2] * mass_std^2 + b[3] * mass_std^3, a ~ dnorm(0.5, 1) , b ~ dnorm(0, 10), log_sigma ~ dnorm(0, 1) ), data = d, start = list(b = rep(0, 3)) ) m7.4 &lt;- quap( alist( brain_std ~ dnorm( mu, exp(log_sigma) ), mu &lt;- a + b[1] * mass_std + b[2] * mass_std^2 + b[3] * mass_std^3 + b[4] * mass_std^4, a ~ dnorm(0.5, 1) , b ~ dnorm(0, 10), log_sigma ~ dnorm(0, 1) ), data = d, start = list(b = rep(0, 4)) ) m7.5 &lt;- quap( alist( brain_std ~ dnorm( mu, exp(log_sigma) ), mu &lt;- a + b[1] * mass_std + b[2] * mass_std^2 + b[3] * mass_std^3 + b[4] * mass_std^4 + b[5] * mass_std^5, a ~ dnorm(0.5, 1) , b ~ dnorm(0, 10), log_sigma ~ dnorm(0, 1) ), data = d, start = list(b = rep(0, 5)) ) m7.6 &lt;- quap( alist( brain_std ~ dnorm( mu, exp(log_sigma) ), mu &lt;- a + b[1] * mass_std + b[2] * mass_std^2 + b[3] * mass_std^3 + b[4] * mass_std^4 + b[5] * mass_std^5 + b[6] * mass_std^6, a ~ dnorm(0.5, 1) , b ~ dnorm(0, 10), log_sigma ~ dnorm(0, 1) ), data = d, start = list(b = rep(0, 6)) ) 然後我們繪製上述每個模型給出的回歸線及其89%可信區間： post &lt;- extract.samples( m7.1 ) mass_seq &lt;- seq( from = min(d$mass_std), to = max(d$mass_std), length.out = 100) l &lt;- link( m7.1, data = list(mass_std = mass_seq)) mu &lt;- apply(l, 2, mean) ci &lt;- apply(l, 2, PI) plot( brain_std ~ mass_std, data = d, main = &quot;m7.1: R^2 = 0.48&quot;, bty=&quot;n&quot;, col = rangi2, xaxt = &quot;n&quot;, yaxt = &quot;n&quot;, pch = 16, xlab = &quot;body mass (kg)&quot;, ylab = &quot;brain volumn (cc)&quot;) at &lt;- c(-2, -1, 0, 1, 2) labels &lt;- at*sd(d$mass) + mean(d$mass) at_y &lt;- seq(0.2, 1, by = 0.1) labels_y &lt;- at_y * max(d$brain) axis( side = 2, at = at_y, labels = round(labels_y, 1)) axis( side = 1, at = at, labels = round(labels, 1)) lines( mass_seq, mu) shade(ci, mass_seq) 圖 50.2: Linear model of increasing degree for the hominin data. The posterior mean in black, with 89% interval of the mean shaded. R^2 is diplayed. 50.1.1.1 m7.2 post &lt;- extract.samples( m7.2 ) mass_seq &lt;- seq( from = min(d$mass_std), to = max(d$mass_std), length.out = 100) l &lt;- link( m7.2, data = list(mass_std = mass_seq)) mu &lt;- apply(l, 2, mean) ci &lt;- apply(l, 2, PI) plot( brain_std ~ mass_std, data = d, main = &quot;m7.2: R^2 = 0.53&quot;, bty=&quot;n&quot;, col = rangi2, xaxt = &quot;n&quot;, yaxt = &quot;n&quot;, pch = 16, xlab = &quot;body mass (kg)&quot;, ylab = &quot;brain volumn (cc)&quot;) at &lt;- c(-2, -1, 0, 1, 2) labels &lt;- at*sd(d$mass) + mean(d$mass) at_y &lt;- seq(0.2, 1, by = 0.1) labels_y &lt;- at_y * max(d$brain) axis( side = 2, at = at_y, labels = round(labels_y, 1)) axis( side = 1, at = at, labels = round(labels, 1)) lines( mass_seq, mu) shade(ci, mass_seq) 圖 50.3: Second-degree polynomial linear model of increasing degree for the hominin data. The posterior mean in black, with 89% interval of the mean shaded. R^2 is diplayed. 50.1.1.2 m7.3 post &lt;- extract.samples( m7.3 ) mass_seq &lt;- seq( from = min(d$mass_std), to = max(d$mass_std), length.out = 100) l &lt;- link( m7.3, data = list(mass_std = mass_seq)) mu &lt;- apply(l, 2, mean) ci &lt;- apply(l, 2, PI) plot( brain_std ~ mass_std, data = d, main = &quot;m7.3: R^2 = 0.68&quot;, bty=&quot;n&quot;, col = rangi2, xaxt = &quot;n&quot;, yaxt = &quot;n&quot;, pch = 16, xlab = &quot;body mass (kg)&quot;, ylab = &quot;brain volumn (cc)&quot;) at &lt;- c(-2, -1, 0, 1, 2) labels &lt;- at*sd(d$mass) + mean(d$mass) at_y &lt;- seq(0.2, 1, by = 0.1) labels_y &lt;- at_y * max(d$brain) axis( side = 2, at = at_y, labels = round(labels_y, 1)) axis( side = 1, at = at, labels = round(labels, 1)) lines( mass_seq, mu) shade(ci, mass_seq) 圖 50.4: Third-degree polynomial linear model of increasing degree for the hominin data. The posterior mean in black, with 89% interval of the mean shaded. R^2 is diplayed. 50.1.1.3 m7.4 post &lt;- extract.samples( m7.4 ) mass_seq &lt;- seq( from = min(d$mass_std), to = max(d$mass_std), length.out = 100) l &lt;- link( m7.4, data = list(mass_std = mass_seq)) mu &lt;- apply(l, 2, mean) ci &lt;- apply(l, 2, PI) plot( brain_std ~ mass_std, data = d, main = &quot;m7.4: R^2 = 0.82&quot;, bty=&quot;n&quot;, col = rangi2, xaxt = &quot;n&quot;, yaxt = &quot;n&quot;, pch = 16, xlab = &quot;body mass (kg)&quot;, ylab = &quot;brain volumn (cc)&quot;) at &lt;- c(-2, -1, 0, 1, 2) labels &lt;- at*sd(d$mass) + mean(d$mass) at_y &lt;- seq(0.2, 1, by = 0.1) labels_y &lt;- at_y * max(d$brain) axis( side = 2, at = at_y, labels = round(labels_y, 1)) axis( side = 1, at = at, labels = round(labels, 1)) lines( mass_seq, mu) shade(ci, mass_seq) 圖 50.5: Second-degree polynomial linear model of increasing degree for the hominin data. The posterior mean in black, with 89% interval of the mean shaded. R^2 is diplayed. 50.1.1.4 m7.5 post &lt;- extract.samples( m7.5 ) mass_seq &lt;- seq( from = min(d$mass_std), to = max(d$mass_std), length.out = 100) l &lt;- link( m7.5, data = list(mass_std = mass_seq)) mu &lt;- apply(l, 2, mean) ci &lt;- apply(l, 2, PI) plot( brain_std ~ mass_std, data = d, main = &quot;m7.5: R^2 = 0.99&quot;, bty=&quot;n&quot;, col = rangi2, xaxt = &quot;n&quot;, yaxt = &quot;n&quot;, pch = 16, xlab = &quot;body mass (kg)&quot;, ylab = &quot;brain volumn (cc)&quot;) at &lt;- c(-2, -1, 0, 1, 2) labels &lt;- at*sd(d$mass) + mean(d$mass) at_y &lt;- seq(0.2, 1, by = 0.1) labels_y &lt;- at_y * max(d$brain) axis( side = 2, at = at_y, labels = round(labels_y, 1)) axis( side = 1, at = at, labels = round(labels, 1)) lines( mass_seq, mu) shade(ci, mass_seq) 圖 50.6: Second-degree polynomial linear model of increasing degree for the hominin data. The posterior mean in black, with 89% interval of the mean shaded. R^2 is diplayed. 50.1.1.5 m7.6 post &lt;- extract.samples( m7.6 ) mass_seq &lt;- seq( from = min(d$mass_std), to = max(d$mass_std), length.out = 100) l &lt;- link( m7.6, data = list(mass_std = mass_seq)) mu &lt;- apply(l, 2, mean) ci &lt;- apply(l, 2, PI) plot( brain_std ~ mass_std, data = d, main = &quot;m7.6: R^2 = 1&quot;, bty=&quot;n&quot;, col = rangi2, xaxt = &quot;n&quot;, yaxt = &quot;n&quot;, pch = 16, ylim = c(-0.3, 1.5), xlab = &quot;body mass (kg)&quot;, ylab = &quot;brain volumn (cc)&quot;) at &lt;- c(-2, -1, 0, 1, 2) labels &lt;- at*sd(d$mass) + mean(d$mass) at_y &lt;- seq(-0.3, 1.4, by = 0.1) labels_y &lt;- at_y * max(d$brain) axis( side = 2, at = at_y, labels = round(labels_y, 1)) axis( side = 1, at = at, labels = round(labels, 1)) lines( mass_seq, mu) shade(ci, mass_seq) 圖 50.7: Second-degree polynomial linear model of increasing degree for the hominin data. The posterior mean in black, with 89% interval of the mean shaded. R^2 is diplayed. 不難發現，當我們不斷地給模型增加多次項時，模型的擬合度，用 \\(R^2\\) 表示的話，是越來越接近完美的。但是最完美的模型 m7.6 給出了瘋狂的曲線，它完美的預測了每一個觀察數據。但是你不能相信這個模型對嗎，因為它竟然告訴我們當體重在 58 KG 時，腦容量是小於零的。這是極端的過擬合現象，overfitting。 50.1.2 也不是預測變量越少越好 過度擬合的模型，它的問題在於可以完美的告訴我們已有數據內的關係 (within sample accuracy)，但是預測新數據的能力很差。與之相對應的，是擬合不足 (underfitting)。擬合不足的模型帶來的最大問題是，連已有的數據都無法準確地描述，更不要說用來預測了。 50.2 信息熵 information entropy The uncertainty contained in a probability distribution is the average log-probability of an event. 翻譯過來就是，一個概率分佈所蘊含的不確定性，其實是該事件發生概率的對數均值取負數，這個概念被叫做信息熵。 \\[ H(p) = - E \\log (p_i) = - \\sum_{i = 1}^n p_i \\log(p_i) \\] 假如一個地方天氣只有晴天和下雨兩種，且各自發生的概率分別是 \\(p_1 = 0.3, p_2 = 0.7\\)，那麼我們認爲該地方天氣這一事件的信息熵是： \\[ H(p) = - (p_1\\log(p_1) + p_2\\log(p_2)) \\approx 0.61 \\] p &lt;- c(0.3, 0.7) -sum(p*log(p)) ## [1] 0.6108643 假如我們搬家到阿布扎比。那麼我們知道這裏鮮少下雨，雨天和晴天的概率可能就是 \\(p_1 = 0.01, p_2 = 0.99\\)。那麼在阿布扎比的天氣，其信息熵（或者簡單說叫做天氣變化的不確定性）就是約等於0.06： p &lt;- c(0.01, 0.99) -sum(p*log(p)) ## [1] 0.056001534 也就是說這裏天氣的不確定，相比一個降雨概率是30%的地方來說是相對很低的。當然，假如我們增加天氣的不同種類，例如下雪天的概率。通常信息熵會增加，也就是天氣的不確定性會增加。例如我們假設晴天，下雨，降雪的概率分別是 \\(p_1 = 0.7, p_2 = 0.15, p_3 = 0.15\\)，那麼其天氣的信息熵就約等於0.82： p &lt;- c(0.7, 0.15, 0.15) -sum(p*log(p)) ## [1] 0.81880846 50.2.1 從信息熵到精確度 From entropy to accuracy Divergence: The additional uncertainty induced by using probabilities from one distribution to describe another distribution. 離散度，又被叫做 Kullback-Leibler 離散度。如果某個事件的真實概率分佈 (True distribution of events) 是 \\(p_1 = 0.3, p_2 = 0.7\\)。如果我們使用的模型計算獲得的事後概率分佈是 \\(q_1 = 0.25, q_2 = 0.75\\)，那麼由於模型造成的額外的不確定性 (additional uncertainty) 該如何測量呢？答案是要根據上面定義的信息熵來做比較： \\[ D_{\\text{KL}} = \\sum_i p_i(\\log(p_i) - \\log(q_i)) = \\sum_i p_i \\log\\left( \\frac{p_i}{q_i} \\right) \\] 也就是說，一個模型的離散程度是模型給出的概率分佈和我們希望測量的目標概率分佈之間的對數概率差的平均值 [the divergence is the average difference in log probability between the target (p) and model (q)]。這個離散度的定義其實是兩個概率分佈之間的對數概率（兩個信息熵）之差而已。 50.3 模型之間的比較 讓我們回到講解治療後偏倚部分（Chapter 49.2）時分析治療組，菌落，和植物生長之間關係的三個模型 m6.6, m6.7, m6.8。其中，m6.6 是只有截距的模型，m6.7 是預測變量同時包含菌落存在與否及治療組兩個變量的模型，m6.8 是只有治療組作爲唯一預測變量的模型。這時我們可以使用 WAIC() 命令來獲取用於比較這幾個模型的模型信息： set.seed(71) # number of plants N &lt;- 100 # simulate initial heights h0 &lt;- rnorm(N, 10, 2) # assign treatments and simulate fungus and growth treatment &lt;- rep(0:1, each = N/2) fungus &lt;- rbinom( N, size = 1, prob = 0.5 - treatment * 0.4) h1 &lt;- h0 + rnorm( N, 5 - 3*fungus ) # compose a clean data frame d &lt;- data.frame( h0 = h0, h1 = h1, treatment = treatment, fungus = fungus) # fit models m6.6-6.8 again m6.6 &lt;- quap( alist( h1 ~ dnorm(mu, sigma), mu &lt;- h0 * p , p ~ dlnorm( 0, 0.25 ), sigma ~ dexp(1) ), data = d ) m6.7 &lt;- quap( alist( h1 ~ dnorm(mu, sigma), mu &lt;- h0 * p , p &lt;- a + bt * treatment + bf * fungus, a ~ dlnorm( 0, 0.2 ), bt ~ dnorm(0, 0.5), bf ~ dnorm(0, 0.5), sigma ~ dexp(1) ), data = d ) m6.8 &lt;- quap( alist( h1 ~ dnorm(mu, sigma), mu &lt;- h0 * p, p &lt;- a + bt * treatment, a ~ dlnorm(0, 0.25), bt ~ dnorm(0, 0.5), sigma ~ dexp(1) ), data = d ) set.seed(11) WAIC( m6.7 ) ## WAIC lppd penalty std_err ## 1 361.45112 -177.17236 3.5532002 14.170352 如果能把這三個模型的信息放在一起比較就更好了： set.seed(77) compare( m6.6, m6.7, m6.8 , func = WAIC) ## WAIC SE dWAIC dSE pWAIC weight ## m6.7 361.89010 14.261913 0.000000 NA 3.8394934 1.0000000e+00 ## m6.8 402.76839 11.292507 40.878287 10.500618 2.6491648 1.3285951e-09 ## m6.6 405.91752 11.662079 44.027422 12.230339 1.5829173 2.7514831e-10 # compare( m6.6, m6.7, m6.8 , func = PSIS) "],["交互作用-its-all-about-interaction.html", "第 51 章 交互作用 it’s all about interaction 51.1 設計一個交互作用模型 51.2 連續型變量之間的交互作用", " 第 51 章 交互作用 it’s all about interaction 51.1 設計一個交互作用模型 From Page 241 of the rethinking book: We could cheat by splitting the data into two data frames. But it’s not a good idea to split the data in this way. Here are four reasons. First, there are usually some parameters, such as \\(\\sigma\\), that the model says do not depend in any way upon continent (the variable you want to split the data on). By splitting the data table, you are hurting the accuracy of the estimates of pooling all of the eivdence into one estimate. In effect, you have accidentally assumed that variance differs between African and non-African nations. Now, there is nothing wrong with that sort of assumption. But you want to avoid accidental assumptions. Second … Third, we may want to use information criteria or another method to compare models. In order to compare a model that treats all continents the same way to a model that allows different slopes in different continents, we need models that use all of the same data. This means that we cannot split the data for two separate models. We have to let a single model internally split the data. Fourth, once you begin using multilevel models, you’ll see that there are advantages to borrowing information across categories like “Africa” and “not Africa.” This is especially true when sample sizes vary across categories, such that overfitting risk is higher within some categories. In other words, what we learn about ruggedness outside of Africa should have some effect on our estimate within Africa, and vise versa. Mulitlevel models borrow information in this way, in order to improve estimates in all categories. When we split the data, this borrowing is impossible. 51.1.1 設計非洲大陸地形的模型 我們先設計一個不包含是否是非洲大陸這一變量的模型。 data(&quot;rugged&quot;) d &lt;- rugged # make log version of outcome d$log_gdp &lt;- log( d$rgdppc_2000 ) # extract countries with GDP data dd &lt;- d[ complete.cases( d$rgdppc_2000 ), ] # rescale variables dd$log_gdp_std &lt;- dd$log_gdp / mean( dd$log_gdp ) dd$rugged_std &lt;- dd$rugged / max( dd$rugged ) 使用簡單線性回歸來分析土地的崎嶇程度和該地區的生產總值之間可能存在的關係： \\[ \\begin{aligned} \\log (y_i) &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) \\\\ \\mu_i &amp; = \\alpha + \\beta(r_i - \\bar{r}) \\end{aligned} \\] 其中， \\(y_i\\) 是第 \\(i\\) 地區的GDP； \\(r_i\\) 是第 \\(i\\) 地區的崎嶇程度； \\(\\bar{r}\\) 是全體地區崎嶇程度的平均值，大約是 0.215。 我們現在對與這兩者之間的關係並不瞭解，只能猜測，並賦予先驗概率分佈進行估算： \\[ \\begin{aligned} \\alpha &amp; \\sim \\text{Normal}(1,1) \\\\ \\beta &amp; \\sim \\text{Normal}(0, 1) \\\\ \\sigma &amp; \\sim \\exp(1) \\end{aligned} \\] 把這些翻譯成R語言模型： m8.1 &lt;- quap( alist( log_gdp_std ~ dnorm( mu, sigma ), mu &lt;- a + b * (rugged_std - 0.215), a ~ dnorm( 1, 1 ), b ~ dnorm( 0, 1 ), sigma ~ dexp(1) ), data = dd ) 讓我們先來審視一下我們選擇的先驗概率大致是什麼樣的： set.seed(7) prior &lt;- extract.prior( m8.1 ) # set up the plot dimensions plot(NULL, xlim = c(0, 1), ylim = c(0.5, 1.4), xlab = &quot;ruggedness&quot;, ylab = &quot;log GDP&quot;, bty = &quot;n&quot;, main = &quot;a ~ dnorm(1,1)\\nb ~ dnorm(0,1)&quot;) abline(h = min(dd$log_gdp_std), lty = 2) abline(h = max(dd$log_gdp_std), lty = 2) with(dd, abline(a = 1.28, b = -0.6, lty = 1, lwd = 1.5, col = c(&quot;blue&quot;))) # draw 50 lines from the prior rugged_seq &lt;- seq(from = -0.1, to = 1.1, length.out = 30) mu &lt;- link( m8.1, post = prior, data = data.frame(rugged_std = rugged_seq)) for( i in 1:50 ) lines( rugged_seq, mu[i,], col = col.alpha(&quot;black&quot;, 0.3)) 圖 51.1: Simulating in search of reasonable priors for the terrain ruggedness example. The dashed horizontal lines indicate the minimum and maximum observed GDP values. The first guess with very vague priors. 圖 51.1 中的上下兩條水平虛線分別是對數GDP的最大值和最小值。可以看見，我們這裏選擇使用的斜率和截距的先驗概率分佈是五花八門的，有正有負，有大有小，包含了很多令人匪夷所思的斜率或者截距。很顯然，我們最好對這些過於寬泛的斜率截距的選擇加以合理的限制以提高效率。例如選擇一個均值爲0，標準差是 0.1 的正（常）態分佈作爲截距 \\(\\alpha\\) 的先驗概率分佈可能會比較合理。因爲 \\(\\text{Normal}(1, 0.1)\\) 其實包含的意思是「我們認爲有95%的可能性截距是在 0.8-1.2之間」。同時，該圖 51.1 所示的斜率太過分散，有很多甚至比觀察數據給出的最大斜率 1.3 - 0.7 = 0.6 (藍色的線) 更加極端的斜率。在這裏使用的先驗概率中 \\(\\beta \\sim \\text{Normal}(0,1)\\) ，有超過一半以上的斜率其實是要大於0.6的： sum( abs(prior$b) &gt; 0.6 ) /length(prior$b) ## [1] 0.545 如果把斜率的先驗概率調整爲 \\(\\beta \\sim \\text{Normal}(0, 0.3)\\) 的話，就能把斜率大於0.6的可能性降低到兩個標準差之外。 m8.1 &lt;- quap( alist( log_gdp_std ~ dnorm( mu, sigma ), mu &lt;- a + b * (rugged_std - 0.215), a ~ dnorm( 1, 0.1 ), b ~ dnorm( 0, 0.3 ), sigma ~ dexp(1) ), data = dd ) set.seed(7) prior &lt;- extract.prior( m8.1 ) # set up the plot dimensions plot(NULL, xlim = c(0, 1), ylim = c(0.5, 1.4), xlab = &quot;ruggedness&quot;, ylab = &quot;log GDP&quot;, bty = &quot;n&quot;, main = &quot;a ~ dnorm(1,1)\\nb ~ dnorm(0,1)&quot;) abline(h = min(dd$log_gdp_std), lty = 2) abline(h = max(dd$log_gdp_std), lty = 2) with(dd, abline(a = 1.28, b = -0.6, lty = 1, lwd = 1.5, col = c(&quot;blue&quot;))) # draw 50 lines from the prior rugged_seq &lt;- seq(from = -0.1, to = 1.1, length.out = 30) mu &lt;- link( m8.1, post = prior, data = data.frame(rugged_std = rugged_seq)) for( i in 1:50 ) lines( rugged_seq, mu[i,], col = col.alpha(&quot;black&quot;, 0.3)) 圖 51.2: Simulating in search of reasonable priors for the terrain ruggedness example. The dashed horizontal lines indicate the minimum and maximum observed GDP values. The improved model with much more plausible priors. 現在可以看看給出的事後概率分佈： precis( m8.1 ) ## mean sd 5.5% 94.5% ## a 0.9999995152 0.0104119724 0.983359172 1.016639858 ## b 0.0019909345 0.0547934637 -0.085579603 0.089561472 ## sigma 0.1364974025 0.0073961522 0.124676923 0.148317882 所以其實這裏我們給出的斜率的事後均值是零。那麼地區地理狀況是否崎嶇，和GDP之間真的沒有關係了嗎？ 51.1.2 加一個指示變量並不是一個好選擇 最常見的增加非洲大陸這個變量的方法就是加一個指示變量： \\[ \\mu_i = \\alpha + \\beta(r_i - \\bar{r}) + \\gamma A_i \\] 其中，增加的變量 \\(A_i\\) 就是一個是否是非洲大陸國家的指示變量 (indicator variable)。但是事實上，每次增加一個這樣的指示變量時，你需要增加一個先驗概率給它的回歸係數。如此一來，它的副作用之一是告訴模型，我們對於在非洲大陸的國家的GDP的平均值有跟多的不確定性 (what the prior will necessarily do is tell the model that \\(\\mu_i\\) for a nation in Africa is more uncertain, before seeing the data, than \\(\\mu_i\\) outside Africa)，這其實不是我們希望的額外假設，也沒有實際意義。 所以值得推薦的處理方法應該是使用索引變量 (index variable) 的方法使屬於非洲大陸或者之外的國家擁有不同的截距： \\[ \\mu_i = \\alpha_{\\text{CID}[i]} + \\beta(r_i - \\bar{r}) \\] 其中，\\(\\text{CID}[i]\\) 就是這個索引變量，它取1時，截距就是非洲大陸國家的截距，它取2時，截距就是非洲大陸意外國家的截距。在 R 裏面很容易製作這樣的索引變量： # Make variable to index Africa (1) or otherwise (2) dd$cid &lt;- ifelse( dd$cont_africa == 1, 1, 2) 如此，就可以巧妙地避免了增加指示變量造成的額外先驗概率帶來的不確定性假設： m8.2 &lt;- quap( alist( log_gdp_std ~ dnorm(mu, sigma), mu &lt;- a[cid] + b * ( rugged_std - 0.215 ), a[cid] ~ dnorm( 1, 0.1 ), b ~ dnorm( 0, 0.3 ), sigma ~ dexp(1) ), data = dd ) precis(m8.2, depth = 2) ## mean sd 5.5% 94.5% ## a[1] 0.880412839 0.0159370032 0.85494243 0.905883248 ## a[2] 1.049164255 0.0101855539 1.03288577 1.065442737 ## b -0.046513472 0.0456867247 -0.11952968 0.026502738 ## sigma 0.112387378 0.0060910769 0.10265266 0.122122095 compare(m8.1, m8.2) ## WAIC SE dWAIC dSE pWAIC weight ## m8.2 -252.26868 15.305177 0.000000 NA 4.2585172 1.0000000e+00 ## m8.1 -188.75420 13.292948 63.514478 15.146777 2.6904006 1.6143819e-14 可以看到，a[1] 是非洲大陸國家的事後截距均值。可以看到它明顯是低於非洲大陸意外國家的事後截距均值 a[2]。對兩者的事後比較估算可以給我們更加確定的結果： post &lt;- extract.samples(m8.2) diff_a1_a2 &lt;- post$a[, 1] - post$a[, 2] PI(diff_a1_a2) ## 5% 94% ## -0.19901182 -0.13784897 可見兩類國家的GDP截距差很穩定地低於0。 rugged.seq &lt;- seq(from = -0.1, to = 1.1, length.out = 30) # compute mu over samplesm fixing cid = 2 and then cid = 1 mu.NotAfrica &lt;- link(m8.2, data = data.frame(cid = 2, rugged_std = rugged.seq)) mu.Africa &lt;- link(m8.2, data = data.frame(cid = 1, rugged_std = rugged.seq)) # summarize to means and intervals mu.NotAfrica_mu &lt;- apply( mu.NotAfrica, 2, mean ) mu.NotAfrica_ci &lt;- apply( mu.NotAfrica, 2, PI, prob = 0.97) mu.Africa_mu &lt;- apply( mu.Africa, 2, mean ) mu.Africa_ci &lt;- apply( mu.Africa, 2, PI, prob = 0.97) with(dd, plot(rugged_std[cid == 2], log_gdp_std[cid == 2], col=c(&quot;black&quot;), xlim = c(-0.05, 1.05), ylim = c(0.7, 1.3), bty = &quot;n&quot;, main = &quot;m8.4&quot;, xlab = &quot;ruggedness (standardized)&quot;, ylab = &quot;log GDP (as proportion of mean)&quot;)) with(dd, points(rugged_std[cid == 1], log_gdp_std[cid == 1], col = rangi2, pch = 16)) lines(rugged.seq, mu.NotAfrica_mu, lwd = 2) lines(rugged.seq, mu.Africa_mu, lwd = 2, col = rangi2) shade(mu.NotAfrica_ci, rugged.seq) shade(mu.Africa_ci, rugged.seq, col = col.alpha(rangi2, 0.4)) text(0.9, 1.05, &quot;Not Africa&quot;) text(0.85, 0.9, &quot;Africa&quot;, col = rangi2) 圖 51.3: Including an indicator for African nations has no effect on the slope. Africa nations are shown in blue. Non African nations are shown in black. Regression means for each subset of nations are shown in corresponding colors, along with 97% intervals shown by shading. 51.1.3 增加交互作用項是有幫助的 使用了索引變量的方法之後，我們發現加交互作用項，且避免增加冗餘的回歸係數的方法變得十分簡單： \\[ \\mu_i = \\alpha_{\\text{CID}[i]} + \\beta_{\\text{CID}[i]}(r_i- \\bar{r}) \\] m8.3 &lt;- quap( alist( log_gdp_std ~ dnorm(mu, sigma), mu &lt;- a[cid] + b[cid] * ( rugged_std - 0.215 ), a[cid] ~ dnorm( 1, 0.1 ), b[cid] ~ dnorm( 0, 0.3 ), sigma ~ dexp(1) ), data = dd ) precis(m8.3, depth = 2) ## mean sd 5.5% 94.5% ## a[1] 0.88654416 0.0156763781 0.861490280 0.91159804 ## a[2] 1.05056894 0.0099370706 1.034687582 1.06645030 ## b[1] 0.13261316 0.0742076292 0.014015041 0.25121129 ## b[2] -0.14272534 0.0547517457 -0.230229209 -0.05522148 ## sigma 0.10949928 0.0059359892 0.100012419 0.11898613 此時我們發現除了截距在非洲與非洲之外國家之間並不相同，他們和地區GDP之間的關係的斜率竟然也是相反的。比較這三個模型的模型指標： compare( m8.1, m8.2, m8.3 ) ## WAIC SE dWAIC dSE pWAIC weight ## m8.3 -259.31316 15.151912 0.000000 NA 5.0758988 9.7283924e-01 ## m8.2 -252.15627 15.336212 7.156891 6.6853645 4.2959011 2.7160762e-02 ## m8.1 -188.63140 13.331628 70.681757 15.4350065 2.7323144 4.3620684e-16 51.1.4 繪製交叉作用 非洲國家的GDP和其地理崎嶇程度之間的關係圖： # Plot Africa - cid = 1 d.A1 &lt;- dd[dd$cid == 1,] plot(d.A1$rugged_std, d.A1$log_gdp_std, pch = 16, col = rangi2, bty = &quot;n&quot;, main = &quot;African nations&quot;, xlab = &quot;ruggedness (standardized)&quot;, ylab = &quot;log GDP (as proportion of mean)&quot;, xlim = c(0,1)) mu &lt;- link( m8.3, data = data.frame( cid = 1, rugged_std = rugged_seq)) mu_mean &lt;- apply( mu, 2, mean ) mu_ci &lt;- apply( mu, 2, PI, prob = 0.97) lines( rugged_seq, mu_mean, lwd = 2) shade(mu_ci, rugged_seq, col = col.alpha(rangi2, 0.3)) 圖 51.4: Posterior predictitions for the terrain ruggedness model, including the interaction between Africa and ruggedness. Shaded regions are 97% posterior intervals of the mean. (Countries within Africa) 非洲大陸意外國家的GDP和其地理崎嶇程度之間的關係圖： # plot non-Africa - cid = 2 d.A2 &lt;- dd[dd$cid == 2,] plot(d.A2$rugged_std, d.A2$log_gdp_std, pch = 1, col = &quot;black&quot;, bty = &quot;n&quot;, main = &quot;Non-African nations&quot;, xlab = &quot;ruggedness (standardized)&quot;, ylab = &quot;log GDP (as proportion of mean)&quot;, xlim = c(0,1)) mu &lt;- link( m8.3, data = data.frame( cid = 2, rugged_std = rugged_seq)) mu_mean &lt;- apply( mu, 2, mean ) mu_ci &lt;- apply( mu, 2, PI, prob = 0.97) lines( rugged_seq, mu_mean, lwd = 2) shade(mu_ci, rugged_seq) 圖 51.5: Posterior predictitions for the terrain ruggedness model, including the interaction between Africa and ruggedness. Shaded regions are 97% posterior intervals of the mean. (Countries outside of Africa) 51.2 連續型變量之間的交互作用 51.2.1 Winter flower 冬天的花 數據是來自測量鬱金香在不同的種植環境條件下的開花尺寸。 data(&quot;tulips&quot;) d &lt;- tulips str(d) ## &#39;data.frame&#39;: 27 obs. of 4 variables: ## $ bed : Factor w/ 3 levels &quot;a&quot;,&quot;b&quot;,&quot;c&quot;: 1 1 1 1 1 1 1 1 1 2 ... ## $ water : int 1 1 1 2 2 2 3 3 3 1 ... ## $ shade : int 1 2 3 1 2 3 1 2 3 1 ... ## $ blooms: num 0 0 111 183.5 59.2 ... 其中，結果變量是 blooms ，預測變量使用 water, shade 。我們很容易理解因爲水和陽光是影響植物開花的重要條件。但我們還是對這兩個變量之間是不是有交互作用感興趣。因爲沒有水光有陽光，或者只有陽光沒有水，對植物的生長都沒有好處。 我們使用兩個模型， 包含水和陽光的兩個變量，沒有交互作用項 包含水和陽光的兩個變量，同時包括交互作用項 沒有交互作用的模型： \\[ \\begin{aligned} B_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) \\\\ \\mu_i &amp; = \\alpha + \\beta_w(W_i - \\bar{W}) + \\beta_S(S_i - \\bar{S}) \\end{aligned} \\] 爲了是估計過程更加順利，我們把 \\(W,S\\) 中心化（範圍控制在-1~1之間），把 \\(B\\) 轉換成一個相對其最大值的比例的變量，也就是範圍控制在 0~1 之間： d$blooms_std &lt;- d$blooms / max(d$blooms) d$water_cent &lt;- d$water - mean(d$water) d$shade_cent &lt;- d$shade - mean(d$shade) precis(d, prob = 1) ## mean sd 0% 100% histogram ## bed NaN NA NA NA ## water 2.00000000 0.83205029 1 3.00 ▇▁▁▁▇▁▁▁▁▇ ## shade 2.00000000 0.83205029 1 3.00 ▇▁▁▁▇▁▁▁▁▇ ## blooms 128.99370370 92.68392285 0 361.66 ▅▇▇▂▃▁▁▁ ## blooms_std 0.35667119 0.25627364 0 1.00 ▅▃▇▇▁▃▃▁▁▁ ## water_cent 0.00000000 0.83205029 -1 1.00 ▇▁▁▁▇▁▁▁▁▇ ## shade_cent 0.00000000 0.83205029 -1 1.00 ▇▁▁▁▇▁▁▁▁▇ 之所以在這裏給 blooms 修改尺度的最主要理由是，它的原始尺寸會導致模型擬合較爲困難，其二，修改了尺寸之後有助於我們選擇合理的先驗概率分佈。這裏先對三個參數的先驗概率分佈做一個最初步的猜想： \\[ \\begin{aligned} \\alpha &amp; \\sim \\text{Normal}(0.5, 1) \\\\ \\beta_W &amp; \\sim \\text{Normal}(0,1) \\\\ \\beta_S &amp; \\sim \\text{Normal}(0,1) \\end{aligned} \\] 這裏使用均值 0.5 給截距 \\(\\alpha\\) 是因爲我們初步認爲當水和陽光處於其本身的均值時，我們期待開花的大小應該是在觀測值中最大的尺寸的一半左右。兩個斜率的先驗概率的均值是0，表示我們不認爲有哪些有用的信息提示這兩個斜率究竟是正還是負。 但是，截距 \\(\\alpha\\) 的實際可能取值範圍是在 (0,1) 之間，但是如果我們使用 \\(\\alpha \\sim \\text{Normal}(0.5, 1)\\) 的話，表示有許多潛在的截距是在我們認爲合理範圍之外的： a &lt;- rnorm( 10000, 0.5, 1 ) sum( a &lt; 0 | a &gt; 1 ) / length(a) ## [1] 0.6215 把標準差修改成爲 0.25 應該就能把不合理的截距取值限制在 5% 可能性以下： a &lt;- rnorm( 10000, 0.5, 0.25 ) sum( a &lt; 0 | a &gt; 1 ) / length(a) ## [1] 0.0434 相似地，我們也需要控制兩個斜率的先驗概率分佈的標準差，使得結果變量的取值在合理範圍內： m8.4 &lt;- quap( alist( blooms_std ~ dnorm( mu, sigma), mu &lt;- a + bw * water_cent + bs * shade_cent, a ~ dnorm( 0.5, 0.25 ), bw ~ dnorm( 0, 0.25 ), bs ~ dnorm( 0, 0.25 ), sigma ~ dexp(1) ), data = d ) precis(m8.4) ## mean sd 5.5% 94.5% ## a 0.35877210 0.030216466 0.31048035 0.407063847 ## bw 0.20503592 0.036886543 0.14608410 0.263987738 ## bs -0.11253064 0.036872698 -0.17146034 -0.053600951 ## sigma 0.15814122 0.021439313 0.12387706 0.192405381 接下來，我們思考如何定義兩個連續型變量之間的交互作用。如何才能使一個模型滿足我們的假設，也就是，開花的大小尺寸同時收到陽光和水的影響？比如說，當水很少，增加陽光對於開花並沒有太多的好處這樣的觀察結果。這裏其實是在說，water 變量的回歸係數，\\(\\beta_W\\) 是取決於陽光的。或者相似地，可以反過來思考，就是 shade 變量的回歸係數，\\(\\beta_S\\) 是取決於水的。此時，我們似乎沒辦法沿用索引變量的方法。但是使用線性回歸模型的思考方式，我們可以解決這個難題，也就是給水的斜率和陽光之間也定義一個線性回歸函數： \\[ \\begin{aligned} \\mu_i &amp; = \\alpha + \\gamma_{W,i} W_i + \\beta_S S_i \\\\ \\gamma_{W,i} &amp; = \\beta_W + \\beta_{WS}S_i \\end{aligned} \\] 其中， \\(\\gamma_{W,i}\\) 就是在第一個方程裏水本身的斜率。 \\(\\beta_W\\) 是當陽光是平均值時，陽光對水的斜率的影響。 \\(\\beta_{WS}\\) 就是隨着陽光改變而改變的水的斜率。 你可能更加常見的表達方式是： \\[ \\begin{aligned} \\mu_i &amp; = \\alpha + \\underbrace{(\\beta_W + \\beta_{WS}S_i)}_{\\gamma_{W,i}}W_i + \\beta_S S_i \\\\ &amp; = \\alpha + \\beta_W W_i + \\beta_S S_i + \\beta_{WS}S_iW_i \\end{aligned} \\] 那麼我們還需要別忘記給這個新增加的參數的回歸係數 \\(\\beta_{WS}\\) 設計它的先驗概率分佈。 m8.5 &lt;- quap( alist( blooms_std ~ dnorm( mu, sigma ), mu &lt;- a + bw * water_cent + bs * shade_cent + bws * water_cent * shade_cent, a ~ dnorm( 0.5, 0.25 ), bw ~ dnorm( 0, 0.25 ), bs ~ dnorm( 0, 0.25 ), bws ~ dnorm( 0, 0.25 ), sigma ~ dexp(1) ), data = d ) precis(m8.5) ## mean sd 5.5% 94.5% ## a 0.35798434 0.023918650 0.319757716 0.396210961 ## bw 0.20673108 0.029234311 0.160009004 0.253453156 ## bs -0.11346419 0.029227282 -0.160175032 -0.066753348 ## bws -0.14315705 0.035679412 -0.200179645 -0.086134462 ## sigma 0.12484398 0.016940114 0.097770408 0.151917556 51.2.2 繪製事後預測圖 三聯畫 (triptych) 會是幫助我們理解連續變量之間交互作用的極佳示意圖。每個圖都需要能夠表達模型所預測的水與開花尺寸大小之間的關係，同時，每張圖會指定陽光爲某一個固定值，來看陽光，水，和開花尺寸三者之間的關係的變化。由於本例中，已知陽光（或者水）只有三個強度的取值：-1，0，1。所以三聯圖是首選。其他時候，如果是處理嚴格的連續變量的話，你完全可以選取三個代表性的取值，如最低值，中位數，和最大值來繪製三聯圖。 par(mfrow = c(1,3)) # 3 plots in a row for (s in -1:1) { idx &lt;- which( d$shade_cent == s) plot( d$water_cent[idx], d$blooms_std[idx], xlim = c(-1, 1), bty = &quot;n&quot;, ylim = c(0, 1), main = paste(&quot;m8.4 (no interaction)\\npost: shade = &quot;, s), xlab = &quot;water (centered)&quot;, ylab = &quot;blooms (rescaled)&quot;, pch = 16, col = rangi2) mu &lt;- link(m8.4, data = data.frame(shade_cent = s, water_cent = -1:1)) for( i in 1:20 ) lines( -1:1, mu[i, ], col = col.alpha(&quot;black&quot;, 0.3)) } 圖 51.6: Triptych plots of posterior predicted blooms across water and shade treatments. (without an interaction between water and shade) 圖 51.6 顯示的是沒有交互作用項時給出的事後預測直線。每個陽光，水條件下，水和開花尺寸之間關係的直線並沒有斜率上的顯著變化。給 m8.5 繪製相似的三聯圖，可以看出斜率隨着不同陽光強度發生了變化： par(mfrow = c(1,3)) # 3 plots in a row for (s in -1:1) { idx &lt;- which( d$shade_cent == s) plot( d$water_cent[idx], d$blooms_std[idx], xlim = c(-1, 1), bty = &quot;n&quot;, ylim = c(0, 1), main = paste(&quot;m8.5 (with interaction)\\npost: shade = &quot;, s), xlab = &quot;water (centered)&quot;, ylab = &quot;blooms (rescaled)&quot;, pch = 16, col = rangi2) mu &lt;- link(m8.5, data = data.frame(shade_cent = s, water_cent = -1:1)) for( i in 1:20 ) lines( -1:1, mu[i, ], col = col.alpha(&quot;black&quot;, 0.3)) } 圖 51.7: Triptych plots of posterior predicted blooms across water and shade treatments. (with an interaction between water and shade) 很明顯，加入了交互作用之後的模型更加符合實際情況，圖 51.7 中不同強度陽光條件下，水和開花尺寸之間的關係的斜率發生了顯著的變化。當陽光不強時，水和開花尺寸之間的關係斜率較大，當陽光強度增加，這個斜率在下降。 "],["馬可夫鏈蒙地卡羅-mcmc.html", "第 52 章 馬可夫鏈蒙地卡羅 MCMC 52.1 國王訪問個各島嶼問題 52.2 Metropolis 演算法 52.3 簡單的 HMC (Hamitonian Monte Carlo) ulam 52.4 調教你的模型", " 第 52 章 馬可夫鏈蒙地卡羅 MCMC Understanding of chance could help us acquire wisdom. Richard McElreath 52.1 國王訪問個各島嶼問題 某個羣島國王的領土，恰好是圍成一圈的十個島嶼。每個島嶼的編號分別是 \\(1, 2, \\dots, 10\\)。國王決定每個島嶼住幾周，且從長遠來說，每個島嶼居住的時間長度（週數），要和它的人口成正比。我們已知從 \\(1\\) 號島嶼到 \\(10\\) 號島嶼恰好是人口從少到多依次的順序。那麼該用怎樣的策略才能確保國王在每個島嶼呆的時間長短，和該島的人口成正比呢？ 我們來聽聽看 Metropolis 的策略： 無論該國王目前正在哪個島上，他每週都需要通過丟硬幣的方式決定是要再留一週，或者是離開該島移到左右兩邊的其中一個臨島去。 如果硬幣是正面朝上，那麼國王會選擇順時針方向去往下一個臨島。如果是硬幣背面朝上，那麼國王會選擇逆時針方向去往下一個臨島。我們把這個通過投擲硬幣給出的提議稱作移島提案 (proposal island)。 給出了移島提案之後，國王要根據所在島嶼的人口，選定符合準備要去的那個島嶼人口比例的貝殼個數。例如移島提案的島嶼人口排十個島嶼中第9，那麼國王從貝殼盒子裏取出9個貝殼。然後國王要從另一個裝滿了石子的盒子中取出和目前居住島嶼上人口比例相符的石頭。假如目前國王正在10號島嶼，那麼他需要取出10個石子。 如果，第3步中取出的貝殼個數，比石子個數多，那麼國王就二話不說，根據移島提案去往下一個島（也就是會去往比目前島嶼人口多的那個島）。如果，貝殼個數比石子個數少的話，國王需要把等同於已有貝殼個數的石子拋棄。例如說是有4個貝殼（移島提案），和6個石子（目前的島嶼），那麼國王需要拋棄4個石子，保留2個石子和4個貝殼。然後國王把這2個石子和4個貝殼放在一個黑色的袋子裏，閉着眼睛從中抽取一個物體。如果抽到貝殼，那麼國王根據移島提案去4號島嶼，如果抽到的是石子，那麼國王選擇繼續留在目前的島嶼（6號）一週時間。也就是說，此時國王根據移島提案離開目前島嶼的概率是貝殼的數量除以未丟棄石子之前的數量，也就是提案島嶼的人口除以目前島嶼的人口。 這個 Metropolis 的策略看起來很荒誕，因爲似乎沒有半點邏輯，但是這個策略竟然是真實有效的。我們來進行一段計算機模擬以展示這個國王搬家的過程： num_weeks &lt;- 10000 # almost 2000 years time positions &lt;- rep(0, num_weeks) current &lt;- 10 set.seed(1234) for( i in 1:num_weeks ){ ## record current position positions[i] &lt;- current ## flip coin to generate proposal proposal &lt;- current + sample( c(-1, 1), size = 1 ) ## now make sure he loops around the archipelago if (proposal &lt; 1) proposal &lt;- 10 if (proposal &gt; 10) proposal &lt;- 1 ## move or not? prob_move &lt;- proposal / current current &lt;- ifelse( runif(1) &lt; prob_move, proposal, current ) } 把該國王前100週的行程繪製如下： plot( 1:100, positions[1:100], bty = &quot;n&quot;, xlab = &quot;week&quot;, ylab = &quot;island&quot;, col = rangi2) 圖 52.1: Results of the king following the Metropolis algorithm. This figure shows the king’s current position (vertical axis) across weeks (horizontal axis). In any particular week, it’s nearly impossible to say where the king will be. 圖 52.1 告訴我們國王的行程幾乎看起來沒有任何規律性。但是事實上，如果你把全部100000個星期的行程總結一下，會神奇地發現國王在每個島嶼所呆的時間恰好都與其人口規模成相應的比例： plot(table(positions), bty = &quot;n&quot;, xlab = &quot;island&quot;, ylab = &quot;number of weeks stayed&quot;, col = rangi2) 圖 52.2: Results of the king following the Metropolis algorithm. This figure shows the long-run behavior of the algorithm, as the time spent on each island turns out to be proportional to its population size. 52.2 Metropolis 演算法 上文中國王行程的例子其實是 Metropolis 演算法的一個特例，這就是一個簡單的馬可夫鏈蒙地卡羅過程。我們可以利用這個MCMC過程對模型給出的複雜的事後概率分佈樣本進行採樣。 例子中的“島嶼”，其實就是統計模型中的各種參數，它可以不必是離散型的，完全可以是連續型的變量。 每個島嶼的“人口規模”，其實是每個參數的事後概率分佈，在參數不同取值時的概率大小。 每個島嶼國王實際留駐的時間“週”，其實就是我們通過這個 Metropolis 演算法對事後概率分佈採集的樣本。 52.3 簡單的 HMC (Hamitonian Monte Carlo) ulam 這裏使用非洲大陸地理的數據 rugged，來作爲簡單的HMC過程的示範。 data(&quot;rugged&quot;) d &lt;- rugged d$log_gdp &lt;- log(d$rgdppc_2000) dd &lt;- d[ complete.cases(d$rgdppc_2000), ] dd$log_gdp_std &lt;- dd$log_gdp / mean(dd$log_gdp) dd$rugged_std &lt;- dd$rugged / max(dd$rugged) dd$cid &lt;- ifelse( dd$cont_africa == 1, 1, 2) 之前，我們使用二次方程近似法 quap() 時，加入了交互作用項的模型是： m8.3 &lt;- quap( alist( log_gdp_std ~ dnorm(mu, sigma), mu &lt;- a[cid] + b[cid] * (rugged_std - 0.215) , a[cid] ~ dnorm( 1, 0.1 ), b[cid] ~ dnorm( 0, 0.3 ), sigma ~ dexp( 1 ) ), data = dd ) precis( m8.3, depth = 2 ) ## mean sd 5.5% 94.5% ## a[1] 0.88655682 0.0156750452 0.861505070 0.911608569 ## a[2] 1.05057127 0.0099361951 1.034691314 1.066451232 ## b[1] 0.13251798 0.0742015273 0.013929608 0.251106352 ## b[2] -0.14263748 0.0547471324 -0.230133970 -0.055140987 ## sigma 0.10948955 0.0059346769 0.100004789 0.118974309 當我們準備使用 HMC 來採樣時，我們需要額外加以準備： 先處理所有需要中心化或者重新更改尺度的變量。 重新製作一個不含有多餘變量的數據集。（推薦） dat_slim &lt;- list( log_gdp_std = dd$log_gdp_std, rugged_std = dd$rugged_std, cid = as.integer(dd$cid) ) str(dat_slim) ## List of 3 ## $ log_gdp_std: num [1:170] 0.88 0.965 1.166 1.104 0.915 ... ## $ rugged_std : num [1:170] 0.138 0.553 0.124 0.125 0.433 ... ## $ cid : int [1:170] 1 2 2 2 2 2 2 2 2 1 ... 準備好了數據之後，接下來，我們使用 Stan 進行事後分佈樣本採集： m9.1 &lt;- ulam( alist( log_gdp_std ~ dnorm( mu, sigma ), mu &lt;- a[cid] + b[cid] * ( rugged_std - 0.215 ) , a[cid] ~ dnorm(1, 0.1), b[cid] ~ dnorm(0, 0.3), sigma ~ dexp(1) ), data = dat_slim, chains = 1 , cmdstan = TRUE ) saveRDS(m9.1, &quot;../Stanfits/m9_1.rds&quot;) m9.1 &lt;- readRDS(&quot;../Stanfits/m9_1.rds&quot;) precis( m9.1, depth = 2 ) ## mean sd 5.5% 94.5% n_eff Rhat4 ## a[1] 0.88702278 0.0170816513 0.859528630 0.916238865 624.39069 1.00043849 ## a[2] 1.05085044 0.0099861516 1.035477800 1.066575550 644.60582 0.99901102 ## b[1] 0.13464284 0.0740342795 0.012790057 0.248522530 727.60910 0.99852606 ## b[2] -0.14348214 0.0582398989 -0.241443385 -0.043985905 325.80333 1.00632289 ## sigma 0.11132267 0.0058138832 0.102738565 0.121519630 420.47045 0.99869176 我們還可以使用多条採樣鏈，及使用多個計算機內核以平行計算提升效率： m9.104 &lt;- ulam( alist( log_gdp_std ~ dnorm( mu, sigma ), mu &lt;- a[cid] + b[cid] * ( rugged_std - 0.215 ) , a[cid] ~ dnorm(1, 0.1), b[cid] ~ dnorm(0, 0.3), sigma ~ dexp(1) ), data = dat_slim, chains = 4, cores = 4 , cmdstan = TRUE ) saveRDS(m9.104, &quot;../Stanfits/m9_104.rds&quot;) m9.104 &lt;- readRDS(&quot;../Stanfits/m9_104.rds&quot;) show( m9.104 ) ## Hamiltonian Monte Carlo approximation ## 2000 samples from 4 chains ## ## Sampling durations (seconds): ## warmup sample total ## chain:1 0.04 0.03 0.07 ## chain:2 0.05 0.02 0.07 ## chain:3 0.04 0.02 0.07 ## chain:4 0.04 0.02 0.06 ## ## Formula: ## log_gdp_std ~ dnorm(mu, sigma) ## mu &lt;- a[cid] + b[cid] * (rugged_std - 0.215) ## a[cid] ~ dnorm(1, 0.1) ## b[cid] ~ dnorm(0, 0.3) ## sigma ~ dexp(1) precis( m9.104 , depth = 2 ) ## mean sd 5.5% 94.5% n_eff Rhat4 ## a[1] 0.88694033 0.0160668434 0.8607076100 0.912794440 2490.0941 0.99938159 ## a[2] 1.05078119 0.0101557868 1.0345983500 1.066792750 3063.8593 0.99861635 ## b[1] 0.13429705 0.0770662080 0.0097843181 0.256657965 2982.4843 0.99876645 ## b[2] -0.14234443 0.0555571280 -0.2323694900 -0.053974491 2192.0373 1.00169965 ## sigma 0.11139122 0.0059178704 0.1024696800 0.121235485 2171.6477 0.99897032 除了使用 traceplot() 來進行診斷給出軌跡圖之外： traceplot(m9.104) 圖 52.3: Trace plot of the Markov chain from the ruggedness model, m9.1. (Gray region is warmup) 還可以使用 trunkplot() 繪製 軌跡排序圖 (trace rank plot)。 trankplot( m9.104 ) 圖 52.4: Trunk plot of the Markov chain from the ruggedness model, m9.1. 使用 stancode() 可以閱讀計算機自動生成的 Stan 代碼： stancode(m9.104) ## data{ ## vector[170] log_gdp_std; ## vector[170] rugged_std; ## int cid[170]; ## } ## parameters{ ## vector[2] a; ## vector[2] b; ## real&lt;lower=0&gt; sigma; ## } ## model{ ## vector[170] mu; ## sigma ~ exponential( 1 ); ## b ~ normal( 0 , 0.3 ); ## a ~ normal( 1 , 0.1 ); ## for ( i in 1:170 ) { ## mu[i] = a[cid[i]] + b[cid[i]] * (rugged_std[i] - 0.215); ## } ## log_gdp_std ~ normal( mu , sigma ); ## } 52.4 調教你的模型 有些模型給出的事後概率密度十分的寬且不準確，這常常是由於不加思索地給予所謂的“無信息先驗概率分佈”，也就是常見的平先驗概率分佈 (flat priors)。你可能會發現它給出的事後樣本採集鏈十分的野蠻，一會兒非常大，一會兒非常地小。下面是一個最簡單的例子，它用於計算兩個來自高斯分佈的觀察值 -1，和 1 的事後均值和標準差，使用的就是典型的平分佈作爲先驗概率分佈： y &lt;- c(-1, 1) set.seed(11) m9.2 &lt;- ulam( alist( y ~ dnorm( mu, sigma ), mu &lt;- alpha, alpha ~ dnorm( 0 , 1000 ), sigma ~ dexp(0.0001) ), data = list(y = y), chains = 3, cmdstan = TRUE ) saveRDS(m9.2, &quot;../Stanfits/m9_2.rds&quot;) ## Compiling Stan program... ## ## Warning: 70 of 1500 (5.0%) transitions ended with a divergence. ## This may indicate insufficient exploration of the posterior distribution. ## Possible remedies include: ## * Increasing adapt_delta closer to 1 (default is 0.8) ## * Reparameterizing the model (e.g. using a non-centered parameterization) ## * Using informative or weakly informative prior distributions m9.2 &lt;- readRDS(&quot;../Stanfits/m9_2.rds&quot;) precis(m9.2) ## mean sd 5.5% 94.5% n_eff Rhat4 ## alpha -36.264159 433.52754 -838.5780150 544.66748 143.08860 1.0134851 ## sigma 670.633489 1423.73193 5.7593283 3173.02035 119.86578 1.0130465 你會看見你的計算機給出的結果非常的奇怪，且有警報提示可能計算出錯。上述結果肯定是不正常的，因為觀察值 -1，和 1 的平均值應該是 0 。你看上面的結果給出的可信區間也是多麼的荒謬。可用的有效樣本量也是小的可憐。你可以看看它的軌跡圖，和軌跡排序圖是多麼地糟糕： traceplot(m9.2) 圖 52.5: Diagnosing trace plot from three trains by model m9.2. These chains are not healthy. trankplot(m9.2) 圖 52.6: Diagnosing trankplot from three chains by model 9.2. These chains are not healthy. 讓我們把模型修改成一個微調了先驗概率分佈的模型： \\[ \\begin{aligned} y_i &amp; \\sim \\text{Normal}(\\mu, \\sigma) \\\\ \\mu &amp; = \\alpha \\\\ \\color{red}{\\alpha} &amp;\\; \\color{red}{\\sim \\text{Normal}(1, 10)} \\\\ \\color{red}{\\sigma} &amp;\\; \\color{red}{\\sim \\text{Exponential}(1)} \\end{aligned} \\] 我們僅僅是給均值，和對應的標準差增加了一點點比平概率分佈多一些信息的分佈。於是這個模型可以變成： set.seed(11) m9.3 &lt;- ulam( alist( y ~ dnorm( mu, sigma ), mu &lt;- alpha, alpha ~ dnorm(1, 10), sigma ~ dexp(1) ), data = list(y = y), chains = 3, cmdstan = TRUE ) saveRDS(m9.3, &quot;../Stanfits/m9_3.rds&quot;) m9.3 &lt;- readRDS(&quot;../Stanfits/m9_3.rds&quot;) precis(m9.3) ## mean sd 5.5% 94.5% n_eff Rhat4 ## alpha -0.012409686 1.21710641 -1.78868335 2.0516043 354.20715 1.0082839 ## sigma 1.569103729 0.86749726 0.66410034 3.1730820 507.71499 1.0022099 可以看見，調教了一點點的先驗概率分佈之後給出的事後概率分佈估計就變得合理許多了。新的模型的軌跡圖和軌跡排序圖也變得合理許多： traceplot(m9.3) 圖 52.7: Diagnosing trace plot from three trains by model m9.3. These chains are much better. Adding weakly informative priors in m9.3 clears up the condition. trankplot(m9.3) 圖 52.8: Diagnosing trank plot from three trains by model m9.3. These chains are much better. Adding weakly informative priors in m9.3 clears up the condition. 可以看到對先驗概率分佈稍微增加一些微弱的信息之後，即便只有兩個觀察變量的數據給出的似然 likelihood 也已經遠遠把先驗概率的信息給掩蓋掉了，我們給出的先驗概率的均值是1，但是觀察數據兩個 -1 和 1 的均值是 0。 52.4.1 無法被確認的參數 non-identifiable parameters 之前我們就遇見了參數共線性給模型造成的麻煩 (Chapter 49.1)。這裏我們來觀察一下共線性變量造成的參數無法被估計的時候，MCMC給出的結果和預警會是怎樣的： 我們先從標準正（常）態分佈中隨機抽取100個觀察數據； set.seed(41) y &lt;- rnorm(100, mean = 0, sd = 1) 我們“錯誤地”使用下面的模型； \\[ \\begin{aligned} y_i &amp; \\sim \\text{Normal}(\\mu, \\sigma) \\\\ \\mu &amp; = \\alpha_1 + \\alpha_2 \\\\ \\alpha_1 &amp; \\sim \\text{Normal}(0, 1000) \\\\ \\alpha_2 &amp; \\sim \\text{Normal}(0, 1000) \\\\ \\sigma &amp; \\sim \\text{Exponential}(1) \\end{aligned} \\] 上述模型中的線性回歸模型，包含了兩個參數 \\(\\alpha_1, \\alpha_2\\) 他們是無法被估計的，但是他們的和，是可以被估計的，且由於我們先從正（常）態分佈中採集的觀察數據樣本，我們知道這個和應該在 0 附近不會太遠。 下面的代碼是上述模型的翻譯，這時 Stan 運行的時間會較長； set.seed(384) m9.4 &lt;- ulam( alist( y ~ dnorm( mu, sigma ), mu &lt;- a1 + a2, a1 ~ dnorm( 0, 1000 ), a2 ~ dnorm( 0, 1000 ), sigma ~ dexp(1) ), data = list(y = y), chains = 3, cmdstan = TRUE ) saveRDS(m9.4, &quot;../Stanfits/m9_4.rds&quot;) ## Compiling Stan program... ## Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: ## Chain 2 Exception: normal_lpdf: Scale parameter is 0, but must be positive! (in &#39;/var/folders/n0/td0mphcj6w99jbbq4p9s5xf40000gn/T/Rtmpdj1T5J/model-100ab3fc5fda4.stan&#39;, line 15, column 4 to column 29) ## Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, ## Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. ## Chain 2 ## Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue: ## Chain 3 Exception: normal_lpdf: Scale parameter is 0, but must be positive! (in &#39;/var/folders/n0/td0mphcj6w99jbbq4p9s5xf40000gn/T/Rtmpdj1T5J/model-100ab3fc5fda4.stan&#39;, line 15, column 4 to column 29) ## Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine, ## Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified. ## Chain 3 ## 1125 of 1500 (75.0%) transitions hit the maximum treedepth limit of 10 or 2^10-1 leapfrog steps. ## Trajectories that are prematurely terminated due to this limit will result in slow exploration. ## Increasing the max_treedepth limit can avoid this at the expense of more computation. ## If increasing max_treedepth does not remove warnings, try to reparameterize the model. m9.4 &lt;- readRDS(&quot;../Stanfits/m9_4.rds&quot;) precis(m9.4) ## mean sd 5.5% 94.5% n_eff Rhat4 ## a1 -18.3304929 213.791279394 -404.04734500 266.7399550 2.2616183 2.1791117 ## a2 18.5244939 213.787461714 -266.49822000 404.2695900 2.2615364 2.1792029 ## sigma 1.0217121 0.073871918 0.91419097 1.1471151 37.9489533 1.0445749 看上面的模型給出的估計是多麼的可怕。有效樣本量竟然只有個位數。\\(\\hat{R}\\) 的估計值也是大得驚人。a1, a2 的取值距離0都十分遙遠，標準差也大得驚人，且它們之和十分接近 0 。這就是兩個參數之和可求，但是他們各自卻有無窮解的實例。你觀察一下上述模型的軌跡圖： traceplot(m9.4) 圖 52.9: Diagnosing trace plot from three trains by model m9.4. These chains are unhealthy, and wandering between different values and unstable. You cannot use these samples. trankplot(m9.4) 圖 52.10: Diagnosing trank plot from three trains by model m9.5. These chains are unhealthy, and wandering between different values and unstable. You cannot use these samples. 同樣地，對先驗概率分佈加以調整之後，有助於我們的模型事後樣本的採集。 set.seed(384) m9.5 &lt;- ulam( alist( y ~ dnorm( mu, sigma ), mu &lt;- a1 + a2, a1 ~ dnorm( 0, 10 ), a2 ~ dnorm( 0, 10 ), sigma ~ dexp(1) ), data = list(y = y), chains = 3, cmdstan = TRUE ) saveRDS(m9.5, &quot;../Stanfits/m9_5.rds&quot;) m9.5 &lt;- readRDS(&quot;../Stanfits/m9_5.rds&quot;) precis(m9.5) ## mean sd 5.5% 94.5% n_eff Rhat4 ## a1 0.33282894 7.186599779 -11.22923500 11.7756690 388.24427 1.0022364 ## a2 -0.14231568 7.187487328 -11.59277200 11.3942035 388.35142 1.0022253 ## sigma 1.03491522 0.072601359 0.93119553 1.1588153 420.56070 1.0058236 這時 m9.5 運行的速度提升了很多，且 a1, a2 的事後樣本估計比之前的 m9.4 要良好得多。軌跡圖和軌跡排序圖也要改善了很多： traceplot(m9.5) 圖 52.11: Diagnosing trace plot from three trains by model m9.5. These chains are much better with the same model but weakly informative priors trankplot(m9.5) 圖 52.12: Diagnosing trank plot from three trains by model m9.5. These chains are much better with the same model but weakly informative priors 如果一個模型，它的事後概率分佈的採樣過程太過於漫長，那麼它很可能就是由於有些參數出現了無法被估計的現象。請試着給它的先驗概率分佈加一些較爲微弱的信息以改善模型的樣本採集過程。儘量不要使用完全無信息的平概率分佈作爲先驗概率分佈。 "],["貝葉斯廣義線性回歸-bayesian-glm.html", "第 53 章 貝葉斯廣義線性回歸 Bayesian GLM 53.1 二項式回歸模型 binomial regression 53.2 泊松回歸模型 Poisson regression", " 第 53 章 貝葉斯廣義線性回歸 Bayesian GLM Bayesian updating is entropy maximization…. Information entropy is a way of counting how many unique arrangements correspond to a distribution. Richard McElreath A sensitivity analysis explores how changes in assumptions influence inference. If none of the alternative assumptions you consider have much impact on inference, that’s worth reporting. Likewise, if the alternatives you consider to have an important impact on inference, that’s also worth reporting. 53.1 二項式回歸模型 binomial regression 二項分佈通常標記爲： \\[ y \\sim \\text{Binomial}(n, p) \\] 其中， \\(y\\) 是一個計數結果，可以是 0，或者其他正整數； \\(p\\) 是每個試驗 (trial) 成功（或者失敗）的概率； \\(n\\) 是實施試驗的總次數。 一共有兩種類型的廣義線性回歸模型會使用到二項分佈的概率方程，他們本身其實也是同一種模型，只是由於數據被歸納成了不同的形式： 邏輯回歸 logistic regression，適應的數據是把每一次的試驗結果單獨列出來的格式，此時結果變量只有兩個取值，0 或 1。 歸納數據的二項回歸模型 aggregated binomial regression，適應的數據類型是，把相同共變量的試驗歸納之後的數據，此時結果變量可以取 0 至 n 之間的任意正整數。 不論是上述哪種二項式回歸，使用的鏈接方程都是邏輯函數 logit function。 53.1.1 邏輯回歸模型數據實例：prosocial chimpanzees data(chimpanzees) d &lt;- chimpanzees str(d) ## &#39;data.frame&#39;: 504 obs. of 8 variables: ## $ actor : int 1 1 1 1 1 1 1 1 1 1 ... ## $ recipient : int NA NA NA NA NA NA NA NA NA NA ... ## $ condition : int 0 0 0 0 0 0 0 0 0 0 ... ## $ block : int 1 1 1 1 1 1 2 2 2 2 ... ## $ trial : int 2 4 6 8 10 12 14 16 18 20 ... ## $ prosoc_left : int 0 0 1 0 1 1 1 1 0 0 ... ## $ chose_prosoc: int 1 0 0 1 1 1 0 0 1 1 ... ## $ pulled_left : int 0 1 0 0 1 1 0 0 0 0 ... 上述數據其實來自 (Silk et al. 2005) ，該實驗講的是針對類人猿或者黑猩猩做的社會學實驗。設計是這樣的，在一張桌子上擺了四個盤子和兩個槓桿。其中東側槓桿，西側槓桿的功能是相同的，就是分別把放在槓桿裝置上的兩個盤子送往桌子的南北兩側。其中一側槓桿控制的兩個盤子裏只有一個裝有食物，另一側槓桿控制的兩個盤子都裝有食物。社會學研究做的實驗是，讓參加實驗的黑猩猩自行選擇搖動東側還是西側的槓桿。但是有的黑猩猩的對面會坐另外一只不能控制槓桿的同類。當相同的實驗在人類學生羣體中實施的時候，幾乎所有對面還坐有另一名學生的實驗學生都選擇了去搖動能夠控制兩盤食物的槓桿，也就是傾向於讓對面的同類也能獲得食物而不是只選擇自己有食物。這被叫做社會傾向化 (prosocial option)。於是我們的疑問是，是否類人猿黑猩猩也會有相似的行爲呢？也就是當對面也坐有同類時會作出社會傾向化的選擇呢？ 上述數據中的兩個變量是特別關鍵的， prosoc_left: 二進制變量，0 表示右側槓桿是社會傾向化，1 表示左側槓桿是社會傾向化。 condition: 二進制變量，0 表示對面沒有同伴，1 表示對面坐有同伴。 也就是說，在我們的模型中，我們希望研究這兩個變量之間是不是存在交互作用。我們希望分析下列四種情況下，類人猿黑猩猩作出的選擇： prosoc_left = 0 and condition = 0，右側槓桿有兩份食物，對面沒有同伴； prosoc_left = 1 and condition = 0，左側槓桿有兩份食物，對面沒有同伴； prosoc_left = 0 and condition = 1，右側槓桿有兩份食物，對面有同伴； prosoc_left = 1 and condition = 1，左側槓桿有兩份食物，對面有同伴； 熟悉廣義線性回歸模型，比如邏輯回歸模型的朋友可能最開始想到的方法是用上述啞變量來建立簡單的交互作用項放在模型結構裏就可以解決問題了。但是我們知道使用啞變量的缺點是使得先驗概率分佈的設定變得困難，所以我們希望不要使用啞變量的方法，轉而使用更加靈活的索引變量法 (index variable): d$treatment &lt;- 1 + d$prosoc_left + 2 * d$condition xtabs( ~ treatment + prosoc_left + condition, d) ## , , condition = 0 ## ## prosoc_left ## treatment 0 1 ## 1 126 0 ## 2 0 126 ## 3 0 0 ## 4 0 0 ## ## , , condition = 1 ## ## prosoc_left ## treatment 0 1 ## 1 0 0 ## 2 0 0 ## 3 126 0 ## 4 0 126 於是，我們現在可以把這個實驗蘊含的數學模型寫下來： \\[ \\begin{aligned} L_i &amp; \\sim \\text{Binomial}(1, p_i) \\\\ \\text{logit}(p_i) &amp; = \\alpha_{\\text{ACTOR}[i]} + \\beta_{\\text{TREATMENT}[i]} \\\\ \\alpha_j &amp; \\sim \\text{To be determined} \\\\ \\beta_k &amp; \\sim \\text{To be determined} \\\\ \\end{aligned} \\] 這裏的 \\(L_i \\sim \\text{Binomial}(1, p_i)\\) 其實等價於 \\(L_i \\sim \\text{Bernoulli}(p_i)\\)。同時我們還需要決定每個參數的先驗概率分佈。其中有七隻黑猩猩，所以有 7 個 \\(\\alpha\\) 的先驗概率，還有 4 個回歸係數 \\(\\beta\\) 屬於上面描述的四種不同的條件。 在思考如何給這些參數設定先驗概率分佈時，我們先從最簡單的一個邏輯回歸模型出發： \\[ \\begin{aligned} L_i &amp; \\sim \\text{Binomial}(1, p_i) \\\\ \\text{logit}(p_i) &amp; = \\alpha \\\\ \\alpha &amp; \\sim \\text{Normal}(0, \\omega) \\end{aligned} \\] 這時，我們需要先決定這個 \\(\\omega\\) 作爲一個合理的先驗概率分佈。我們先從相當平坦的一個分佈開始，例如 \\(\\omega = 10\\)。 m11.1 &lt;- quap( alist( pulled_left ~ dbinom( 1, p ), logit(p) &lt;- a, a ~ dnorm( 0, 10 ) ), data = d ) 接下來，我們從 m11.1 中的先驗概率採集一些樣本： set.seed(1999) prior &lt;- extract.prior( m11.1, n = 10000) 接下來還有一步，就是要把數據通過鏈接函數的逆函數轉換回去原來的 0-1 之間的概率尺度。對於邏輯回歸來說，鏈接函數就是 logit 函數，其逆函數就是 inv_logit。 p &lt;- inv_logit( prior$a ) dens( p, adj = 0.1 , bty = &quot;n&quot;, xlab = &quot;prior prob pull left&quot;) m11.1 &lt;- quap( alist( pulled_left ~ dbinom( 1, p ), logit(p) &lt;- a, a ~ dnorm( 0, 1.5 ) ), data = d ) set.seed(1999) prior &lt;- extract.prior( m11.1, n = 10000) p1 &lt;- inv_logit( prior$a ) lines( density(p1), adj = 0.1, col = rangi2) text(0.15, 9, &quot;a ~ dnorm(0, 10)&quot;) text(0.5, 1.8, &quot;a ~ dnorm(0, 1.5)&quot;, col = rangi2) 圖 53.1: Prior predictive simulations for the most basic logistic regression. A flat Normal(0, 10) prior on the intercept produces a very non-flat prior distribution on the outcome scale. A more concentrated Normal(0, 1.5) prior produces something more reasonable (blue). 圖 53.1 給出的先驗概率是多麼地不合理，它把大部分的概率權重都分配給了0，或者1附近的概率。這代表什麼含義呢？ 如果你使用 \\(\\alpha \\sim \\text{Normal}(0,10)\\) 作爲截距的先驗概率分佈，代表你初期的設定是，在還沒有開始進行實驗之前，我們認爲實驗對象的黑猩猩要麼總是去拉左手的槓桿，要麼永遠都不去拉左手槓桿。這其實不用說也知道是十分不合理的。如果我們把 \\(\\omega = 1.5\\) 作爲先驗概率分佈的方差的話，給出的圖形，會合理地多 (圖 53.1 中藍色概率密度曲線)。 這裏告訴我們的是，一個先驗概率分佈在 logit 尺度上的平坦分佈，在回到原來的概率尺度上的時候，會給出事與願違的非平坦分佈結果。 接下來我們再來考慮不同條件下的回歸係數 \\(\\beta\\)，在這裏，術語可以使用治療效果 (treatment effect) 來表達。假如我們再次自作聰明地使用平坦的分佈 \\(\\text{Normal}(0,10)\\) 作先驗概率分佈，看它會給出怎樣的結果： m11.2 &lt;- quap( alist( pulled_left ~ dbinom( 1, p ), logit(p) &lt;- a + b[treatment], a ~ dnorm( 0, 1.5 ), b[treatment] ~ dnorm( 0, 10 ) ), data = d ) set.seed(1999) prior &lt;- extract.prior( m11.2, n = 10000) p &lt;- sapply( 1:4, function(k) inv_logit(prior$a + prior$b[, k])) dens(abs(p[,1] - p[,2]), adj = 0.1, bty = &quot;n&quot;, xlab = &quot;prior diff between treatments&quot;) text(0.8, 9, &quot;b ~ dnorm(0, 10)&quot;) m11.2.1 &lt;- quap( alist( pulled_left ~ dbinom( 1, p ), logit(p) &lt;- a + b[treatment], a ~ dnorm( 0, 1.5 ), b[treatment] ~ dnorm( 0, 0.5 ) ), data = d ) set.seed(1999) prior &lt;- extract.prior( m11.2.1, n = 10000) p1 &lt;- sapply( 1:4, function(k) inv_logit(prior$a + prior$b[, k])) lines(density(abs(p1[,1] - p1[,2])), adj = 0.1, col = rangi2) text(0.3, 4, &quot;b ~ dnorm(0, 0.5)&quot;, col = rangi2) 圖 53.2: Prior predictive simulations for the most basic logistic regression. A flat Normal(0, 10) prior on the treatment effect also produces a very non-flat prior distribution on the outcome scale. A more concentrated Normal(0, 0.5) prior produces something more reasonable (blue). 修改了先驗概率分佈的方差 \\(\\omega = 0.5\\) 之後，我們發現大部分的概率密度被分配到了 0 附近而不是原來的非 0 即 1。但是此時的先驗療效差的平均值是： mean(abs(p1[,1] - p1[,2])) ## [1] 0.098386632 也就是 10% 左右的療效差，也就是不同條件下的概率不至於變得非常大。 於是我們搞定了該怎樣設定先驗概率的問題之後，進入數據準備，和模型的運行階段： # trimmed data list dat_list &lt;- list( pulled_left = d$pulled_left, actor = d$actor, treatment = as.integer(d$treatment) ) 數據準備好了以後，讓我們來使用 Markov Chain 運行這個邏輯回歸模型： m11.4 &lt;- ulam( alist( pulled_left ~ dbinom( 1, p ), logit(p) &lt;- a[actor] + b[treatment], a[actor] ~ dnorm( 0, 1.5 ), b[treatment] ~ dnorm( 0, 0.5 ) ), data = dat_list, chains = 4, log_lik = TRUE, cmdstan = TRUE ) saveRDS(m11.4, &quot;../Stanfits/m11_4.rds&quot;) m11.4 &lt;- readRDS(&quot;../Stanfits/m11_4.rds&quot;) precis( m11.4, depth = 2 ) ## mean sd 5.5% 94.5% n_eff Rhat4 ## a[1] -0.429942287 0.32559257 -0.946149825 0.104632565 832.88104 1.00258538 ## a[2] 3.892282215 0.72040443 2.860756100 5.111318250 1661.26882 0.99943327 ## a[3] -0.739816999 0.32292436 -1.264098750 -0.221254185 737.34692 1.00083906 ## a[4] -0.734329668 0.31720925 -1.242542250 -0.229930505 738.26644 1.00081553 ## a[5] -0.435195703 0.32629350 -0.947177970 0.092516450 770.97726 1.00122673 ## a[6] 0.496271511 0.32303636 -0.014015981 1.027858700 740.59441 1.00383901 ## a[7] 1.966138568 0.42321369 1.305282550 2.660314500 1132.59230 0.99981816 ## b[1] -0.052332863 0.27477956 -0.492390840 0.375459205 703.79445 1.00129414 ## b[2] 0.467946661 0.27569364 0.025882383 0.918256995 651.08788 1.00594527 ## b[3] -0.401369705 0.27283765 -0.831073830 0.027599697 736.85875 1.00230582 ## b[4] 0.356327179 0.27327018 -0.079038555 0.791810265 701.55693 1.00334895 這個模型 m11.4 的實際 Stan 代碼是: rethinking::stancode(m11.4) ## data{ ## int pulled_left[504]; ## int treatment[504]; ## int actor[504]; ## } ## parameters{ ## vector[7] a; ## vector[4] b; ## } ## model{ ## vector[504] p; ## b ~ normal( 0 , 0.5 ); ## a ~ normal( 0 , 1.5 ); ## for ( i in 1:504 ) { ## p[i] = a[actor[i]] + b[treatment[i]]; ## p[i] = inv_logit(p[i]); ## } ## pulled_left ~ binomial( 1 , p ); ## } ## generated quantities{ ## vector[504] log_lik; ## vector[504] p; ## for ( i in 1:504 ) { ## p[i] = a[actor[i]] + b[treatment[i]]; ## p[i] = inv_logit(p[i]); ## } ## for ( i in 1:504 ) log_lik[i] = binomial_lpmf( pulled_left[i] | 1 , p[i] ); ## } 上述模型運行的結果中，前面 7 個每隻黑猩猩的截距，也就是代表了每隻黑猩猩本身會主動去拉動左邊槓桿的傾向性。我們來把這個數據轉換到它本身應該有的數據尺度上來看： post &lt;- extract.samples(m11.4) p_left &lt;- inv_logit( post$a ) plot( precis(as.data.frame(p_left)), xlim = c(0,1)) 圖 53.3: The intercepts unique to each chimpanzee, on the probability scale. 可以看到，比較明顯的傾向於去拉右側槓桿的是1，3，4，5這四隻黑猩猩。2號和7號黑猩猩則體現出了相反的興趣。這是每隻黑猩猩本身對於拉左右兩側哪隻槓桿的最基本的傾向性分析。接下來我們來看不同的條件下的效果差別： labs &lt;- c(&quot;R/N&quot;, &quot;L/N&quot;, &quot;R/P&quot;, &quot;L/P&quot;) plot( precis(m11.4, depth = 2, pars = &quot;b&quot;), labels = labs) 圖 53.4: The treatment effect by different conditions, on the log-odds scale. 我們通過該實驗希望獲得的分析結果是，到底桌子對面坐與不坐同類，黑猩猩是否會作出不同的社會化傾向選擇？也就是黑猩猩是否會根據對面有沒有同類而去拉那個有兩個食物那一側的槓桿。這意味着我們希望比較的是第一行和第三行，也就是當兩份食物都在右側槓桿時，對面有沒有同類是否會改變黑猩猩拉動右側槓桿的選擇；同時我們也希望比較第二行和第四行的結果，也就是兩份食物都在左側槓桿時，對面有沒有同類是否會改變黑猩猩拉動左側槓桿的選擇。其實我們看圖 53.4 已經能夠猜出大概沒有差異的的結果了。但是我們是可以對這兩個條件下的差異作出比較，並計算其可信區間的： diffs &lt;- list( db13 = post$b[, 1] - post$b[, 3], db24 = post$b[, 2] - post$b[, 4] ) plot(precis(diffs)) 圖 53.5: The treatment effect difference compared between R/N R/P, and L/N L/P, on the log-odds scale. db13, db14 就是我們希望求的比較有/沒有同伴坐在桌子對面是否影響黑猩猩作出社會化傾向選擇的療效差異 (the contrast between the no-partner/partner treatments)。db13 的準確解釋是，當右側槓桿控制兩份食物時，對面有同伴/沒有同伴的情況下，黑猩猩會傾向於去使用左側槓桿的療效差異 (treatment effect difference)。所以，如果有證據證明有同伴的情況下，黑猩猩會傾向於作出社會化選擇，那麼我們應該會看到不等於零的療效差異，也就是會在有同伴的時候更多的去拉右邊的槓桿。但其實 db13 的結果似乎顯示有微弱的證據證明，當沒有同伴時，黑猩猩會略微更多的傾向於拉左邊槓桿（沒有社會化傾向），當然這個證據很微弱，可信區間也包括沒有療效差異的 0。相似地，db24 比較的是，當兩份食物出現在左側槓桿時，對面有同伴/沒有同伴情況之間拉動左側槓桿的療效差異。如果我們期待黑猩猩會作出會社會化傾向選擇當對面坐有同伴的話，我們會希望這個 db24 的取值會顯著小於零，但事實上卻沒有符合這樣期待的結果。 我們可以利用上述運行好的模型結果來進行事後的預測，爲每一只黑猩猩估計它在四種條件下主動去拉左側槓桿的概率。同時我們還可以把它們和每隻黑猩猩實際觀察到的拉動左側槓桿概率作直觀的比較： 下面的代碼計算出的是一個 \\(7\\times 4\\) 的矩陣，每一行有四列結果，代表7只黑猩猩在4中條件下實際觀察到拉動左側槓桿的概率，其中第一只黑猩猩的四種條件下拉動左側槓桿的概率分別是：0.3333 0.5000 0.2778 0.5556。 pl &lt;- by( d$pulled_left, list(d$actor, d$treatment), mean) pl[1, ] ## 1 2 3 4 ## 0.33333333 0.50000000 0.27777778 0.55555556 str(pl) ## &#39;by&#39; num [1:7, 1:4] 0.333 1 0.278 0.333 0.333 ... ## - attr(*, &quot;dimnames&quot;)=List of 2 ## ..$ : chr [1:7] &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot; ... ## ..$ : chr [1:4] &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot; ## - attr(*, &quot;call&quot;)= language by.default(data = d$pulled_left, INDICES = list(d$actor, d$treatment), FUN = mean) 把每隻猩猩的四個條件下的觀察值散點圖繪製如下圖 53.6： plot(NULL, xlim = c(1, 28), ylim = c(0, 1), xlab = &quot;&quot;, ylab = &quot;proportion left lever&quot;, xaxt = &quot;n&quot;, yaxt = &quot;n&quot;) axis(2, at = seq(0, 1, by = 0.2), labels = seq(0, 1, by = 0.2)) abline( h = 0.5, lty = 2 ) for (j in 1:7 ) abline( v = (j - 1) * 4 + 4.5, lwd = 0.5 ) for (j in 1:7 ) text( (j - 1) * 4 + 2.5, 1.1, concat(&quot;actor &quot;, j), xpd = TRUE) for (j in (1:7)[-2] ) { lines( (j - 1)*4 + c(1,3), pl[j, c(1,3)], lwd = 2, col = rangi2) lines( (j - 1)*4 + c(2,4), pl[j, c(2,4)], lwd = 2, col = rangi2) } points( 1:28, t(pl), pch = 16, col = &quot;white&quot;, cex = 1.7) points( 1:28, t(pl), pch = c(1,1,16,16), col = rangi2, lwd = 2) yoff &lt;- 0.01 text( 1, pl[1,1] - yoff, &quot;R/N&quot;, pos = 1, cex = 0.8) text( 2, pl[1,2] + yoff, &quot;L/N&quot;, pos = 3, cex = 0.8) text( 3, pl[1,3] - yoff, &quot;R/P&quot;, pos = 1, cex = 0.8) text( 4, pl[1,4] + yoff, &quot;L/P&quot;, pos = 3, cex = 0.8) mtext( &quot;observed proportions\\n&quot;) 圖 53.6: Observed data for the chimpanzee data. Data are grouped by actor. Open points are non-partner treatments. Filled points are partner treatments. The right R and left L sides of the prosocial options are labeled in the figure. 接下來我們來計算模型運行之後的這些概率的預測值。圖 53.7 生成的代碼如下。模型本身告訴我們，有沒有同伴坐在桌子對面，基本上不會影響黑猩猩的選擇。(The model expects no change when adding a partner.) 大部分的選擇變化取決於黑猩猩本身，也就是每隻黑猩猩自己的模型截距。 dat &lt;- list( actor = rep(1:7, each = 4), treatment = rep(1:4, times = 7)) p_post &lt;- link( m11.4, data = dat ) p_mu &lt;- apply( p_post, 2, mean ) p_ci &lt;- apply( p_post, 2, PI ) p_mu &lt;- matrix(p_mu, nrow = 7, ncol = 4, byrow = TRUE) plot(NULL, xlim = c(1, 28), ylim = c(0, 1), xlab = &quot;&quot;, ylab = &quot;proportion left lever&quot;, xaxt = &quot;n&quot;, yaxt = &quot;n&quot;) axis(2, at = seq(0, 1, by = 0.2), labels = seq(0, 1, by = 0.2)) abline( h = 0.5, lty = 2 ) for (j in 1:7 ) abline( v = (j - 1) * 4 + 4.5, lwd = 0.5 ) for (j in 1:7 ) text( (j - 1) * 4 + 2.5, 1.1, concat(&quot;actor &quot;, j), xpd = TRUE) for (j in (1:7)[-2] ) { lines( (j - 1)*4 + c(1,3), p_mu[j, c(1,3)], lwd = 2) lines( (j - 1)*4 + c(2,4), p_mu[j, c(2,4)], lwd = 2) } for (j in 1:28) { lines( c(j, j), p_ci[c(1, 2), j], lwd = 2) } points( 1:28, t(p_mu), pch = 16, col = &quot;white&quot;, cex = 1.7) points( 1:28, t(p_mu), pch = c(1,1,16,16), lwd = 2) yoff &lt;- 0.07 text( 1, p_mu[1,1] - yoff, &quot;R/N&quot;, pos = 1, cex = 0.8) text( 2, p_mu[1,2] + yoff, &quot;L/N&quot;, pos = 3, cex = 0.8) text( 3, p_mu[1,3] - yoff, &quot;R/P&quot;, pos = 1, cex = 0.8) text( 4, p_mu[1,4] + yoff, &quot;L/P&quot;, pos = 3, cex = 0.8) mtext( &quot;posterior prediction proportions\\n&quot;) 圖 53.7: Posterior predictions for the chimpanzee data. Data are grouped by actor. Open points are non-partner treatments. Filled points are partner treatments. The right R and left L sides of the prosocial options are labeled in the figure. 89% compatibility intervals for each proportion for each actor are shown as well. m11.4 模型實際上直接跳過了只有 procosial option 和 partner 兩個變量時的模型直接加了交互作用項的模型。下面的代碼運行的模型是沒有交互作用項的版本，我麼來比較一下兩個模型的擬合度： d$side &lt;- d$prosoc_left + 1 # right = 1, left = 2 d$cond &lt;- d$condition + 1 # no partner = 1, with partner = 2 dat_list2 &lt;- list( pulled_left = d$pulled_left, actor = d$actor, side = d$side, cond = d$cond ) m11.5 &lt;- ulam( alist( pulled_left ~ dbinom( 1, p ), logit(p) &lt;- a[actor] + bs[side] + bc[cond] , a[actor] ~ dnorm( 0, 1.5 ), bs[side] ~ dnorm( 0, 0.5 ), bc[cond] ~ dnorm( 0, 0.5 ) ), data = dat_list2, chains = 4, log_lik = TRUE, cmdstan = TRUE ) ## Compiling Stan program... precis(m11.5, depth = 2) ## mean sd 5.5% 94.5% n_eff Rhat4 ## a[1] -0.655770413 0.43535605 -1.359676900 0.022933406 710.00083 1.0045239 ## a[2] 3.743865885 0.79650038 2.538768700 5.084815100 1142.22454 1.0007099 ## a[3] -0.951412794 0.43147243 -1.620515350 -0.277939290 738.32519 1.0030614 ## a[4] -0.966171614 0.43224075 -1.649405200 -0.284136425 795.58057 1.0036848 ## a[5] -0.655961462 0.42790668 -1.339657200 0.026944903 739.66497 1.0043577 ## a[6] 0.272662554 0.42780637 -0.434731340 0.951514435 769.85407 1.0024592 ## a[7] 1.756695293 0.50582298 0.972839695 2.550957250 840.14229 1.0028437 ## bs[1] -0.180166983 0.33200510 -0.727985335 0.356886305 771.91278 1.0032280 ## bs[2] 0.503903317 0.33198302 -0.031784743 1.043773600 826.00366 1.0034213 ## bc[1] 0.278262385 0.33353433 -0.248087980 0.823398375 730.26640 1.0055826 ## bc[2] 0.038256826 0.33203543 -0.488788280 0.561857315 728.94709 1.0047022 compare(m11.5, m11.4) ## WAIC SE dWAIC dSE pWAIC weight ## m11.5 531.00132 19.112666 0.0000000 NA 7.8710514 0.66681879 ## m11.4 532.38899 18.937857 1.3876636 1.2797982 8.5576211 0.33318121 我們可以看到無論是 m11.5 本身給出的模型運行結果，還是從模型比較給出的報告，我們都認爲加不加這個交互作用項其實沒有太大的影響。這裏只是把如何進行模型之間的比較拿來做示範而已。但是這裏我們需要用到有交互作用項的模型 m11.4，因爲這是該實驗設計的初衷和目的之一。 53.1.2 相對還是絕對？ Consider for example the parable of relative shark and absolute deer. People are very afraid of shark, but not so afraid of deer. But each year, deer kill many more people than sharks do. In this comparison, absolute risks are being compared: the lifetime risk of death from deer vastly exceeds the lifetime risk death from shark bite. 53.1.3 歸納後的二進制數據：繼續使用黑猩猩數據 前面黑猩猩數據的邏輯回歸模型實例中，我們使用的數據是每一隻黑猩猩，在每次以實驗作出的是否拉動左側槓桿的單個實驗數據 individual data。但是事實上很多數據在獲取的時候是已經被整理彙總過的。相同的信息可以被整理成更加簡約的數據形式。我們可以從原始數據計算每隻黑猩猩，在不同的實驗條件下拉動左側槓桿的次數： d_aggregated &lt;- aggregate( d$pulled_left, list( treatment = d$treatment, actor = d$actor, side = d$side, cond = d$cond), sum ) colnames(d_aggregated)[5] &lt;- &quot;left_pulls&quot; head(d_aggregated, 10) ## treatment actor side cond left_pulls ## 1 1 1 1 1 6 ## 2 1 2 1 1 18 ## 3 1 3 1 1 5 ## 4 1 4 1 1 6 ## 5 1 5 1 1 6 ## 6 1 6 1 1 14 ## 7 1 7 1 1 14 ## 8 2 1 2 1 9 ## 9 2 2 2 1 18 ## 10 2 3 2 1 11 彙總後的數據中 left_pulls 就是不同條件下每隻黑猩猩拉動左側槓桿的次數彙總。記得2號黑猩猩始終都拉左側槓桿，所以你看 actor = 2 的時候 left_pulls = 18 都是保持不變的。也就是說，每隻黑猩猩在每種條件下都進行了總共18次的測試。接下來我們可以使用這個歸納彙總過的數據來做和 m11.4 完全相同的統計推斷： dat &lt;- with(d_aggregated, list( left_pulls = left_pulls, treatment = treatment, actor = actor, side = side, cond = cond )) m11.6 &lt;- ulam( alist( left_pulls ~ dbinom( 18, p ), # it used to be dbinom( 1, p ) logit(p) &lt;- a[actor] + b[treatment], a[actor] ~ dnorm( 0, 1.5 ), b[treatment] ~ dnorm( 0 , 0.5 ) ), data = dat, chains = 4, log_lik = TRUE, cmdstan = TRUE ) ## Compiling Stan program... precis(m11.6, depth = 2) ## mean sd 5.5% 94.5% n_eff Rhat4 ## a[1] -0.424329845 0.33225455 -0.9717962800 0.107563840 751.25275 1.0010184 ## a[2] 3.905644780 0.73365840 2.8015572000 5.092984400 1175.40498 1.0040630 ## a[3] -0.718862381 0.33942253 -1.2509039000 -0.176636505 656.31617 1.0034022 ## a[4] -0.725620187 0.34207384 -1.2725226000 -0.199060145 729.12027 1.0020010 ## a[5] -0.415109948 0.33281305 -0.9350171550 0.108374340 682.90898 1.0020564 ## a[6] 0.517620115 0.33489927 -0.0177663795 1.053053200 748.53099 1.0005144 ## a[7] 1.990939258 0.42751276 1.3124323500 2.691393600 939.21031 1.0017960 ## b[1] -0.072113997 0.28635069 -0.5296995400 0.387299215 643.53631 1.0034820 ## b[2] 0.448618561 0.29380027 -0.0050808559 0.914412720 573.56020 1.0031237 ## b[3] -0.410367007 0.29251328 -0.9085838250 0.051336309 621.61493 1.0028349 ## b[4] 0.340992596 0.29000128 -0.1277295450 0.807177990 629.44879 1.0026665 運行結果和 m11.4 是完全一致的。但是，如果你比較 m11.6, m11.4 兩個模型之間卻給出了差異很大的模型特徵值： compare(m11.6, m11.4, func = PSIS) ## Warning in compare(m11.6, m11.4, func = PSIS): Different numbers of observations found for at least two models. ## Model comparison is valid only for models fit to exactly the same observations. ## Number of observations for each model: ## m11.6 28 ## m11.4 504 ## Some Pareto k values are high (&gt;0.5). Set pointwise=TRUE to inspect individual points. ## PSIS SE dPSIS dSE pPSIS weight ## m11.6 114.22180 8.4288808 0.00000 NA 8.3931986 1.0000000e+00 ## m11.4 532.45095 18.9595761 418.22915 9.4536509 8.5886007 1.5229787e-91 compare(m11.6, m11.4) ## Warning in compare(m11.6, m11.4): Different numbers of observations found for at least two models. ## Model comparison is valid only for models fit to exactly the same observations. ## Number of observations for each model: ## m11.6 28 ## m11.4 504 ## WAIC SE dWAIC dSE pWAIC weight ## m11.6 112.78542 8.0166453 0.00000 NA 7.6750096 1.0000000e+00 ## m11.4 532.38899 18.9378572 419.60357 9.2283331 8.5576211 7.6602436e-92 你看見比較之後給出很多的結果。這主要是由於數據被彙總之後和沒有被彙總之前的產生差異很大的對數概率。例如同樣是計算 dbinom(6, 9, 0.2)，如果是彙總型數據，它計算的概率公式還包含一個複雜的常數項： \\[ \\begin{aligned} \\text{Pr}(6|9, p) = \\frac{6!}{6!(9 - 6)!}p^6 (1-p)^{9-6} \\end{aligned} \\] 計算概率的公式的前半部分 \\(\\frac{6!}{6!(9 - 6)!}\\) 雖然很醜陋，但是它是計算所有 9 次試驗中出現 6 次成功的全部可能的組合。但是當我們把數據分割成 9 個單獨的實驗數據的話，這部分醜陋的相乘項就不見了： \\[ \\begin{aligned} \\text{Pr}(1,1,1,1,1,1,0,0,0 | p) = p^6 (1 - p)^{9 - 6} \\end{aligned} \\] 所以兩種數據形式，兩種模型給出的參數估計結果完全一致，但是他們兩個模型之間的特徵值差異很大。簡單地看下列計算比較兩種數據形式給出的對數概率和的結果差異有多大： # deviance of aggregated 6-in-9 -2*dbinom(6, 9, 0.2, log = TRUE) ## [1] 11.790483 # deviance of dis-aggregated -2*sum(dbern(c(1,1,1,1,1,1,0,0,0), 0.2, log = TRUE)) ## [1] 20.652116 但我們其實根本不用在乎這兩者之間模型的特徵值差異。所有模型參數的事後概率分佈估計都會是完全一致的。另外還有一個警報：Model comparison is valid only for models fit to exactly the same observations. 提示我們這兩個模型之間的觀察值個數不同。 53.1.4 彙總型二進制數據：大學錄取數據 有時候不同的彙總數據，他們各自的試驗總次數不一定總是像黑猩猩數據那樣都是相同的。例如下面的大學錄取數據，一共只有12行： data(&quot;UCBadmit&quot;) d &lt;- UCBadmit d ## dept applicant.gender admit reject applications ## 1 A male 512 313 825 ## 2 A female 89 19 108 ## 3 B male 353 207 560 ## 4 B female 17 8 25 ## 5 C male 120 205 325 ## 6 C female 202 391 593 ## 7 D male 138 279 417 ## 8 D female 131 244 375 ## 9 E male 53 138 191 ## 10 E female 94 299 393 ## 11 F male 22 351 373 ## 12 F female 24 317 341 該數據是某大學的6個研究生院的申請人數，被拒人數，合格人數的彙總。雖然每個申請人都有單獨的數據，但是上面的彙總後數據把這些申請數據根據每個學院，和申請人的性別進行了彙總，所以最後只剩下12行，但是這12行的數據其實包含了總數爲 4526 個學生的研究生院申請結果。我們來使用這個數據分析一下性別是否在錄取結果上造成了影響。爲了回答這個問題，我們希望建立一個結果變量是錄取結果 admit ，預測變量是申請人性別 applicant.gender 的邏輯回歸模型。用數學模型可以描述爲： \\[ \\begin{aligned} A_i &amp; \\sim \\text{Binomial}(N_i, p_i) \\\\ \\text{logit}(p_i) &amp; = \\alpha_{\\text{GID}[i]} \\\\ \\alpha_j &amp; \\sim \\text{Normal}(0, 1.5) \\end{aligned} \\] 其中， \\(N_i\\) 是第 \\(i\\) 行數據的申請人數 applications[i] \\(\\text{GID}[i]\\) 表示申請人的性別，1 是男性，2 是女性 我們來把該數學模型描述成代碼： dat_list &lt;- list( admit = d$admit, applications = d$applications, gid = ifelse( d$applicant.gender == &quot;male&quot;, 1, 2) ) m11.7 &lt;- ulam( alist( admit ~ dbinom( applications, p ), logit(p) &lt;- a[gid], a[gid] ~ dnorm( 0, 1.5 ) ), data = dat_list, chains = 4, cmdstan = TRUE ) ## Compiling Stan program... precis(m11.7, depth = 2) ## mean sd 5.5% 94.5% n_eff Rhat4 ## a[1] -0.21799527 0.038609347 -0.27828884 -0.15524484 1329.7855 1.0002221 ## a[2] -0.83073316 0.051198072 -0.91216751 -0.74711818 1474.2676 1.0012582 我們可以看到表示男性申請學生的數據 a[1] 是大於女性申請人的 a[2] 的事後概率分佈的。我們還需要計算這兩個羣體之間被錄取的概率差的事後分佈： post &lt;- extract.samples(m11.7) diff_a &lt;- post$a[,1] - post$a[,2] diff_p &lt;- inv_logit(post$a[,1]) - inv_logit(post$a[,2]) precis( list( diff_a = diff_a, diff_p = diff_p )) ## mean sd 5.5% 94.5% histogram ## diff_a 0.61273789 0.064198934 0.50690328 0.71635773 ▁▁▂▅▇▃▂▁ ## diff_p 0.14213727 0.014442389 0.11831688 0.16503298 ▁▁▁▃▅▇▃▂▁▁ 可以看到男生平均要比女生被錄取的概率高 12% ~ 16%。在我們開始懷疑是不是有“系統性性別歧視”之前，讓我們先把觀察值和模型推測值繪製成圖來實際觀察到底有沒有男女錄取概率的差別 (圖 53.8)： postcheck( m11.7 ) # draw lines connecting points from same dept for( i in 1:6 ) { x &lt;- 1 + 2*(i - 1) y1 &lt;- d$admit[x] / d$applications[x] y2 &lt;- d$admit[x + 1] / d$applications[x + 1] lines(c(x, x + 1), c(y1, y2), col = rangi2, lwd = 2) text(x + 0.5, (y1 + y2)/2 + 0.05, d$dept[x], cex = 0.8, col = rangi2) } 圖 53.8: Posterior check for model m11.7. Blue points are observed proportions admitted for each row in the data, with points from the same department connected by a blue line. Open points, the tiny vertical black lines within them, and the crosses are expected proportions, 89% inervals of the expectation, and 89% interval of simulated samples, respectively. 看圖 53.8 中的模型推測錄取率和實際觀察的錄取率之間差別有多大，模型簡直預測能力差到難以置信。在實際觀察的數據中，有且僅有兩個學院（C，E）有女性申請者的被錄取率略低於男性申請人。但是不知道爲什麼模型卻給出了男性申請人錄取率要高於女性申請人這樣歪曲事實的結果。通常情況下，這樣離譜的模型推測結果是由於代碼編寫的錯誤才會造成的。但是真的是這樣嗎？我們用的模型 m11.7 其實是在問，在這個大學裏平均的男性申請者錄取率和女性申請錄取率之差。但事實上我們看男性申請者和女性申請者並不同時申請不同的學院。從 A 學院到 F 學院的男女的錄取率都在遞減。你去看實際申請人數就知道女性申請者中申請A,B學院的實際人數非常地少，女性申請者傾向於申請錄取率特別低（&lt; 10%）的F學院。 所以說，儘管從整所大學的錄取率來說，女性似乎要普遍低於男性，但是你仔細看每個學院各自的錄取率的話就知道這並不是事實。此時我們可能面對的選擇是應該適當地修改我們的研究問題，我們實際上應該提的問題是：“在這個大學的不同學院內，平均地講男性和女性申請人的錄取率有沒有顯著差別？”回答這個問題的模型，應該表達成爲： \\[ \\begin{aligned} A_i &amp; \\sim \\text{Binomial}(N_i, p_i) \\\\ \\text{logit}(p_i) &amp; = \\alpha_{\\text{GID}[i]} + \\delta_{\\text{DEPT}[i]}\\\\ \\alpha_j &amp; \\sim \\text{Normal}(0, 1.5) \\\\ \\delta_k &amp; \\sim \\text{Normal}(0, 1.5) \\end{aligned} \\] 修改了模型表達之後，我們賦予了每個學院自己各自的平均錄取率的對數比值(log-odds = logit)，\\(\\delta_{\\text{DEPT}[i]}\\)。修改之後的模型同樣也能推算整個大學的錄取率，只是增加了對不同學院各自錄取傾向的考量。下面的代碼運行修改之後的模型。 dat_list$dept_id &lt;- rep(1:6, each = 2) m11.8 &lt;- ulam( alist( admit ~ dbinom( applications, p ) , logit(p) &lt;- a[gid] + delta[dept_id] , a[gid] ~ dnorm( 0, 1.5 ), delta[dept_id] ~ dnorm( 0, 1.5 ) ), data = dat_list, chains = 4, iter = 4000, cmdstan = TRUE ) ## Compiling Stan program... precis( m11.8, depth = 2 ) ## mean sd 5.5% 94.5% n_eff Rhat4 ## a[1] -0.55241217 0.53502170 -1.42285985 0.29370854 497.09874 1.0041825 ## a[2] -0.45587536 0.53579666 -1.33097415 0.39548288 498.97989 1.0040298 ## delta[1] 1.13369072 0.53717936 0.28470695 2.01043990 510.00362 1.0041563 ## delta[2] 1.08904322 0.53999395 0.23450630 1.97474550 502.94401 1.0040980 ## delta[3] -0.12601480 0.53721575 -0.98518882 0.75291238 501.31768 1.0040519 ## delta[4] -0.16114238 0.53661354 -1.00723155 0.71233847 502.31853 1.0038995 ## delta[5] -0.60329272 0.54034012 -1.44947110 0.27341613 501.16575 1.0040989 ## delta[6] -2.15898561 0.54957237 -3.03302310 -1.26824285 532.73534 1.0037547 模型 m11.8 的運行結果就矯正了我們之前可能存在的性別歧視的誤解。考慮了不同學院各自的平均錄取率之後，男女申請人之間的平均錄取率的對數比值就變得很接近了。有了模型 m11.8 的事後概率分佈樣本，我們可以簡單的計算男女錄取率的學院調整後之差： post &lt;- extract.samples(m11.8) diff_a &lt;- post$a[, 1] - post$a[, 2] diff_p &lt;- inv_logit(post$a[, 1]) - inv_logit(post$a[, 2]) precis(list(diff_a = diff_a, diff_p = diff_p)) ## mean sd 5.5% 94.5% histogram ## diff_a -0.096536806 0.081479856 -0.22490943 0.0332588200 ▁▁▁▂▅▇▇▅▂▁▁▁▁ ## diff_p -0.021483864 0.018472127 -0.05116369 0.0072051079 ▁▁▂▇▇▂▁▁ 所以，當考慮了不同學院各自本身的錄取率差異之後，沒有證據表明在申請人錄取率上有顯著的性別歧視。我們來回到原始數據去看看這個過程實際是怎樣的。簡單歸納一下每個學院各自的實際男女申請人的比例： pg &lt;- with( dat_list, sapply(1:6, function(k) applications[dept_id == k]/sum(applications[dept_id == k]))) rownames(pg) &lt;- c(&quot;male&quot;, &quot;female&quot;) colnames(pg) &lt;- unique(d$dept) round(pg, 3) ## A B C D E F ## male 0.884 0.957 0.354 0.527 0.327 0.522 ## female 0.116 0.043 0.646 0.473 0.673 0.478 # simpler version: d %&gt;% group_by(dept) %&gt;% mutate( rel.freq = paste0(round(applications * 100/sum(applications), 2), &quot;%&quot;)) ## # A tibble: 12 × 6 ## # Groups: dept [6] ## dept applicant.gender admit reject applications rel.freq ## &lt;fct&gt; &lt;fct&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; ## 1 A male 512 313 825 88.42% ## 2 A female 89 19 108 11.58% ## 3 B male 353 207 560 95.73% ## 4 B female 17 8 25 4.27% ## 5 C male 120 205 325 35.4% ## 6 C female 202 391 593 64.6% ## 7 D male 138 279 417 52.65% ## 8 D female 131 244 375 47.35% ## 9 E male 53 138 191 32.71% ## 10 E female 94 299 393 67.29% ## 11 F male 22 351 373 52.24% ## 12 F female 24 317 341 47.76% 所以實際男性申請人佔比例在 A 學院達到了 88.4% 以上，像 E 學院的男性申請人的比例則僅僅只有 32.7% 左右。也就從另一個角度解釋了我們觀察到的現象，也就是說，錄取率較低的學院中女性申請人比例相當地高。模型 m11.8 給出的各個學院錄取率的推測值也和實際觀測值十分地接近 (圖 53.9)。 postcheck( m11.8 ) # draw lines connecting points from same dept for( i in 1:6 ) { x &lt;- 1 + 2*(i - 1) y1 &lt;- d$admit[x] / d$applications[x] y2 &lt;- d$admit[x + 1] / d$applications[x + 1] lines(c(x, x + 1), c(y1, y2), col = rangi2, lwd = 2) text(x + 0.5, (y1 + y2)/2 + 0.05, d$dept[x], cex = 0.8, col = rangi2) } 圖 53.9: Posterior check for model m11.8. Blue points are observed proportions admitted for each row in the data, with points from the same department connected by a blue line. Open points, the tiny vertical black lines within them, and the crosses are expected proportions, 89% inervals of the expectation, and 89% interval of simulated samples, respectively. 53.2 泊松回歸模型 Poisson regression 假如有某種試驗，成功的概率很低（接近零），當這樣的試驗實施的次數越來越多時，該試驗成功概率的概率分佈就會從二項分佈慢慢變成一個叫做泊松分佈的東西。二項分佈的均值（期望值）是試驗次數和成功概率的乘積 \\(Np\\)，方差是 \\(Np(1-p)\\)。所以，當 \\(N\\) 很大，\\(p\\) 很小的時候，均值和方差其實幾乎可以認爲是相等的。例如一個試驗成功的概率只有 0.001，那麼進行1000次試驗可能也只出現一次成功，這是均值，其方差是 \\(1000 \\times 0.001 \\times (1 - 0.001) = 0.999 \\approx 1\\)。也就是這時候雖然嚴格來說還是一個服從二項分佈的概率分佈，但是它的均值和方差幾乎是相同的。這樣的分佈被命名爲泊松分佈 (Poisson distribution)。 \\[ y_i \\sim \\text{Poisson}(\\lambda) \\] 其中 \\(\\lambda\\) 是結果 \\(y\\) 的期望值，也是結果 \\(y\\) 的方差。一般地，會使用對數函數作爲泊松模型的鏈接方程。 \\[ \\begin{aligned} y_i &amp; \\sim \\text{Poisson}(\\lambda_i) \\\\ \\log(\\lambda_i) &amp; = \\alpha + \\beta (x_i - \\bar{x}) \\end{aligned} \\] 對數鏈接函數確保了結果全部都是正的。我們始終要記住，當我們使用對數函數作爲鏈接方程的時候，我們默認的是預測變量和結果變量之間的關係是指數型關係。但是事實上我們觀察到的自然界的數據和現象很少會總是呈現指數型關係。所以當我們使用它的時候我們需要總是惦記這個指數關係是否成立，而且設定它的先驗概率分佈會更加的棘手。 53.2.1 泊松回歸實例：太平洋島國居民使用的工具 太平洋島國的原住民使用的各種不同工具給人類學家提供了非常好的研究人類工具和技術進化的過程。有些理論認爲較大的人口規模會產生較爲複雜精密的工具。於是自然地，太平洋島國的島嶼大小面積各不相同，也就天然地限制了每個島嶼原住民人口規模，可以用來分析上述理論。另外不同族羣之間接觸的頻率也會影響族羣的人口規模，從而和工具的技術進化相關。我們使用這個太平洋島國工具數據來分析這個話題。 data(Kline) d &lt;- Kline d ## culture population contact total_tools mean_TU ## 1 Malekula 1100 low 13 3.2 ## 2 Tikopia 1500 low 22 4.7 ## 3 Santa Cruz 3600 low 24 4.0 ## 4 Yap 4791 high 43 5.0 ## 5 Lau Fiji 7400 high 33 5.0 ## 6 Trobriand 8000 high 19 4.0 ## 7 Chuuk 9200 high 40 3.8 ## 8 Manus 13000 low 28 6.6 ## 9 Tonga 17500 high 55 5.4 ## 10 Hawaii 275000 low 71 6.6 我們思考的研究模型是這樣的： 模型的結果變量是 total_tools。我們決定使用泊松回歸模型，用對數函數鏈接方程來分析這個數據。 我們實際上認爲 total_tools 和人口 population 的對數（對數就是指的人口規模, the magnitude of the population）之間是正關係。 使用的工具的種類數量 total_tools 同時被認爲和族羣之間接觸的頻率 contact 應該呈現正關係，因爲多數人認爲增加不同島嶼族羣之間的交流和接觸會顯然增加原住民部落本身獲取更加多種類的生產工具。 另外還有人認爲，人口規模大小 population 還會通過部落族羣之間的交流頻率 contact 作爲媒介影響到結果變量 total_tools。 接下來我們給數據中增加幾個需要使用的轉換後的變量： d$P &lt;- scale( log(d$population) ) # standardize the log(population) into mean = 0, sd = 1 d$contact_id &lt;- ifelse( d$contact == &quot;high&quot;, 2, 1) 我們把符合上述思考和假設的模型描述爲含有交互作用項的數學模型： \\[ \\begin{aligned} T_i &amp; \\sim \\text{Poisson}(\\lambda_i) \\\\ \\log \\lambda_i &amp; = \\alpha_{\\text{CID}[i]} + \\beta_{\\text{CID}[i]} \\log P_i \\\\ \\alpha_i &amp; \\sim \\text{ to be determined } \\\\ \\beta_j &amp; \\sim \\text{ to be determined } \\end{aligned} \\] 其中， \\(P_i\\) 是人口規模， \\(\\text{CID}[i]\\) 是 contact_id。 接下來我們考慮怎樣爲 \\(\\alpha_i, \\beta_j\\) 設置合適的先驗概率分佈。和二項分佈數據使用的邏輯回歸模型類似，當我們選擇使用對數鏈接函數把數據進行轉換之後，原先在簡單線性回歸模型中適合使用的平坦分佈會變得不合適。爲了更直觀的說明這個現象，我們先使用最簡單的只有截距的泊松回歸模型，給該截距的先驗概率分佈使用平坦分佈 \\(\\text{Normal}(0,10)\\)。 \\[ \\begin{aligned} T_i &amp; \\sim \\text{Poisson}(\\lambda_i) \\\\ \\log \\lambda_i &amp; = \\alpha \\\\ \\alpha &amp; \\sim \\text{Normal}(0, 10) \\\\ \\end{aligned} \\] 當我們給截距設定的先驗概率分佈設定成 \\(\\text{Normal}(0,10)\\) 會對時間發生率 \\(\\lambda\\) 在它原本的尺度上有怎樣的體現呢？如果截距 \\(\\alpha\\) 是服從正（常）態分佈的話，那麼 \\(\\lambda\\) 就會服從對數正（常）態分佈。我們來繪製一下這兩個分佈的概率密度分佈： curve( dlnorm(x, 0, 10), from = 0, to = 100, n = 200, bty = &quot;n&quot;, xlab = &quot;mean numbber of tools (lambda)&quot;, ylab = &quot;Density&quot;) text(20, 0.06, &quot;a ~ dnorm(0, 10)&quot;) curve( dlnorm(x, 3, 0.5), add = TRUE, col = rangi2, lwd = 2) text(50, 0.03, &quot;a ~ dnorm(3, 0.5)&quot;, col = rangi2) 圖 53.10: Prior predictive distribution of the mean lambda of a simple Poisson GLM, considering only the intercept alpha. A flat conventional prior (black) creates absurd expecations on the outcome scale. The mean of this distribution is exp(50) stupidly large. It is easy to do better by shifting prior mass above zero (blue). 圖 53.10 顯示，當我們使用 \\(\\alpha \\sim \\text{Normal}(0, 10)\\) 作爲截距的先驗概率分佈時，我們看到結果變量使用工具的數量竟然出現了一個特別接近零的尖峯，這其實意味着我們的先驗概率分佈認爲不論是哪個島嶼哪個部落的居民使用的工具數量基本上是 0，這顯然是不合理的。而且你看它右邊的尾巴特別的長，有多長呢？對數正（常）態分佈的期望值計算公式是 \\(\\exp(\\mu + \\sigma^2/2)\\)，也就是說現在設定的先驗概率分佈 \\(\\alpha \\sim \\text{Normal}(0, 10)\\) 的均值其實達到了 \\(\\exp(50) = 5.185e+21\\)。我們隨便模擬一個對數正（常）態分佈看它的均值會是怎樣的不可思議地大： a &lt;- rnorm(10000, 0, 10) lambda &lt;- exp(a) mean( lambda ) ## [1] 1.5502546e+14 於是我們修改了一下預期，把截距的先驗概率分佈修改成 \\(\\text{Normal}(3, 0.5)\\)，展示在圖 53.10 中藍色的曲線。此時的新對數正（常）態分佈的均值是 \\(\\exp(3 + 0.5^2/2) \\approx 22.8\\)，也就是說這個先驗概率認爲在沒有分析數據之前，我們估計平均來說每個部落的族羣平均的生產工具的數量在20個左右。這樣的假設是不是會合理很多？用相似的邏輯我們用來給人口規模 (\\(\\log\\) population) 回歸係數 \\(\\beta\\) 設定合理的先驗概率分佈，目標是希望把數據限制在合適的範圍內以免採樣效率太低。先用一個我們傳統上認爲的平坦分佈 \\(\\text{Normal}(0,10)\\) 來看看它的戲劇性效果。 N &lt;- 100 a &lt;- rnorm(N, 3, 0.5) b &lt;- rnorm(N, 0, 10) plot(NULL, bty = &quot;n&quot;, xlim = c(-2, 2), ylim = c(0, 100), main = &quot;b ~ dnorm(0, 10)&quot;, ylab = &quot;total tools&quot;, xlab = &quot;log population (std)&quot;) for(i in 1:N) curve(exp( a[i] + b[i]*x), add = TRUE, col = grau()) 圖 53.11: Struggling with slope priors in a Poisson GLM. A flat prior produces explosive trends on the outcome scale. 圖 53.11 就是當截距是合理的先驗概率分佈，但是斜率是常用的“平坦分佈”時給出的人口規模和工具數量之間的可怕的關係。它其實是在說，當我們還沒見到實際數據時，我們認爲在平均人口規模（因爲橫軸的人口規模被標準化了）的部落族羣附近，使用的工具種類數量要麼就是暴增，要麼是暴減。這是非常不合常理的。我們需要不那麼“平坦”的先驗概率分佈，給我們合理的結果。經過多種嘗試，我們認爲 \\(\\beta \\sim \\text{Normal}(0, 0.2)\\) 會是一個理性的選擇（圖53.12）。在實際分析數據之前，我們認爲不論是哪個部落，最多的生產工具種類也不會超過100種之多。 N &lt;- 100 a &lt;- rnorm(N, 3, 0.5) b &lt;- rnorm(N, 0, 0.2) plot(NULL, bty = &quot;n&quot;, xlim = c(-2, 2), ylim = c(0, 100), main = &quot;b ~ dnorm(0, 0.2)&quot;, ylab = &quot;total tools&quot;, xlab = &quot;log population (std)&quot;) for(i in 1:N) curve(exp( a[i] + b[i]*x), add = TRUE, col = grau()) 圖 53.12: Struggling with slope priors in a Poisson GLM. A regularizing prior remains mostly within the space of outcomes. 我們把橫軸修改成爲沒有被標準化的 log population 之後，先驗概率分佈之間的關係如圖 53.13。 N &lt;- 100 a &lt;- rnorm(N, 3, 0.5) b &lt;- rnorm(N, 0, 0.2) x_seq &lt;- seq( from = log(100), to = log(200000), length.out = 100) lambda &lt;- sapply( x_seq, function(x) exp(a + b*x)) plot(NULL, bty = &quot;n&quot;, xlim = range(x_seq), ylim = c(0, 500), main = &quot;a ~ dnorm(3, 0.5); b ~ dnorm(0, 0.2)&quot;, ylab = &quot;total tools&quot;, xlab = &quot;log population (un-std)&quot;) for(i in 1:N) lines(x_seq, lambda[i, ], col = grau(), lwd = 1.5) 圖 53.13: Struggling with slope priors in a Poisson GLM. A regularizing prior remains mostly within the space of outcomes. Now horizontal axis on unstandardized scale. 最後我們再把橫軸的人口重新轉換到最原始的尺度上來，成爲圖 53.14 顯示的 plot(NULL, bty = &quot;n&quot;, xlim = range(exp(x_seq)), ylim = c(0, 500), main = &quot;a ~ dnorm(3, 0.5); b ~ dnorm(0, 0.2)&quot;, ylab = &quot;total tools&quot;, xlab = &quot;population (un-std)&quot;) for(i in 1:N) lines(exp(x_seq), lambda[i, ], col = grau(), lwd = 1.5) 圖 53.14: Struggling with slope priors in a Poisson GLM. A regularizing prior remains mostly within the space of outcomes. Now horizontal axis on unstandardized original scale for population. 可以看到這是泊松回歸模型認爲的真實的預測變量和結果變量之間存在的關係，這是一種對數線性(log-linear)關係。自然地解釋就是，人口數量本身數值的增加，只能對工具種類的增加造成微弱的影響。許多的預測變量，都應該被取了對數之後再放入你的回歸模型中去，因爲這才是真實的關係。接下來終於到了模型本身的運行了： dat &lt;- list( T = d$total_tools, P = d$P, cid = d$contact_id ) # intercept only m11.9 &lt;- ulam( alist( T ~ dpois( lambda ), log(lambda) &lt;- a, a ~ dnorm( 3, 0.5 ) ), data = dat, chains = 4, log_lik = TRUE, cmdstan = TRUE ) ## Compiling Stan program... # interaction model m11.10 &lt;- ulam( alist( T ~ dpois( lambda ), log(lambda) &lt;- a[cid] + b[cid] * P, a[cid] ~ dnorm( 3, 0.5 ), b[cid] ~ dnorm( 0, 0.2 ) ), data = dat, chains = 4, log_lik = TRUE, cmdstan = TRUE ) ## Compiling Stan program... precis(m11.9) ## mean sd 5.5% 94.5% n_eff Rhat4 ## a 3.5417773 0.054827606 3.4537819 3.6290206 754.24347 1.0034536 precis(m11.10, depth = 2) ## mean sd 5.5% 94.5% n_eff Rhat4 ## a[1] 3.31991004 0.089108961 3.174423050 3.45588055 1770.7538 0.99917200 ## a[2] 3.61204930 0.073722794 3.492463400 3.72909585 2220.5610 1.00022684 ## b[1] 0.37615682 0.053043988 0.290144160 0.45832048 1724.7594 0.99949672 ## b[2] 0.18447760 0.158530213 -0.058991431 0.43852981 1921.9132 0.99937162 compare(m11.9, m11.10, func = PSIS) ## Some Pareto k values are high (&gt;0.5). Set pointwise=TRUE to inspect individual points. ## Some Pareto k values are very high (&gt;1). Set pointwise=TRUE to inspect individual points. ## PSIS SE dPSIS dSE pPSIS weight ## m11.10 86.077059 13.298851 0.00000 NA 7.2911759 1.0000000e+00 ## m11.9 141.446629 33.480083 55.36957 32.228886 8.3639525 9.4765567e-13 我們又一次看見了關於 Pareto k 的警報。這提示我們數據種存在一些對模型結果影響較大的觀察值。具體可以通過繪製PSIS圖來觀察模型的事後概率分佈。 k &lt;- PSIS( m11.10, pointwise = TRUE)$k plot(dat$P, dat$T, xlab = &quot;log population (std)&quot;, ylab = &quot;total tolls&quot;, col = rangi2, bty = &quot;n&quot;, pch = ifelse( dat$cid == 1, 1, 16), lwd = 2, ylim = c(0, 75), cex = 1 + normalize(k)) # set up the horizontal axis values to compute predictions at ns &lt;- 100 P_seq &lt;- seq( from = -1.4, to = 3, length.out = ns) # Predictions for cid = 1 (low contact) lambda &lt;- link( m11.10, data = data.frame( P = P_seq, cid = 1 ) ) lmu &lt;- apply(lambda, 2, mean) lci &lt;- apply(lambda, 2, PI) lines( P_seq, lmu, lty = 2, lwd = 1.5) shade(lci, P_seq, xpd = FALSE) # Predictions for cid = 2 (high contact) lambda &lt;- link( m11.10, data = data.frame( P = P_seq, cid = 2 )) lmu &lt;- apply( lambda, 2, mean) lci &lt;- apply( lambda, 2, PI) lines( P_seq, lmu, lty = 1, lwd = 1.5) shade( lci, P_seq, xpd = FALSE ) 圖 53.15: Posterior predictions for the Oceanic tools model. Filled points are societies with historically high contact. Open points are those with low contact. Point size is scaled by relative PSIS Pareto’s k values. Larger points are more influential. The solid curve is the posterior mean for high contact societies. The dashed curve is the same for low contact societies. 89% compatibility intervals are shown by the shaded regions. (Standardized log population scale, as in the model code) 圖 53.15 中空心的點表示與其他族羣部落交流較少的島嶼，實心點是與其他族羣部落交流較頻繁的島嶼。點的大小個 Pareto K 值成正比例。下面的代碼把橫軸人口還原到原始的尺度上。 plot( d$population, d$total_tools, bty = &quot;n&quot;, xlab = &quot;population&quot;, ylab = &quot;total tools&quot;, col = rangi2, pch = ifelse( dat$cid == 1, 1, 16), lwd = 2, ylim = c(0, 75), cex = 1 + normalize(k)) ns &lt;- 100 P_seq &lt;- seq( from = -5, to = 3, length.out = ns ) # 1.53 is sd of log(population) # 9 is mean of log(population) pop_seq &lt;- exp( P_seq*1.53 + 9 ) lambda &lt;- link( m11.10, data = data.frame( P = P_seq, cid = 1 )) lmu &lt;- apply( lambda, 2, mean) lci &lt;- apply( lambda, 2, PI) lines( pop_seq, lmu, lty = 2, lwd = 1.5 ) shade( lci, pop_seq, xpd = FALSE ) lambda &lt;- link( m11.10, data = data.frame( P = P_seq, cid = 2 )) lmu &lt;- apply( lambda, 2, mean ) lci &lt;- apply( lambda, 2, PI ) lines( pop_seq, lmu, lty = 1, lwd = 1.5 ) shade( lci, pop_seq, xpd = FALSE ) 圖 53.16: Posterior predictions for the Oceanic tools model. Filled points are societies with historically high contact. Open points are those with low contact. Point size is scaled by relative PSIS Pareto’s k values. Larger points are more influential. The solid curve is the posterior mean for high contact societies. The dashed curve is the same for low contact societies. 89% compatibility intervals are shown by the shaded regions. (Same predictions on the natural population scale.) 檢查 k 值我們發現，夏威夷 (k = 1.01) 是對模型結果影響最大的點。夏威夷擁有最多的人口，和種類數量最多的生產工具。 References "],["貝葉斯廣義線性回歸模型的擴展-continuous-mixture-models.html", "第 54 章 貝葉斯廣義線性回歸模型的擴展 continuous mixture models 54.1 Beta 二項分佈模型 beta-binomial model 54.2 負二項分佈模型，伽馬泊松回歸模型 Negative-binomial/gamma-Poisson 54.3 零膨脹模型 zero-inflated models 54.4 帶順序含義的多類別結果變量 ordered categorical outcomes 54.5 帶順序含義的多類別預測型變量 ordered categorical predictors", " 第 54 章 貝葉斯廣義線性回歸模型的擴展 continuous mixture models It is important to get comfortable with waiting or a good approximation of the posterior, instead of using some terrible-but-fast approximation. Richard McElreath 54.1 Beta 二項分佈模型 beta-binomial model Beta 二項分佈模型其實是一系列的二項分佈模型的混合體 (a mixture of binomial distributions)。它假定的是每個二進制觀測值，都有自己的實際成功概率。該模型的目的是估計這些成功概率所構成的概率分佈 (estimate the distribution of probabilities of success)，而不是某一個特定的試驗的成功概率。 下面我們使用大學錄取率這個數據來解釋這個模型。這個數據本身假如我們不知道每個學院之間的錄取率相差很大，也就是當數據本身如果不含有學院 (dept) 信息時，我們可能會誤認爲整所大學的錄取率都是一樣的。我們之前是通過在邏輯回歸模型種增加學院 dept 這一個變量來獲得正確的男女申請人錄取率之差的比較的。這裏我們轉換一個思路，使用beta二項分佈模型，並且不把學院當作已知變量，看這個模型的神奇之處。它的靈活性在於，該模型會初始默認每一行觀測值，都其實有自己的錄取（成功）概率，而不是統一的錄取概率。這些不同的錄取概率本身構成了一個分佈，它可以用 beta 分佈來描述。beta分佈有兩個參數，一個是平均成功概率 (average probability) \\(\\bar{p}\\)，還有一個是描述概率分佈密度形狀的形狀參數 (shape parameter) \\(\\theta\\)。\\(\\theta\\) 負責描述這些概率在 \\([0, 1]\\) 的範圍內的分佈有多寬泛 (how spread out the distribution is)。當 \\(\\theta = 2\\) 時，是一個平坦分佈，也就是從 0 到 1 之間的所有概率的概率是相同的 (every probability from 0 to 1 is equally likely)。當 \\(\\theta &gt; 2\\)，分佈變得越來越向中間的平均概率處集中 (more concentrated)，當 \\(\\theta &lt; 2\\)，分佈本身則越來越向兩邊的極端概率處靠攏 (dispersed that extreme probabilities near 0 and 1 are more likely than the mean)。它的概率密度分佈圖可以用下面的代碼來獲得： curve( dbeta2(x, 0.5, 5), from = 0, to = 1, xlab = &quot;probability&quot;, ylab = &quot;Density&quot;, bty = &quot;n&quot;, ylim = c(0, 4), main = &quot;beta distributions with different parameters&quot;) curve( dbeta2(x, 0.5, 1), from = 0, to = 1, add = TRUE, col = rangi2, lwd = 2) curve( dbeta2(x, 0.5, 2), from = 0, to = 1, add = TRUE, col = &quot;red&quot;) text(0.5, 2, &quot;beta(p = 0.5, theta = 5)&quot;) text(0.5, 0.3, &quot;beta(p = 0.5, theta = 1)&quot;, col = rangi2) text(0.5, 1.2, &quot;beta(p = 0.5, theta = 2)&quot;, col = &quot;red&quot;) 圖 54.1: Beta distributions with different means and dispersion. 接下來我們思考如何把線性模型和 \\(\\bar{p}\\) 聯繫起來，需要達到的效果是當預測變量發生變化時，我們應該觀察到錄取率的平均值會隨之發生變化。如果用數學表達式來描述就是： \\[ \\begin{aligned} A_i &amp; \\sim \\text{BetaBinomial}(N_i, \\bar{p}_i, \\theta) \\\\ \\text{logit}(\\bar{p}_i) &amp; = \\alpha_{\\text{GID}[i]} \\\\ \\alpha_j &amp; = \\text{Normal}(0, 1.5) \\\\ \\theta &amp; = \\phi + 2\\\\ \\phi &amp; \\sim \\text{Exponential}(1) \\end{aligned} \\] 其中， \\(A_i\\) 是結果變量，表示被錄取（成功）與否。 \\(N_i\\) 是申請人總數。 \\(\\text{GID}[i]\\) 是表示性別的索引變量（男性 = 1，女性 = 2）。 我們希望把 Beta 分佈的概率分散程度 (dispersion) 控制在大於2。這是因爲我們不忍爲錄取概率在任何一個學院會是趨向於兩極化的（要麼不錄取，要麼錄取）而應該是集中在某個平均值附近的，那麼這樣的Beta分佈需要的分散程度 \\(\\theta\\) 必須大於等於2。當它等於2時，我們看見概率是一個均一分佈，也就是所有的學院錄取率保持不變。爲了滿足這個分散程度取值大於等於2，我們使用的是一個簡單的技巧，用 \\(\\phi + 2\\) 表示 \\(\\theta\\) 並且使 \\(\\phi\\) 服從指數分佈，因爲服從指數分佈的值是大於等於零的。 下面的代碼運行的是上述的模型： data(&quot;UCBadmit&quot;) d &lt;- UCBadmit d$gid &lt;- ifelse( d$applicant.gender == &quot;male&quot;, 1L, 2L ) dat &lt;- list( A = d$admit, N = d$applications, gid = d$gid ) m12.1 &lt;- ulam( alist( A ~ dbetabinom( N, pbar, theta), logit(pbar) &lt;- a[gid], a[gid] ~ dnorm( 0, 1.5 ), transpars&gt; theta &lt;&lt;- phi + 2.0, phi ~ dexp(1) ), data = dat, chains = 4, cmdstan = TRUE ) saveRDS(m12.1, &quot;../Stanfits/m12_1.rds&quot;) # if you also failed compliation please see https://github.com/rmcelreath/rethinking/issues/267 注意到，我們爲 theta 特別標註了它是被轉換過後的參數，transpars&gt;，這樣 Stan 就會把 theta 作爲結果之一保存下來。我們可以使用採樣過後的 m12.1 計算其事後的男女錄取率之差: m12.1 &lt;- readRDS(&quot;../Stanfits/m12_1.rds&quot;) post &lt;- extract.samples(m12.1) post$da &lt;- post$a[, 1] - post$a[, 2] precis(post, depth = 2) ## mean sd 5.5% 94.5% histogram ## a[1] -0.42760198 0.40185675 -1.06981750 0.21475428 ▁▁▁▇▇▂▁ ## a[2] -0.31922580 0.40765989 -0.96144249 0.30060395 ▁▁▅▇▃▁▁ ## phi 1.02007892 0.79190370 0.10460046 2.45705410 ▇▇▅▂▂▁▁▁▁▁ ## theta 3.02007896 0.79190369 2.10460335 4.45705410 ▇▇▅▂▂▁▁▁▁▁ ## da -0.10837618 0.57872936 -1.04893548 0.79137581 ▁▁▃▇▇▂▁▁▁ 上面對 m12.1 的時候樣本進行的計算和比較可以看見，a[1] 是男性申請人被錄取的對數比值 log-odds，它的均值似乎略微比 a[2] 女性申請人被錄取的對數比值稍微低一些。但是，它們二者的差的事後均值 da 沒有顯著偏離 0，其事後概率分佈的可信區間也包括0。所以並沒有太多的證據表明男女申請人之間在這所大學的錄取率上有任何性別的歧視或者偏差。但是記得我們在前一個章節裏，使用簡單的邏輯回歸模型時，除非把學院這一變量加入預測變量中加以考慮才能獲得相似的正確答案。之前當沒有加入學院這一變量的時候，我們其實被告知男女之間有較大的錄取率的性別差，特別是女生的錄取率在表面上看起來似乎比較低。但是當我們把簡單邏輯回歸模型棄用之後，選擇使用beta二項分佈回歸模型在 m12.1 中之後，即使沒有把學院變量放進模型中去，依然獲得了準確的男女之間錄取率的比較結果。這是爲什麼呢？ 其實當選用 beta 二項分佈的時候，我們允許了每一行的數據，也就是每一個學院的男性申請人數據，和每一個學院的女性申請人數據分別擁有自己的截距。這些截距其實是從一個均值是 \\(\\bar{p}_i\\)，分散程度是 \\(\\theta\\) 的 beta 分佈中採集而來的。我們可以直觀地繪製這個 beta 分佈的形狀來加深對 m12.1 模型的理解： gid &lt;- 2 # draw posterior mean beta distribution curve( dbeta2(x, mean(logistic(post$a[, gid])), mean(post$theta)), from = 0, to = 1, ylab = &quot;Density&quot;, xlab = &quot;probability admit&quot;, ylim = c(0, 3), lwd = 2, bty = &quot;n&quot;) curve( dbeta2(x, mean(logistic(post$a[, gid - 1])), mean(post$theta)), from = 0, to = 1, ylab = &quot;Density&quot;, xlab = &quot;probability admit&quot;, ylim = c(0, 3), lwd = 2, add = TRUE, col = rangi2) # Draw 50 beta distributions sampled from posterior for( i in 1:50 ) { p &lt;- logistic( post$a[i, gid] ) theta &lt;- post$theta[i] curve( dbeta2(x, p, theta), add = TRUE, col = col.alpha(&quot;black&quot;, 0.2)) } for( i in 1:50 ) { p &lt;- logistic( post$a[i, gid-1] ) theta &lt;- post$theta[i] curve( dbeta2(x, p, theta), add = TRUE, col = col.alpha(rangi2, 0.2)) } mtext(&quot;distribution of female admission rates (black); male admission rates (blue)&quot;) 圖 54.2: Posterior distributions for m12.1. The thick curves are the posterior mean beta distribution for male and female applicants. The ligher curves represents 100 combinations of bar(p) and theta sampled from the posterior. 如圖 54.2 所示的，我們允許了不同的錄取率，這樣一來不論男女，在不同的學院之間錄取率的差異被考慮了進來，男女之間的差異也就不那麼明顯了。同時也避免了模型錯誤地認爲女性受到了錄取上的歧視。雖然模型 m12.1 並不知道有學院這個變量（我們並沒有在模型中的任何地方加入學院這個變量），它依然靈活準確地給出了允許不同錄取率這一重要的方案，它使用 beta 分佈來估計該錄取概率在不同的人羣中可能的變化，我們可以再看看該模型的事後證實檢驗 (posterior validation check): postcheck(m12.1) 圖 54.3: Posterior validation check for m12.1. As a result of widely dispersed beta distributions on the figure above, the raw data (blue) is contained within the prediction intervals. 54.2 負二項分佈模型，伽馬泊松回歸模型 Negative-binomial/gamma-Poisson 類似beta二項分佈模型和邏輯回歸模型之間的關係，負二項分佈模型 (negative-binomial)，或者更準確的名字叫做伽馬泊松回歸模型，和泊松回歸模型之間的關係。伽馬泊松回歸模型其實是允許了每一個泊松計數 Poisson count 擁有各自不同的事件發生率。它估計的是一個叫做伽馬分佈的形狀，用來描述該泊松事件的發生率本身的分佈。預測變量估計的是一個伽馬分佈的形狀，而不是簡單的事件發生率的期望值 \\(\\lambda\\)。這樣做有什麼好處呢？一是使得模型變得更加靈活，不用被泊松回歸模型的均值方差必須相等的條件給限制住。伽馬泊松回歸模型擁有兩個重要參數需要估計，一個是發生率的均值 (mean of rate) \\(\\lambda_i\\)，另一個是表示該伽馬分佈的分散程度 dispersion 的參數 \\(\\phi\\)。 \\[ y_i \\sim \\text{Gamma-Poisson}(\\lambda_i, \\phi) \\] 其中，\\(\\lambda_i\\) 可以被視爲和普通的泊松分佈的發生率參數相似，但是分散程度 dispersion 參數 \\(\\phi\\) 是必須大於零的，它控制着方差的大小。伽馬泊松分佈的方差是 \\(\\lambda + \\lambda^2/\\phi\\)。所以，當 \\(\\phi\\) 越大，該方差約接近 \\(\\lambda\\)，也就是越接近一般的泊松回歸模型。 我們用之前用過的太平洋島國生產工具數據來演示該模型的使用和分析過程。之前使用簡單泊松回歸模型時，我們發現夏威夷島的工具種類數據是一個非常有影響力的觀測值。當我們把模型改成伽馬泊松回歸分佈時，夏威夷數據對模型結果的影響應該會小很多。因爲伽馬泊松回歸模型本身就預計數據本身的均值有較大的差異。 該模型的數學表達式是： \\[ \\begin{aligned} \\text{tools_i} &amp; \\sim \\text{Gamma-Poisson}(\\mu_i, \\phi) \\\\ \\mu_i &amp; = \\exp(\\alpha_{\\text{cid}[i]})\\text{population}_i^{\\beta_{\\text{cid}[i]}} / \\gamma \\\\ \\alpha_j &amp; \\sim \\text{Normal}(1,1)\\\\ \\beta_j &amp; \\sim \\text{Exponential}(1) \\\\ \\gamma &amp; \\sim \\text{Exponential}(1) \\\\ \\phi &amp; \\sim \\text{Exponential}(1) \\end{aligned} \\] data(Kline) d &lt;- Kline d$P &lt;- standardize( log(d$population) ) d$cid &lt;- ifelse( d$contact == &quot;high&quot;, 2L, 1L ) dat2 &lt;- list( T = d$total_tools, P = d$population, cid = d$cid ) m12.2 &lt;- ulam( alist( T ~ dgampois( lambda, phi ), lambda &lt;- exp(a[cid]) * P^b[cid] / g, a[cid] ~ dnorm(1, 1), b[cid] ~ dexp(1), g ~ dexp(1), phi ~ dexp(1) ), data = dat2, chains = 4, log_lik = TRUE ) saveRDS(m12.2, &quot;../Stanfits/m12_2.rds&quot;) m12.2 &lt;- readRDS(&quot;../Stanfits/m12_2.rds&quot;) precis(m12.2, depth = 2) ## mean sd 5.5% 94.5% n_eff Rhat4 ## a[1] 0.94097132 0.830743940 -0.386676274 2.24761243 1240.19594 0.99991823 ## a[2] 1.02691001 0.953527330 -0.513205616 2.52027928 944.60652 1.00110915 ## b[1] 0.24909272 0.095282555 0.101198848 0.40613213 971.49377 1.00320624 ## b[2] 0.26995734 0.125327606 0.079214251 0.47652449 839.54672 1.00173170 ## g 1.10997072 0.905590498 0.235848867 2.84342759 1401.76650 1.00129262 ## phi 3.71626768 1.622224766 1.536506347 6.64106549 1331.75048 0.99920489 k &lt;- PSIS( m12.2, pointwise = TRUE)$k ## Some Pareto k values are high (&gt;0.5). Set pointwise=TRUE to inspect individual points. plot( d$population, d$total_tools, bty = &quot;n&quot;, xlab = &quot;population&quot;, ylab = &quot;total tools&quot;, col = rangi2, pch = ifelse( d$cid == 1, 1, 16), lwd = 2, ylim = c(0, 75), cex = 1 + normalize(k)) ns &lt;- 100 P_seq &lt;- seq( from = -5, to = 3, length.out = ns ) # 1.53 is sd of log(population) # 9 is mean of log(population) pop_seq &lt;- exp( P_seq*1.53 + 9 ) lambda &lt;- link( m12.2, data = data.frame( P = pop_seq, cid = 1)) lmu &lt;- apply( lambda, 2, mean) lci &lt;- apply( lambda, 2, PI) text(150000, 57, &quot;low contact&quot;) lines( pop_seq, lmu, lty = 2, lwd = 1.5 ) shade( lci, pop_seq, xpd = FALSE ) lambda &lt;- link( m12.2, data = data.frame( P = pop_seq, cid = 2)) lmu &lt;- apply( lambda, 2, mean ) lci &lt;- apply( lambda, 2, PI ) lines( pop_seq, lmu, lty = 1, lwd = 1.5 ) shade( lci, pop_seq, xpd = FALSE ) text(110000, 69, &quot;high contact&quot;) 圖 54.4: The gamma-Poisson model is much less influenced by Hawaii, because the model expects more variation. The increased variation in the size of the shaded regions are much larger than in the pure Poisson model. (Figure 53.16) 54.3 零膨脹模型 zero-inflated models 很多時候，觀察事件發生的數量種，含有很多零的數值。產生這些零觀察值的原因可能不只一個。可能是因爲多種不同的原因導致的這樣的數據的產生。假設你去森林裏打算數一種知更鳥。那你觀察不到知更鳥的原因很可能是，森林裏真的沒有知更鳥；另一種可能的原因是，你的腳步聲嚇跑了這些本來生活在樹林裏的知更鳥。所以當產生零的機制有多種時，我們可能可以通過一種叫做零膨脹模型 (zero-inflated models) 的方法來建立回歸模型，分析數據。 54.3.1 零膨脹泊松回歸模型 zero-inflated Poisson 假設有一羣人在生產某種文件，每天有一定，但是很低的概率成功產生一份文件。所以當該試驗單獨存在時，就只是簡單的二項分佈數據，當觀察的天數特別多的時候，因爲成功概率很低，其過程近似成爲一個泊松分佈的數據。假設，有些日子確實不能產生文件，但是有些日子這羣人其實並沒有工作，而是偷懶休息了，這樣的日子裏，產生文件的概率也是零。假如你想知道這羣人有多少天其實是沒有在工作，而不是工作了無法產生文件的話，就需要用到零膨脹泊松回歸模型。這個產生觀察值是 0 的過程其實是一個混合體，它包括兩種可能性： 沒人上班，偷懶 上班了，但是文件生成失敗 於是我們需要重新定義該數據產生零的似然函數，令 \\(p\\) 表示偷懶不上班的概率 \\(\\lambda\\) 表示上班時，成功產生文件的件數的平均值（期望） 那麼產生 0 數據的過程其實可以表達爲： \\[ \\begin{aligned} \\text{Pr}(0 | p, \\lambda) &amp; = \\text{Pr}(\\text{drink} | p) + \\text{Pr}(\\text{work} | p) \\times \\text{Pr}(0 | \\lambda) \\\\ &amp; = p + (1 - p)\\frac{\\lambda^y\\exp(-\\lambda)}{y !} \\\\ &amp; = p + (1 - p)\\exp(-\\lambda) \\end{aligned} \\] 同理，產生非零觀察值的過程可以表達爲： \\[ \\begin{aligned} \\text{Pr}(y | y &gt; 0, p, \\lambda) &amp; = \\text{Pr}(\\text{drink} | p)(0) + \\text{Pr}(\\text{work} | p) \\text{Pr}(y | \\lambda) \\\\ &amp; = (1 - p)\\frac{\\lambda^y\\exp(-\\lambda)}{y !} \\end{aligned} \\] 所以，如果我們定義 \\(\\text{ZIPoisson}\\) 爲上述兩個過程的混合體，也就是零膨脹泊松分佈數據。那麼，該模型的數學表達式可以簡化爲; \\[ \\begin{aligned} y_i &amp; \\sim \\text{ZIPoisson}(p_i, \\lambda_i) \\\\ \\text{logit}(p_i) &amp; = \\alpha_p + \\beta_p x_i \\\\ \\log(\\lambda_i) &amp; = \\alpha_\\lambda + \\beta_\\lambda x_i \\end{aligned} \\] 事實上，這裏的兩個鏈接函數本身的預測變量並不需要完全相同，甚至可以根據你已有的理論和背景判斷，以至於完全不同的預測變量對兩個混合過程的影響都可以被靈活地考慮進來。 接下來我們使用計算機模擬數據來實地分析運行一下該模型。 # define parameters prob_drink &lt;- 0.2 # 20% of days are drinking/not working rate_work &lt;- 1 # average 1 manuscript per day # sample one year of production N &lt;- 365 # simulate days drinking/not working set.seed(365) drink &lt;- rbinom( N, 1, prob_drink ) # simulate manuscripts completed y &lt;- (1 - drink) * rpois( N, rate_work ) 我們順利獲得了觀察值 \\(y\\)，也就是觀察到的365天中每天成功生成的文件數量。看看它的分佈是怎樣的： simplehist( y, xlab = &quot;manuscripts completed&quot;, lwd = 4, bty = &quot;n&quot;) zeros_drink &lt;- sum(drink) zeros_work &lt;- sum( y == 0 &amp; drink == 0 ) zeros_total &lt;- sum(y == 0 ) lines(c(0, 0), c(zeros_work, zeros_total), lwd = 4, col = rangi2) 圖 54.5: Frequency distribution of zero-inflated observations. The blue lines sement over zero shows the y = 0 observations that arose from drinking. In real data, we typically cannot see which zeros come from which process. 圖 54.5 就用藍色的部分展示了偷懶沒上班造成的觀察值爲零的部分，辛苦工作但是不幸沒有產出的是黑色的觀察值。所以你就能理解了爲什麼說這樣的分佈被叫做零膨脹 (Zero-inflated)。在 rethinking 包裏提供了便捷的零膨脹泊松分佈，可以直接調用： m12.3 &lt;- ulam( alist( y ~ dzipois( p, lambda ), logit(p) &lt;- ap, log(lambda) &lt;- al, ap ~ dnorm( -1.5, 1 ), al ~ dnorm( 1, 0.5 ) ), data = list(y = y), chains = 4 ) saveRDS(m12.3, file = &quot;../Stanfits/m12_3.rds&quot;) m12.3 &lt;- readRDS(&quot;../Stanfits/m12_3.rds&quot;) precis( m12.3 ) ## mean sd 5.5% 94.5% n_eff Rhat4 ## ap -1.259301364 0.336442978 -1.83536975 -0.79168319 628.78968 1.0018858 ## al 0.013632648 0.088799086 -0.12836396 0.15680242 577.03011 1.0049398 可以計算模型中估計的這些工人偷懶的日子所佔的比例是多少： post &lt;- extract.samples( m12.3 ) mean( inv_logit( post$ap )) # probability of drink/not working days ## [1] 0.22637209 mean( exp( post$al )) # rate finish manuscripts, when working ## [1] 1.0177327 看，我們的模型給出了十分近似的結果，儘管不知道這些工人究竟在哪些天偷懶了，但是推算出大約有20%的工作日，他們是沒有在工作的。這是沒有預測變量的最基礎的截距模型，在真實情況下，會有更多的變量放在混合的兩行鏈接函數對應的預測模型中。 54.4 帶順序含義的多類別結果變量 ordered categorical outcomes 在某些心理學甚至普通的自然科學研究裏，我們非常容易碰見的一種結果變量是帶有順序的多類別結果，例如你可能被問過「如果從1-7中選擇一個數字來表達你的喜愛程度，數字越高表示越喜愛的話，你對壽司類食物的嗜好程度是多少數值？」這樣的問題。那麼這樣的問題的答案就是一系列1-7的數值。這樣的結果變量之間是存在順序的區別的，被叫做順序類別 ordered categories。它和計數型變量不同，不同順序之間的跨度，可以是不一樣的。也就是 1-2 之間的喜好程度之差，很可能不同於 6-7 之間的喜好程度之差。我們無法把這樣的結果簡單地視爲連續型的變量。 處理這樣結果的最佳解決方案是使用一種該叫做累積鏈接函數 (cumulative link function)。很容易理解我們設定數值爲3的累積概率，它等於比三小的數值 1， 2，以及它本身的概率之和。 數據來自經典的關於有軌電車的道德悖論問題。結果變量是 Trolley 數據中的 response 變量，它的答案是從 1-7 遞增的表示道德上認爲可以接受的程度。我們先描述一下這個結果變量的分佈情況： data(&quot;Trolley&quot;) d &lt;- Trolley simplehist( d$response, xlab = &quot;response&quot;, xlim = c(1,7), bty = &quot;n&quot;) 圖 54.6: Histogram of discrete response in the sample. 54.4.1 用不同的截距來描述一個有順序的分佈 describing an ordered distribution with intercepts 簡單地，我們可以使用這些結果的累積概率，取他們的對數累積比值 log-cumulative-odds。第一步是計算累積概率： # discrete proportion of each response value pr_k &lt;- table(d$response) / nrow(d) # cumsm converts to cumulative proportions cum_pr_k &lt;- cumsum( pr_k ) # plot plot(1:7, cum_pr_k, type = &quot;b&quot;, xlab = &quot;response&quot;, ylab = &quot;cumulative proportion&quot;, ylim = c(0, 1), bty = &quot;n&quot;) 圖 54.7: Cumulative proportion of each response. 下一步就可以計算對數累積比值。我們需要的是一系列不同的截距 \\(\\alpha_k\\)。每一個截距本身都使用對數累積比值作爲尺度，表示每一種選擇結果的累積概率： \\[ \\log\\frac{\\text{Pr}(y_i \\leqslant k)}{1 - \\text{Pr}(y_i \\leqslant k)} = \\alpha_k \\] 實際計算過程可以是： round( lco &lt;- logit( cum_pr_k ), 2) ## Warning in log(p/(1 - p)): NaNs produced ## 1 2 3 4 5 6 7 ## -1.92 -1.27 -0.72 0.25 0.89 1.77 NaN plot(1:6, lco[1:6], type = &quot;b&quot;, xlab = &quot;response&quot;, ylab = &quot;log-cumulative-odds&quot;, # ylim = c(0, 1), bty = &quot;n&quot;) 圖 54.8: Log-cumulative-odds of each response. Note that the log-cumulative-odds of response value 7 is infinity, so it is not shown. 接下來的重點是如何利用這些累積概率來計算整個數據產生過程的似然 likelihood。圖54.9 展示了思考的過程。每個截距 \\(\\alpha_k\\) 其涵義其實是結果爲 \\(k\\) 時的累積概率的對數比值，我們可以使用簡單的逆函數命令把它轉換成累積概率本身。所以當我們觀察到的結果是 \\(k\\) 時，我們可以用減去它之前的累積概率的方法來計算該點本身的似然 likelihood： \\[ p_k = \\text{Pr}(y_i = k) = \\text{Pr}(y_i \\leqslant k) - \\text{Pr}(y_i \\leqslant k - 1) \\] # primary data d_plot &lt;- d %&gt;% count(response) %&gt;% mutate(pr_k = n / nrow(d), cum_pr_k = cumsum(n / nrow(d))) %&gt;% mutate(discrete_probability = ifelse(response == 1, cum_pr_k, cum_pr_k - pr_k)) # annotation text &lt;- tibble(text = 1:7, response = seq(from = 1.25, to = 7.25, by = 1), cum_pr_k = d_plot$cum_pr_k - .065) d_plot %&gt;% ggplot(aes(x = response, y = cum_pr_k, color = cum_pr_k, fill = cum_pr_k)) + geom_line(color = canva_pal(&quot;Green fields&quot;)(4)[1]) + geom_point(shape = 21, colour = &quot;grey92&quot;, size = 2.5, stroke = 1) + geom_linerange(aes(ymin = 0, ymax = cum_pr_k), alpha = 1/2, color = canva_pal(&quot;Green fields&quot;)(4)[1]) + geom_linerange(aes(x = response + .025, ymin = ifelse(response == 1, 0, discrete_probability), ymax = cum_pr_k), color = &quot;black&quot;) + # number annotation geom_text(data = text, aes(label = text), size = 4) + scale_fill_gradient(low = canva_pal(&quot;Green fields&quot;)(4)[4], high = canva_pal(&quot;Green fields&quot;)(4)[1]) + scale_color_gradient(low = canva_pal(&quot;Green fields&quot;)(4)[4], high = canva_pal(&quot;Green fields&quot;)(4)[1]) + scale_x_continuous(breaks = 1:7) + scale_y_continuous(&quot;cumulative proportion&quot;, breaks = c(0, .5, 1), limits = c(0, 1)) + theme_bw() + theme(axis.ticks = element_blank(), axis.title.y = element_text(angle = 90), legend.position = &quot;none&quot;) ## Warning: Removed 1 row(s) containing missing values (geom_path). ## Warning: Removed 1 rows containing missing values (geom_point). ## Warning: Removed 1 rows containing missing values (geom_segment). ## Removed 1 rows containing missing values (geom_segment). 圖 54.9: Cumulative probability and ordered likelihood. The horizontal axis displays possible observable outcomes, from 1 through 7. The vertical axis displays cumulative probability. The gray bars over each outcome show cumulative probability. These keep growing with each successive outcome value. The darker line segments show the discrete probability of each individual outcome. These are the likelihoods that go into Bayes’ theorem. 上圖 54.9 中黑色的部分，也就是每個選項對應的概率減去前面所有選項概率之和的部分，就是我們需要的每個選項本身的似然函數。這個模型可以用下面的表達式來描述： \\[ \\begin{aligned} R_i &amp; \\sim \\text{Ordered-logit}(\\phi_i, \\kappa) &amp; [\\text{Probability of data}] \\\\ \\phi_i &amp; = 0 &amp; [\\text{linear model}] \\\\ \\kappa_k &amp; \\sim \\text{Normal}(0, 1.5) &amp; [\\text{common prior for each intercept}] \\end{aligned} \\] 當然我們可以把上面的描述擴展得更加仔細一些： \\[ \\begin{aligned} R_i &amp; \\sim \\text{Catergorical}(\\mathbf{p}) &amp; [\\text{Probability of data}] \\\\ p_1 &amp; = q_1 &amp; [\\text{Probabilities of each value }k] \\\\ p_k &amp; = q_k - q_{k-1}\\text{ for }K &gt; k &gt; 1 \\\\ p_K &amp; = 1 - q_{K-1} \\\\ \\text{logit}(p_k) &amp; = \\kappa_k - \\phi_i &amp; [\\text{cumulative logit link}] \\\\ \\phi_i &amp; = \\text{terms of linear model} &amp; [\\text{linear model}] \\\\ \\kappa_k &amp; \\sim \\text{Normal}(0, 1.5) &amp; [\\text{common prior for each intercept}] \\end{aligned} \\] 所以 Ordered-logit 分佈其實講的就是一個多項式分佈，每個選項的概率各自是 \\(\\mathbf{p} = \\{ p_1, p_2, \\dots, p_{K-1} \\}\\)。 於是我們來實際運行一下上述模型，先設計一個沒有預測變量的模型： m12.4 &lt;- ulam( alist( R ~ dordlogit(0, cutpoints), cutpoints ~ dnorm(0, 1.5) ), data = list( R = d$response ), chains = 4, cores = 4 ) saveRDS(m12.4, file = &quot;../Stanfits/m12_4.rds&quot;) m12.4 &lt;- readRDS(&quot;../Stanfits/m12_4.rds&quot;) precis(m12.4, depth = 2) ## mean sd 5.5% 94.5% n_eff Rhat4 ## cutpoints[1] -1.91678230 0.029873016 -1.96435328 -1.86815144 1536.6193 0.99988673 ## cutpoints[2] -1.26628663 0.024561407 -1.30473298 -1.22740417 1960.5819 1.00020793 ## cutpoints[3] -0.71766280 0.021505791 -0.75210444 -0.68223850 2356.1402 1.00019074 ## cutpoints[4] 0.24837136 0.020430963 0.21562548 0.28063474 2386.1227 0.99933494 ## cutpoints[5] 0.89025135 0.022674222 0.85454882 0.92644273 2317.3247 0.99871785 ## cutpoints[6] 1.76939855 0.029379883 1.72170994 1.81607297 2446.5505 0.99928946 可以看見每個截距的事後估計量都被計算得十分精確。我們可以使用邏輯函數的逆函數把累積概率簡單地計算回來： round( inv_logit(coef(m12.4)), 3) ## cutpoints[1] cutpoints[2] cutpoints[3] cutpoints[4] cutpoints[5] cutpoints[6] ## 0.128 0.220 0.328 0.562 0.709 0.854 這與我們之前計算過的各截距結果完全一致，而且此時我們還擁有了這些截距的事後概率分佈。 54.4.2 增加預測變量 爲了給模型中增加預測變量，我們需要設計一個函數，使之成爲和截距相加或相減形式的模型。例如我們有一個連續型的預測變量 \\(x_i\\)，那麼可以定義 \\(\\phi_i = \\beta x_i\\) 作爲預測變量可以給模型施加的影響。這裏我們給累積邏輯回歸模型設計的函數是： \\[ \\begin{aligned} \\log \\frac{\\text{Pr}(y_i \\leqslant k)}{1 - \\text{Pr}(y_i \\leqslant k)} &amp; = \\alpha_k - \\phi_i \\\\ \\phi_i &amp; = \\beta x_i \\end{aligned} \\] 之所以這裏選擇用減法，是因爲如果降低累積對數比值 (log-cumulative-odds)，就需要把部分的概率質量 (probability mass) 往右側較高的結果選項處平移。這樣如果 \\(\\beta\\) 大於零，就意味着如果 \\(x_i\\) 變大，\\(y_i\\) 變大。如果你對此感到困惑，我們簡單計算一下，我們把 m12.4 的事後概率分佈的各個均值結果提取出來，然後統一減去0.5看會得到怎樣的結果： round( pk &lt;- dordlogit(1:7, 0, coef(m12.4)), 2 ) ## [1] 0.13 0.09 0.11 0.23 0.15 0.15 0.15 上述的這些概率其實意味着平均的結果選擇會是： sum( pk*(1:7) ) ## [1] 4.1988773 現在把每個選項對應的截距減去 0.5： round( pk &lt;- dordlogit(1:7, 0, coef(m12.4) - 0.5 ), 2 ) ## [1] 0.08 0.06 0.08 0.21 0.16 0.18 0.22 你會發現概率質量整體往右邊平移了，選擇數值低選項的概率變得比之前小了，也就是傾向於選擇高數值的選項。此時的平均選擇結果是： sum( pk*(1:7) ) ## [1] 4.7293397 這就是爲什麼我們在這個模型中的線性回歸部分使用減法而不是用加法的原因。這樣的話一個是正的 \\(\\beta\\) 也就意味着該預測變量傾向於使得結果選擇更大的選項，也就是使得平均結果變大。 接下來我們就可以實現在模型中添加預測變量這個願望了，回到 Trolley 數據上來，期望添加的預測變量其實包含了下面幾個： action, intention, contact。 action 是行動原則。該原則認爲，和無視不作爲造成的同等程度的傷害相比，由於自己的行爲造成的傷害在道德上更無法接受。 intention 是意圖原則。該原則認爲，和預見到爲了達成目標可能造成的同等程度傷害相比，爲了達成該目標而故意造成他人傷害在道德上更無法接受。 contact 是接觸原則。該原則認爲，和沒有通過物理上的接觸對他人造成的同等程度傷害相比，通過物理上的接觸對他人造成了傷害在道德上更無法接受。 上述三個原則的解釋告訴我們，contact 和 action 應該是互斥的關係，二者不會有交集。但是這兩個原則又可能和 intention 有交集。於是這三個預測變量之間組成的可能的預測變量關係有如下六種： 三者皆無，不認同全部三個原則。 只認同行動原則。 只認同意圖原則。 只認同接觸原則。 認同行爲和意圖原則。 認同接觸和意圖原則。 其中 5.6. 兩個預測變量關係意味着意圖原則和行爲，及接觸原則之間有交互作用 (interaction)。這裏我們利用一個小技巧把這個交互作用表達出來： \\[ \\begin{aligned} \\log \\frac{\\text{Pr}(y_i \\leqslant k)}{1 - \\text{Pr}(y_i \\leqslant k)} &amp; = \\alpha_k - \\phi_i \\\\ \\phi_i &amp; = \\beta_A A_i + \\beta_C C_i + B_{I,i} I_i \\\\ B_{I,i}&amp; = \\beta_I + \\beta_{IA} A_i + \\beta_{IC} C_i \\end{aligned} \\] 其中，\\(A_i, C_i, I_i\\) 分別表示 action, contact, intention 三個變量。我們接下來把上述數學模型放到 Stan 模型中去運行： dat &lt;- list( R = d$response, A = d$action, I = d$intention, C = d$contact ) m12.5 &lt;- ulam( alist( R ~ dordlogit( phi, cutpoints ), phi &lt;- bA * A + bC * C + BI * I, BI &lt;- bI + bIA * A + bIC * C, c(bA, bI, bC, bIA, bIC) ~ dnorm( 0, 0.5 ), cutpoints ~ dnorm( 0, 1.5 ) ), data = dat, chains = 4, cores = 4 ) saveRDS(m12.5, file = &quot;../Stanfits/m12_5.rds&quot;) m12.5 &lt;- readRDS(&quot;../Stanfits/m12_5.rds&quot;) precis( m12.5 ) ## 6 vector or matrix parameters hidden. Use depth=2 to show them. ## mean sd 5.5% 94.5% n_eff Rhat4 ## bIC -1.23763749 0.095329453 -1.39530728 -1.08968439 1224.1521 1.0001406 ## bIA -0.43548382 0.081010342 -0.56323943 -0.30528822 1375.0285 1.0000502 ## bC -0.34391402 0.066118801 -0.45062777 -0.23813803 1359.9269 1.0011532 ## bI -0.29018140 0.056192605 -0.37856739 -0.20127982 1091.0233 1.0011916 ## bA -0.47195871 0.054117908 -0.55896778 -0.38493597 1259.3679 1.0000589 這裏我們暫時對每個選項本身的概率不感興趣，而是對影響結果的預測變量的回歸係數們更加感興趣。看這些回歸係數的事後概率分佈，他們每一個都很穩定地小於0。也就是每個原則都會降低選擇結果的平均值。 plot( precis(m12.5), xlim = c(-1.4, 0)) ## 6 vector or matrix parameters hidden. Use depth=2 to show them. 圖 54.10: The marginal posterior distributions of the slopes in m12.5. 可以觀察到，意圖原則和接觸原則的交互作用項的回歸係數對結果的影響最大，但是我們也發現他們單獨對結果的影響都不是很大。 其中一個常見且十分有用的表達方式是使用橫軸表示預測變量，縱軸作爲所有選項的累積概率。這樣我們就可以繪製一系列的不同預測變量和結果曲線之間的示意圖。下面就來嘗試一下這樣的展示結果的方法。 plot( NULL, type = &quot;n&quot;, bty = &quot;n&quot;, xlab = &quot;intention&quot;, ylab = &quot;probability&quot;, xlim = c(0, 1), ylim = c(0, 1), xaxp = c(0, 1, 1), yaxp = c(0, 1, 2), main = &quot;action = 0, contact = 0&quot;) # set up a data list that contains the different combinations of predictor values. kA &lt;- 0 # value for action kC &lt;- 0 # value for contact kI &lt;- 0:1 # values of intention to calculate over pdat &lt;- data.frame(A = kA, C = kC, I = kI) phi &lt;- link(m12.5, data = pdat )$phi # loop over the first 50 samples in and plot their predictions across values of intention # use pordlogit to compute the cumulative probability for each possible value post &lt;- extract.samples(m12.5) for( s in 1:50 ) { pk &lt;- pordlogit( 1:6, phi[s, ], post$cutpoints[s, ]) for( i in 1:6 ) lines(kI, pk[,i], col = grau(0.1)) } 圖 54.11: Posterior predictions of the ordered categorical model with interactions, m12.5. The distribution of posterior probabilities of each outcome across values of intention for action = 0, and contact = 0. 圖 54.12: Posterior predictions of the ordered categorical model with interactions, m12.5. The distribution of posterior probabilities of each outcome across values of intention for action = 1, and contact = 0. 圖 54.13: Posterior predictions of the ordered categorical model with interactions, m12.5. The distribution of posterior probabilities of each outcome across values of intention for action = 0, and contact = 1. 我們繪製了三個連續的圖54.11, 54.12, 54.13 展示了不同的預測變量取值時，對結果選擇的預測。橫軸的 intention 分別取 0, 1 時，且當不同條件的 action, contact 固定不變時，對結果變量的影響。所以第一個圖54.11，其實展示的就是不認同行動原則 (no action)，不認同接觸原則 (no contact)，也不認同意圖原則 (no intention) 人，如果變成了認同意圖原則的話，他們選擇的7個結果的變化。同理可以解釋其餘兩個圖的涵義。值得注意的是，第三張圖 54.13 中其實展示的就是我們觀察到的 contact 和 intention 之間存在的交互作用。該圖也展示了不認同行動原則 (no action)，但是同時認同接觸原則 (contact = 1) 和意圖原則 (intention = 1) 的話，更多的人會傾向於選擇數值更低的結果，也就意味着這樣的受試對象其實更有可能在該試驗中選擇無視火車軋死更多的5人，也不會扣動變軌機制讓火車轉向去軋死一個另一条鐵軌上的人。另外一種直觀的方法是繪製不同預測變量情況下的結果概率柱狀圖。 kA &lt;- 0 # value of action kC &lt;- 0 # value for contact kI &lt;- 0:1 # values for intention to calculate over pdat &lt;- data.frame(A = kA, C = kC, I = kI) s &lt;- sim( m12.5, data = pdat ) simplehist(s, xlab = &quot;response&quot;, bty = &quot;n&quot;, main = &quot;action = 0, contact = 0&quot;) 圖 54.14: The same interactions in the m12.5 model visualized as histograms of simulated outcomes. The black line segments are intention =0. The blue line segments are intention = 1. 圖 54.15: The same interactions in the m12.5 model visualized as histograms of simulated outcomes. The black line segments are intention =0. The blue line segments are intention = 1. 圖 54.16: The same interactions in the m12.5 model visualized as histograms of simulated outcomes. The black line segments are intention =0. The blue line segments are intention = 1. 54.5 帶順序含義的多類別預測型變量 ordered categorical predictors 前一個小結討論了怎樣使用累積對數比值函數來分析結果變量是有順序的多類別變量的情況。實際分析中我們還經常會碰見相似類型的預測變量。也就是帶有順序涵義的多類別預測型變量。多數人可能選擇把它轉化成連續型變量，但是這其實是有問題的。因爲我們並不想增加假設說不同類別之間的差距，或者叫類別之間的距離相等或者是不等的可以量化測量的距離。我們其實可以巧妙地避免這樣的不必要假設。 在前一節使用的 Trolley 有軌電車的道德悖論問題數據中，有關於受試者的教育程度的一個可以用作預測變量的數據： data(Trolley) d &lt;- Trolley levels(d$edu) ## [1] &quot;Bachelor&#39;s Degree&quot; &quot;Elementary School&quot; &quot;Graduate Degree&quot; &quot;High School Graduate&quot; ## [5] &quot;Master&#39;s Degree&quot; &quot;Middle School&quot; &quot;Some College&quot; &quot;Some High School&quot; # reorder d &lt;- d %&gt;% mutate(edu = fct_relevel(edu, &quot;Elementary School&quot;, &quot;Middle School&quot;, &quot;Some High School&quot;, &quot;High School Graduate&quot;, &quot;Some College&quot;, &quot;Bachelor&#39;s Degree&quot;, &quot;Master&#39;s Degree&quot;, &quot;Graduate Degree&quot;)) levels(d$edu) ## [1] &quot;Elementary School&quot; &quot;Middle School&quot; &quot;Some High School&quot; &quot;High School Graduate&quot; ## [5] &quot;Some College&quot; &quot;Bachelor&#39;s Degree&quot; &quot;Master&#39;s Degree&quot; &quot;Graduate Degree&quot; 接下來的思考過程將會很有趣。我們發現教育程度的不同類別之間是存在順序關係的，但是我們不確定不同的受教育程度之間的差別會是成等比的，也就是說小學和中學之間的差別，相比高中和大學之間的差別，應該允許它們不同。但是我們又認爲這個隨着學歷增加，對結果的選擇影響應該是遞增的關係才符合常理。那麼我們需要的是能夠測量這個能夠隨着學歷增加而遞增的影響。上面的數據中，教育程度有八個類別，那麼衡量它們八個之間差異的變量，應該有 \\(8-1 = 7\\) 個。因此第一步我們思考得出的結論是，第一個學歷增量是從小學畢業到中學畢業的部分 \\(\\delta_1\\)： \\[ \\phi_i = \\delta_1 + \\text{Other stuff} \\] 其中，\\(\\text{Other stuff}\\) 的部分是你希望加的其餘的預測變量的部分。 那如果從第二低教育程度（中學）升高到高中但是未完成之間的影響也用相似的方法，一個 \\(\\delta_2\\) 加入到模型中去： \\[ \\phi_i = \\delta_1 + \\delta_2 + \\text{Other stuff} \\] 以此類推，八個學歷層級之間有七個增量，也就是從 \\(\\delta_1,\\dots,\\delta_7\\) 都放進模型之後會獲得： \\[ \\phi_i = \\sum_{j = 1}^7 \\delta_j + \\text{Other stuff} \\] 而且我們也同意說，這個等式的第一個部分 \\(\\sum_{j = 1}^7 \\delta_j\\) 其實是完成到最高學歷之後，對結果變量的終極影響。但是這樣的表達依然不太便利，最簡單的方式其實是，把這整個學歷對結果的影響認爲是一個係數 \\(\\beta_E\\)，然後每個不同學歷之間的增量，其實是佔這個 \\(\\beta_E\\) 的一個百分比。同時我們使用啞變量令 \\(\\delta_0 = 0\\)，改寫後的模型就變成了： \\[ \\phi_i = \\beta_E \\sum_{j = 0}^{E_i - 1} \\delta_j + \\text{Other stuff} \\] 那麼如果我們要把這個教育程度也作爲一個預測變量加入前一節中使用的順序邏輯回歸模型中時，我們的模型可以變化成爲： \\[ \\begin{aligned} R_i &amp; \\sim \\text{Ordered-logit}(\\phi_i, \\kappa) &amp; [\\text{Probability of data}] \\\\ \\phi_i &amp; = \\beta_E \\sum_{j = 0}^{E_i - 1}\\delta_j + \\beta_A A_i + \\beta_CC_i + \\beta_I I_i &amp; [\\text{Linear model}] \\\\ \\kappa_K &amp; \\sim \\text{Normal}(0, 1.5) &amp; [\\text{Priors}] \\\\ \\beta_A, \\beta_I, \\beta_C, \\beta_E &amp; \\sim \\text{Normal}(0, 1) \\\\ \\delta &amp; \\sim \\text{Dirichlet}(\\alpha) \\end{aligned} \\] 最後一行的先驗概率分佈設置使用的是狄雷克雷分佈 (Dirichlet Distribution)。狄雷克雷分佈其實是beta分佈的多項式版本，它其實就是應對多個選項的分佈問題，所有選項的選擇概率之和爲1。beta分佈的話，只有兩個選項，0和1。狄雷克雷分佈，就沒有選項的限制了，可以是無數多的可能性，但是所有可能性之和是1。我們用計算機模擬來展示一下先驗概率分佈是 \\(\\text{Dirichlet}(2)\\) 的採樣結果是怎樣的： library(gtools) set.seed(2020) # &lt;- I never trust this can generate reliable results anymore delta &lt;- rdirichlet(10, alpha = rep(2, 7)) # we now have 10 vectors with 7 probabilities, each summing to 1. str(delta) ## num [1:10, 1:7] 0.1644 0.1686 0.2727 0.0801 0.2667 ... plot(NULL, xlim = c(1, 7), ylim = c(0, 0.5), xlab = &quot;index&quot;, bty = &quot;n&quot;, ylab = &quot;probabilities&quot; ) h &lt;- 3 for ( i in 1:nrow(delta) ) lines( 1:7, delta[i, ], type = &quot;b&quot;, pch = ifelse(i == h, 16, 1), lwd = ifelse(i == h, 5, 1.5), col = ifelse(i == h, &quot;black&quot;, col.alpha(&quot;black&quot;, 0.7))) 圖 54.17: Simulated draws from a Dirichlet prior with alpha = {2,2,2,2,2,2,2}. The highlighted vector is not special but just to show how much variation can exist in a single vector. This prior does not expect all the probabilities to be equal. Instead it expects that any of the probabilities could be bigger or smaller than the others. 接下來我們就可以寫下模型代碼並運行了： dat &lt;- list( R = d$response, action = d$action, intention = d$intention, contact = d$contact, E = as.integer(d$edu), # turn education levels into index alpha = rep(2, 7) # prior for delta ) m12.6 &lt;- ulam( alist( R ~ ordered_logistic( phi, kappa ), phi &lt;- bE * sum( delta_j[1:E] ) + bA * action + bI * intention + bC * contact, kappa ~ normal( 0 , 1.5 ), c(bA, bI, bC, bE) ~ normal(0, 1), vector[8]: delta_j &lt;&lt;- append_row(0, delta), simplex[7]: delta ~ dirichlet( alpha ) ), data = dat, chains = 4, cores = 4 ) saveRDS(m12.6, &quot;../Stanfits/m12_6.rds&quot;) 其中， bE * sum( delta_j[1:E] ) 就是我們新加入的關於受教育程度的部分。但是由於向量 delta_j 有八個元素，第一個我們需要使之設定成爲 0，即 \\(\\delta_0 =０\\)，其餘的 7 個元素則是需要模型運算的。 vector[8]: delta_j &lt;&lt;- append_row(0, delta) 的部分，其實是 Stan 代碼，它的涵義是告訴 Stan 要創建一個含有八個元素的向量 vector[8]，使之命名爲 delta_j，然後這個 delta_j 本身則是由 append_row(0, delta) 構成，它的第一個元素是 0, 之後的元素則是另外的 7 個服從狄雷克雷分佈的數據 simplex[7]: delta ~ dirichlet( alpha )。 這個模型運行的時間會比較長，但是使用貝葉斯模型的你我都知道，有些事情是值得等待的。這就來看看模型運行的結果，先忽略掉 kappa 的估計結果： m12.6 &lt;- readRDS(&quot;../Stanfits/m12_6.rds&quot;) precis( m12.6, depth = 2, omit = &quot;kappa&quot;) ## mean sd 5.5% 94.5% n_eff Rhat4 ## bE -0.320984761 0.163530816 -0.5995874758 -0.079349253 826.69054 1.00519875 ## bC -0.956715212 0.050018473 -1.0385710988 -0.874165209 2132.83859 0.99861371 ## bI -0.718070433 0.036605109 -0.7753534149 -0.658475945 2292.21600 0.99977847 ## bA -0.705086244 0.039945112 -0.7709553534 -0.643750282 1741.63630 0.99935324 ## delta[1] 0.235899745 0.135517560 0.0522574764 0.478356205 1233.31767 1.00106196 ## delta[2] 0.141450463 0.091811516 0.0253121316 0.309828811 2771.89281 1.00005070 ## delta[3] 0.187455831 0.104696330 0.0377917246 0.368011273 1792.31406 1.00532930 ## delta[4] 0.169826085 0.097571545 0.0408060694 0.341822822 2283.58390 1.00018207 ## delta[5] 0.039678083 0.043932921 0.0056979699 0.100990947 1008.34895 1.00372998 ## delta[6] 0.099364234 0.068403184 0.0206021141 0.222743688 1643.76439 1.00037793 ## delta[7] 0.126325558 0.078490717 0.0282872992 0.272587658 2322.73237 0.99961284 受教育程度這個變量對結果的選擇的影響整體來說是負的 bE = -0.32。也就是說，受教育程度最高的受試者，會傾向於不去拉動變軌的機制。然後我們來看這一系列的 delta 變量的運算結果。圖 54.18 顯示，每個學歷的增加都多多少少地增加了學歷對結果的影響，但是其中第五層級的學歷 SCol = Some college 比起從高中畢業 HSG = high school graduate 的增加可以說微不足道。 delta_labels &lt;- c(&quot;Elem&quot;, &quot;MidSch&quot;, &quot;SHS&quot;, &quot;HSG&quot;, &quot;SCol&quot;, &quot;Bach&quot;, &quot;Mast&quot;, &quot;Grad&quot;) pairs( m12.6, pars = &quot;delta&quot;, labels = delta_labels) 圖 54.18: Posterior distribution of incremental educational effects. Every additional level of education tends to add a little more disapproval, except for Some College (SCol), which adds very little. 最後我們再來跟傳統的方法比較一下這個改進之後的模型建立方法和傳統的把不同的類別做簡單的啞變量甚至是改成連續形變量的方法的結果。爲了能讓二者之間直接比較，我們需要把受教育程度這個變量改成連續型變量之後，把它標準化，使之成爲 0-1 之間的數字： dat$edu_norm &lt;- normalize( as.integer(d$edu) ) epiDisplay::summ(dat$edu_norm, graph = FALSE) m12.7 &lt;- ulam( alist( R ~ ordered_logistic(mu, cutpoints), mu &lt;- bE * edu_norm + bA * action + bI * intention + bC * contact, c(bA, bI, bC, bE) ~ normal(0, 1), cutpoints ~ normal(0, 1.5) ), data = dat, chains = 4, cores = 4 ) # saveRDS(m12.7, &quot;Stanfits/m12_7.rds&quot;) m12.7 &lt;- readRDS(&quot;../Stanfits/m12_7.rds&quot;) precis(m12.7) ## 6 vector or matrix parameters hidden. Use depth=2 to show them. ## mean sd 5.5% 94.5% n_eff Rhat4 ## bE -0.10186101 0.092160997 -0.25601552 0.042013954 1766.6499 0.99854348 ## bC -0.95494095 0.048744988 -1.03160894 -0.878947109 2323.3678 0.99941971 ## bI -0.71873910 0.036339954 -0.77753330 -0.661964171 2121.1529 0.99877067 ## bA -0.70312157 0.040188346 -0.76769297 -0.640183706 2054.4447 0.99917918 你會看見，這時候給出的運算結果提示教育程度並不影響結果的選擇，或者影響幾乎可以忽略不計 bE = -0.10, 89% CrI: -0.26, 0.04 。但是很顯然這不是事實，因爲不同教育程度之間的跨度，不能認爲是一個線性的變化過程，不同的教育程度的提升之間對結果的影響並不是簡單的一成不變的 different levels have different incremental associations。 "],["貝葉斯多層回歸模型-multilevel-models.html", "第 55 章 貝葉斯多層回歸模型 multilevel models 55.1 多層數據實例：蝌蚪和青蛙數據 multilevel tadpoles 55.2 多層回歸的變化的效應和過度擬合/過低擬合之間的交易 varying effects and the underfitting/overfitting trade-off 55.3 使用多於一個類別作爲多層回歸的隨機變量 more than one type of cluster 55.4 分散轉換與非中心型先驗概率 divergent transition and non-centered priors", " 第 55 章 貝葉斯多層回歸模型 multilevel models Many statistical models also have anterograde amnesia. As the models move from one cluster - individual, group, location - in the data to another, estimating parameters for each cluster, they forget everything about the previous cluster. … These models implicitly assume that nothing learned about any one category informs estimates for the other categories – the parameters are independent of one another and learn from completely separate proportions of the data. This would be like forgetting you had ever been in a cafe, each time you go to a new cafe. Cafes do differ, but they are also alike. Richard McElreath 其實，當我們開始使用回歸模型時，最推薦的就是從多層回歸模型入手，把它當作一種應該實施的默認選項。當然的確非多層回歸的簡單模型在一些場合下就能夠勝任數據分析的過程給出滿意的結果，但事實上更多時候你會發現多層回歸模型會更加出色的幫助我們理解這個世界。所以最理想的狀態其實或許應該是，我們每次先從多層回歸模型入手分析數據，隨着分析的深入，過程中我們可能發現不再需要多層模型結構就能完成分析任務。這樣其實好過我們從一開始就忽略掉了多層回歸模型的這一關鍵的可能性。 在本章節中，你會切身體會到每一次觀測結果，其實都對其他觀測數據產生影響，由此把模型引入多層回歸 multilevel models的範疇。多層回歸模型，與普通的模型不同它們是有記憶力的。多層回歸模型在與觀察數據結合並運行之後，它能學習並且記住數據中層級與層級結構之間的特徵。依據數據內部層級結構之間存在的方差與變化 variation，多層回歸模型居然能把數據內部不同層級結構的總體信息給提煉並統合出來 pools information across clusters。而且值得一提的是，這一信息提煉和統合的過程其實通常都傾向於改善模型在每一層數據中對統計參數的估計。簡單總結一下使用多層回歸模型的優點有這麼幾個： 改善重複採樣 (repeat sampling) 數據的參數估計。當數據特徵之一是從同一對象，同一地理位置身上重複採集觀測值時，傳統的單層簡單模型通常要麼不能理想地擬合 (underfit)，或者出現過度擬合 (overfit) 的現象。 改善採樣不均衡 (imbalance in sampling) 數據的參數估計。當數據中某些層級的樣本相對其它層級的樣本較多時，也就是重複採樣更多的成功採集某些個體，那麼使用多層回歸模型可以有效地避免這些數據佔比例較大的層級錯誤地主導 (unfairly dominating) 所有的參數估計，因爲考慮了數據的層級結構的模型，可以有效地處理不同層級之間存在的差異和不確定性 (uncertainty)。 估計方差的大小 (estimates of variation)。假如你的實驗目的之一就包括了估計個體與個體，甚至組與組之間的差異 (variation，方差)，那麼多層回歸模型對你大有助益，因爲它生來就是爲了估計這樣的方差和變異而設計的。 避免草率地取平均值，保留方差 (avoid averaging, retain variation)。長期一來，分析的學者們常常在預處理數據的時候對數據進行一些取平均值的方法進行“整理”。這當然常常是無心，但對於數據分析來說確實致命的。簡單取平均值的方式會把本來存在的變異給抹去。這一過程常常會造成一些結果看起來似乎太過理想，也就是假自信 (false confidence)，使得數據在進行模型分析之前就帶有人爲（非自然）篡改（或者修改，轉換之後）的痕跡。 55.1 多層數據實例：蝌蚪和青蛙數據 multilevel tadpoles data(&quot;reedfrogs&quot;) d &lt;- reedfrogs str(d) ## &#39;data.frame&#39;: 48 obs. of 5 variables: ## $ density : int 10 10 10 10 10 10 10 10 10 10 ... ## $ pred : Factor w/ 2 levels &quot;no&quot;,&quot;pred&quot;: 1 1 1 1 1 1 1 1 2 2 ... ## $ size : Factor w/ 2 levels &quot;big&quot;,&quot;small&quot;: 1 1 1 1 2 2 2 2 1 1 ... ## $ surv : int 9 10 7 10 9 9 10 9 4 9 ... ## $ propsurv: num 0.9 1 0.7 1 0.9 0.9 1 0.9 0.4 0.9 ... 現在我們只關心上述數據中生存下來的蝌蚪數量 surv，和開始時的蝌蚪數量 density。該數據包涵了很多的變化和不確定性，或者叫做方差 variance。這些變化和不確定性可能來自不同的實驗條件，或者未知的原因。所以，假設每一行數據中的10只蝌蚪，被放在了不同的水池裏，也就是說，上面的數據中我們有48個水池做重複的實驗。於是該數據就可以被理解爲是重複相似的實驗，但是每次的實驗又有一些微妙的不同。每一個水池，就是一個數據的層級 ‘cluster’。如果我們忽略這個層級的概念，我們可能就忽略掉了他們本身在實驗開始之時的基線生存狀況 (baseline survival) 本身可能存在的不確定性 (variation)。這個不確定性，或者叫基線生存狀況的方差可能掩蓋住一些重要的發現。如果我們允許每個水池擁有自己單獨的其實狀態，也就是函數的截距，但是假如僅僅使用啞變量的方法 dummy variable，那其實我們就掉進了進行性健忘症的陷阱裏。因爲雖然他們是不同的水池做的實驗，但是一個水池的結果其實是能提示或者告訴我們其他水池的實驗結果的一些信息的，而不是完全地相互獨立毫無關聯性。 所以我們需要的其實是一個同時能夠允許每個水池的蝌蚪生存擁有自己的起始狀態，也就是函數的截距，且同時考慮到他們之間是有關聯性的，也就是這些截距之間是有一定的方差的。這樣的模型就被叫做隨機截距模型 (varying intercepts models)，這樣的模型是最簡單的多層回歸模型。下面的模型用於預測每個不同的水池中實驗過後蝌蚪的生存狀況 (mortality) ： \\[ \\begin{aligned} S_i &amp; \\sim \\text{Binomial}(N_i, p_i) \\\\ \\text{logit}(p_i) &amp; = \\alpha_{\\text{TANK}[i]} &amp; [\\text{unique log-odds for each tank}] \\\\ \\alpha_j &amp; = \\text{Normal}(0, 1.5) &amp; \\text{for } j = 1, \\dots, 48 \\end{aligned} \\] 這個模型很容易可以編碼成爲 Stan 模型： # make the tank cluster variable d$tank &lt;- 1:nrow(d) dat &lt;- list( S = d$surv, N = d$density, tank = d$tank ) # approximate posterior m13.1 &lt;- ulam( alist( S ~ dbinom( N, p ), logit(p) &lt;- a[tank], a[tank] ~ dnorm(0, 1.5) ), data = dat, chains = 4, log_lik = TRUE ) saveRDS(m13.1, &quot;../Stanfits/m13_1.rds&quot;) m13.1 &lt;- readRDS(&quot;../Stanfits/m13_1.rds&quot;) precis(m13.1, depth = 2) ## mean sd 5.5% 94.5% n_eff Rhat4 ## a[1] 1.706135516 0.75126999 0.559612202 2.980799190 3565.4398 0.99914084 ## a[2] 2.418378688 0.89508779 1.085855358 3.917982001 4098.7241 0.99870974 ## a[3] 0.755285062 0.62854994 -0.229874740 1.808953868 5844.2221 0.99874415 ## a[4] 2.398939738 0.87583172 1.064463796 3.892148654 3893.4841 0.99826780 ## a[5] 1.711930366 0.78109476 0.538386909 3.059664189 4282.7151 1.00000591 ## a[6] 1.712400845 0.76663422 0.556389436 2.986639219 3697.2250 0.99865881 ## a[7] 2.433901051 0.96823924 0.983975047 4.068994913 3683.5712 0.99851080 ## a[8] 1.728234678 0.77691481 0.579123478 3.070141912 2552.7945 1.00061031 ## a[9] -0.378787854 0.63017246 -1.411607834 0.601533811 4502.5692 0.99857748 ## a[10] 1.704566280 0.74267187 0.563784136 2.922636900 4936.8884 0.99871181 ## a[11] 0.759081120 0.63171344 -0.223449189 1.861229403 4293.1364 0.99840630 ## a[12] 0.369263021 0.60895344 -0.575697499 1.317297190 5681.1496 0.99882110 ## a[13] 0.770336180 0.64974231 -0.215174796 1.833888814 4366.6278 0.99923073 ## a[14] -0.009729068 0.61875932 -0.994355905 1.010911262 5918.5699 0.99849235 ## a[15] 1.703282129 0.74387855 0.573729989 2.946188044 4247.8544 0.99910230 ## a[16] 1.743809558 0.80544535 0.559255295 3.079851444 4219.7553 0.99904420 ## a[17] 2.549011923 0.68607770 1.554237307 3.689000199 4117.3536 0.99855216 ## a[18] 2.150779207 0.61378539 1.244894345 3.194931728 4290.9635 0.99873434 ## a[19] 1.818262637 0.55673559 0.992956540 2.740192008 6254.5908 0.99845271 ## a[20] 3.099216840 0.79046813 1.922768458 4.458605238 3870.3141 0.99860113 ## a[21] 2.141388712 0.59123864 1.278037726 3.133666741 3778.8639 0.99947441 ## a[22] 2.143619964 0.63146412 1.192457415 3.182062745 3763.2670 0.99863539 ## a[23] 2.137536255 0.62219243 1.174864938 3.181079132 4368.0224 0.99870273 ## a[24] 1.536828664 0.52728459 0.761942359 2.375794268 4735.8741 0.99837462 ## a[25] -1.105415076 0.43496285 -1.851966059 -0.435036245 3482.7299 0.99877398 ## a[26] 0.076751268 0.40535395 -0.555377180 0.711271683 4550.4709 0.99868506 ## a[27] -1.540868852 0.48401432 -2.359101123 -0.802931346 3882.5694 0.99842876 ## a[28] -0.545748574 0.40591978 -1.193630669 0.101944128 4532.7825 0.99856686 ## a[29] 0.075142168 0.38799070 -0.520229947 0.696214974 4880.8001 0.99878543 ## a[30] 1.325013361 0.48797180 0.579469610 2.140616726 3983.1118 0.99869221 ## a[31] -0.726599283 0.41815857 -1.414086716 -0.081095374 4260.4117 0.99865729 ## a[32] -0.393374796 0.40388534 -1.026337857 0.233711720 4460.4798 1.00030775 ## a[33] 2.851106794 0.66962348 1.863101375 3.976619545 4075.9763 0.99975478 ## a[34] 2.439434481 0.53666179 1.636527087 3.330027234 3611.3375 0.99851844 ## a[35] 2.462536698 0.58911895 1.585811555 3.493084708 4159.2509 0.99855632 ## a[36] 1.894453091 0.47246927 1.166990383 2.700956176 3864.1837 0.99932504 ## a[37] 1.897154130 0.47606314 1.193316198 2.690424743 4514.2042 0.99864540 ## a[38] 3.371519718 0.80242385 2.209244462 4.757121346 3328.1092 0.99919367 ## a[39] 2.466813623 0.56569064 1.614435107 3.428984467 4161.5867 0.99940885 ## a[40] 2.164210136 0.52798452 1.379469542 3.097029995 2913.2789 0.99942866 ## a[41] -1.901610019 0.47229892 -2.724517479 -1.207876441 4606.9855 0.99941201 ## a[42] -0.631228672 0.33261100 -1.175636261 -0.103720359 4309.2499 0.99891339 ## a[43] -0.508448320 0.34917306 -1.088393845 0.045662208 4497.9745 0.99878071 ## a[44] -0.392124218 0.34118815 -0.948064494 0.143533849 4602.5032 0.99906926 ## a[45] 0.507571894 0.34208208 -0.037475944 1.061806146 4501.6383 0.99816571 ## a[46] -0.633508160 0.36474922 -1.228174857 -0.061322724 4888.1314 0.99845844 ## a[47] 1.912347263 0.48151725 1.209880492 2.741920346 3341.1668 0.99929986 ## a[48] -0.051961695 0.34246837 -0.612204797 0.498751869 6207.4457 0.99858292 你會看見模型的運算結果是告訴我們 48 個池塘本身的基線生存狀況，也就是有 48 個截距。但是 m13.1 並不是一個多層回歸模型，下面的模型中關鍵部分的加入才使得這個模型變得更加有意義： \\[ \\begin{aligned} S_i &amp; \\sim \\text{Binomial}(N_i, p_i) \\\\ \\text{logit}(p_i) &amp; = \\alpha_{\\text{TANK}[i]} \\\\ \\alpha_j &amp; \\sim \\text{Normal}(\\color{blue}{\\bar{\\alpha}, \\sigma}) &amp; [\\text{adaptive prior}] \\\\ \\color{blue}{\\bar{\\alpha}} &amp; \\color{blue}{\\sim \\text{Normal}(0, 1.5)} &amp; [\\text{prior for average tank}] \\\\ \\color{blue}{\\sigma} &amp; \\color{blue}{\\sim \\text{Exponential}(1)} &amp; [\\text{prior for standard deviation of tanks}] \\end{aligned} \\] 上述模型中值得注意的是，除了允許不同水池的基線生存狀況，也就是截距可以各不相同，我們還允許這些截距之間存在聯繫。也就是這些截距本身是服從正（常）態分佈的，該正（常）態分佈的均值是 \\(\\bar{\\alpha}\\)，標準差是 \\(\\sigma\\)。這個截距服從的正（常）態分佈的參數，也有自己的先驗概率分佈。我們把這樣的參數叫做超參數 hyperparameters，他們是參數的參數，他們的先驗概率分佈被叫做超先驗 hyperpriors。我們可以用下面的代碼來運行這個模型： m13.2 &lt;- ulam( alist(S ~ dbinom( N, p ), logit(p) &lt;- a[tank], a[tank] ~ dnorm(a_bar, sigma), a_bar ~ dnorm( 0, 1.5 ), sigma ~ dexp( 1 ) ), data = dat, chains = 4, log_lik = TRUE ) saveRDS(m13.2, &quot;../Stanfits/m13_2.rds&quot;) 先比較一下這兩個模型之間的模型信息差別： m13.2 &lt;- readRDS(&quot;../Stanfits/m13_2.rds&quot;) compare( m13.1, m13.2 ) ## WAIC SE dWAIC dSE pWAIC weight ## m13.2 198.87517 7.3372677 0.000000 NA 20.403646 0.9997639405 ## m13.1 215.57755 4.5643729 16.702381 4.1259847 26.092822 0.0002360595 從兩個模型之間的比較結果來看，首先，m13.2 只有 21 個有效的參數，比起實際的參數個數 50 個少了很多。這是因爲對這些截距增加了超參數的限制之後，他們受到了更多的約束，更加趨近於彼此。我們可以看看這個模型給出的截距分佈的超參數的事後概率分佈估計： precis(m13.2, depth = 2, pars = c(&quot;a_bar&quot;, &quot;sigma&quot;)) ## mean sd 5.5% 94.5% n_eff Rhat4 ## a_bar 1.3393115 0.26442441 0.9230349 1.7758856 3022.9740 0.99984557 ## sigma 1.6125652 0.20782693 1.3171320 1.9735443 1846.8192 1.00098472 這裡的截距分佈的超參數的事後估計其實給出了十分精確的估計，其均值在 1.34 左右，標準差是1.62，這說明了不同的水池之間的關係十分近似。也就是說，我們使用這個多層回歸模型，讓模型自己從數據中去學習並獲得截距和截距之間的關係。這比起一開始我們自己給 m13.1 設定的標準差 1.5 還要激進。於是這個多層回歸模型事實上給模型參數的估計增加了更多的限制。 為了加深我們對這個激進的超參數的理解，我們把這兩個模型 m13.1, m13.2 給出的估計結果繪製成圖形來觀察： # extract Stan Samples post &lt;- extract.samples(m13.2) # post &lt;- extract.samples(m13.1) # compute mean intercept for each tank d$propsurv.est &lt;- logistic( apply( post$a, 2, mean )) # display raw proportions surviving in each tank plot( d$propsurv, ylim = c(0, 1), pch = 16, xaxt = &#39;n&#39;, xlab = &#39;tank&#39;, ylab = &#39;proportion survival&#39;, col = rangi2, bty = &quot;n&quot;) axis(1, at = c(1, 16, 32, 48), labels = c(1, 16, 32, 48)) # overlay posterior means points( d$propsurv.est ) # mark posterior mean probability across tanks abline( h = mean(inv_logit(post$a_bar)), lty = 2) # draw vertical dividers between tank densities abline( v = 16.5, lwd = 0.5 ) abline( v = 32.5, lwd = 0.5 ) text( 8, 0, &#39;small tanks&#39;) text( 16 + 8, 0, &#39;medium tanks&#39;) text( 32 + 8, 0, &#39;large tanks&#39;) 圖 55.1: Empirical proportions of surviviors in each tadpolle tank, shown by the filled blue points, plotted with the 48 per-tank parameters from the multilevel model, shown by the black circles. The dashed line locates the average proportion of survivors across all tanks. The vertical lines divide tanks with different initial densities of tadpoles: small tanks (10 tadpoles), medium tanks (25), and large tanks (35). In every tank, the posterior mean from the multilevel model is closer to the dashed line than the empirical proportion is. This reflects the pooling of information across tanks, to help with inference. 圖 55.1 中，橫軸是水池的編號，從左往右依次是從 1 到 48 號水池；縱軸是水池中蝌蚪生存下來的比例。圖中藍色的點是原始數據點，也就是實際觀察值 propsurv。黑色的鏤空點則是模型估計的每個水池的截距。水平的橫虛線是估計的所有水池的蝌蚪存活概率的平均值 \\(\\alpha\\)。而圖中的縱向的實線是把水池按照實驗開始時的蝌蚪密度計算的不同類型的池子，從小，中，到大三種類型的池子，各16個。不難注意到我們能看見多層回歸模型給出的推測值都相對觀察值更靠近總體平均生存概率。看起來似乎是黑色鏤空的圓點都更加靠近數據分佈的中心，平均值附近。這種現象又被叫做縮水現象 shrinkage，這是由於增加了超參數之後的多層回歸模型的參數估計受到的限制性的調整 regularization。其次，我們也發現在圖左側，也就是起始蝌蚪密度較小的水池裏，多層回歸模型估計的生存概率值更加靠近總體平均值，也就是縮水得更加明顯，距離觀察數據比密度大的水池要遠。也就是說，在小的水池裏，我們更加容易發現模型估計值和觀察值之間的差別，但是在其實密度大的水池中，觀察值和模型估計值更加接近。最後，如果藍色的點離虛線的總體均值越遠，它和黑色點，多層回歸模型估計值之間的差別越大。 上述三種現象其實是在告訴我們一件很重要的事，也就是把信息綜合起來的話，每一個層級的參數估計都會受益得到提升和改善 (pooling information across clusters to improve estimates) 。這裏的綜合信息 pooling information 的意義是，每一個水池的數據，每一個層級的數據，都含有能提高和改善其他層級參數估計信息 each tank provides information that can be used to improve the estimates for all of the other tanks。這是因爲我們假設了每個水池的截距 log-odds 雖有變化但不獨立而是服從某個正（常）態分佈。有了這個分佈的假設，貝葉斯估計就能幫助我們共享信息給不同的數據層級。 那麼，模型估計的這些青蛙的總體生存概率的分佈是怎樣的呢？我們可以從它對應的模型事後概率分佈中獲得結果繪製成圖。我們先繪製事後概率分佈中前100個 \\(\\alpha, \\sigma\\) 組合的平均存活率的分佈： # show first 100 populations in the posterior plot( NULL, xlim = c(-3, 4), ylim = c(0, 0.35), xlab = &quot;log-odds survive&quot;, ylab = &quot;Density&quot;, bty = &quot;n&quot;) for( i in 1:100 ) curve( dnorm(x, post$a_bar[i], post$sigma[i]), add = TRUE, col = col.alpha(&quot;black&quot;, 0.2)) 圖 55.2: The inferred population of survival across tanks. 100 Gaussian distributions of the log-odds of survival, sampled from the posteriro of m13.2. 圖 55.2 告訴我們，均值 \\(\\alpha\\) 和它對應的標準差 \\(\\sigma\\) 都是有相當程度不確定性的 (uncertainty)。 # sample 8000 imaginary tanks from the posterior distribution sim_tanks &lt;- rnorm(80000, post$a_bar, post$sigma) # transform to probability and visualize dens( inv_logit(sim_tanks), lwd = 2, adj = 0.1, xlab = &quot;probability survive&quot;, bty = &quot;n&quot;) 圖 55.3: Survival probabilities for 8000 new simulated tanks, averaging over the posterior distribution in previous figure. 55.2 多層回歸的變化的效應和過度擬合/過低擬合之間的交易 varying effects and the underfitting/overfitting trade-off 使用多層回歸模型使得模型可以估計不同（截距或者斜率）的效應，其最大的好處是能夠給出更加準確的估計。其原理就是使用混合效應模型其實使得模型儘量避免了過度/過低擬合。如果建立模型是爲了預測未知池塘中蝌蚪存活概率的話，我們可以有三種策略： 完全合併策略，complete pooling。這方法其實是把總體的水池蝌蚪生存率這一數據看作是不變的 the population survival probability of ponds is invariant，也就是固定一個截距，適用所有的池塘。 完全不合併策略，no pooling。這方法類似 m13.1 模型的方案，無視水池和水池之間可能存在的相關性，把每個水池都看作的獨立互不影響的。也就是進行性失憶 模型。 部分合併策略，partial pooling。這方法其實是 m13.2 模型的多層回歸模型方案，通過允許水池之間有相關性，使模型自行學習應有的超參數。 很顯然，第一個方案其實很不切合實際，雖然把所有的數據都彙總到一個點上，但是指望用這唯一的一個估計結果來適用所有的水池的生存概率，認爲所有的水池都會產生相同的結果是不符合現實情況的，這一方案認爲水池和水池之間生存概率不會有差別，沒有變化和靈活性, all ponds are identical。完全合併策略造成的結果就是，樣本的平均值事實上過低擬合了數據的信息 (unterfits the data)。第二個方案則是另一個極端，認爲每一個水池都給出完全不同的結果，即使相同也是偶然，水池之間毫無關聯。圖 55.1 中的藍色實心點就是這樣的模型。用於估計每個點的位置的數據在第二個方案下都會變得很少，所以每一個估計都變得更加不精確。於是，完全不合併策略就是使得模型過度擬合數據 (overfits the data) 。第三個方案就是多層回歸模型增加的混合效應，它的部分合併策略其實是第一個和第二個方案的折衷辦法，使得模型的估計給出更加靈活的結果，也更適合擴展到預測未知數據，同時避免了過度/過低擬合。 爲了展示這個效果，我們可以用計算機模擬一些生存率的蝌蚪水池數據作爲已知的結果，用不同的模型來分析獲得其估計，從而直觀地理解這三種方案的不同思路。 55.2.1 用於產生模擬數據的模型 the model 第一步是設計我們希望產生數據的模型。我們可以直接使用 m13.2 的模型的主體部分： \\[ \\begin{aligned} S_i &amp; \\sim \\text{Binomial}(N_i, p_i) \\\\ \\text{logit}(p_i) &amp; = \\alpha_{\\text{POND}[i]} \\\\ \\alpha_j &amp; \\sim \\text{Normal}(\\bar{\\alpha}, \\sigma) \\\\ \\bar{\\alpha} &amp; \\sim \\text{Normal}(0, 1.5) \\\\ \\sigma &amp; \\sim \\text{Exponential}(1) \\end{aligned} \\] 為了能順利從這個模型中產生模擬數據，我們需要給模型中賦予真實值的參數有： \\(\\bar{\\alpha}\\) 是總體池塘蝌蚪存活概率的平均值的對數比值 average log-odds of survival in the entire population of ponds。 \\(\\sigma\\) 是總體池塘蝌蚪存活概率平均值的對數比值的標準差 the standard deviation of the distribution of log-odds of survival among ponds。 \\(\\alpha\\) 一系列水池的蝌蚪存過概率的對數比值的真實值，作為模型的變動截距 a vector of individual pond intercepts, one for each pond。 此外，我們還需要設定每個水池的蝌蚪起始樣本量 \\(N_i\\)，這些都設定完畢之後，就只剩下每個水池可能存活的蝌蚪數量了，這個可以使用二項分佈的隨機值來設定。 a_bar &lt;- 1.5 # mean log-odds of survival in the entire population sigma &lt;- 1.5 # standar deviation of the distribution of log-odds of survival among ponds nponds &lt;- 60 # altogether 60 ponds Ni &lt;- as.integer( rep(c(5, 10, 25, 35), each = 15 )) # 15 ponds with 5, 10, 25, and 35 tadpoles each 我們設定了60個水池，起始蝌蚪的數量分別是 5，10，25，35 的池子各有15個。另外 \\(\\bar{\\alpha}, \\sigma\\) 定義了我們設計下的總體存活率的對數比值 log-odds 的分佈特徵。接下來就是讓計算機生成符合這個分佈條件 \\(\\text{Normal}(\\bar{\\alpha}, \\sigma)\\) 的 60 個水池的存活率的對數比值作為各自的截距。 set.seed(5005) a_pond &lt;- rnorm( nponds, mean = a_bar, sd = sigma) 上面的代碼生成了60個符合設定的均值和標準差的數據，作為每個水池的蝌蚪存活率的對數比值。最後，把這些數據合併成為一個數據框： dsim &lt;- data.frame( pond = 1:nponds, Ni = Ni, true_a = a_pond) str(dsim) ## &#39;data.frame&#39;: 60 obs. of 3 variables: ## $ pond : int 1 2 3 4 5 6 7 8 9 10 ... ## $ Ni : int 5 5 5 5 5 5 5 5 5 5 ... ## $ true_a: num 0.567 1.99 -0.138 1.857 3.912 ... 生成的數據框 dsim 有三個變量，一個是水池編號，一個是水池起始蝌蚪數量，一個是真實的存活概率的對數比值 (log-odds)。 55.2.2 模擬存活概率結果 simulate survivors 根據我們設定的每個水池的”真實”存活概率的對數比值，我們不難計算每個水池的”真實”存活概率： \\[ p_i = \\frac{\\exp(\\alpha_i)}{1 +\\exp(\\alpha_i)} \\] 使用 logistic 函數可以方便的計算並且讓計算機模擬一系列該水池的蝌蚪存活數量： dsim$Si &lt;- rbinom( nponds, prob = logistic(dsim$true_a), size = dsim$Ni) str(dsim) ## &#39;data.frame&#39;: 60 obs. of 4 variables: ## $ pond : int 1 2 3 4 5 6 7 8 9 10 ... ## $ Ni : int 5 5 5 5 5 5 5 5 5 5 ... ## $ true_a: num 0.567 1.99 -0.138 1.857 3.912 ... ## $ Si : int 4 5 1 5 5 5 2 5 4 4 ... 55.2.3 計算完全不合併策略 no-pooling estimates 在這個模型設定下，最簡單快速的是計算完全不合併策略時的結果。這可以直接從前面計算機生成的實驗數據計算獲得。先計算每個水池中蝌蚪的存活概率： dsim$p_nopool &lt;- dsim$Si / dsim$Ni head(dsim) ## pond Ni true_a Si p_nopool ## 1 1 5 0.56673123 4 0.8 ## 2 2 5 1.99002317 5 1.0 ## 3 3 5 -0.13775688 1 0.2 ## 4 4 5 1.85676651 5 1.0 ## 5 5 5 3.91208800 5 1.0 ## 6 6 5 1.95414869 5 1.0 數據 dsim 的新增一列 p_nopool 就是每個水池實際觀察到的蝌蚪存活概率。這個計算結果等同於我們把每個水池當作一個啞變量互無關聯時給出的模型估計結果。 55.2.4 計算部分合併策略的結果 partial-pooling estimates 我們來使用 Stan 運行這個部分合併結果的模型 dat &lt;- list( Si = dsim$Si, Ni = dsim$Ni, pond = dsim$pond ) m13.30 &lt;- ulam( alist( Si ~ dbinom( Ni, p ), logit(p) &lt;- a_pond[pond], a_pond[pond] ~ dnorm( a_bar, sigma ), a_bar ~ dnorm( 0, 1.5 ), sigma ~ dexp( 1 ) ), data = dat, chains = 4 ) saveRDS(m13.30, &quot;../Stanfits/m13_30.rds&quot;) 上面的模型運行計算的就是最基礎版本的隨機截距模型。我們來看一下它給出的 \\(\\bar{\\alpha}, \\sigma\\) 的事後分佈情況，下面的結果包含了六十個水池的截距，會很長： m13.30 &lt;- readRDS(&quot;../Stanfits/m13_30.rds&quot;) precis( m13.30, depth = 2 ) ## mean sd 5.5% 94.5% n_eff Rhat4 ## a_pond[1] 1.650407110 0.96904063 0.1840157397 3.21610041 3602.5566 0.99872074 ## a_pond[2] 2.834338499 1.24148870 1.0007366114 4.92653420 2882.0704 0.99911023 ## a_pond[3] -0.643249556 0.91047753 -2.1226558797 0.73631508 2442.9210 1.00118607 ## a_pond[4] 2.879393705 1.23392475 1.0753994158 5.01899499 2140.7584 0.99862131 ## a_pond[5] 2.850206711 1.27463172 0.9832639699 4.99317825 1818.6398 1.00009094 ## a_pond[6] 2.875036377 1.27603932 1.0240878520 5.13249706 2580.0892 0.99906937 ## a_pond[7] 0.073569339 0.80574369 -1.2100708197 1.33815259 3043.3444 0.99860653 ## a_pond[8] 2.845285499 1.24419299 1.0925164731 5.04294899 3061.6630 0.99967991 ## a_pond[9] 1.640764609 1.04090309 0.0658312282 3.40013596 3786.2020 0.99898298 ## a_pond[10] 1.662719698 1.00690244 0.0942168850 3.33404818 2884.8516 0.99881739 ## a_pond[11] 2.854369003 1.27008868 0.9986433001 4.88275188 2595.0291 0.99981048 ## a_pond[12] 0.078809355 0.84263594 -1.2662538706 1.46245910 3379.5942 0.99913852 ## a_pond[13] 2.841399020 1.23604483 1.0306836717 4.98853447 2082.3706 1.00009111 ## a_pond[14] 2.885347058 1.24766958 1.1012827128 4.95147914 2010.1180 1.00160532 ## a_pond[15] 2.838645518 1.22543550 1.0330515180 4.94891601 2733.4150 1.00068080 ## a_pond[16] 1.575398583 0.75674601 0.4307555558 2.80348477 3558.0680 0.99881879 ## a_pond[17] -1.441357255 0.72675686 -2.6746649858 -0.36628831 2295.6003 0.99957747 ## a_pond[18] 1.069732355 0.65145174 0.0336161365 2.13106736 3718.5782 0.99905032 ## a_pond[19] -0.940599103 0.67353423 -2.0642510405 0.12758493 4180.4317 0.99851252 ## a_pond[20] 1.571571268 0.78323302 0.3953309826 2.85302461 3979.0358 0.99827203 ## a_pond[21] -0.142395459 0.62805421 -1.1595189249 0.85277506 4230.9275 0.99920164 ## a_pond[22] 2.259831678 0.93055697 0.9101710635 3.82472671 2625.5858 1.00019856 ## a_pond[23] 3.241016009 1.09565777 1.6854998943 5.17061513 2012.3850 0.99952697 ## a_pond[24] 0.606054685 0.63343113 -0.3899463101 1.61247305 5142.2846 0.99837767 ## a_pond[25] 3.279252138 1.15974972 1.6087975632 5.29849803 2262.1498 0.99906149 ## a_pond[26] 2.218857703 0.90489171 0.8620718729 3.79051487 2577.0982 1.00011192 ## a_pond[27] 1.032862125 0.71037078 -0.0514290807 2.22168735 2789.1514 0.99941969 ## a_pond[28] 2.247840392 0.89076760 0.9912766740 3.77271073 2158.9564 1.00095656 ## a_pond[29] 1.566335229 0.76329714 0.4490445116 2.88024205 2990.4098 0.99957137 ## a_pond[30] 1.043066174 0.71390861 -0.0550604298 2.24023090 4217.3874 1.00012562 ## a_pond[31] 2.460298686 0.67071150 1.4600395439 3.59187574 2605.1400 0.99919053 ## a_pond[32] 2.056988630 0.58082689 1.1738653532 3.03319837 3417.6131 0.99846202 ## a_pond[33] 1.719997357 0.52738590 0.9109309041 2.60832973 5587.4489 0.99851302 ## a_pond[34] 1.256999633 0.49178056 0.5168072533 2.03843119 3268.9943 0.99924019 ## a_pond[35] 0.674469822 0.42408930 0.0064163076 1.36286305 3414.4603 0.99919911 ## a_pond[36] 3.835241545 1.11351640 2.3118751443 5.80523282 1615.1664 1.00131024 ## a_pond[37] -1.001666846 0.45192860 -1.7457914860 -0.32383094 4309.0830 0.99947060 ## a_pond[38] -1.181771717 0.45084523 -1.9246579225 -0.47367188 3350.4592 0.99890768 ## a_pond[39] 0.677536497 0.44100771 -0.0185801594 1.39114768 3663.6990 0.99867024 ## a_pond[40] 3.860786217 1.12076950 2.2692482127 5.79948052 1667.3130 0.99854679 ## a_pond[41] 3.821365313 1.06524390 2.3305627294 5.67578489 1612.7689 1.00105065 ## a_pond[42] 2.462269046 0.69314717 1.4258509184 3.61833311 3186.8495 0.99857627 ## a_pond[43] -0.128696920 0.40218054 -0.7690797367 0.50362840 3589.9168 0.99902865 ## a_pond[44] 0.657109234 0.40292342 0.0236895055 1.29586999 3980.6607 0.99949000 ## a_pond[45] -1.186495921 0.46040340 -1.9314086555 -0.48683175 4384.5500 0.99898465 ## a_pond[46] 0.010147737 0.33077455 -0.5051117179 0.52945609 3516.9707 0.99883160 ## a_pond[47] 4.065550464 1.03658464 2.6073678621 5.79930831 1435.8616 1.00103136 ## a_pond[48] 2.079263555 0.50984644 1.3320833116 2.96382734 3284.9157 1.00002749 ## a_pond[49] 1.857357020 0.48234328 1.1198986835 2.64213548 3374.6112 0.99971553 ## a_pond[50] 2.787020417 0.68170929 1.7895947754 3.96695002 2601.4123 0.99863578 ## a_pond[51] 2.406458965 0.58533949 1.5477499282 3.35287318 3604.8986 0.99978555 ## a_pond[52] 0.357155211 0.33339316 -0.1620370866 0.88372445 4181.1260 0.99934405 ## a_pond[53] 2.106903052 0.50035530 1.3361915299 2.93145339 3158.0118 0.99925148 ## a_pond[54] 4.060400285 1.01624187 2.6345088811 5.87636234 1617.3083 1.00044270 ## a_pond[55] 1.130150172 0.38675503 0.5261511543 1.78230406 2975.5885 0.99861533 ## a_pond[56] 2.779640587 0.66678682 1.8432349230 3.83522304 2634.3398 0.99956022 ## a_pond[57] 0.713532057 0.35419243 0.1587824074 1.28652167 3868.9928 0.99843233 ## a_pond[58] 4.044509994 1.01564448 2.6091145979 5.84183473 2089.2851 0.99919628 ## a_pond[59] 1.648179868 0.44517530 0.9570171345 2.39649263 2929.4914 0.99939655 ## a_pond[60] 2.411574826 0.61119724 1.4920258316 3.43769741 2202.5257 0.99918695 ## a_bar 1.659983578 0.24579290 1.2777780128 2.05546494 1231.0486 1.00115140 ## sigma 1.671424362 0.23676423 1.3222544730 2.08017324 641.1696 1.00665994 很好，接下來就可以運算每個水池的模型預測存活概率，並且添加到我們預先設定好的實驗數據中去。爲了便於比較，先要計算真實的水池中蝌蚪的存活概率。最後一步，就是計算模型預測的存活率，和實際真實存活率之間的差距了，也叫模型估計誤差。然後把這兩個條件下的估計誤差進行繪製在同一張圖上直觀地比較： m13.30 &lt;- readRDS(&quot;../Stanfits/m13_30.rds&quot;) post &lt;- extract.samples( m13.30 ) dsim$p_partpool &lt;- apply( inv_logit(post$a_pond), 2, mean) dsim &lt;- dsim %&gt;% mutate(p_true = inv_logit(true_a), nopool_error = abs(p_nopool - p_true), partpool_erro = abs(p_partpool - p_true)) # or similarly you can use basic R command # nopool_erro &lt;- abs( dsim$p_nopool - dsim$p_true ) # partpool_erro &lt;- abs( dsim$p_partpool - dsim$p_true ) plot( 1:60, dsim$nopool_error, xlab = &quot;Pond&quot;, ylab = &quot;absolute error&quot;, bty = &quot;n&quot;, col = rangi2, pch = 16, ylim = c(0, 0.6)) points( 1:60, dsim$partpool_erro ) # mark posterior mean probability across tanks error_avg &lt;- dsim %&gt;% group_by(Ni) %&gt;% summarise(nopool_avg = mean(nopool_error), partpool_avg = mean(partpool_erro)) segments(1, error_avg$nopool_avg[1], 16, error_avg$nopool_avg[1], col = rangi2, lwd = 2) segments(1, error_avg$partpool_avg[1], 16, error_avg$partpool_avg[1], col = &quot;black&quot;, lwd = 2, lty = 2) segments(17, error_avg$nopool_avg[2], 32, error_avg$nopool_avg[2], col = rangi2, lwd = 2) segments(17, error_avg$partpool_avg[2], 32, error_avg$partpool_avg[2], col = &quot;black&quot;, lwd = 2, lty = 2) segments(33, error_avg$nopool_avg[3], 46, error_avg$nopool_avg[3], col = rangi2, lwd = 2) segments(33, error_avg$partpool_avg[3], 46, error_avg$partpool_avg[3], col = &quot;black&quot;, lwd = 2, lty = 2) segments(47, error_avg$nopool_avg[4], 60, error_avg$nopool_avg[4], col = rangi2, lwd = 2) segments(47, error_avg$partpool_avg[4], 60, error_avg$partpool_avg[4], col = &quot;black&quot;, lwd = 2, lty = 2) # draw vertical dividers between tank densities abline( v = 16.5, lwd = 0.5 ) abline( v = 32.5, lwd = 0.5 ) abline( v = 46.5, lwd = 0.5 ) text( 8, 0.6, &#39;Tiny ponds (5)&#39;) text( 16 + 8, 0.6, &#39;Small ponds (10)&#39;) text( 32 + 8, 0.6, &#39;Medium ponds (25)&#39;) text( 46 + 8, 0.6, &#39;Large ponds (35)&#39;) 圖 55.4: Error of no-pooling and partial pooling estimates, for the simulated tadpole ponds. The horizontal axis displays pond number. The vertical axis measures the absolute error in the predicted proportion of survivors, compared to the true value used in the simulation. The higher the point, the worse the estimate. No-pooling shown in blue. Partial pooling shown in black. The blue and dashed black lines show the average error for each kind of estimate, across each initial density of tadpoles (pond size). Smaller ponds porduce more error, but the partial pooling estimates are better on average, especially in smaller ponds. 從圖 55.4 中我們首先能夠直接一眼就觀察到的重要信息就是，這兩種方案，一個是完全不合併方案，一個是部分合併方案，無論是哪一種，其實對樣本量大的水池（圖中靠右側的水池）的存活概率估計誤差都比較低。這主要是因爲樣本量越多，估計得越精確。而樣本量較小的水池，途中靠左側的水池中，由於蝌蚪數量有限，即使是部分合併方案使用的隨機截距模型也給出比較大的誤差。其次，藍色線 (完全不合併方案) 幾乎總是在黑色虛線 (隨機截距模型，部分合併方案) 的上方，或者二者在大樣本時，會十分接近。當然隨機截距並不總是更加優越，只是在許許多多的計算中，從長遠來看 (in the long run) 隨機截距模型給出的結果誤差會平均地比較小。第三，藍色線和黑色虛線之間的差距在樣本量越小時，越明顯。也就是說，同樣因爲小樣本會造成結果有估計誤差，隨機截距模型給出的誤差要相對小一些。 那麼，从計算機的模擬計算結果中，我們學到了什麼？記得圖 55.1 中我們見過樣本量越小的池塘的模型結果更加靠近樣本均值的虛線，也就是縮水更加嚴重。但是從計算機模擬的結果來看的話，樣本量越小的池塘的存活概率估計結果是隨機截距模型能給出更加小的誤差估計。這兩個現象並不是偶然發生的。樣本量小的水池，傾向於發生模型的過度擬合 overfitting。由於樣本量較小的水池蘊含的信息量較少，所以它們的模型估計結果更加容易受到樣本均值的影響。也就是被其他樣本量更多的水池的數據的影響。當一個個的水池本身各自的樣本量都相對較多時，你可能會認爲隨機截距或者叫多層回歸模型能給出的估計結果優化就很有限。事實上即便是每個數據層級本身的樣本量也比較大的情況下，使用多層回歸模型來計算也沒有任何壞處。大樣本量的一些層級的估計結果有可能有助於改善較小樣本量層級的結果的預測以及參數的估計結果。所以，平均地看，其實始終應該使用隨機效應模型，也就是部分合併方案的策略，因爲它總是能提供較優的結果估計，而且能夠從數據本身學習獲得應該使用的超參數等用於調節 (regularization) 模型的估計和運行。 下面的代碼有助於我們重複使用已經運行過的模型，減少計算機重複運算的壓力。當你想要重複上述計算機模擬過程的時候，可能會希望讓模型運行其他的模擬數據，採集新的事後分佈樣本： a &lt;- 1.5 sigma &lt;- 1.5 nponds &lt;- 60 Ni &lt;- as.integer( rep(c(5, 10, 25, 35), each = 15 )) set.seed(12345) a_pond &lt;- rnorm( nponds, mean = a, sd = sigma) dsim &lt;- data.frame( pond = 1:nponds, Ni = Ni, true_a = a_pond) dsim$Si &lt;- rbinom( nponds, prob = inv_logit( dsim$true_a ), size = dsim$Ni ) dsim$p_nopool &lt;- dsim$Si / dsim$Ni newdat &lt;- list(Si = dsim$Si, Ni = dsim$Ni, pond = 1:nponds) m13.3new &lt;- stan( fit = m13.30@stanfit, data = newdat, chains = 4 ) saveRDS(m13.3new, &quot;../Stanfits/m13_3new.rds&quot;) 一旦你的計算機已經運行好了一個模型，m13.30，那麼假如只需要修改模型的樣本數據，模型結構不需要改變的話，使用上述的方法會大大提升新模型的運行速度，並且保存結果在 m13.3new 裏面。然後你只需要使用類似的方法重新繪製新數據給出的新結果，而不需要每次再重頭運行模型本身。需要重複利用的模型運算結果已經存儲在了每個 stan 模型中的 stanfit 部分。只要給它新的相同變量的數據框，它就能迅速給出新的事後概率分佈結果。這是非常有用的技巧。 m13.3new &lt;- readRDS(&quot;../Stanfits/m13_3new.rds&quot;) post &lt;- extract.samples( m13.3new ) dsim$p_partpool &lt;- apply( inv_logit(post$a_pond), 2, mean) dsim &lt;- dsim %&gt;% mutate(p_true = inv_logit(true_a), nopool_error = abs(p_nopool - p_true), partpool_erro = abs(p_partpool - p_true)) # or similarly you can use basic R command # nopool_erro &lt;- abs( dsim$p_nopool - dsim$p_true ) # partpool_erro &lt;- abs( dsim$p_partpool - dsim$p_true ) plot( 1:60, dsim$nopool_error, xlab = &quot;Pond&quot;, ylab = &quot;absolute error&quot;, bty = &quot;n&quot;, col = rangi2, pch = 16, ylim = c(0, 0.6)) points( 1:60, dsim$partpool_erro ) # mark posterior mean probability across tanks error_avg &lt;- dsim %&gt;% group_by(Ni) %&gt;% summarise(nopool_avg = mean(nopool_error), partpool_avg = mean(partpool_erro)) segments(1, error_avg$nopool_avg[1], 16, error_avg$nopool_avg[1], col = rangi2, lwd = 2) segments(1, error_avg$partpool_avg[1], 16, error_avg$partpool_avg[1], col = &quot;black&quot;, lwd = 2, lty = 2) segments(17, error_avg$nopool_avg[2], 32, error_avg$nopool_avg[2], col = rangi2, lwd = 2) segments(17, error_avg$partpool_avg[2], 32, error_avg$partpool_avg[2], col = &quot;black&quot;, lwd = 2, lty = 2) segments(33, error_avg$nopool_avg[3], 46, error_avg$nopool_avg[3], col = rangi2, lwd = 2) segments(33, error_avg$partpool_avg[3], 46, error_avg$partpool_avg[3], col = &quot;black&quot;, lwd = 2, lty = 2) segments(47, error_avg$nopool_avg[4], 60, error_avg$nopool_avg[4], col = rangi2, lwd = 2) segments(47, error_avg$partpool_avg[4], 60, error_avg$partpool_avg[4], col = &quot;black&quot;, lwd = 2, lty = 2) # draw vertical dividers between tank densities abline( v = 16.5, lwd = 0.5 ) abline( v = 32.5, lwd = 0.5 ) abline( v = 46.5, lwd = 0.5 ) text( 8, 0.6, &#39;Tiny ponds (5)&#39;) text( 16 + 8, 0.6, &#39;Small ponds (10)&#39;) text( 32 + 8, 0.6, &#39;Medium ponds (25)&#39;) text( 46 + 8, 0.6, &#39;Large ponds (35)&#39;) 圖 55.5: New data was fed to m13.3 model and generate new posterior estimations. 55.3 使用多於一個類別作爲多層回歸的隨機變量 more than one type of cluster 我們當然可以在同一個模型中加入更多的 \\((&gt;1)\\) 分層變量。例如我們在 Chapter 53.1.1 看到的黑猩猩社會學數據 data(chimpanzees)。 data(&quot;chimpanzees&quot;) d &lt;- chimpanzees str(d) ## &#39;data.frame&#39;: 504 obs. of 8 variables: ## $ actor : int 1 1 1 1 1 1 1 1 1 1 ... ## $ recipient : int NA NA NA NA NA NA NA NA NA NA ... ## $ condition : int 0 0 0 0 0 0 0 0 0 0 ... ## $ block : int 1 1 1 1 1 1 2 2 2 2 ... ## $ trial : int 2 4 6 8 10 12 14 16 18 20 ... ## $ prosoc_left : int 0 0 1 0 1 1 1 1 0 0 ... ## $ chose_prosoc: int 1 0 0 1 1 1 0 0 1 1 ... ## $ pulled_left : int 0 1 0 0 1 1 0 0 0 0 ... 這個數據裏，pulled_left 是從屬於每一頭黑猩猩個體的 (within a cluster of pulls belonging to an individual chimpanzee)。同時呢，這些拉動左側槓桿的行爲其實又是從屬於一個個實驗設計的 block 下的。這些 block 實際標記的是同一天進行的實驗。於是這裏出現了每個觀察數據的結果變量 pulled_left 既從屬於實驗對象 – 黑猩猩個體 (1 to 7)，也從屬於實驗 block (1 to 6) 的現象。所以給黑猩猩個體和實驗 block 同時設置隨機截距也是沒有問題的。這裏我們利用這個特殊的數據來嘗試設計並運行含有兩個隨機截距結構的模型。這樣我們可以使用數據本身蘊含的信息充分學習應有的超參數用於我們已知的部分合併策略 partial pooling，從而提升各個參數的估計結果和效率，並且同時獲得不同的黑猩猩之間的方差，和不同的實驗 block 之間的方差。 55.3.1 黑猩猩數據的多層回歸模型 multilevel chimpanzees 我們可以直接利用 Chapter 53.1.1 一開始設定好的模型，增加 block 的隨機截距： \\[ \\begin{aligned} L_i &amp; \\sim \\text{Binomial}(1, p_i) \\\\ \\text{logit}(p_i) &amp; = \\alpha_{\\text{ACTOR}[i]} + \\color{green}{\\gamma_{\\text{BLOCK}[i]}} + \\beta_{\\text{TREATMENT}[i]}\\\\ \\beta_j &amp; \\sim \\text{Normal}(0, 0.5) \\;\\;\\;\\; \\text{for } j = 1,\\dots, 4\\\\ \\alpha_j &amp; \\sim \\text{Normal}(\\bar{\\alpha}, \\sigma_\\alpha) \\;\\;\\;\\; \\text{for } j = 1, \\dots, 7 \\\\ \\color{green}{\\gamma_j } &amp;\\; \\color{green}{\\sim \\text{Normal}(0, \\sigma_\\gamma)\\;\\;\\;\\;\\; \\text{for } j = 1, \\dots, 6} \\\\ \\bar{\\alpha} &amp; \\sim \\text{Normal}(0, 1.5) \\\\ \\sigma_\\alpha &amp; \\sim \\text{Exponential} (1) \\\\ \\color{green}{\\sigma_\\gamma} &amp; \\;\\color{green}{ \\sim \\text{Exponential}(1)} \\end{aligned} \\] 從模型結構上，我們給不同的分層變量設置了自己的參數向量，對於每隻黑猩猩 actor，我們設定的參數向量是 \\(\\alpha\\)，它有7個元素，長度是 7，因爲一共有七隻黑猩猩；實驗的 block 有 6 個，所以它的參數向量長度是 6。這兩個分層變量需要有自己的方差（標準差）參數，也就是 \\(\\sigma_\\alpha, \\sigma_\\gamma\\)。要注意的一點是只能給一個總體平均值 \\(\\bar{\\alpha}\\) 給兩個隨機截距。下面的代碼就可以運行上述模型： d &lt;- d %&gt;% mutate(treatment = 1 + prosoc_left + 2*condition) table(d$treatment) ## ## 1 2 3 4 ## 126 126 126 126 dat_list &lt;- list( pulled_left = d$pulled_left, actor = d$actor, block_id = d$block, treatment = as.integer(d$treatment) ) set.seed(13) m13.4 &lt;- ulam( alist( pulled_left ~ dbinom( 1, p ) , logit(p) &lt;- a[actor] + g[block_id] + b[treatment], b[treatment] ~ dnorm( 0, 0.5 ), ## adaptive priors a[actor] ~ dnorm( a_bar, sigma_a ), g[block_id] ~ dnorm( 0, sigma_g ), ## hyper-priors a_bar ~ dnorm( 0, 1.5 ), sigma_a ~ dexp(1), sigma_g ~ dexp(1) ), data = dat_list, chains = 4, cores = 4, log_lik = TRUE ) saveRDS(m13.4, &quot;../Stanfits/m13_4.rds&quot;) m13.4 &lt;- readRDS(&quot;../Stanfits/m13_4.rds&quot;) precis(m13.4, depth = 2) ## mean sd 5.5% 94.5% n_eff Rhat4 ## b[1] -0.127619719 0.30371293 -0.612525116 0.351831861 403.94596 1.0109754 ## b[2] 0.408238854 0.30232189 -0.053260952 0.901320472 358.18837 1.0087428 ## b[3] -0.472686499 0.29977648 -0.933074984 0.020725297 325.50478 1.0134452 ## b[4] 0.287140550 0.30400142 -0.196915752 0.783449534 314.64426 1.0108916 ## a[1] -0.370040842 0.38111969 -0.956288690 0.250165297 359.95580 1.0120710 ## a[2] 4.722208260 1.32508814 3.099312312 6.970585847 441.65568 1.0040650 ## a[3] -0.671017597 0.38087108 -1.286621692 -0.060970107 393.42474 1.0081857 ## a[4] -0.676761827 0.37681820 -1.281970759 -0.079834071 379.66040 1.0108697 ## a[5] -0.362885676 0.37315672 -0.958119173 0.248182788 388.40275 1.0096311 ## a[6] 0.572373093 0.37008050 -0.019418355 1.173132021 413.40776 1.0063314 ## a[7] 2.109826748 0.45840001 1.380573715 2.851828350 468.89658 1.0065407 ## g[1] -0.156800879 0.22875942 -0.566965710 0.094427404 321.47070 1.0083836 ## g[2] 0.038277620 0.19474280 -0.222321524 0.363343586 947.73530 1.0013975 ## g[3] 0.055900123 0.19581427 -0.188554858 0.364005505 764.31955 1.0000968 ## g[4] 0.011329983 0.17640463 -0.245645460 0.291591789 900.16676 1.0016050 ## g[5] -0.033451700 0.19154418 -0.343860156 0.234539865 821.95378 1.0082556 ## g[6] 0.110218541 0.20252666 -0.129571122 0.438377440 760.17843 1.0023356 ## a_bar 0.633025847 0.73797175 -0.516031871 1.785298810 700.52766 1.0041607 ## sigma_a 2.032605929 0.64825884 1.220010000 3.139888818 570.05539 1.0006796 ## sigma_g 0.209456474 0.17425778 0.032948405 0.516423626 252.48113 1.0167476 首先，我們從 n_eff 可以看出各個參數的有效樣本量差別其實較大。這樣的現象在結構複雜的模型進行事後樣本採樣的過程中其實很常見。這可能會有許多不同的原因，其中之一是模型中可能有一個或者幾個在樣本採集時花了較多的時間在某個邊界值附近不停地採集樣本。這裏很顯然就是 sigma_g，它花了很多時間在它的起始值 0 附近不停地採集樣本，它的 Rhat 值也顯然大於 1。這些都是採樣效率低下的信號。 precis_plot( precis(m13.4, depth = 2) ) 圖 55.6: Posterior means and 89% compatibility intervals for m13.4. The greater variation across actors than blocks can be seen immediately in the a and g distributions 其次，觀察 sigma_a 和 sigma_g 會很容易就發現不同黑猩猩之間的變化顯然比不同天進行實驗的變化要顯著的多。這一現象可以用圖 55.7 展示得更加清楚。 post &lt;- extract.samples( m13.4 ) rethinking::dens( post$sigma_a , xlim = c(0, 4), ylim = c(0, 3.8), col = rangi2, bty = &quot;n&quot;, lwd = 2, xlab = &quot;standard deviation&quot;, ylab = &quot;Density&quot;) rethinking::dens( post$sigma_g , add = TRUE, lwd = 2) text( 0.8, 02.5, &#39;block&#39;) text( 3, 0.5, &#39;actor&#39;, col = rangi2) 圖 55.7: Posterior distributions of the standard deviations of varying intercepts by actor (blue), and block (black). 這也就是說增加不同實驗 block 的隨機截距並沒有讓模型增加的過度擬合的風險。我們來比較一下只有一個黑猩猩隨機截距時的模型和 m13.4 之間的模型信息差別： set.seed(14) m13.5 &lt;- ulam( alist( pulled_left ~ dbinom( 1, p ), logit(p) &lt;- a[actor] + b[treatment] , b[treatment] ~ dnorm( 0, 0.5 ), a[actor] ~ dnorm( a_bar, sigma_a ), a_bar ~ dnorm( 0, 1.5 ), sigma_a ~ dexp(1) ), data = dat_list, chains = 4, cores = 4, log_lik = TRUE ) saveRDS(m13.5, &quot;../Stanfits/m13_5.rds&quot;) m13.5 &lt;- readRDS(&quot;../Stanfits/m13_5.rds&quot;) compare(m13.4, m13.5) ## WAIC SE dWAIC dSE pWAIC weight ## m13.5 531.37616 19.126297 0.00000000 NA 8.5921361 0.60655949 ## m13.4 532.24191 19.421569 0.86574585 1.6294066 10.6837879 0.39344051 從 m13.4 和 m13.5 兩個模型之間的比較結果來看，即便 m13.4 中多增加了 7 個未知參數，但是 pWAIC 的比較，也就是實際有效參數個數之間的差只有 2。這主要是因爲 block 的事後分佈的方差其實十分接近 0，所以表示這個 block 部分的隨機截距部分增加的參數的實際結果都接近 0。我們的多層回歸模型雖然可以做到增加實驗 block 的隨機截距，但是增加這個隨機截距對模型並沒有顯著的改善，可以說沒有太多幫助。 55.4 分散轉換與非中心型先驗概率 divergent transition and non-centered priors 使用並運行多層回歸模型時，Stan 經常可能送給你一個莫名其妙的警告，類似： There were 15 divergent transitions after warmup. 具體原因可能有很多，有主要兩種方式來克服這個警告。第一種是使用更多的 burn-in 或者叫做 warm-up，並且調整 Stan 裏的設置採樣跳躍幅度的變量 adapt_delta，它默認是 0.8，把它改成0.9以上（只能是小於1的數值）的數字之後跳躍採集樣本的幅度會縮小一些，從而改善事後樣本採集的代表性，一定程度上可以避免看見上述警告。但是有些多層回歸模型不論你怎麼調整這個跳躍幅度，增加採樣的 burn-in 過程，它始終都無法給出合適的事後樣本分佈。這時候需要使用的技巧是重新改寫你的模型。很多統計學模型你可以轉換思路用別的方式來表達在數學上涵義相同的模型。這個方法又被叫做再參數化 (reparameterize)。 下面是兩個簡單的實例。 55.4.1 魔鬼的漏斗 the devil’s funnel 我們不需要用複雜的模型就能體驗到 Stan 給出的分散轉換 divergent transition 警告。假如有兩個簡單的變量 \\(v, x\\) 他們之間的關係是： \\[ \\begin{aligned} v &amp; \\sim \\text{Normal}(0, 3) \\\\ x &amp; \\sim \\text{Normal}(0, \\exp(v)) \\end{aligned} \\] 沒有特別的數據，只有這樣兩個互相有聯繫的聯合分佈需要我們嘗試去採集樣本。這是典型的多層回歸結構模型，因爲變量 \\(x\\) 的方差由另一個變量 \\(v\\) 來決定。這個模型的運行程序如下： m13.7 &lt;- ulam( alist( v ~ normal(0, 3), x ~ normal(0, exp(v)) ), data = list(N = 1), chains = 4 ) saveRDS(m13.7, &quot;../Stanfits/m13_7.rds&quot;) 你會很顯然看見一連串的警告，叫你去看這個看那個求助啥的： There were 78 divergent transitions after warmup. See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup to find out why this is a problem and how to eliminate them.There were 2 transitions after warmup that exceeded the maximum treedepth. Increase max_treedepth above 10. See http://mc-stan.org/misc/warnings.html#maximum-treedepth-exceededThere were 2 chains where the estimated Bayesian Fraction of Missing Information was low. See http://mc-stan.org/misc/warnings.html#bfmi-lowExamine the pairs() plot to diagnose sampling problems The largest R-hat is 1.15, indicating chains have not mixed. Running the chains for more iterations may help. See http://mc-stan.org/misc/warnings.html#r-hatBulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. Running the chains for more iterations may help. See http://mc-stan.org/misc/warnings.html#bulk-essTail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. Running the chains for more iterations may help. See http://mc-stan.org/misc/warnings.html#tail-ess 這個只有兩個參數需要估計的模型運行給出的事後概率分佈也十分地糟糕，上面的警告中給出了相當多的分散轉換 (divergent transitions) ，下面的模型運行結果總結也給出了特別差勁的 n_eff, Rhat： m13.7 &lt;- readRDS(&quot;../Stanfits/m13_7.rds&quot;) precis(m13.7) ## mean sd 5.5% 94.5% n_eff Rhat4 ## v 1.7154855 2.3068647 -1.4054807 5.9914017 17.287243 1.1557813 ## x -41.8446286 311.2534143 -271.8156635 47.4611106 92.111681 1.0141386 看一下它可憐的採樣軌跡圖 trace plot ： traceplot_ulam(m13.7) 圖 55.8: traceplot(m13.7) 我們可以簡單地通過修改模型的構建模式來克服這個問題。因爲變量 \\(x\\) 的方差取決於 \\(v\\)： \\[ x \\sim \\text{Normal}(0, \\exp(v)) \\] 變量 \\(v\\) 決定了 \\(x\\) 的方差大小，上面的這種模型結構被叫做參數中心化 (centered parameterization)，其涵義就是一個參數的分佈由另一個參數或者多個參數來決定。參數中心化之外的另一種選擇是參數非中心化 (non-centered parameterization)。這個非中心化就是把參數之間的依賴關係保留，但是在寫成模型的時候儘量避免在指定分佈的那行中加入兩個參數。例如可以把 m13.7 的表達式改寫成： \\[ \\begin{aligned} v &amp; \\sim \\text{Normal}(0, 3) \\\\ z &amp; \\sim \\text{Normal}(0, 1) \\\\ x &amp; = z \\exp(v) \\end{aligned} \\] 很多人可能一開始不理解爲什麼要這樣寫。但是仔細想想應該不難理解，這其實是我們平時在把觀察值標準化的一個逆向過程。我們在把某個變量標準化的過程是怎樣的？通常是把它減去自己的平均值，然後除以自己的標準差。新產生的變量就是一個均值爲0，標準差是1的標準正（常）態分佈。也就是說，上面的表達式裏，我們通過 \\(z\\)，一個標準正（常）態分佈變量，把 \\(x\\) 和 \\(v\\) 之間的關係串聯起來。\\(x\\) 本身的均值是零，它除以自己的標準差 \\(\\frac{x}{\\exp(v)}\\) 就成爲了一個標準正（常）態的變量 \\(z\\)。經過這一番等價轉換之後模型變得可以順利在 Stan 裏被運行和採樣了。 m13.7nc &lt;- ulam( alist( v ~ normal(0, 3), z ~ normal(0, 1), gq&gt; real[1]: x &lt;&lt;- z*exp(v) ), data = list(N = 1), chains = 4 ) saveRDS(m13.7nc, &quot;../Stanfits/m13_7nc.rds&quot;) 整個世界恢復了安靜。你看模型運行的結果也是正常的了： m13.7nc &lt;- readRDS(&quot;../Stanfits/m13_7nc.rds&quot;) precis(m13.7nc) ## mean sd 5.5% 94.5% n_eff Rhat4 ## v -0.0287545661 2.95017093 -4.6421334 4.6942797 1267.2926 1.0028912 ## z -0.0093817719 0.97405443 -1.5831453 1.4929941 1459.2957 1.0004412 ## x 2.5224882198 197.04808870 -22.7731384 20.7557186 1787.5479 1.0006452 traceplot_ulam(m13.7nc) 圖 55.9: traceplot(m13.7nc) 如果我們把此時採樣成功的 \\(x\\) 和 \\(v\\) 之間繪製散點圖，你就會直觀的看見這個像魔鬼一樣的漏斗的真實形狀： dat.sam &lt;- extract.samples(m13.7nc) plot(dat.sam$x, dat.sam$v, bty = &quot;n&quot;, xlab = &quot;x&quot;, ylab = &quot;v&quot;) 圖 55.10: The devil’s funnel. 我們成功地對這樣的近乎畸形的變量實施了轉換數據之後的事後樣本採集。 55.4.2 參數非中心化的黑猩猩數據 接下來我們來試圖解決黑猩猩數據中使用多層回歸模型時出現的分散轉移 divergent transition 問題。當時我們的 m13.4 試圖給 block 增加隨機效應，當時在設定參數的先驗概率分佈時，設定了兩個參數在相同的行裏，他們也是導致模型運行報警的原因。現在我們可以來試着解決它。 \\[ \\begin{aligned} L_i &amp; \\sim \\text{Binomial}(1, p_i) \\\\ \\text{logit}(p_i) &amp; = \\alpha_{\\text{ACTOR}[i]} + \\color{green}{\\gamma_{\\text{BLOCK}[i]}} + \\beta_{\\text{TREATMENT}[i]}\\\\ \\beta_j &amp; \\sim \\text{Normal}(0, 0.5) \\;\\;\\;\\; \\text{for } j = 1,\\dots, 4\\\\ \\alpha_j &amp; \\sim \\text{Normal}(\\bar{\\alpha}, \\sigma_\\alpha) \\;\\;\\;\\; \\text{for } j = 1, \\dots, 7 \\\\ \\color{green}{\\gamma_j } &amp;\\; \\color{green}{\\sim \\text{Normal}(0, \\sigma_\\gamma)\\;\\;\\;\\;\\; \\text{for } j = 1, \\dots, 6} \\\\ \\bar{\\alpha} &amp; \\sim \\text{Normal}(0, 1.5) \\\\ \\sigma_\\alpha &amp; \\sim \\text{Exponential} (1) \\\\ \\color{green}{\\sigma_\\gamma} &amp; \\;\\color{green}{ \\sim \\text{Exponential}(1)} \\end{aligned} \\] 在對模型進行重新參數化之前，我們可以先試着在 Stan 內部嘗試調整 adapt_delta ，它原本默認的大小是 0.95： set.seed(2020) m13.4b &lt;- ulam(m13.4, chains = 4, cores = 4, control = list(adapt_delta = 0.99)) saveRDS(m13.4b, &quot;../Stanfits/m13_4b.rds&quot;) m13.4b &lt;- readRDS(&quot;../Stanfits/m13_4b.rds&quot;) divergent(m13.4b) ## [1] 5 可見修改這個 adapt_delta 也沒有辦法提升太多，它依然在報錯。當然偶爾也能真的解決問題，實在是在看你的運氣。而且很多時候，即使它不再通過電腦系統警告，它實際採集的事後樣本也是十分低效的。你可以觀察 precis(m13.4b) 給出的 n_eff，也就是有效樣本量其實很多都還是小於500的。實際使用4条獨立採集鏈每條500個獨立樣本的總樣本量應該在2000左右。 precis(m13.4b, depth = 2) ## mean sd 5.5% 94.5% n_eff Rhat4 ## b[1] -0.1572102900 0.30678784 -0.639271495 0.343564769 402.50898 1.0133566 ## b[2] 0.3760131051 0.29844899 -0.097009535 0.852948659 438.79219 1.0067294 ## b[3] -0.4949120780 0.30808988 -1.001918025 -0.017546887 418.26237 1.0100785 ## b[4] 0.2581843386 0.30676503 -0.246029052 0.754586625 414.13612 1.0107870 ## a[1] -0.3475363401 0.36432862 -0.926144369 0.200724744 437.14385 1.0091803 ## a[2] 4.5946727777 1.21993398 3.006558784 6.800638368 619.43260 1.0103146 ## a[3] -0.6335415787 0.36505148 -1.198982995 -0.042148804 389.82795 1.0122092 ## a[4] -0.6393672456 0.36432523 -1.227955826 -0.078705404 464.07412 1.0089550 ## a[5] -0.3338642974 0.37663905 -0.946543034 0.275166346 473.68551 1.0118031 ## a[6] 0.5991703820 0.37498622 0.026426968 1.186117279 457.28046 1.0091865 ## a[7] 2.1471699790 0.45691772 1.450735749 2.914264702 533.10034 1.0133078 ## g[1] -0.1428730829 0.20044449 -0.525017505 0.070405136 471.73005 1.0111776 ## g[2] 0.0387465222 0.15132335 -0.168327269 0.306505379 682.87717 1.0038622 ## g[3] 0.0505496597 0.15814008 -0.155178555 0.328932444 767.76580 1.0058225 ## g[4] 0.0089953387 0.15486352 -0.230211915 0.257745757 1082.25766 1.0003697 ## g[5] -0.0225651857 0.16089717 -0.292705183 0.227528171 1291.59183 1.0018525 ## g[6] 0.0996398014 0.18231717 -0.116919531 0.447152911 506.41514 1.0121506 ## a_bar 0.5884998301 0.74455413 -0.641517611 1.727670676 572.43485 1.0061693 ## sigma_a 1.9687830785 0.63396246 1.175349730 3.176123372 897.43947 1.0017410 ## sigma_g 0.1856985870 0.16517592 0.012759445 0.499172450 233.36486 1.0295059 如果通過修改參數的形式使之去中心化，則能夠大大改善模型的運行。這個模型裏需要修改參數化的主要是這兩行： \\[ \\begin{aligned} \\alpha_j &amp; \\sim \\text{Normal}(\\bar\\alpha, \\sigma_\\alpha) &amp; \\text{[intercepts for actors]}\\\\ \\gamma_j &amp; \\sim \\text{Normal}(0, \\sigma_\\gamma)&amp; \\text{[intercepts for blocks]} \\end{aligned} \\] 這裏面其實有三個“中心化”的參數：\\(\\bar\\alpha, \\sigma_\\alpha, \\sigma_\\gamma\\)。使用類似 m13.7nc 的方法，我們需要爲他們設定標準化的替代參數： \\[ \\begin{aligned} L_i &amp; \\sim \\text{Binomial}(1, p_i) \\\\ \\text{logit}(p_i) &amp; = \\color{lightblue}{\\underbrace{\\bar\\alpha + z_{\\text{ACTOR[i]}}\\sigma_\\alpha}_{\\alpha_\\text{ACTOR[i]}}} + \\color{lightblue}{\\underbrace{x_{\\text{BLOCK}[i]}\\sigma_\\gamma}_{\\gamma_\\text{BLOCK[i]}}} + \\beta_{\\text{TREATMENT}[i]} \\\\ \\beta_j &amp; \\sim \\text{Normal}(0, 0.5), \\text{ for } j = 1,\\dots,4 \\\\ \\color{lightblue}{z_j} &amp; \\color{lightblue}{\\; \\sim \\text{Normal}(0,1)} &amp; \\text{[Standardized actor intercepts]} \\\\ \\color{lightblue}{x_j} &amp; \\color{lightblue}{\\; \\sim \\text{Normal}(0,1)} &amp; \\text{[Standardized block intercepts]} \\\\ \\bar{\\alpha} &amp; \\sim \\text{Normal}(0, 1.5) \\\\ \\sigma_\\alpha &amp; \\sim \\text{Exponential}(1) \\\\ \\sigma_\\gamma &amp; \\sim \\text{Exponential}(1) \\end{aligned} \\] 不難發現經過修改厚的模型中向量 \\(z\\) 提供了標準化的 actor 隨機截距，\\(x\\) 提供了標準化的 block 隨機截距。每頭大猩猩 actor 的隨機截距實際被定義爲： \\[ \\alpha_j = \\bar\\alpha + z_j \\sigma_\\alpha \\] 每個實驗區塊 block 的隨機截距被定義爲： \\[ \\gamma_j = x_j\\sigma_\\gamma \\] 現在我們來運行這個被重新改寫過的 m13.4 模型： set.seed(13) m13.4nc &lt;- ulam( alist( pulled_left ~ dbinom(1, p), logit(p) &lt;- a_bar + z[actor]*sigma_a + # actor intercepts x[block_id]*sigma_g + # block intercepts b[treatment] , b[treatment] ~ dnorm( 0, 0.5 ), z[actor] ~ dnorm( 0, 1 ), x[block_id] ~ dnorm( 0, 1 ), a_bar ~ dnorm( 0, 1.5 ), sigma_a ~ dexp(1), sigma_g ~ dexp(1), gq&gt; vector[actor]: a &lt;&lt;- a_bar + z*sigma_a, gq&gt; vector[block_id]: g&lt;&lt;- x*sigma_g ), data = dat_list, chains = 4, cores = 4 ) saveRDS(m13.4nc, &quot;../Stanfits/m13_4nc.rds&quot;) m13.4nc 的 n_eff 顯然比 m13.4 改善很多，而且也沒有報錯： m13.4nc &lt;- readRDS(&quot;../Stanfits/m13_4nc.rds&quot;) precis(m13.4nc, depth = 2) ## mean sd 5.5% 94.5% n_eff Rhat4 ## b[1] -0.1373449475 0.30100329 -0.6152752117 0.3434728833 1109.20149 1.00595881 ## b[2] 0.3888674543 0.31027407 -0.0889388119 0.8914549736 1126.93533 1.00365251 ## b[3] -0.4870408411 0.30935145 -0.9839392550 0.0070806699 1149.30896 1.00403385 ## b[4] 0.2675311406 0.29608590 -0.2053236335 0.7265043819 1139.59722 1.00422956 ## z[1] -0.5139834523 0.39675770 -1.1678480395 0.0977745452 570.20117 1.01007561 ## z[2] 2.1279913179 0.64805501 1.1422861675 3.2224402595 834.76934 1.00325956 ## z[3] -0.6837229179 0.41584942 -1.3577540963 -0.0245178170 569.57612 1.00789383 ## z[4] -0.6869211727 0.40944901 -1.3445954812 -0.0236560772 568.85572 1.00689660 ## z[5] -0.5172173982 0.39191673 -1.1403129550 0.1034563609 590.52189 1.00843504 ## z[6] -0.0016439012 0.36846295 -0.5776370019 0.5809683677 556.94923 1.00899136 ## z[7] 0.8286856465 0.45469306 0.1351884604 1.5921906220 577.79040 1.00723877 ## x[1] -0.6899484779 0.92017834 -2.1405682214 0.7927252571 1879.62650 1.00020587 ## x[2] 0.1683882817 0.82967260 -1.2074554330 1.4459472568 1988.35621 0.99902014 ## x[3] 0.1883825661 0.88729551 -1.3445548516 1.5454719722 1599.57387 0.99934747 ## x[4] 0.0736859911 0.87573225 -1.3284010857 1.5004526253 1872.59855 0.99969896 ## x[5] -0.1579854442 0.86476793 -1.5691453644 1.1965664548 1965.01018 1.00022145 ## x[6] 0.4404814966 0.83099134 -0.9035996548 1.7467719731 2034.08888 1.00044538 ## a_bar 0.5966686669 0.72455365 -0.5512172079 1.7547745106 457.50619 1.01001900 ## sigma_a 1.9868039280 0.62475020 1.1935664496 3.0806919070 548.75222 1.01023381 ## sigma_g 0.2055282086 0.16780483 0.0170035585 0.5116821942 1035.04896 1.00196218 ## g[1] -0.1659934915 0.21774107 -0.5702435381 0.0761933321 1360.43058 1.00156195 ## g[2] 0.0426012678 0.17846856 -0.2168633003 0.3449450507 2239.18753 1.00002541 ## g[3] 0.0505519252 0.17811492 -0.1941666909 0.3582976624 1811.46328 0.99948636 ## g[4] 0.0143612958 0.17667352 -0.2641923950 0.2970075014 1916.45293 0.99928424 ## g[5] -0.0349256905 0.17496328 -0.3471585015 0.2205464443 1695.10486 1.00045918 ## g[6] 0.1072076540 0.19605102 -0.1279119869 0.4622580054 1506.23216 1.00111282 ## a[1] -0.3404283451 0.36533335 -0.9132766082 0.2629761164 1281.86213 1.00166555 ## a[2] 4.6517792446 1.26372873 3.0195252176 6.7913091202 1291.08110 1.00269334 ## a[3] -0.6469904859 0.36686590 -1.2332357909 -0.0507023244 1220.56241 1.00349456 ## a[4] -0.6567906671 0.37266026 -1.2479210814 -0.0427601862 1359.97407 1.00534633 ## a[5] -0.3469747466 0.37267807 -0.9282008426 0.2647662951 1230.41847 1.00636946 ## a[6] 0.5924776232 0.37474838 0.0034196068 1.2016656784 1213.69242 1.00800165 ## a[7] 2.1128718972 0.47064296 1.3943355597 2.8918979665 1700.68726 1.00210149 用圖形來比較 m13.4 和 m13.4nc 二者之間的 n_eff 更加直觀： precis_c &lt;- precis( m13.4, depth = 2 ) precis_nc &lt;- precis( m13.4nc, depth = 2 ) pars &lt;- c( paste(&quot;a[&quot;, 1:7, &quot;]&quot;, sep = &quot;&quot;), paste(&quot;g[&quot;, 1:6, &quot;]&quot;, sep = &quot;&quot;), paste(&quot;b[&quot;, 1:4, &quot;]&quot;, sep = &quot;&quot;), &quot;a_bar&quot;, &quot;sigma_a&quot;, &quot;sigma_g&quot;) neff_table &lt;- cbind( precis_c[pars, &quot;n_eff&quot;], precis_nc[pars, &quot;n_eff&quot;]) plot( neff_table, xlim = range(neff_table), ylim = range(neff_table), xlab = &quot;n_eff (centered)&quot;, ylab = &quot;n_eff (non-centered)&quot;, lwd = 2, bty = &quot;n&quot;) abline(a = 0, b = 1, lty = 2) 圖 55.11: Comparing the centered (horizontal) and non-centered (vertical) parameerizations of the multilevel chimpanzees model, m13.4. Each point is a parameter. All but two parameters lie above the diagonal, indicating better sampling for the non-centered parameterization. "],["貝葉斯多層回歸模型2-隨機斜率模型-multilevel-models-varying-slopes-models.html", "第 56 章 貝葉斯多層回歸模型2 隨機斜率模型 multilevel models – varying slopes models 56.1 模擬隨機斜率數據", " 第 56 章 貝葉斯多層回歸模型2 隨機斜率模型 multilevel models – varying slopes models We are always forced to analyze data with a model that is MISSPECIFIED: the true data-generating process is different than the model. Richard McElreath 56.1 模擬隨機斜率數據 前一章節中，我們使用咖啡店機器人記錄每次進入一家咖啡館，然後點咖啡到拿到咖啡的等待時間。我們從隨機截距模型中認識到，當我們把咖啡店之間人爲存在關聯性的情況下，機器人對於這樣一個實驗的學習過程更加高效且準確。假設我們第二次進行相似的實驗，並且讓機器人同時記錄該次點餐行爲是發生在上午或者下午時段。 先定義機器人可能造訪的咖啡數據人羣 (population of cafes)。我們需要定義的有早晨和下午的平均等待時間 (average wait time)，還有二者之間的相關係數 (correlation coefficient)。先在 R 裏面定義這幾個關鍵的參數，然後從中採集咖啡店樣本： a &lt;- 3.5 # average morning wait time b &lt;- (-1) # average difference afternoon wait time sigma_a &lt;- 1 # standard dev in intercepts sigma_b &lt;- 0.5 # standard dev in slopes rho &lt;- (-0.7) # correlation between intercepts and slopes 使用上述的參數來模擬咖啡店數據的時候，需要把他們中的一部分整理成一個 \\(2\\times2\\) 的2維多項式高斯分佈的方差協方差矩陣。二維高斯分佈的均值就是很簡單的向量： Mu &lt;- c( a, b ) 方差協方差矩陣應該表達成的數學形式是： \\[ \\begin{pmatrix} \\text{variance of intercepts} &amp; \\text{covariance of intercepts &amp; slopes} \\\\ \\text{covariance of intercepts &amp; slopes} &amp; \\text{variance of slopes} \\\\ \\end{pmatrix} \\] 簡單地說就是： \\[ \\begin{pmatrix} \\sigma_\\alpha^2 &amp; \\sigma_\\alpha\\sigma_\\beta\\rho \\\\ \\sigma_\\alpha\\sigma_\\beta\\rho &amp; \\sigma_\\beta^2 \\end{pmatrix} \\] 處於該方差協方差矩陣的對角線上的分別是，隨機截距的方差 \\(\\sigma^2_\\alpha\\)，和隨機斜率的方差 \\(\\sigma^2_\\beta\\)。剩下的兩個就是相同的 \\(\\sigma_\\alpha\\sigma_\\beta\\rho\\) 部分，它是斜率和截距之間的協方差。協方差僅僅是二者的標準差乘積乘以二者之間的相關係數。 在 R 裏書寫或者計算這個方差協方差矩陣的方法最簡單的是： cov_ab &lt;- sigma_a * sigma_b * rho Sigma &lt;- matrix( c(sigma_a^2, cov_ab, cov_ab, sigma_b^2), ncol = 2 ) Sigma ## [,1] [,2] ## [1,] 1.00 -0.35 ## [2,] -0.35 0.25 另一種常見的方法是： sigmas &lt;- c(sigma_a, sigma_b) # standard deviations Rho &lt;- matrix( c(1, rho, rho, 1) , nrow = 2 ) # correlation matrix # Now matrix multiply to get covariance matrix Sigma &lt;- diag(sigmas) %*% Rho %*% diag(sigmas) Sigma ## [,1] [,2] ## [1,] 1.00 -0.35 ## [2,] -0.35 0.25 第二種方法看起來稍微複雜些，但是有助於理解我們在貝葉斯模型中對這些參數設定先驗概率分佈的方法。 接下來我們可以開始採集咖啡店數據樣本了。假設我們只想要採集20家咖啡店的等待數據，那麼先定義： N_cafes &lt;- 20 讓計算機模擬這20家咖啡店的等待時間數據，我們需要做的就是指定它們之間的關係，也就是使用上面定義好的斜率，截距之間的二維高斯分佈矩陣： library(MASS) set.seed(5) vary_effects &lt;- mvrnorm( N_cafes, Mu, Sigma ) 現在看看我們採集的這個20家咖啡的樣本數據 vary_effect ，它現在應該是一個有 20 行 2 列的矩陣： vary_effects ## [,1] [,2] ## [1,] 4.2239624 -1.60935645 ## [2,] 2.0104980 -0.75177037 ## [3,] 4.5658109 -1.94826458 ## [4,] 3.3436353 -1.19265388 ## [5,] 1.7009705 -0.58556181 ## [6,] 4.1343727 -1.14445388 ## [7,] 3.7944692 -1.62646613 ## [8,] 3.9465976 -1.71527939 ## [9,] 3.8642671 -0.90716770 ## [10,] 3.4676137 -0.68040541 ## [11,] 2.2428755 -0.61815155 ## [12,] 4.1595055 -1.65921204 ## [13,] 4.3002830 -2.11254740 ## [14,] 3.5069480 -1.44064299 ## [15,] 4.3820864 -1.87989834 ## [16,] 3.5211329 -1.35069860 ## [17,] 4.2167127 -0.91927985 ## [18,] 5.9130025 -1.23136238 ## [19,] 3.4773057 -0.35703411 ## [20,] 3.7748988 -1.05704571 每一行就是一家咖啡店的數據。第一列是截距，第二列是斜率。我們來把他們各自提取出來命名： a_cafe &lt;- vary_effects[, 1] # the intercepts b_cafe &lt;- vary_effects[, 2] # the slopes 下面的代碼把上面採集的截距和斜率數據之間的關係繪製成帶有橢圓形二維高斯分佈的散點關係圖： plot( a_cafe, b_cafe, col = rangi2, xlab = &quot;intercepts (a_cafe)&quot;, ylab = &quot;slopes (b_cafe)&quot;) # overlay population distribution # library(ellipse) for ( l in c(0.1, 0.3, 0.5, 0.8, 0.99) ) lines(ellipse::ellipse(Sigma, centre = Mu, level = l), col = col.alpha(&#39;black&#39;, 0.2)) 圖 56.1: 20 cafes sampled from a statistial population. The horizontal axis is the intercept (average morning wait) for each cafe. The vertical axis is the slope (average difference between afternnon and morning wait) for each cafe. The gray ellipses illustrate the multivariate Gaussian population of intercepts and slopes. 56.1.1 模擬觀察值 simulate observations 上文中的 vary_effects 模擬的是20家餐廳的特徵值（也就是參數），並非實際上午/下午等待時間的觀察值。接下來我們可以模擬採集每家咖啡店的等待時間了。我們假設派機器人去每家餐廳十次，5次上午，5次下午，記錄每次的點餐等待時間，一共200次的觀察結果： set.seed(22) N_visits &lt;- 10 afternoon &lt;- rep(0:1, N_visits * N_cafes / 2) cafe_id &lt;- rep( 1:N_cafes, each = N_visits ) mu &lt;- a_cafe[cafe_id] + b_cafe[cafe_id] * afternoon sigma &lt;- 0.5 # std dev within cafes wait &lt;- rnorm( N_visits*N_cafes, mu, sigma ) d &lt;- data.frame( cafe = cafe_id, afternoon = afternoon, wait = wait) 這時候我們可以看看剛剛設計好的 d 裏面的模擬數據實際是什麼樣的。它就是一個典型的具有多層結構的數據。該數據展示了每家咖啡店上午下午各自的等待時間的10次觀察值。在這個例子中，沒有缺失值，數據 d 的每一家咖啡店都有5次早上的等待時間，5次下午等待的時間。但是實際情況下並不一定要這樣完美的平衡數據 (balanced data)。因爲多層模型可以克服不平衡數據之間信息不均衡的問題。觀察值數量少的分層，可以從觀察值數量多的分層中獲取需要的信息。 head(d, 20) ## cafe afternoon wait ## 1 1 0 3.96789287 ## 2 1 1 3.85719780 ## 3 1 0 4.72787549 ## 4 1 1 2.76101325 ## 5 1 0 4.11948274 ## 6 1 1 3.54365216 ## 7 1 0 4.19094922 ## 8 1 1 2.53322349 ## 9 1 0 4.12403208 ## 10 1 1 2.76488683 ## 11 2 0 1.62854439 ## 12 2 1 1.29970861 ## 13 2 0 2.38201217 ## 14 2 1 1.21671656 ## 15 2 0 1.61405077 ## 16 2 1 0.79765084 ## 17 2 0 2.44127922 ## 18 2 1 2.26019875 ## 19 2 0 2.47877354 ## 20 2 1 0.45086022 56.1.2 隨機斜率模型 the varying slopes model 接下來我們可以進入建立模型的階段了。前一小節的過程是，我們使用計算機隨機生成了20家咖啡廳的點餐等待時間數據，這些咖啡廳本身來自一個符合某種特徵的咖啡廳羣體 (population)，這裏我們使用該數據來進一步鞏固我們對前一小節中數據產生過程的理解。 這裏的數據除了有隨機的截距，還有加入每個咖啡廳等待時間的隨機斜率，模型可以用數學表達式描述成爲： \\[ \\begin{aligned} W_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma) &amp; \\text{[likelihood]} \\\\ \\mu_i &amp; = \\alpha_{\\text{CAFE}[i]} + \\beta_{\\text{CAFE}[i]} A_i &amp; \\text{[linear model]} \\end{aligned} \\] 特別地，我們可以描述隨機截距和隨機斜率之間的協方差矩陣 (covariance matrix) 成爲： \\[ \\begin{aligned} \\left[ \\begin{array}{c} \\alpha_{\\text{CAFE}[i]} \\\\ \\beta_{\\text{CAFE}[i]} \\end{array} \\right] &amp; \\sim \\text{MVNormal}\\left( \\left[ \\begin{array}{c} \\alpha \\\\ \\beta \\end{array} \\right], \\textbf{S} \\right) &amp; \\text{[population of varying effects]} \\\\ \\textbf{S} &amp; = \\left( \\begin{array}{cc} \\sigma_\\alpha &amp; 0\\\\ 0 &amp; \\sigma_\\beta \\end{array} \\right) \\textbf{R} \\left( \\begin{array}{cc} \\sigma_\\alpha &amp; 0\\\\ 0 &amp; \\sigma_\\beta \\end{array} \\right) &amp; \\text{[construct covariance matrix]} \\end{aligned} \\] 第一行的表達式的涵義是，我們認爲該數據中的咖啡廳點餐等待時間的數據，是有規律的，每個咖啡廳有自己的隨機截距和斜率，這兩個重要參數本身的先驗概率分佈是一個二維 (two-dimensional) 正（常）態分佈。這個二維正（常）態分佈的均值是 \\(\\alpha, \\beta\\)，協方差矩陣是 \\(\\textbf{S}\\)。 第二行的表達式的涵義是進一步定義協方差矩陣 \\(\\textbf{S}\\)。將它分解成爲兩個標準差矩陣 (standard deviations)，還有一個相關性矩陣 (correlation matrix) \\(\\textbf{R}\\)。接下來就是定義超參數的先驗概率分佈了 (hyper-priors)。我們定義上述模型中的各個參數的先驗概率分佈爲： \\[ \\begin{aligned} \\alpha &amp; \\sim \\text{Normal}(5, 2) &amp; \\text{[prior for average intercept]} \\\\ \\beta &amp; \\sim \\text{Normal}(-1, 0.5) &amp; \\text{[prior for average slope]} \\\\ \\sigma &amp; \\sim \\text{Exponential}(1) &amp; \\text{[prior stddev within cafes]} \\\\ \\sigma_\\alpha &amp; \\sim \\text{Exponential}(1) &amp; \\text{[prior stddev among intercepts]} \\\\ \\sigma_\\beta &amp; \\sim \\text{Exponential}(1) &amp; \\text{[prior stddev among slopes]} \\\\ \\textbf{R} &amp; \\sim \\text{LKJcorr} (2) &amp; \\text{[prior for correlation matrix]} \\end{aligned} \\] 最後一行的 \\(\\textbf{R}\\) 可能不太眼熟，但是它其實就是爲相關關係矩陣定義的先驗概率。這裏我們只有兩個參數之間存在可能的相關關係，截距和斜率，二者的相關關係矩陣就是 \\(2 \\times 2\\) 的簡單形式： \\[ \\begin{aligned} \\textbf{R} = \\left( \\begin{array}{cc} 1 &amp; \\rho \\\\ \\rho &amp; 1 \\end{array} \\right) \\end{aligned} \\] 其中 \\(\\rho\\) 就是隨機斜率和隨機截距之間的相關係數 (correlation coefficient)。那實際上 \\(\\text{LKJcorr}(2)\\) 又是什麼涵義呢？其實它是提供了一個極爲微弱的先驗概率信息，並且儘量避免模型採集極端的相關關係取值，如 \\(1, -1\\)。該分佈如果使用 \\(\\text{LKJcorr}(1)\\) 的話，則意味着我們認爲所有的相關係數從 (-1, 1) 中都有可能，包括兩端的極端情況。我們可以繪圖來理解這個分佈的特徵。 R &lt;- rlkjcorr( 10000, K = 2, eta = 4 ) dens( R[, 1, 2], xlab = &quot;correlation&quot;, bty = &quot;n&quot;) R &lt;- rlkjcorr( 10000, K = 2, eta = 1 ) dens( R[, 1, 2], xlab = &quot;correlation&quot;, add = TRUE) R &lt;- rlkjcorr( 10000, K = 2, eta = 2 ) dens( R[, 1, 2], xlab = &quot;correlation&quot;, add = TRUE) text( 0, 0.45, &#39;eta = 1&#39;) text( 0, 0.8, &quot;eta = 2&quot;) text( 0.5, 1, &quot;eta = 4&quot;) 圖 56.2: LKJcorr(eta) probability density. The plot shows the distribution of correlation coefficients extracted from random 2-by-2 correlation matrices, for three values of eta. When eta = 1, all correlations are equally plausible. As eta increases, extreme correlations become less plausible. 我們終於準備好了這個模型的背景知識，現在，我們來實際寫下這個模型的代碼並運行該模型。 set.seed(867530) m14.1 &lt;- ulam( alist( wait ~ normal( mu, sigma ), mu &lt;- a_cafe[cafe] + b_cafe[cafe] * afternoon, c(a_cafe, b_cafe)[cafe] ~ multi_normal(c(a, b), Rho, sigma_cafe), a ~ normal(5, 2), b ~ normal(-1, 0.5), sigma_cafe ~ exponential(1), sigma ~ exponential(1), Rho ~ lkj_corr(2) ), data = d, chains = 4, cores = 4 ) saveRDS(m14.1, &quot;../Stanfits/m14_1.rds&quot;) 模型花了一點時間成功運行之後，我們來直接觀察 m14.1 給出的隨機斜率和隨機截距之間的相關係數的事後樣本分佈： m14.1 &lt;- readRDS(&quot;../Stanfits/m14_1.rds&quot;) post &lt;- extract.samples( m14.1 ) dens( post$Rho[,1,2], xlim = c(-1, 1), bty = &quot;n&quot;) # posterior R &lt;- rlkjcorr(10000, K = 2, eta = 2) # prior dens( R[,1,2], add = TRUE, lty = 2, col = rangi2, lwd = 3) text( 0.45, 0.8 , &quot;prior&quot;, col = rangi2) text( -0.25, 2.0, &quot;posterior&quot;) 圖 56.3: Posterior distribution of the correlation between intercepts and slopes. Black: Posterior distribution of the correlation, reliably below zero. Dashed blue: prior distribution, the LKJcoor(2) density. # precis( m14.1, depth = 2 ) 我們發現事後的相關係數集中在小於零的部分。因爲模型認爲斜率和截距之間的相關性是負的，符合我們產生數據的過程中使用的圖 56.1 中所示。接下來，繪製一下隨機效應部分的示意圖，並且和原始數據做一個比較。 # compute unpooled estimates directly from data a1 &lt;- sapply( 1:N_cafes, function(i) mean(wait[cafe_id == i &amp; afternoon == 0])) b1 &lt;- sapply( 1:N_cafes, function(i) mean(wait[cafe_id == i &amp; afternoon == 1])) - a1 # extract posterior means of partially pooled estimates post &lt;- extract.samples( m14.1 ) a2 &lt;- apply( post$a_cafe, 2, mean ) b2 &lt;- apply( post$b_cafe, 2, mean ) # plot both and connect with lines plot(a1, b1, xlab = &quot;intercept&quot;, ylab = &quot;slope&quot;, pch = 16, col = rangi2, ylim = c( min(b1) - 0.1, max(b1) + 0.1), xlim = c(min(a1) - 0.1, max(a1) + 0.1) , bty = &quot;n&quot;) points( a2, b2, pch = 1) for ( i in 1:N_cafes ) lines( c(a1[i], a2[i]), c(b1[i], b2[i]) ) # superimpose the contours of the population # compute the posterior mean bivariate Gaussian Mu_est &lt;- c( mean(post$a), mean(post$b) ) rho_est &lt;- mean(post$Rho[,1,2]) sa_est &lt;- mean( post$sigma_cafe[,1] ) sb_est &lt;- mean( post$sigma_cafe[,2] ) cov_ab &lt;- sa_est * sb_est * rho_est Sigma_est &lt;- matrix( c(sa_est^2 , cov_ab, cov_ab, sb_est^2), ncol = 2 ) # draw contours library(ellipse) for ( l in c(0.1, 0.3, 0.5, 0.8, 0.99) ) lines(ellipse(Sigma_est, centre = Mu_est, level = l), col = col.alpha(&quot;black&quot;, 0.2)) 圖 56.4: Shinkage in two dimensions. Raw unpooled intercepts and slopes (filled blue) compared to partially pooled posterior means (open circles). The gray contours show the inferred population of varying effects. 圖 56.4 中藍色的點表示的是原始數據直接取平均值計算獲得的結果。空心點則是根據隨機效應模型的估計給出的各個餐廳的截距和斜率的事後概率分佈的估計平均值。二者之間用實線連接。我們發現每個空心點（模型估計值）的兩個維度都比簡單粗暴計算的原始值要更加靠近這個二維高斯分佈的中心點位置（這個現象被叫做塌陷 shrinkage）。距離中心點越遠的藍點，它的塌陷程度 (shrinkage) 越大。 相同的數據我們把它轉換到實際的觀察值尺度，並繪製成圖 56.5。橫軸表示的是早晨的每家咖啡廳點餐等待時間（分鐘），縱軸則是下午的每家咖啡廳點菜等待時間。藍色的點是未經模型擬合的簡單粗暴計算的原始值。空心點則是模型給出的時候估計預測值。虛線表示的餐廳是上午下午點餐等待時間相等的情況（就是對角線）。這裏其實展示的是，參數的塌陷現象同樣會體現在觀測值的原始尺度上。而原始觀測值尺度上，上午，下午點餐的等待時間是成正比的，也就是上午等待時間長的餐廳，下午點餐的時間也會很長。很顯然，這樣的餐廳很受歡迎，等待時間在什麼時間去都比較長。但是整體餐廳的等待時間的分佈都落在表示上午下午點餐時間等長的虛線的下方，表示總體的傾向是幾乎所有的餐廳的下午等待時間平均要短於上午的等待時間。 # Convert varying effects to waiting times wait_morning_1 &lt;- (a1) wait_afternoon_1 &lt;- (a1 + b1) wait_morning_2 &lt;- (a2) wait_afternoon_2 &lt;- (a2 + b2) # plot both and connect with lines plot( wait_morning_1, wait_afternoon_1, xlab = &quot;morning wait&quot;, ylab = &quot;afternoon wait&quot;, pch = 16, col = rangi2, ylim = c(min(wait_afternoon_1) - 0.1, max(wait_afternoon_1) + 0.1), xlim = c(min(wait_morning_1) - 0.1, max(wait_morning_1) + 0.1 ), bty = &quot;n&quot;) points( wait_morning_2, wait_afternoon_2, pch = 1) for ( i in 1:N_cafes ) lines( c(wait_morning_1[i], wait_morning_2[i]), c(wait_afternoon_1[i], wait_afternoon_2[i]) ) abline( a = 0, b = 1, lty = 2) # now shrinkage distribution by simulation v &lt;- mvrnorm( 10000, Mu_est, Sigma_est ) v[, 2] &lt;- v[, 1] + v[, 2] Sigma_est2 &lt;- cov(v) Mu_est2 &lt;- Mu_est Mu_est2[2] &lt;- Mu_est[1] + Mu_est[2] # draw contours library(ellipse) for (l in c(0.1, 0.3, 0.5, 0.8, 0.99)) lines(ellipse(Sigma_est2, centre = Mu_est2, level = l), col = col.alpha(&quot;black&quot;, 0.5)) 圖 56.5: The same estimates on the outcome scale. "],["revision.html", "第 57 章 重要概念複習 57.1 概率論學派統計推斷要點複習 57.2 似然 57.3 極大似然估計 57.4 關於假設檢驗的複習 57.5 線性迴歸複習 57.6 GLM-Practical 01", " 第 57 章 重要概念複習 There are no routine statistical questions, only questionable statistical routines. Sir David Cox The Generalised Linear Regression lectures were orgainised and taught by Professor Chris Frost. 57.1 概率論學派統計推斷要點複習 下面我們一起用二項分佈的概念 (\\(n\\) 個對象中 \\(K\\) 個“事件”)，來複習概率論學派的統計推斷要點。 模型，the Model。一個統計模型，描述的不僅僅是我們研究的人羣的一些特徵，而且通常一個模型還可提供如何從人羣中收集該樣本的信息。 用二項分佈的概念來解釋，人羣是衆多個體的集合，他們中的一部分佔比 \\(\\pi\\) 的人身上發生了某個事件。從這個人羣的集合中，我們隨機抽取 \\(n\\) 個對象作爲研究樣本，該樣本中有 \\(K\\) 個人身上發生了事件。此時，我們說 \\(K\\) 服從人羣比例爲 \\(\\pi\\) 的二項分佈：\\(K \\sim \\text{Bin}(n,\\pi)\\)。 參數，parameters。模型中的參數反映了人羣的某些特徵。在實際應用中，從來沒有“人類”能知道人羣參數的真實值，渺小的我們從人羣中抽取樣本，用於推斷 “上帝才知道的” 這些代表了人羣特徵的參數。 在二項分佈的情境下，有且只有一個人羣參數，人羣中事件的比例 \\(\\pi\\)。 參數估計量，parameter estimators。估計量是樣本的統計量，被用來估計未知的總體參數。估計量 estimator，是一個隨機變量，是我們計算估計值的一般形式。估計值 estimate，是每個樣本通過統計模型計算獲得的估計量的真實值，每採樣一次，計算獲得的估計值理論上會略有不同。 二項分佈的上下文中，人羣事件比例 – 這一參數 \\(\\pi\\) 的天然估計量是 \\(\\hat\\pi = \\frac{K}{n}\\)，當一個樣本中發現 \\(K = k\\)，該樣本給出的估計值是 \\(\\frac{k}{n}\\)。 研究假設，hypotheses。研究假設是實驗前我們提出的要被檢驗的一些關於人羣某些特徵參數的 “陳述 statement”。可以是猜想參數等於某個特定值，或者多個參數大小相同。 二項分佈的數據裏，只有一個人羣參數，\\(\\pi\\)。可能提出的零假設和替代假設有很多，\\(\\pi = 0.5 \\text{ v.s. } \\pi \\neq 0.5\\) 是其中之一的複合型假設。 57.2 似然 如果一個模型只有一個參數 \\(\\theta\\)，樣本數據已知的話，該參數的似然爲： \\[\\text{L}(\\theta | \\text{data}) = \\text{Pr}(\\text{data}|\\theta)\\] 其中，\\(\\text{Pr}(\\text{data}|\\theta)\\) 對於離散型變量，是概率方程 probability function；對於連續型變量，則是概率密度方程 probability density function (PDF)。 對數似然，就是上面的似然方程取自然底數的對數方程： \\[\\ell(\\theta | \\text{data}) = \\text{ln}\\{ \\text{L}(\\theta | \\text{data}) \\}\\] 57.3 極大似然估計 當數據收集完畢，從獲得的數據中計算獲得的能夠使似然方程/或對數似然方程取得極大值的 \\(\\theta\\) 的大小，被叫做極大似然估計 \\(\\text{(MLE)}\\)，且通常數學標記會在參數上加一頂帽子： \\(\\hat\\theta\\)。收集不同的樣本，在相同的似然方程或對數似然方程下，極大似然估計不同。 許多問題，我們獲得極大似然估計的方法是先定義好模型的似然方程，然後求該方程的一階導數之後計算使之等於零的參數值大小就是 \\(\\text{MLE } \\hat\\theta\\)。此時，你還要記得再求一次二階導數，看是否小於零，以確保前一步計算獲得的值給出的似然方程是極大值。 更多的時候我們用對數似然方程以簡化計算過程： \\[ \\begin{aligned} \\left.\\frac{\\text{d}}{\\text{d } \\theta}\\ell (\\theta | \\text{data})\\right\\vert_{\\theta=\\hat{\\theta}} &amp;= \\ell^\\prime(\\hat\\theta) = 0 \\\\ \\left.\\frac{\\text{d}^2}{\\text{d } \\theta^2}\\ell (\\theta | \\text{data})\\right\\vert_{\\theta=\\hat{\\theta}} &amp;= \\ell^{\\prime\\prime}(\\hat\\theta) &lt; 0 \\end{aligned} \\] 我們只關心似然方程的形狀，所以方程中不包含參數的部分可全部忽略掉。 \\(\\text{MLE}\\) 的一些關鍵性質： 漸進無偏 asymptotically unbiased：當 \\(n\\rightarrow \\infty\\) 時，\\(E(\\hat\\theta) \\rightarrow \\theta\\)； 一致性 consistency：隨着樣本量的增加，\\(\\hat\\theta\\) 收斂於 (converges) 總體參數 \\(\\theta\\)； 漸進正態分佈 asymptotically normality：隨着樣本量增加，\\(\\hat\\theta\\) 的樣本分佈收斂於 (converges) 正態分佈，方差爲 \\[E[-\\ell^{\\prime\\prime}(\\theta)]^{-1}=[-\\ell^{\\prime\\prime}(\\hat\\theta)]^{-1}\\] 恆定性 invariance：如果 \\(\\hat\\theta\\) 是 \\(\\text{MLE}\\)，那麼 \\(\\theta\\) 被數學轉換以後 \\(g(\\theta)\\) 的方程的 \\(\\text{MLE}\\) 是 \\(g(\\hat\\theta)\\) 似然理論可以直接拓展到多個參數的情況。一般地，如果一個模型有 \\(p\\) 個參數 \\(\\mathbf{\\theta} = (\\theta_1, \\theta_2, \\cdots, \\theta_p)^T\\)，這些參數在給定數據的條件下的似然方程爲：\\[\\text{L}(\\mathbf{\\theta} | \\text{data}) = \\text{Pr}(\\text{data} | \\mathbf{\\theta})\\] 其中，概率 (密度) 方程在多個參數時變成聯合 (joint) 概率 (密度) 方程。似然，也是各個參數的聯合似然方程。此時，參數向量 \\(\\mathbf{\\theta} = (\\theta_1, \\theta_2, \\cdots, \\theta_p)^T\\) 的方差協方差矩陣的估計量爲： \\[ \\hat{\\text{Var}}(\\mathbf{\\hat\\theta}) = - \\left( \\begin{array}{c} \\frac{\\partial^2\\ell}{\\partial\\theta^2_1} &amp; \\frac{\\partial^2\\ell}{\\partial\\theta_2\\partial\\theta_1} &amp; \\cdots &amp; \\frac{\\partial^2\\ell}{\\partial\\theta_k\\partial\\theta_1} \\\\ \\frac{\\partial^2\\ell}{\\partial\\theta_1\\partial\\theta_2} &amp; \\frac{\\partial^2\\ell}{\\partial\\theta^2_2} &amp; \\cdots &amp; \\frac{\\partial^2\\ell}{\\partial\\theta_k\\partial\\theta_2} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ \\frac{\\partial^2\\ell}{\\partial\\theta_1\\partial\\theta_k} &amp; \\frac{\\partial^2\\ell}{\\partial\\theta_2\\partial\\theta_k} &amp; \\cdots &amp; \\frac{\\partial^2\\ell}{\\partial\\theta^2_k} \\\\ \\end{array} \\right)^{-1}_{\\theta=\\hat\\theta} \\] Tips: typing vcov(Modelname) command in R will display this estimated variance-covariance matrix for the parameter estimates. 回到二項分佈數據的例子： \\[ K \\sim \\text{Bin}(n, \\pi) \\] 如果我們樣本的觀測數據是 \\(K=k\\)，對數似然方程一次微分等於零以後求得的參數 \\(\\pi\\) 的 \\(\\text{MLE}\\) 是 \\(\\hat\\pi = \\frac{k}{n}\\)。所以參數 \\(\\pi\\) 的估計量是 \\(\\frac{K}{n}\\)。\\(\\hat\\pi\\) 的方差估計量是： \\[ \\hat{\\text{Var}} (\\hat\\pi) = \\frac{\\hat\\pi(1-\\hat\\pi)}{n} \\text{ for } \\hat\\pi = \\frac{k}{n} \\] 57.4 關於假設檢驗的複習 極大似然估計可以有三大類檢驗方法：似然比檢驗法 likelihood ratio test；Wald 檢驗 Wald test；Score 檢驗 Score test。 似然比檢驗法 likelihood ratio test (LRT) (Section 16.2)： \\[ -2llr(\\theta_0) = -2\\{ \\ell(\\theta_0) - \\ell(\\hat\\theta) \\} \\] 零假設條件下 (Under \\(\\text{H}_0\\):) \\[ -2llr(\\theta_0) \\sim \\chi_1^2 \\] 這個對數似然比的統計量可以和自由度爲 1 的卡方分佈作比較，計算反對零假設的證據的強度大小。如果顯著性水平是 \\(\\alpha\\)，那麼下面條件成立時，可以認爲反對零假設的證據強度大到足以拒絕零假設。 \\[ -2llr(\\theta_0) &gt; \\chi^2_{1, 1-\\alpha} \\] Wald 檢驗 (Section 16.4) 是一種利用二次方程近似法對似然比檢驗進行近似的手段。其檢驗統計量是 \\[ \\begin{aligned} (\\frac{M-\\theta_0}{S})^2 &amp; \\sim \\chi^2_1 \\\\ \\text{Where } M &amp; = \\hat\\theta \\\\ S^2 &amp; = \\frac{1}{-\\ell^{\\prime\\prime}(\\hat\\theta)} \\end{aligned} \\] Score 檢驗 (Section 16.5) 是另一種利用二次方程近似法對似然比檢驗進行近似的手段。其檢驗統計量是 \\[ \\begin{aligned} \\frac{U^2}{V} &amp; \\sim \\chi^2_1 \\\\ \\text{Where } U &amp; = \\ell^\\prime(\\theta_0) \\\\ V &amp; = -\\ell^{\\prime\\prime}(\\theta_0) \\end{aligned} \\] 如果對數似然方程本身就是一個二次方程 (數據服從完美正態分佈狀態，且總體方差已知時)，這三大類的檢驗法其實計算獲得完全一樣的 \\(p\\) 值，提供完全一致的證據。多數情況下，三大類檢驗法的結果是近似的。關於三種檢驗法的比較可以參考過去總結的章節 (Section 16.6) 57.4.1 子集似然函數 當統計模型中的部分參數是噪音參數 (nuisance parameters) 時，我們需要用到子集似然函數法 (Section 19) 來去除噪音參數的影響,，只檢驗我們感興趣的那部分參數。 57.5 線性迴歸複習 57.5.1 簡單線性迴歸 假設對於 \\(n\\) 名研究對象，我們測量個兩個觀測值 \\((y_i, x_i)\\)，那麼用線性迴歸模型來表示這兩個測量值估計的參數之間的關係就是： \\[ \\begin{aligned} y_i &amp; = \\alpha + \\beta x_i + \\varepsilon_i \\\\ \\text{Where } &amp; \\varepsilon_i \\sim \\text{NID}(0,1) \\end{aligned} \\] 或者用另一個標記法： \\[ Y_i | x_i \\sim N(\\alpha + \\beta x_i, \\sigma^2) \\] 57.5.2 多元線性迴歸 如果預測變量有兩個或者兩個以上 \\((x_i, \\;\\&amp;\\; z_i)\\)，那麼描述這兩個預測變量和因變量之間的多元線性迴歸模型可以寫作： \\[ y_i = \\alpha + \\beta x_i + \\gamma z_i + \\varepsilon_i \\] 此時， \\(\\beta\\) 的含義是，當保持 \\(z\\) 不變時，\\(x\\) 每增加一個單位，\\(y\\) 的變化量。用這個模型，我們默認 \\(z\\) 保持不變的同時無論取值爲多少， \\(x, y\\) 之間的關係是不會變化的，我們用這個模型來調整 (adjust) \\(z\\) 的混雜效應 (confounding effect) (Section 30.5)。 當然我們也可以考慮當 \\(z\\) 取值不同時， \\(x, y\\) 之間的關係發生改變，只要在上面的多元線性迴歸方程中加入一個交互作用項即可 (Section 33)。 \\[ y_i = \\alpha + \\beta x_i + \\gamma z_i + \\delta x_i z_i + \\varepsilon_i \\] 增加了交互作用項最大的變化是，\\(x_i\\) 的迴歸係數 \\(\\beta\\) 的含義發生了改變：當且僅當 \\(z = 0\\) 且保持不變時，\\(x\\) 每增加一個單位，\\(y\\) 的變化量。如果 \\(z = k \\neq 0\\) 且保持不變，那麼 \\(x\\) 每增加一個單位，\\(y\\) 的變化量則是 \\(\\beta + k\\delta\\)。 57.5.3 簡單線性迴歸的統計推斷 一個給定的樣本 \\((y_i, x_i), i = 1, \\cdots, n\\) ，其對數似然方程是 \\[ \\ell(\\alpha, \\beta, \\sigma^2 | \\mathbf{y, x}) = -\\frac{1}{2\\sigma^2}\\sum^n_{i=1}(y_i - \\alpha - \\beta x_i)^2 \\] 分別對 \\(\\alpha, \\beta\\) 求微分之後可以獲得他們各自的 \\(\\text{MLE}\\)： \\[ \\begin{aligned} U(\\alpha) &amp; = \\ell^\\prime(\\alpha) = \\frac{1}{\\sigma^2}\\sum_{i=1}^n (y_i - \\alpha - \\beta x_i) \\\\ U(\\beta) &amp; = \\ell^{\\prime}(\\beta) = \\frac{1}{\\sigma^2}\\sum_{i=1}^n x_i(y_i - \\alpha - \\beta x_i) \\\\ U(\\hat\\alpha) &amp; = 0 \\Rightarrow \\hat\\alpha = \\bar{y} - \\hat\\beta\\bar{x} \\\\ U(\\hat\\beta) &amp; = 0 \\Rightarrow \\hat\\beta=\\frac{\\sum_{i=1}^n(x_i-\\bar{x})(y_i-\\bar{y})}{\\sum_{i=1}^n(x_i-\\bar{x})^2} = \\frac{\\sum x_iy_i - n\\bar{x}\\bar{y}}{\\sum x_i^2 - n\\bar{x}^2} \\end{aligned} \\] 注意到和線性迴歸章節中推導的過程不同 (Section 27.4.1)，當時我們用的是最小二乘法，這裏我們用的是光明正大的極大似然法，同時也證明了最小二乘法獲得的 \\(\\hat\\alpha,\\hat\\beta\\) 是他們各自的 \\(\\text{MLE}\\)。 另外，殘差方差的 \\(\\text{MLE}\\) 也可以用上面的方法推導出來，同樣和之前的方法 (Section 27.5) 做個對比吧： \\[ \\begin{aligned} U(\\sigma^2) &amp; = \\ell^\\prime(\\sigma^2) = -\\frac{n}{2\\sigma^2} + \\frac{1}{2\\sigma^4}\\sum_{i=1}^n(y_i - \\alpha - \\beta x_i)^2 \\\\ U(\\hat\\sigma^2) = 0 &amp; \\Rightarrow \\hat\\sigma^2 = \\frac{\\sum_{i=1}^n(y_i - \\hat\\alpha - \\hat\\beta x_i)^2}{n} \\end{aligned} \\] 這個殘差方差的 \\(\\text{MLE}\\) 其實不是一個無偏估計，它只是一個漸進無偏的估計 (需要除以 \\(\\frac{n-2}{n}\\))，所以，當一個線性迴歸模型中有 \\(p\\) 個參數時： \\[ \\hat\\sigma^2 = \\frac{\\sum_{i=1}^n(y_i - \\hat\\alpha - \\hat\\beta_1 x_{i1} - \\hat\\beta_2 x_{i2}\\cdots)^2}{n - p} \\] 線性迴歸時殘差方差的檢驗統計量服從 \\(F\\) 分佈 (Section 29.2.6)。 57.6 GLM-Practical 01 57.6.1 建立似然方程 對下列不同的情形，寫下其 統計學模型 指明模型中的參數 推導該參數的對數似然方程 57.6.1.1 在 \\(n\\) 名對象中觀察到 \\(k\\) 個事件。 統計學模型: \\(K\\) 是隨機變量，指代事件的數量，\\(K \\sim \\text{Bin}(n, \\pi)\\)。每個觀察個體中發生事件的概率相互獨立且相同。 模型參數: \\(\\pi\\) 是模型參數，指代事件發生的概率。 對數似然的推導 概率方程 (probability function): \\[ \\text{Pr}(K = k) = \\binom{n}{k}\\pi^k(1-\\pi)^{n-k}, k = 0,1,\\cdots,n \\] 似然方程 (likelihood function): \\[ L(\\pi|k) = \\binom{n}{k}\\pi^k(1-\\pi)^{n-k}, 0&lt;\\pi&lt;1 \\] 對數似然方程 (log-likelihood function): \\[ \\ell(\\pi|k) = k\\log\\pi + (n-k)\\log(1-\\pi) + \\text{terms not involving } \\pi, 0&lt;\\pi&lt;1 \\] 57.6.1.2 測量 \\(n\\) 名研究對象的總膽固醇濃度 (mmol/l)，已知人羣中總膽固醇的測量值呈正態分布且方差爲 \\(4\\) (mmol/l)2。 統計學模型: 用 \\(Y_i\\) 表示每個個體測量獲得的總膽固醇濃度值。它們是獨立同分布的隨機變量 (independent and indentically distributed, i.i.d. random variables): \\(Y_i \\sim N(\\mu, 2^2 = 4)\\)。 模型參數: 總體均值 \\(\\mu\\)。 對數似然的推導: 概率密度方程 (probability density function): \\[ \\begin{aligned} f(y_1, \\cdots, y_n) &amp; = f(\\mathbf{y}|\\mu) = \\prod_{i = 1}^n f(y_i | \\mu) \\\\ &amp; = \\prod_{i=1}^n \\frac{1}{\\sqrt{2\\pi2^2}}e^{-0.5(\\frac{y_i-\\mu}{2})^2} \\\\ &amp; = [\\frac{1}{\\sqrt{2\\pi2^2}}]^ne^{-0.5\\sum_{i=1}^n(\\frac{y_i-\\mu}{2})^2} \\\\ &amp; -\\infty &lt; y_i &lt; + \\infty \\end{aligned} \\] 對數似然方程 (log-likelihood function): \\[ \\ell(\\mu|\\mathbf{y}) = -\\frac{1}{2\\times2^2}\\sum_{i=1}^n(y_i - \\mu)^2 + \\text{terms not involving } \\mu, -\\infty &lt; \\mu &lt; + \\infty \\] 57.6.2 建立對數似然方程 對下列不同的情形，寫下其 參數的對數似然方程 推導極大似然估計 計算極大似然估計量 繪制對數似然方程的示意圖 57.6.2.1 在 10 名研究對象中觀察到 3 個事件 對數似然方程是 \\[ \\ell(\\pi) = k\\log\\pi + (n-k)\\log(1-\\pi) \\] 極大似然估計的推導 \\[ \\ell^\\prime(\\pi) = 0 \\Rightarrow \\frac{k}{\\pi} - \\frac{n-k}{1-\\pi} = 0 \\\\ \\Rightarrow \\hat\\pi = \\frac{k}{n} \\] 極大似然估計量 \\(\\hat\\pi = 3/10 = 0.3\\) 繪制對數似然方程的示意圖 pi &lt;- seq(0,1, by = 0.0001) likelihood &lt;- 3*log(pi) + 7*log(1-pi) plot(pi, likelihood, type = &quot;l&quot;, ylim = c(-40, 0), frame.plot = TRUE, ylab = &quot;log-likelihood(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot; ) 圖 57.1: Log-likelihood for binomial model. 57.6.2.2 10名研究對象測量的總膽固醇濃度分別是 6.0, 6.2, 6.8, 5.3, 5.9, 6.1, 6.0, 7.0, 5.9, 6.3。已知人羣中總膽固醇值服從方差爲 4 (mmol/l)2 的正態分布。 對數似然方程是: \\[ \\begin{aligned} \\ell(\\mu) &amp; = -\\frac{1}{2\\times2^2}\\sum_{i=1}^{10} (Y_i - \\mu)^2 \\\\ &amp; = -\\frac{1}{8}\\sum_{i=1}^{10} (Y_i - \\bar{y} + \\bar{y} - \\mu)^2 \\\\ &amp; = -\\frac{1}{8}\\sum_{i=1}^{10} (\\bar{y} - \\mu)^2 \\\\ &amp; = -\\frac{10}{8}(\\bar{y} - \\mu)^2 \\end{aligned} \\] 極大似然估計，和極大似然估計量是: \\[ \\ell^\\prime(\\mu) = 0 \\Rightarrow \\hat\\mu = \\bar{y} = 6.15 \\] 繪制對數似然方程的示意圖 mu &lt;- seq(5,7, by = 0.0001) likelihood &lt;- -(5/4)*(6.16-mu)^2 plot(mu, likelihood, type = &quot;l&quot;, ylim = c(-1.8, 0), frame.plot = TRUE, ylab = &quot;log-likelihood(\\U03BC)&quot;, xlab = &quot;\\U03BC&quot; ) 圖 57.2: Log-likelihood for normal model 57.6.3 線性回歸模型 某項RCT臨牀實驗的目的是比較注射嗎啡和安慰劑哪個對患者的精神醫學指徵的改變更加有效。每個實驗組隨機分配到24名患者，精神醫學指徵使用某種心理調查問卷，問卷有七道題，患者七道題的總得分被用於評價其精神醫學指徵，的分越高，指徵越明顯。下表是這兩組患者在注射相應藥物兩小時之後答題的的分: 圖 57.3: Mental activity scores recorded 2 hours after injection of the drug. 下面是 STATA 的計算結果， 寫下該模型的數學表達式，陳述該模型中用到的所有假設和前提條件。用手頭的計算器手動計算該簡單線性回歸模型的截距和斜率，確定你的結果和STATA的結果是一樣的。 \\(Y_i\\) 用來表示第 \\(i\\) 名對象的精神醫學指徵問卷的得分。該模型可以寫作: \\(Y_1, Y_2, \\cdots, Y_{48}\\) 是 48 個獨立同分布的隨機變量，且 \\(Y_i \\sim N(\\mu, \\sigma^2)\\) \\[ y_i = \\alpha + \\beta x_i \\text{ for } x_i = \\left\\{ \\begin{array}{ll} 0 \\text{ placebo}\\\\ 1 \\text{ morphine}\\\\ \\end{array} \\right. \\] 從表格數據中可得 \\(\\bar{x} = 0.5, \\sum x_i^2 = 24, \\bar{y}=4.604, \\sum x_iy_i=88\\)，利用之前 57.5.3 復習的簡單線性回歸公式: \\[ \\hat\\alpha = 5.542 \\\\ \\hat\\beta = -1.875 \\] 解釋截距和斜率的實際意義: \\(\\hat\\alpha\\) 是安慰劑組的平均精神醫學指徵得分; \\(\\hat\\beta\\) 是注射嗎啡組和安慰劑組兩組之間得分均值之差。 實驗研究同時還測量了兩組在注射藥物之前的精神醫學指徵得分，下面是在 STATA 裏對該數據進行擬合的另一個模型。其中 prement 是藥物注射前得分的變量: 寫下這個模型的數學表達式，並且解釋你會用怎樣的方法求各個參數的 MLE。 \\[ y_i = \\beta_0 + \\beta_1 x_i + \\beta_2 z_i + \\beta_{12}x_iz_i \\\\ \\text{ for } x_i = \\left\\{ \\begin{array}{ll} 0 \\text{ placebo}\\\\ 1 \\text{ morphine}\\\\ \\end{array} \\right. \\] 該模型的對數似然方程是 \\[ \\ell(\\beta_0, \\beta_1, \\beta_2, \\beta_{12} | \\mathbf{y, z, x}) = -\\frac{1}{2\\sigma^2}\\sum_{i=1}^{48}(y_i - \\beta_0 - \\beta_1x_i - \\beta_2z_i - \\beta_{12}x_iz_i)^2 \\] 把上面的對數似然方程等於零以後依次對 \\(\\beta_0, \\beta_1, \\beta_2, \\beta_{12}\\) 求偏微分即可求得各自的 MLE。 解釋各參數估計的實際意義 \\(\\hat\\beta_0 =\\) _cons \\(=1.978\\) 是當且僅當治療前得分爲零時，模型對安慰劑組得分均值的估計; \\(\\hat\\beta_1 =\\) 2.treat \\(=-1.212\\) 是當且僅當治療前得分爲零時，嗎啡組和安慰劑組之間得分均值之差; \\(\\hat\\beta_2 =\\) prement \\(=0.594\\) 是對照組中，治療前得分每增加一個單位，治療後得分的變化; \\(\\hat\\beta_{12} =\\) 2.treat#c.prement \\(=-0.0895\\) 是嗎啡組和安慰劑組兩組之間回歸斜率之差，也就是說 \\[\\hat\\beta_2 + \\hat\\beta_{12} = 0.505\\] 是嗎啡組中，治療錢得分沒增加一個單位，治療後得分的變化。 57.6.4 似然比檢驗，Wald 檢驗，Score 檢驗 從服從正態分布 \\(N(\\mu, 1)\\) 的總體中抽樣 \\(n\\) 個樣本，他們相互獨立同分布 (i.i.d)。推導用這個模型時的三種檢驗方法的檢驗統計量，證明在此特殊情況下，三種檢驗方法的檢驗統計量完全一致。 該數據的對數似然是 \\[ \\ell(\\mu) = -\\frac{1}{2}\\sum_{i=1}^n(y_i - \\mu)^2 \\] 似然比檢驗 likelihood ratio test \\[ \\begin{aligned} -2llr &amp; = -2(\\ell(\\mu_0 - \\ell(\\hat\\mu))) \\\\ &amp; = -2(-\\frac{1}{2}\\sum_{i=1}^n(y_i - \\mu_0)^2 + \\frac{1}{2}\\sum_{i=1}^n(y_i - \\bar{y})^2) \\\\ &amp; = \\sum_{i=1}^n[(y_i - \\mu_0)^2 - (y_i - \\bar{y})^2] \\\\ &amp; = \\sum_{i=1}^n(y_i^2 + \\mu_0^2 - 2\\mu_0y_i - y_i^2 - \\bar{y}^2 + 2\\bar{y}y_i) \\\\ &amp; = n(\\mu_0^2 - 2\\mu_0\\bar{y} + \\bar{y}^2) \\\\ &amp; = n(\\bar{y} - \\mu_0)^2 \\end{aligned} \\] Wald 檢驗: 對數似然的一階導數和二階導數分別是: \\[ \\ell^\\prime = -\\frac{1}{2}\\sum_{i=1}^n-2(y_i-\\mu) = \\sum_{i=1}^n(y_i - \\mu) \\\\ \\ell^{\\prime\\prime} = -n \\] 所以，Fisher information \\(S^2 = n^{-1}\\)，\\(M = \\hat\\mu = \\bar{y}\\)， \\[ \\begin{aligned} W^2 &amp; = (\\frac{M - \\theta_0}{S})^2 \\\\ &amp; = (\\frac{(\\bar{y} - \\mu_0)^2}{n^{-1}}) \\\\ &amp; = n(\\bar{y} - \\mu_0)^2 \\end{aligned} \\] Score 檢驗 \\[ \\begin{aligned} \\frac{\\ell^\\prime(\\mu_0)^2}{-\\ell^{\\prime\\prime}(\\mu_0)} &amp; = \\frac{(n\\bar{y} - n\\mu_0)^2}{n} \\\\ &amp; = n(\\bar{y} - \\mu_0)^2 \\end{aligned} \\] 所以，在方差已知，均值未知，總體服從正態分布的數據條件下，三種檢驗方法獲得的實際檢驗統計量是完全一致的。 "],["intro-GLM.html", "第 58 章 廣義線性迴歸入門 58.1 指數分佈家族 58.2 廣義線性迴歸模型之定義 58.3 注意 58.4 如何在 R 裏擬合 “GLM” 58.5 GLM-Practical 02", " 第 58 章 廣義線性迴歸入門 線性迴歸方法是十分強大的建模工具，可惜的是它只能適用與因變量爲連續型變量的情況。廣義線性迴歸模型 (或者叫一般化線性迴歸模型 generalised linear models, GLM) 是一大類將線性迴歸模型拓展到因變量可以使用二進制，計數，分組型變量的建模工具。 58.1 指數分佈家族 一個服從正態分佈的隨機變量 \\(Y\\) 的概率密度方程 (probability density function, PDF) 可以寫作 \\[ f(y) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}}e^{-\\frac{(y-\\mu)^2}{2\\sigma^2}} \\] 給 PDF 的左右兩邊同時取自然底數的對數，方程變形爲 \\[ \\begin{aligned} \\text{ln}\\{f(y)\\} &amp; = -\\frac{y^2}{2\\sigma^2} + \\frac{y\\cdot\\mu}{\\sigma^2} - \\frac{\\mu^2}{2\\sigma^2} -\\frac{1}{2}\\text{ln}(2\\pi\\sigma^2) \\\\ &amp; = \\frac{y\\cdot\\mu - \\frac{\\mu^2}{2}}{\\sigma^2} - [\\frac{y^2}{2\\sigma^2} + \\frac{1}{2}\\text{ln}(2\\pi\\sigma^2) ] \\end{aligned} \\tag{58.1} \\] 如果令 \\[ \\begin{aligned} \\theta &amp; = \\mu \\\\ \\psi &amp; = \\sigma^2 \\\\ b(\\theta) &amp; = \\frac{\\mu^2}{2} \\\\ c(y, \\theta) &amp; = \\frac{y^2}{2\\sigma^2} + \\frac{1}{2}\\text{ln}(2\\pi\\sigma^2) \\end{aligned} \\] 那麼上面的式子 (58.1) 可以被整理爲： \\[ \\begin{equation} \\text{ln}\\{f(y)\\} = \\frac{y\\cdot\\theta - b(\\theta)}{\\psi} - c(y, \\theta) \\end{equation} \\tag{58.2} \\] 此處有重要結論： 凡是分佈的概率密度方程的對數方程能夠轉換整理成 (58.2) 形式的分佈，都隸屬於指數分佈家族 (the Exponential Family of distributions)。 58.1.1 泊松分佈和二項分佈的指數分佈家族屬性 泊松分佈 Poisson Distribution \\[ \\begin{aligned} f(y) &amp; = \\text{Pr}(Y = y) = \\frac{\\mu^y e^{-\\mu}}{y!}, y = 0,1,2,\\cdots \\\\ \\text{ln}\\{ f(y) \\} &amp; = y\\cdot\\text{ln}(\\mu) - \\mu - \\text{ln}(y!) \\\\ \\text{Let } &amp;\\color{red}{\\boxed{\\theta = \\text{ln}(\\mu), \\psi = 1, b(\\theta) = \\mu, c(y,\\psi) = \\text{ln}(y!)}} \\\\ \\Rightarrow \\text{ln}\\{f(y)\\} &amp; = \\frac{y\\cdot\\theta - b(\\theta)}{\\psi} - c(y, \\theta) \\\\ \\end{aligned} \\] 所以，泊松分佈屬於指數分佈家族成員。 二項分佈 Binommial Distribution \\[ \\begin{aligned} f(y) &amp; = \\text{Pr}(Y = y) = \\binom{n}{y}\\pi^y(1-\\pi)^{n-y}, y = 0,1,2,\\cdots\\\\ \\text{ln}\\{ f(y) \\} &amp; = y\\cdot \\text{ln}(\\pi) + (n - y)\\text{ln}(1-\\pi) + \\text{ln}\\{\\binom{n}{y}\\} \\\\ &amp; = y\\cdot \\text{ln}(\\frac{\\pi}{1-\\pi}) + n\\text{ln}(1-\\pi) + \\text{ln}\\{\\binom{n}{y}\\} \\\\ \\text{Let } &amp;\\color{red}{\\boxed{\\theta = \\text{ln}(\\frac{\\pi}{1-\\pi}), \\psi = 1,}} \\\\ &amp;\\color{red}{\\boxed{b(\\theta) = -n\\text{ln}(1-\\pi), c(y, \\psi) = -\\text{ln}\\{\\binom{n}{y}\\}}}\\\\ \\Rightarrow \\text{ln}\\{f(y)\\} &amp; = \\frac{y\\cdot\\theta - b(\\theta)}{\\psi} - c(y, \\theta) \\\\ \\end{aligned} \\] 所以，二項分佈也屬於指數分佈家族成員。 指數分佈家族成員的數學表達式 (58.2) 中， \\(\\theta\\) 被叫做標準 (或者叫自然) 參數 (canonical or natural parameter)，相關的函數被叫做標準鏈接函數 (canonical link function)，如上面所列舉的例子中：泊松分佈時用的對數函數 \\(\\text{ln}(\\mu)\\)，二項分佈時用的邏輯函數 (logit function) \\(\\text{ln}(\\frac{\\pi}{1-\\pi})\\)，鏈接函數可能還有別的選擇，(例如，二項分佈數據的另一種標準鏈接函數是概率函数 (probit function \\(\\Phi^{-1}(P)\\)))，同時它對於條件推斷 conditional inference 至關重要，因爲它還提示我們應該用什麼樣的算法去估計我們苦苦尋找的人羣參數。 \\(\\phi\\) 被命名爲尺度參數 (scale or dispersion parameter)，泊松分佈和二項分佈的尺度參數是 \\(1\\)。但是正態分佈的尺度參數是方差 \\(\\sigma^2\\)，且常常是未知的，需要從樣本數據中估計。尺度參數是否需要從樣本中獲取其估計值，對於實際統計推斷或者假設檢驗的過程有重大影響。 廣義線性迴歸就是這個指數分佈家族數據共通的一種統計建模過程，所以，在這一“屋檐”下，它衍生出衆多種類的統計模型。 58.1.2 Exercise. Exponential distribution 證明指數分佈本身也屬於指數分佈家族，定義其標準鏈接函數和標準參數。 證明 \\[ \\begin{aligned} Y \\sim \\text{exp}(\\lambda) &amp; \\rightarrow f(y) = \\lambda \\text{exp}(-y\\lambda), y &gt; 0\\\\ \\Rightarrow \\text{ln}\\{ f(y) \\} &amp; = - y \\lambda + \\text{ln}(\\lambda) \\\\ \\text{Let } &amp; \\color{red}{\\theta = -\\lambda, b(\\theta) = - \\text{ln}(\\lambda), \\phi = 1, c(y, \\phi) = 0} \\\\ \\Rightarrow \\text{ln}\\{f(y)\\} &amp; = \\frac{y\\cdot\\theta - b(\\theta)}{\\phi} - c(y, \\theta) \\\\ \\text{Because } E(Y) &amp; = \\frac{1}{\\lambda}, \\text{ the canonical link is } g(\\lambda) = -\\frac{1}{\\lambda}\\\\ \\end{aligned} \\] 58.2 廣義線性迴歸模型之定義 一個四肢健全的廣義線性模型包括三個部分： 因變量分佈 (或者叫響應變量分佈，response distribution)：\\(Y_i, i = 1,\\cdots,n\\) 可以被認爲是互相獨立且服從指數家族分佈，設其期望值 (均值) \\(E(Y_i) = \\mu_i\\)； 線性預測方程 (linear predictor)：預測變量及其各自的參數以線性迴歸形式進入模型，其中第 \\(i\\) 個觀測值的線性預測值爲： \\[\\eta_i = \\alpha + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip}\\] 鏈接函數 (link function)：鏈接函數連接的是線性預測方程 \\(\\eta_i\\) 和其期待值 (均值) 之間 \\(\\mu_i\\) 的關係。 \\[g(\\mu_i) = \\eta_i\\] 簡單線性迴歸模型本身當然也數據廣義線性迴歸模型： 因變量分佈是正態分佈； 線性預測值也是線性迴歸形式； 鏈接函數是它因變量本身 (the identity function)。 58.3 注意 廣義線性迴歸的線性預測方程部分的意義，需要澄清的是它指的是 參數 parameter 之間呈線性關係，預測變量本身可以有二次方，三次方，多次方，因爲這些多項式線性迴歸本身仍然是線性的如： \\[\\eta_i = \\alpha + \\beta_1 x_i + \\beta_2 x_i^2 + \\cdots + \\beta_p x_i^p\\] 然而，這樣的形式 \\[\\eta_i = \\alpha (1- e^{\\beta_1 x_{i1}})\\] 就不能說是一個線性預測方程。 除了有很少的特例。廣義線性迴歸擬合後的參數估計，推斷，模型評價和比較時使用的原理都一樣，不同的只有各自的分佈和鏈接函數。 通常選用的鏈接方程，要能夠使線性預測方程的取值範圍達到所有實數 \\(-\\infty,+\\infty\\)。 “模型的似然函數 the log likelihood of the model”，只是我們偷懶縮短了原文 “在給定數據的前提下，當所有參數均爲 \\(\\text{MLE}\\) 時模型的對數似然函數 (the log likelihood function of the model for the given data evaluated at the MLE’s of the parameters)”，就是對數似然函數的極大值的意思 (i.e. the maximum of the log likelihood function)。 從本節開始往後的章節中 “模型，model”，“廣義線性模型，generalized linear model”，和 “GLM” 將被視爲同義詞。 58.4 如何在 R 裏擬合 “GLM” 這裏討論用極大似然法擬合 “GLM” 模型的方法。前面一章節的複習也是在告訴我們，利用極大似然法簡單說就是找到模型參數，使得似然函數能夠取到極大值。對於線性迴歸來說， \\(\\text{MLE}\\) 可以用一個封閉式函數來計算；但是廣義線性迴歸模型則必須使用迭代法計算 (iterative methods)。 在 R 裏面擬合廣義線性模型的命令及其格式是： glm(response variable ~ explanatory variables to form linear predictor, family=name of distribution(link=link function), data=dataset) Tips: See help(glm) for other modeling options. See help(family) for other allowable link functions for each family. 下面的數據來自一個心理學臨牀實驗，比較的是和安慰劑組相比，注射嗎啡組，注射海洛因組對象的精神病檢測指數的前後變化。 Mental &lt;- read.table(&quot;../backupfiles/MENTAL.DAT&quot;, header = FALSE, sep =&quot;&quot;, col.names = c(&quot;treatment&quot;, &quot;Before&quot;, &quot;After&quot;)) Mental$treatment[Mental$treatment == 1] &lt;- &quot;placebo&quot; Mental$treatment[Mental$treatment == 2] &lt;- &quot;morphine&quot; Mental$treatment[Mental$treatment == 3] &lt;- &quot;heroin&quot; Mental$treatment &lt;- factor(Mental$treatment, levels = c(&quot;placebo&quot;, &quot;morphine&quot;, &quot;heroin&quot;)) head(Mental) ## treatment Before After ## 1 placebo 0 7 ## 2 placebo 2 1 ## 3 placebo 14 10 ## 4 placebo 5 10 ## 5 placebo 5 6 ## 6 placebo 4 2 我們來比較一下簡單線性迴歸的代碼輸出結果和廣義線性迴歸代碼輸出結果是否一致： 用 lm 命令，擬合因變量爲注射後精神病檢測指數，預測變量爲治療方式和注射錢精神病檢測指數，及兩者的交互作用項： Model1 &lt;- lm(After ~ treatment*Before, data = Mental) summary(Model1) ## ## Call: ## lm(formula = After ~ treatment * Before, data = Mental) ## ## Residuals: ## Min 1Q Median 3Q Max ## -7.82808 -1.93513 -0.51606 1.41607 11.36012 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.978030 1.294069 1.5285 0.131158 ## treatmentmorphine -1.211742 1.750342 -0.6923 0.491185 ## treatmentheroin -1.461968 1.771855 -0.8251 0.412284 ## Before 0.593939 0.183468 3.2373 0.001889 ** ## treatmentmorphine:Before -0.089526 0.248346 -0.3605 0.719633 ## treatmentheroin:Before -0.312985 0.250383 -1.2500 0.215704 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 3.3329 on 66 degrees of freedom ## Multiple R-squared: 0.34418, Adjusted R-squared: 0.29449 ## F-statistic: 6.9274 on 5 and 66 DF, p-value: 0.000029744 同樣的模型也可以用 glm 命令擬合： Model2 &lt;- glm(After ~ treatment*Before, family = gaussian(link = &quot;identity&quot;), data = Mental) summary(Model2) ## ## Call: ## glm(formula = After ~ treatment * Before, family = gaussian(link = &quot;identity&quot;), ## data = Mental) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -7.82808 -1.93513 -0.51606 1.41607 11.36012 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.978030 1.294069 1.5285 0.131158 ## treatmentmorphine -1.211742 1.750342 -0.6923 0.491185 ## treatmentheroin -1.461968 1.771855 -0.8251 0.412284 ## Before 0.593939 0.183468 3.2373 0.001889 ** ## treatmentmorphine:Before -0.089526 0.248346 -0.3605 0.719633 ## treatmentheroin:Before -0.312985 0.250383 -1.2500 0.215704 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for gaussian family taken to be 11.107994) ## ## Null deviance: 1117.875 on 71 degrees of freedom ## Residual deviance: 733.128 on 66 degrees of freedom ## AIC: 385.414 ## ## Number of Fisher Scoring iterations: 2 可以看到，glm 命令的輸出結果略多，但是參數估計的部分是完全相同的。但是如果你用的是坑爹的 STATA，那裏面的 glm 命令中的統計檢驗量和 \\(p\\) 值用的則是正態分佈近似法。所以在 STATA 裏面簡單線性迴歸模型最好不要使用 glm 命令： glm After i.treatt##c.Before, family(gaussian) link(identity) Iteration 0: log likelihood = -185.70711 Generalized linear models No. of obs = 72 Optimization : ML Residual df = 66 Scale parameter = 11.10799 Deviance = 733.1276068 (1/df) Deviance = 11.10799 Pearson = 733.1276068 (1/df) Pearson = 11.10799 Variance function: V(u) = 1 [Gaussian] Link function : g(u) = u [Identity] AIC = 5.325197 Log likelihood = -185.707106 BIC = 450.8676 ------------------------------------------------------------------------------ | OIM After| Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- treat | 2 | -1.211742 1.750342 -0.69 0.489 -4.642349 2.218865 3 | -1.461968 1.771855 -0.83 0.409 -4.934741 2.010805 | Before | .5939394 .1834682 3.24 0.001 .2343483 .9535305 | treat#Before| 2 | -.0895258 .2483459 -0.36 0.718 -.5762749 .3972233 3 | -.3129855 .2503829 -1.25 0.211 -.803727 .1777561 | _cons | 1.97803 1.294069 1.53 0.126 -.5582981 4.514359 ------------------------------------------------------------------------------ 回到 R 來， 當儲存了一個 Model2 向量在 R 裏之後，你可以用下面的各種命令獲取你想要的各種有用的信息。 confint(Model2) # 95% CI for the coefficients ## 2.5 % 97.5 % ## (Intercept) -0.55829809 4.51435869 ## treatmentmorphine -4.64234925 2.21886536 ## treatmentheroin -4.93474055 2.01080452 ## Before 0.23434829 0.95353050 ## treatmentmorphine:Before -0.57627487 0.39722332 ## treatmentheroin:Before -0.80372697 0.17775605 exp(coef(Model2)) # exponentiated coefficients ## (Intercept) treatmentmorphine treatmentheroin Before ## 7.22849102 0.29767829 0.23177968 1.81110905 ## treatmentmorphine:Before treatmentheroin:Before ## 0.91436470 0.73126055 exp(confint(Model2)) # 95% CI for exponentiated coefficients ## 2.5 % 97.5 % ## (Intercept) 0.5721820406 91.3189836 ## treatmentmorphine 0.0096350359 9.1968898 ## treatmentheroin 0.0071923267 7.4693242 ## Before 1.2640846824 2.5948546 ## treatmentmorphine:Before 0.5619879499 1.4876881 ## treatmentheroin:Before 0.4476574460 1.1945339 head(predict(Model2, type=&quot;response&quot;)) # predicted values ## 1 2 3 4 5 6 ## 1.9780303 3.1659091 10.2931818 4.9477273 4.9477273 4.3537879 head(residuals(Model2, type=&quot;deviance&quot;)) # residuals ## 1 2 3 4 5 6 ## 5.02196970 -2.16590909 -0.29318182 5.05227273 1.05227273 -2.35378788 58.4.1 margins 命令 一個在 STATA 裏面十分有用的用於預測的命令 margins，在 R 裏，下載了 margins 包以後就可以調用和 STATA 的 margins 類似的命令。 假如我們用擬合的模型預測當注射前精神病檢測值分別是 0，6，12 分時三組之間的注射後精神病檢測值差，可以這樣求： summary(margins(Model2, at = list(Before=c(0,6,12)))) ## factor Before AME SE z p lower upper ## Before 0.0000 0.4598 0.1004 4.5797 0.0000 0.2630 0.6565 ## Before 6.0000 0.4598 0.1004 4.5797 0.0000 0.2630 0.6565 ## Before 12.0000 0.4598 0.1004 4.5798 0.0000 0.2630 0.6565 ## treatmentheroin 0.0000 -1.4620 1.7719 -0.8251 0.4093 -4.9347 2.0108 ## treatmentheroin 6.0000 -3.3399 0.9624 -3.4705 0.0005 -5.2261 -1.4537 ## treatmentheroin 12.0000 -5.2178 1.7963 -2.9048 0.0037 -8.7384 -1.6972 ## treatmentmorphine 0.0000 -1.2117 1.7503 -0.6923 0.4888 -4.6423 2.2189 ## treatmentmorphine 6.0000 -1.7489 0.9630 -1.8160 0.0694 -3.6364 0.1386 ## treatmentmorphine 12.0000 -2.2861 1.7977 -1.2716 0.2035 -5.8095 1.2374 對比 STATA 裏的結果： margins, dydx(trt) at(pre = (0 6 12)) Conditional marginal effects Number of obs = 72 Model VCE : OIM Expression : Predicted mean post, predict() dy/dx w.r.t. : 2.trt 3.trt 1._at : pre = 0 2._at : pre = 6 3._at : pre = 12 ------------------------------------------------------------------------------ | Delta-method | dy/dx Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- 1.trt | (base outcome) -------------+---------------------------------------------------------------- 2.trt | _at | 1 | -1.211742 1.750342 -0.69 0.489 -4.642349 2.218865 2 | -1.748897 .963025 -1.82 0.069 -3.636391 .1385977 3 | -2.286051 1.797717 -1.27 0.204 -5.809513 1.23741 -------------+---------------------------------------------------------------- 3.trt | _at | 1 | -1.461968 1.771855 -0.83 0.409 -4.934741 2.010805 2 | -3.339881 .9623512 -3.47 0.001 -5.226054 -1.453707 3 | -5.217794 1.796264 -2.90 0.004 -8.738406 -1.697181 ------------------------------------------------------------------------------ Note: dy/dx for factor levels is the discrete change from the base level. 58.4.2 ggplot2::geom_smooth(method = \"loess\") 命令 類似 STATA 作散點圖時的 lowess 命令，在 R 裏，你可以用 ggplot2 包裏自帶的 geom_smooth(method = \"loess\") 選項命令，給散點圖添加平滑曲線。把觀測數據中變量之間的關係視覺化，用於輔助判斷一個模型是否可以被擬合爲線性關係。全稱是 “locally weighted scatterplot smoothing”，縮寫成 “lowess/loess”。LOWESS 的原理簡略說是，通過把預測變量分成幾個部分，分別在各個小區間內擬合迴歸各自的迴歸曲線，如此便可以將每個觀測值都以各自不同的加權值放入整個模型中，然而正如我們在簡單線性模型中提到過的，這樣的曲線更加擬合觀測數據，而不能說明觀測值來自的人羣中，兩個變量之間的關係。此方法的靈活性在於，你可以選擇平滑的程度，該平滑程度用 bandwith(STATA) 或者 span(R) 表示，取值範圍是 \\(0 \\sim 1\\) 之間的任意值，越靠近 \\(1\\)，Lowess 曲線越接近簡單線性直線，越靠近 \\(0\\)，那麼每個觀測點本身的權重越大，擬合的 Lowess 曲線越接近觀測數據本身。下圖 58.1 提示，選用的平滑程度 \\(= 0.8\\) 時，精神病測量分數在 (安慰劑組中) 實驗前後的關係接近線性關係。當我們降低平滑程度，Lowess 曲線接近觀測數據本身，其實是太接近觀測數據本身，反而無法提供太多的信息。 ggplot(Mental, aes(Before, After)) + geom_point() + geom_smooth(method = &quot;loess&quot;, span = 0.8, se = FALSE) + facet_grid(treatment ~ .) + theme_bw() ## `geom_smooth()` using formula &#39;y ~ x&#39; 圖 58.1: Lowess smoother, with bandwith/span set to 0.8, for the mental data ggplot(Mental, aes(Before, After)) + geom_point() + geom_smooth(method = &quot;loess&quot;, span = 0.4, se = FALSE) + facet_grid(treatment ~ .) + theme_bw() 圖 58.2: Lowess smoother, with bandwith/span set to 0.4, for the mental data 58.5 GLM-Practical 02 58.5.1 思考本章中指數分布家族的參數設置。假如，有一個觀測值 \\(y\\) 來自指數家族。試求證: MLE \\(\\hat\\theta\\) 是 \\(b^\\prime(\\theta) = y\\) 的解; \\(\\theta\\) 的 MLE 的方差是 \\(\\frac{\\phi}{b^{\\prime\\prime}(\\theta)}\\); 如果 \\(Y\\sim N(\\mu, \\sigma^2)\\)，試進一步證明 \\(b^\\prime(\\theta) = \\mu\\) 且 \\(\\frac{\\phi}{b^{\\prime\\prime}(\\theta)} = \\sigma^2\\) 當數據來自指數分布家族，它的對數似然可以寫作: \\[ \\frac{y\\cdot\\theta - b(\\theta)}{\\phi} - c(y, \\phi) \\] 對這個對數似然方程取 \\(\\theta\\) 的偏微分方程可得: \\[ \\frac{\\partial}{\\partial\\theta}\\ell(\\theta,\\phi) = \\frac{y - b^\\prime(\\theta)}{\\phi} \\] 令此偏微分方程等於零，那麼我們可以知道 \\(\\hat\\theta\\) 是 \\(b^\\prime(\\theta) = y\\) 的解。 MLE 的方差可以用 Fisher information 來推導。 \\[ S^2=\\left.-\\frac{1}{\\ell^{\\prime\\prime}(\\theta)}\\right\\vert_{\\theta=\\hat{\\theta}} \\\\ \\text{Because } \\ell^{\\prime\\prime}(\\theta) = -\\frac{b^{\\prime\\prime}(\\theta)}{\\phi} \\\\ \\Rightarrow S^2 = \\frac{\\phi}{b^{\\prime\\prime}(\\theta)} \\] 如果 \\(Y\\sim N(\\mu, \\sigma^2)\\), 那麼，根據正態分布數據屬於指數家族的性質， \\[ \\phi = \\sigma^2,\\theta = \\mu, b(\\theta =\\mu) = \\frac{\\mu^2}{2} \\\\ \\Rightarrow b^\\prime(\\theta) = \\mu \\\\ \\Rightarrow S^2 = \\frac{\\phi}{b^{\\prime\\prime}(\\theta)} = \\sigma^2 \\] 58.5.2 R 練習 數據來自一個RCT臨牀試驗，比較嗎啡，海洛因和安慰劑在患者精神狀態評分上的影響，試分析數據回答下面的問題: 三組治療組之間注射後的評分均值不同嗎？ 調整基線時精神狀態評分對你的模型結果有什麼影響？ 基線時精神狀態評分的高低會影響不同藥物的效果嗎？ 58.5.2.1 數據讀入 R，作初步分析 Mental &lt;- read.table(&quot;../backupfiles/MENTAL.DAT&quot;, header = FALSE, sep =&quot;&quot;, col.names = c(&quot;treatment&quot;, &quot;prement&quot;, &quot;mentact&quot;)) Mental$treatment[Mental$treatment == 1] &lt;- &quot;placebo&quot; Mental$treatment[Mental$treatment == 2] &lt;- &quot;morphine&quot; Mental$treatment[Mental$treatment == 3] &lt;- &quot;heroin&quot; Mental$treatment &lt;- factor(Mental$treatment, levels = c(&quot;placebo&quot;, &quot;morphine&quot;, &quot;heroin&quot;)) head(Mental) ## treatment prement mentact ## 1 placebo 0 7 ## 2 placebo 2 1 ## 3 placebo 14 10 ## 4 placebo 5 10 ## 5 placebo 5 6 ## 6 placebo 4 2 # Use hsitograms and plots to look at the distributions of the pre- and post- injection scores. # with(Mental, hist(prement, breaks = 14, freq = F)) # qplot(prement, data = Mental, binwidth = 1) hist1 &lt;- ggplot(Mental, aes(x = prement, y = ..density..)) + geom_histogram(binwidth = 1) + theme_bw() hist2 &lt;- ggplot(Mental, aes(x = mentact, y = ..density..)) + geom_histogram(binwidth = 1) + theme_bw() Scatter &lt;- ggplot(Mental, aes(x = prement, y = mentact)) + geom_point()+ theme_bw() grid.arrange(hist1, hist2, Scatter, ncol=2) 圖 58.3: Histogram and plots 可以看到柱狀圖暗示我們實驗前後的得分本身都不服從正態分布。但是這並不妨礙我們使用回歸模型來做推斷。畢竟，線性回歸模型只要求殘差服從正態分布。另外，散點圖提示實驗前後的得分之間可能呈正相關。 ggplot(Mental, aes(prement, mentact)) + geom_point() + geom_smooth(method = &quot;loess&quot;, span = 0.8, se = FALSE) + facet_grid(treatment ~ .) + theme_bw() ## `geom_smooth()` using formula &#39;y ~ x&#39; 圖 58.4: Lowess smoother, with bandwith/span set to 0.8, for the mental data 對於每組實驗組來說，觀測值數量都很少，姑且可以認爲線性模型是合理的。 表 58.1: Residual sums of squares and degress of freedom from five different models for post-injection mental activity scores (pre-inj = preinjection score) Terms fitted RSS Residuals df Overall mean 1117.875 71 Drugs 980.625 69 Pre-inj 884.328 70 Drugs + Pre-inj 752.055 68 Drugs + Pre-inj + Drugs×Pre-inj 733.127 66 58.5.2.2 寫下表格 58.1 中五個線性回歸模型的數學表達式，在 R 裏面擬合這5個模型，在第二列第三列分別填寫各模型的統計信息 (殘差平方和 residuals sum of squares，和 殘差自由度 reiduals degrees of freedom)。利用該表格填寫完整以後的內容，用筆和紙正式地比較模型 3 和 4; 4 和 5 的擬合優度。然後和 R 的輸出結果比較確認。你會作出怎樣的結論？另外，爲什麼相似的比較模型的方法不適用於比較模型 2 和 3？ 解 用 \\(z_i, y_i\\) 分別標記第 \\(i\\) 名患者在藥物注射前，後兩次測量的精神醫學指徵評分。使用線性回歸模型的前提假設是 \\(y_i \\sim N(\\mu_i, \\sigma^2)\\) 且互相獨立。另外，預測變量的標記爲: \\[ x_{1i} = \\left\\{ \\begin{array}{ll} 0 \\text{ placebo or heroin }\\\\ 1 \\text{ morphine}\\\\ \\end{array} \\right. x_{2i} = \\left\\{ \\begin{array}{ll} 0 \\text{ placebo or morphine }\\\\ 1 \\text{ heroin}\\\\ \\end{array} \\right. \\\\ \\] Overall mean model 鏈接方程部分: \\(\\eta_i = \\beta_0\\) #1. Overall mean model Overall &lt;- lm(mentact ~ 1, data = Mental) summary(Overall) ## ## Call: ## lm(formula = mentact ~ 1, data = Mental) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3.7917 -3.7917 -1.7917 2.4583 10.2083 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 3.79167 0.46763 8.1083 1.053e-11 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 3.968 on 71 degrees of freedom anova(Overall) ## Analysis of Variance Table ## ## Response: mentact ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## Residuals 71 1117.88 15.7447 Drugs model 鏈接方程部分: \\(\\eta_i = \\beta_0 + \\beta_1 x_{1i} + \\beta_2 x_{2i}\\) #2. Drugs model Drugs &lt;- lm(mentact ~ treatment, data = Mental) summary(Drugs) ## ## Call: ## lm(formula = mentact ~ treatment, data = Mental) ## ## Residuals: ## Min 1Q Median 3Q Max ## -5.5417 -2.1667 -1.1667 1.9583 10.8333 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 5.54167 0.76952 7.2014 5.732e-10 *** ## treatmentmorphine -1.87500 1.08827 -1.7229 0.089382 . ## treatmentheroin -3.37500 1.08827 -3.1013 0.002791 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 3.7699 on 69 degrees of freedom ## Multiple R-squared: 0.12278, Adjusted R-squared: 0.097351 ## F-statistic: 4.8287 on 2 and 69 DF, p-value: 0.010896 anova(Drugs) ## Analysis of Variance Table ## ## Response: mentact ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## treatment 2 137.250 68.625 4.82868 0.010896 * ## Residuals 69 980.625 14.212 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pre-inj model 鏈接方程部分 \\(\\eta_i = \\beta_0 + \\beta_3 z_i\\) #3. Pre-inj model Pre_inj &lt;- lm(mentact ~ prement, data = Mental) summary(Pre_inj) ## ## Call: ## lm(formula = mentact ~ prement, data = Mental) ## ## Residuals: ## Min 1Q Median 3Q Max ## -7.51879 -2.32837 -0.89028 2.25419 10.06844 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.09667 0.75388 1.4547 0.1502 ## prement 0.45872 0.10669 4.2996 0.00005433 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 3.5543 on 70 degrees of freedom ## Multiple R-squared: 0.20892, Adjusted R-squared: 0.19762 ## F-statistic: 18.487 on 1 and 70 DF, p-value: 0.000054335 anova(Pre_inj) ## Analysis of Variance Table ## ## Response: mentact ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## prement 1 233.547 233.5473 18.4867 0.000054335 *** ## Residuals 70 884.328 12.6333 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Drugs + pre-inj model 鏈接方程部分: \\(\\eta_i = \\beta_0 + \\beta_1 x_{1i} + \\beta_2 x_{2i} + \\beta_3z_i\\) #4. Drugs + Pre-inj model Drug_Pre_inj &lt;- lm(mentact ~ treatment + prement, data = Mental) summary(Drug_Pre_inj) ## ## Call: ## lm(formula = mentact ~ treatment + prement, data = Mental) ## ## Residuals: ## Min 1Q Median 3Q Max ## -7.41185 -2.05478 -0.22877 1.08012 11.68451 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.817898 0.905424 3.1122 0.0027149 ** ## treatmentmorphine -1.761510 0.960344 -1.8342 0.0709923 . ## treatmentheroin -3.318255 0.960100 -3.4562 0.0009488 *** ## prement 0.453961 0.099857 4.5461 0.00002308 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 3.3256 on 68 degrees of freedom ## Multiple R-squared: 0.32725, Adjusted R-squared: 0.29757 ## F-statistic: 11.026 on 3 and 68 DF, p-value: 5.4921e-06 anova(Drug_Pre_inj) ## Analysis of Variance Table ## ## Response: mentact ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## treatment 2 137.250 68.6250 6.20499 0.0033478 ** ## prement 1 228.570 228.5696 20.66700 0.00002308 *** ## Residuals 68 752.055 11.0596 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Drug + Pre-inj + Drug×Pre-inj 鏈接方程部分: \\(\\eta_i = \\beta_0 + \\beta_1 x_{1i} + \\beta_2 x_{2i} + \\beta_3 z_i + \\beta_{13}x_{1i}z_i + \\beta_{23}x_{2i}z_i\\) #5. Drugs + Pre-inj + Drug×Pre-inj model Model5 &lt;- lm(mentact ~ treatment*prement, data = Mental) summary(Model5) ## ## Call: ## lm(formula = mentact ~ treatment * prement, data = Mental) ## ## Residuals: ## Min 1Q Median 3Q Max ## -7.82808 -1.93513 -0.51606 1.41607 11.36012 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.978030 1.294069 1.5285 0.131158 ## treatmentmorphine -1.211742 1.750342 -0.6923 0.491185 ## treatmentheroin -1.461968 1.771855 -0.8251 0.412284 ## prement 0.593939 0.183468 3.2373 0.001889 ** ## treatmentmorphine:prement -0.089526 0.248346 -0.3605 0.719633 ## treatmentheroin:prement -0.312985 0.250383 -1.2500 0.215704 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 3.3329 on 66 degrees of freedom ## Multiple R-squared: 0.34418, Adjusted R-squared: 0.29449 ## F-statistic: 6.9274 on 5 and 66 DF, p-value: 0.000029744 anova(Model5) ## Analysis of Variance Table ## ## Response: mentact ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## treatment 2 137.250 68.6250 6.17798 0.0034719 ** ## prement 1 228.570 228.5696 20.57704 0.000024811 *** ## treatment:prement 2 18.928 9.4639 0.85199 0.4312025 ## Residuals 66 733.128 11.1080 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 比較模型 3 和 4 可以使用相關的 F 統計量 (Partial F tests) \\[ F=\\frac{(844.328 - 752.055)/(70-68)}{752.055/68} = 5.98 \\] 自由度爲 (2,68) 時 F 統計量爲 5.98 的概率是: 1-pf(5.98, 2, 68) ## [1] 0.0040516165 所以我們有極強的證據證明這兩個模型顯著不同，且模型 4 擬合數據更好，且該證據也證明了注射藥物後三組之間的精神醫學指徵的分顯著不同。用 R 進行偏 F 檢驗如下，可見我們的計算是完全正確的: anova(Pre_inj, Drug_Pre_inj) ## Analysis of Variance Table ## ## Model 1: mentact ~ prement ## Model 2: mentact ~ treatment + prement ## Res.Df RSS Df Sum of Sq F Pr(&gt;F) ## 1 70 884.328 ## 2 68 752.055 2 132.272 5.97996 0.0040518 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 比較模型 4 和 5: anova(Drug_Pre_inj, Model5) ## Analysis of Variance Table ## ## Model 1: mentact ~ treatment + prement ## Model 2: mentact ~ treatment * prement ## Res.Df RSS Df Sum of Sq F Pr(&gt;F) ## 1 68 752.055 ## 2 66 733.128 2 18.9278 0.85199 0.4312 所以，模型 4 和 5 比較的結果告訴我們沒有證據證明實驗前的精神醫學指徵得分和不同治療組之間有交互作用。但是由於模型 2 和 3 本身不是互爲嵌套式結構的，所以他們無法通過相似的偏 F 檢驗來比較模型。 58.5.2.3 用 glm 命令擬合模型 4，試比較其輸出結果和 lm 之間的異同: Model4 &lt;- glm(mentact ~ treatment + prement, family = gaussian(link = &quot;identity&quot;), data = Mental) summary(Model4) ## ## Call: ## glm(formula = mentact ~ treatment + prement, family = gaussian(link = &quot;identity&quot;), ## data = Mental) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -7.41185 -2.05478 -0.22877 1.08012 11.68451 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.817898 0.905424 3.1122 0.0027149 ** ## treatmentmorphine -1.761510 0.960344 -1.8342 0.0709923 . ## treatmentheroin -3.318255 0.960100 -3.4562 0.0009488 *** ## prement 0.453961 0.099857 4.5461 0.00002308 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for gaussian family taken to be 11.059638) ## ## Null deviance: 1117.875 on 71 degrees of freedom ## Residual deviance: 752.055 on 68 degrees of freedom ## AIC: 383.25 ## ## Number of Fisher Scoring iterations: 2 可以看出各個參數估計和標準誤估計都是完全相同的。但是當你使用 STATA 的 glm 命令時，它默認的高斯鏈接方程使用的不是 t 檢驗結果而是 z 檢驗結果，所以會給出略微不同的 95% 信賴區間。 58.5.2.4 使用相關模型的結果填寫下列表格 表 58.2: Comparison of mean post-injection mental activity scores. Mean Mean diff with Placebo SE Adj. mean diff with Placebo SE Placebo 5.542 0.000 – 0.000 – Morphine 3.667 -1.875 1.08 -1.761 0.96 Heroin 2.167 -3.375 1.08 -3.310 0.96 58.5.2.5 對分析的結果做簡短的總結 在模型 2 (drug model) 中，F 檢驗給出的 p = 0.0109，提供了較爲有力的證據證明每個治療組治療後的精神醫學指徵得分是不同的。但是，觀察每個回歸系數的檢驗結果，發現嗎啡組和安慰劑組之差其實沒有達到 5% 統計學意義 (p = 0.089)，海洛因組和安慰劑組之間的得分差則達到了 5% 的統計學意義 (p = 0.003)。 模型加入對實驗前精神醫學指徵得分的調整之後，組與組之間的估計差發生了些許(但是並不大)的變化。這其實也是我們事先估計的結果，因爲對於RCT來說，沒有混雜因素，之所以調整基線值，主要爲的是提升參數估計的精確度 (減小 SE，從而使95% 信賴區間更小)。 對交互作用實施了偏 F 檢驗得到的結果 (p = 0.43) 提示，沒有證據反對零假設 – 藥物作用效果不因爲實驗前患者的精神醫學指徵得分不同而不同。 最後，glm 和 lm 的模型結果輸出在 R 裏是幾乎完全相同的，在 STATA 裏面則有計算方法的不同導致不同的95%CI。 "],["logistic.html", "第 59 章 二項分佈數據的廣義線性迴歸模型 logistic regression model 59.1 彙總後/個人 (grouped / individual) 的二項分佈數據 59.2 二項分佈數據的廣義線性迴歸模型 59.3 注 59.4 邏輯迴歸模型迴歸係數的實際意義 59.5 邏輯迴歸實際案例 59.6 GLM-Practical 03", " 第 59 章 二項分佈數據的廣義線性迴歸模型 logistic regression model 二項分佈數據在醫學研究中很常見，例子有千千萬，下面這些只是作爲拋磚引玉： 心臟搭橋手術和血管成形術兩組病人比較療效時，結果變量可以是：死亡 (是/否)；心肌梗死發作 (是/否)； 機械心臟瓣膜手術結果：成功/失敗； 用小鼠作不同劑量二硫化碳暴露下的毒理學實驗，結果變量是：小鼠死亡 (是/否)； 隊列研究中追蹤對象中出現心肌梗死病例，結果變量是：心肌梗死發作 (是/否)。 59.1 彙總後/個人 (grouped / individual) 的二項分佈數據 下面的數據，來自某個毒理學實驗，不同劑量的二硫化碳暴露下小鼠的死亡數和總數的數據： ## dose n_deaths n_subjects ## 1 49.06 6 59 ## 2 52.99 13 60 ## 3 56.91 18 62 ## 4 60.84 28 56 ## 5 64.76 52 63 ## 6 68.69 53 59 ## 7 72.61 60 62 ## 8 76.54 59 60 很容易理解這是一個典型的彙總後二項分佈數據 (grouped binary data)。每組不同的劑量，第二列，第三列分別是死亡數和實驗總數。另外一種個人二項分佈數據 (individual binary data) 的形式是這樣的： ## dose death ## 1 49.06 1 ## 2 49.06 1 ## 3 49.06 1 ## 4 49.06 1 ## 5 49.06 1 ## 6 49.06 1 ## 7 49.06 0 ## 8 49.06 0 ## 9 49.06 0 ## 10 49.06 0 ## 11 . . ## 12 . . ## 13 . . 個人二項分佈數據其實就是把每個觀察對象的事件發生與否的信息都呈現出來。通常個人二項分佈數據又被稱爲伯努利數據，分組型的二項分佈數據被稱爲二項數據。兩種表達形式，但是存儲的是一樣的數據。 59.2 二項分佈數據的廣義線性迴歸模型 而所有的 GLM 一樣，二項分佈的 GLM 包括三個部分： 因變量的分佈 Distribution：因變量應相互獨立，且服從二項分佈 \\[\\begin{aligned} Y_i &amp;\\sim \\text{Bin}(n_i, \\pi_i), i = 1, \\cdots, n \\\\ E(Y_i) &amp;= \\mu_i = n_i\\pi_i\\end{aligned}\\] 線性預測方程 Linear predictor：第 \\(i\\) 名觀測對象的預測變量的線性迴歸模型 \\[\\eta_i = \\alpha + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip}\\] 鏈接方程 Link function：鏈接方程連接的是 \\(\\mu_i = n\\pi_i\\) 和線性預測方程。一個二項分佈因變量數據，可以有許多種鏈接方程： \\(\\mathbf{logit}:\\) \\[\\text{logit}(\\pi) = \\text{ln}(\\frac{\\pi}{1-\\pi})\\] \\(\\mathbf{probit}:\\) \\[\\text{probit}(\\pi) = \\Phi^{-1}(\\pi)\\] \\(\\mathbf{complementary\\; log-log}:\\) \\[\\text{cloglog}(\\pi) = \\text{ln}\\{ - \\text{ln}(1-\\pi) \\}\\] \\(\\mathbf{log:}\\) \\[\\text{log}(\\pi) = \\text{ln}(\\pi)\\] 59.3 注 概率鏈接方程 \\(\\text{probit}\\)，\\(\\Phi\\) 被定義爲標準正態分佈的累積概率方程 (Section 7.3)： \\[\\Phi(z) = \\text{Pr}(Z \\leqslant z), \\text{ for } Z\\sim N(0,1)\\] 二項分佈數據的標準參數 (canonical parameter) \\(\\theta_i\\) 的標準鏈接方程是 \\(\\theta_i = \\text{logit}(\\pi_i)\\)。 \\(\\text{logit, probit, complementary log-log}\\) 三種鏈接方程都能達到把閾值僅限於 \\(0 \\sim 1\\) 之間的因變量概率映射到線性預測方程的全實數閾值 \\((-\\infty,+\\infty)\\) 的目的。但是最後一個 \\(\\text{log}\\) 鏈接方程只能映射全部的非零負實數 \\((-\\infty,0)\\)。 \\(\\text{logit, probit}\\) 鏈接方程都是以 \\(\\pi= 0.5\\) 爲對稱軸左右對稱的。但是 \\(\\text{cloglog}\\) 則沒有對稱的性質。 鏈接方程 \\(\\text{log}\\) 具有可以直接被解讀爲對數危險度比 (log Risk Ratio) 的優點，所以也常常在應用中見到。對數鏈接方程還有其他的優點 (非塌陷性 non-collapsibility)，但是它的最大缺點是，有時候利用這個鏈接方程的模型無法收斂 (converge)。 \\(\\text{logit}\\) 鏈接方程是我們最常見的，也最直觀易於理解。利用這個鏈接方程擬合的模型的迴歸係數能夠直接被理解爲對數比值比 (log Odds Ratio)。 如果是個人數據 (individual data)，那麼 \\(n_i = 1\\)，\\(i\\) 是每一個觀測對象的編碼。那麼 \\(Y_i = 0\\text{ or }1\\)，代表事件發生或沒發生/成功或者失敗。如果是分組數據 (grouped data)，\\(i\\) 是每個組的編號，\\(n_i\\) 指的是第 \\(i\\) 組中觀測對象的人數，\\(Y_i\\) 是第 \\(i\\) 組的 \\(n\\) 名對象中事件發生的次數/成功的次數。 59.3.1 Exercise. Link functions. 推導出鏈接參數分別是 \\(\\text{log}\\) \\(\\text{logit}\\) \\(\\text{complementary log-log}\\) 時，用參數 \\(\\alpha, \\beta_1, \\cdots, \\beta_p\\) 表達的參數 \\(\\pi_i=?, E(Y_i)=\\mu_i=?\\) 解 \\(\\text{log}\\) \\[ \\begin{aligned} \\text{ln}(\\pi_i) &amp; = \\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i2} + \\cdots + \\beta_p x_{ip} \\\\ \\Rightarrow \\pi_i &amp; = e^{\\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i2} + \\cdots + \\beta_p x_{ip}} \\\\ \\mu_i &amp; = n_i\\pi_i = n_i e^{\\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i2} + \\cdots + \\beta_p x_{ip}} \\end{aligned} \\] \\(\\text{logit}\\) \\[ \\begin{aligned} \\text{logit}(\\pi_i) &amp; = \\text{ln}(\\frac{\\pi_i}{1-\\pi_i}) \\\\ &amp; = \\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i2} + \\cdots + \\beta_p x_{ip} \\\\ \\Rightarrow \\pi_i &amp; = \\frac{e^{\\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i2} + \\cdots + \\beta_p x_{ip}}}{1+e^{\\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i2} + \\cdots + \\beta_p x_{ip}}} \\\\ \\mu_i &amp; = \\frac{n_i e^{\\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i2} + \\cdots + \\beta_p x_{ip}}}{1+e^{\\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i2} + \\cdots + \\beta_p x_{ip}}} \\end{aligned} \\] \\(\\text{complementary log-log}\\) \\[ \\begin{aligned} \\text{cloglog}(\\pi_i) &amp; = \\text{ln}\\{ - \\text{ln}(1-\\pi) \\} \\\\ &amp; = \\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i2} + \\cdots + \\beta_p x_{ip} \\\\ \\Rightarrow \\pi_i &amp; = 1 - e^{-e^{\\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i2} + \\cdots + \\beta_p x_{ip}}} \\\\ \\mu_i &amp; = n_i\\pi_i = n_i(1-e^{-e^{\\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i2} + \\cdots + \\beta_p x_{ip}}}) \\end{aligned} \\] 59.4 邏輯迴歸模型迴歸係數的實際意義 邏輯迴歸 (logistic regression) 的模型可以寫成是 \\[ \\text{logist}(\\pi_i) = \\text{ln}(\\frac{\\pi_i}{1-\\pi_i}) = \\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i2} + \\cdots + \\beta_p x_{ip} \\] 假如觀察對象 \\(j\\) 和 \\(i\\) 兩人中，其餘的預測變量都相同，二者之間有且僅有最後一個預測變量相差一個單位： \\[ \\begin{aligned} \\text{logit}(\\pi_j) &amp; = \\text{ln}(\\frac{\\pi_j}{1-\\pi_j}) = \\alpha + \\beta_1 x_{j1} + \\beta_2 x_{j2} + \\cdots + \\beta_p x_{jp} \\\\ \\text{logit}(\\pi_i) &amp; = \\text{ln}(\\frac{\\pi_i}{1-\\pi_i}) = \\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i2} + \\cdots + \\beta_p x_{ip} \\\\ \\text{Because they are} &amp; \\text{ in the same model share the same parameters, and } \\\\ x_{jp} &amp; = x_{ip} + 1\\\\ \\Rightarrow \\text{logit}(\\pi_j) - \\text{logit}(\\pi_i) &amp; = \\beta_p (x_{jp} + 1 - x_{jp}) = \\beta_p \\\\ \\Rightarrow \\beta_p &amp; = \\text{ln}(\\frac{\\pi_j}{1-\\pi_j}) - \\text{ln}(\\frac{\\pi_i}{1-\\pi_i}) \\\\ &amp; = \\text{ln}(\\frac{\\frac{\\pi_j}{1-\\pi_j}}{\\frac{\\pi_i}{1-\\pi_i}}) \\\\ &amp; = \\text{ln}(\\text{Odds Ratio}) \\end{aligned} \\] 所以迴歸係數 \\(\\beta_p\\) 可以被理解爲是 \\(j\\) 與 \\(i\\) 相比較時的對數比值比 log Odds Ratio。我們只要對迴歸係數求反函數，即可求得比值比。 59.5 邏輯迴歸實際案例 一組數據如下： 其中，牲畜來自兩大羣 (group)；每羣有五個組的牲畜被飼養五種不同濃度的飼料 (dfactor)；每組牲畜我們記錄了牲畜的總數 (cattle) 以及感染了瘋牛病的牲畜數量 (infect)： ## group dfactor cattle infect ## 1 1 1 11 8 ## 2 1 2 10 7 ## 3 1 3 12 5 ## 4 1 4 11 3 ## 5 1 5 12 2 ## 6 2 1 10 10 ## 7 2 2 10 9 ## 8 2 3 12 8 ## 9 2 4 11 6 ## 10 2 5 10 4 59.5.1 分析目的 通過對本數據的分析，回答如下的問題： 考慮了牲畜來自兩羣以後，不同的飼料 (dfactor) 是否和感染瘋牛病有關？ 兩羣牲畜之間，飼料和瘋牛病感染之間的關係是否不同？ 59.5.2 模型 1 飼料 + 羣 \\[ \\begin{aligned} \\text{Assume } Y_i &amp; \\sim \\text{Bin} (n_i, \\pi_i) \\\\ \\text{logit}(\\pi_i) &amp; = \\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i2} \\end{aligned} \\] Model1 &lt;- glm(cbind(infect, cattle - infect) ~ factor(group) + dfactor, family = binomial(link = logit), data = Cattle) summary(Model1) ## ## Call: ## glm(formula = cbind(infect, cattle - infect) ~ factor(group) + ## dfactor, family = binomial(link = logit), data = Cattle) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -0.60847 -0.17831 0.10110 0.31150 1.16876 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 2.13104 0.61130 3.4861 0.0004902 *** ## factor(group)2 1.30590 0.46540 2.8060 0.0050163 ** ## dfactor -0.78744 0.18135 -4.3422 0.00001411 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 33.52556 on 9 degrees of freedom ## Residual deviance: 2.45082 on 7 degrees of freedom ## AIC: 32.2537 ## ## Number of Fisher Scoring iterations: 4 epiDisplay::logistic.display(Model1) ## ## OR lower95ci upper95ci Pr(&gt;|Z|) ## factor(group)2 3.69102114 1.48251011 9.18957451 0.005016342395 ## dfactor 0.45500721 0.31889988 0.64920551 0.000014109282 於是，我們可以寫下這個邏輯迴歸的數學模型： \\[ \\begin{aligned} \\text{logit}(\\hat\\pi_i) &amp; = \\text{ln}(\\frac{\\hat\\pi_i}{1-\\hat\\pi_i}) = \\hat\\alpha + \\hat\\beta_1 x_{i1} + \\hat\\beta_2 x_{i2} \\\\ &amp; = 2.1310 - 0.7874 \\times \\text{dfactor} + 1.3059 \\times \\text{group} \\end{aligned} \\] 解讀這些參數估計的意義 截距 \\(\\hat\\alpha = 2.1310\\) 的含義是，當 \\(x_{1}, x_{2}\\) 都等於零，i.e. 飼料濃度 0，在第一羣的那些牲畜感染瘋牛病的對數比值 (log-odds)； 斜率 \\(\\hat\\beta_1 = -0.7874\\) 的含義是，當牲畜羣不變時，飼料濃度每增加一個單位，牲畜感染瘋牛病的對數比值的估計變化量 (estimated increase in log odds of infection)； 迴歸係數 \\(\\hat\\beta_2 = 1.3059\\) 的含義是，當飼料濃度不變時，兩羣牲畜之間感染瘋牛病的對數比值比 (log-Odds Ratio)，所以第二羣牲畜比第一羣牲畜感染瘋牛病的比值比的估計量，以及 \\(95\\%\\text{CI}\\) 的計算方法就是： \\[\\begin{aligned} \\text{exp}(\\hat\\beta_2) &amp; = \\text{exp}(1.3059) = 3.69,\\\\ \\text{ with 95% CI: } &amp; \\text{exp}(\\hat\\beta_2 \\pm 1.96\\times \\text{Std.Error}_{\\hat\\beta_2}) \\\\ &amp; = (1.48, 9.19) \\end{aligned}\\] 59.5.3 模型 2 增加交互作用項 飼料 \\(\\times\\) 羣 飼料濃度與瘋牛病感染之間的關係，是否因爲牲畜所在的 “羣” 不同而發生改變？ 定義增加了飼料和羣交互作用項的邏輯迴歸模型： \\[ \\text{logit}(\\pi_i) = \\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i2} + \\beta_3 x_{i1}\\times x_{i2} \\] Model2 &lt;- glm(cbind(infect, cattle - infect) ~ factor(group) + dfactor + factor(group)*dfactor, family = binomial(link = logit), data = Cattle) summary(Model2) ## ## Call: ## glm(formula = cbind(infect, cattle - infect) ~ factor(group) + ## dfactor + factor(group) * dfactor, family = binomial(link = logit), ## data = Cattle) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -0.71914 -0.16508 -0.02111 0.34451 1.00127 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.89028 0.73584 2.5689 0.010203 * ## factor(group)2 1.98867 1.34471 1.4789 0.139172 ## dfactor -0.70508 0.22955 -3.0716 0.002129 ** ## factor(group)2:dfactor -0.20583 0.37553 -0.5481 0.583619 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 33.52556 on 9 degrees of freedom ## Residual deviance: 2.14476 on 6 degrees of freedom ## AIC: 33.9477 ## ## Number of Fisher Scoring iterations: 4 epiDisplay::logistic.display(Model2) ## ## OR lower95ci upper95ci Pr(&gt;|Z|) ## factor(group)2 7.30580425 0.52365757 101.92686809 0.1391720038 ## dfactor 0.49406759 0.31506152 0.77477816 0.0021289774 ## factor(group)2:dfactor 0.81396890 0.38989883 1.69927508 0.5836187644 從輸出的報告來看，增加了交互作用項以後，在第一羣牲畜中，飼料濃度每增加一個單位，感染瘋牛病的比值比 (OR) 是 \\[ \\text{exp}(-0.7051) = 0.49 \\] 在第二羣牲畜中，飼料濃度每增加一個單位，感染瘋牛病的比值比 (OR) 變成了 \\[ \\text{exp}(-0.7051 - 0.2058) = 0.40 \\] 通過對 \\(\\hat\\beta_3 = 0\\) 的假設檢驗，就可以推斷飼料濃度和感染瘋牛病之間的關係是否因爲不同牲畜 “羣” 而不同。所以上面的報告中也已經有了交互作用項的檢驗結果 \\(p = 0.584\\)，所以，此處可以下的結論是：沒有足夠的證據證明交互作用存在。 59.6 GLM-Practical 03 數據來自一個毒理學實驗，該實驗中 8 組昆蟲在不同濃度的二硫化碳下暴露四個小時，實驗的目的是研究二硫化碳劑量和昆蟲死亡率之間的關系。 59.6.1 昆蟲的死亡率 Insect &lt;- read.table(&quot;../backupfiles/INSECT.RAW&quot;, header = FALSE, sep =&quot;&quot;, col.names = c(&quot;dose&quot;, &quot;n_deaths&quot;, &quot;n_subjects&quot;)) print(Insect) ## dose n_deaths n_subjects ## 1 49.06 6 59 ## 2 52.99 13 60 ## 3 56.91 18 62 ## 4 60.84 28 56 ## 5 64.76 52 63 ## 6 68.69 53 59 ## 7 72.61 60 62 ## 8 76.54 59 60 計算每組實驗濃度下死亡昆蟲的比例 Insect &lt;- Insect %&gt;% mutate(p = n_deaths/n_subjects) print(Insect) ## dose n_deaths n_subjects p ## 1 49.06 6 59 0.10169492 ## 2 52.99 13 60 0.21666667 ## 3 56.91 18 62 0.29032258 ## 4 60.84 28 56 0.50000000 ## 5 64.76 52 63 0.82539683 ## 6 68.69 53 59 0.89830508 ## 7 72.61 60 62 0.96774194 ## 8 76.54 59 60 0.98333333 將濃度和死亡比例做散點圖 ggplot(Insect, aes(x = dose, y = p)) + geom_point()+ scale_x_continuous(breaks = seq(50, 75, by = 5)) + scale_y_continuous(breaks = seq(0, 1, by = 0.2)) + theme(axis.text = element_text(size = 15), axis.text.x = element_text(size = 15), axis.text.y = element_text(size = 15)) + labs(x = &quot;CS2 dose (mg/L)&quot;, y = &quot;Proportion killed&quot;) + theme(axis.title = element_text(size = 17), axis.text = element_text(size = 8), axis.line = element_line(colour = &quot;black&quot;), panel.border = element_blank(), panel.background = element_blank()) 圖 59.1: Scatter plot of CS2 dose and proportion killed. 這裏如果使用線性回歸模型是不合適的，這是因爲: 散點圖提示濃度和死亡比例之間不是線性關系; “比例”這一數據被局限在 (0,1) 範圍之內，線性回歸的結果變量不會滿足這個條件; 觀察數據本身的方差不齊，也就是每個觀察點(死亡比例)的變化程度無法保證是相同的。 計算死亡比例的對數比值比 (log-odds)，再作相同的散點圖，你會得出什麼樣的結論？ Insect &lt;- Insect %&gt;% mutate(log_odds = log(p / (1-p))) ggplot(Insect, aes(x = dose, y = log_odds)) + geom_point()+ scale_x_continuous(breaks = seq(50, 75, by = 5)) + scale_y_continuous(breaks = seq(-2, 4, by = 1)) + theme(axis.text = element_text(size = 15), axis.text.x = element_text(size = 15), axis.text.y = element_text(size = 15)) + labs(x = &quot;CS2 dose (mg/L)&quot;, y = &quot;Log odds of proportion killed&quot;) + theme(axis.title = element_text(size = 17), axis.text = element_text(size = 8), axis.line = element_line(colour = &quot;black&quot;), panel.border = element_blank(), panel.background = element_blank()) 圖 59.2: Scatter plot of CS2 dose and log-odds of proportion killed. 死亡比例的對數比值比和二硫化碳濃度之間更加接近線性關系。 寫下此模型的數學表達式，你的表達式必須指明數據的分布，線性預測方程，和鏈接方程三個部分。用 R 擬合你寫下的模型。 解 本數據中，隨機變量是每組昆蟲中死亡的個數。用 \\(Y_i\\) 標記第 \\(i\\) 組昆蟲中死亡昆蟲數量，\\(d_i\\) 表示第 \\(i\\) 組昆蟲被暴露的二硫化碳濃度。對於所有的廣義線性回歸模型來說，它都由三個部分組成: 1) 反應量分布 the response distribution; 2) 鏈接方程 link function; 3) 線性預測方程 linear predictor. 反應量分布: \\[ Y_i \\sim \\text{Bin}(n_i, \\pi_i),i = 1, \\cdots, 8 \\] \\(Y_i\\) 的期望值是 \\(\\mu_i\\) 的話，鏈接方程是 \\[ \\eta_i = \\log(\\frac{\\mu_i}{n_i - \\mu_i}) = \\log(\\frac{\\pi_i}{1- \\pi_i}) = \\text{logit}(\\pi_i) \\] 線性預測方程是 \\[ \\eta_i = \\beta_0 + \\beta_1 d_i \\] 用 R 來擬合這個模型: Model1 &lt;- glm(cbind(n_deaths, n_subjects - n_deaths) ~ dose, family = binomial(link = logit), data = Insect) summary(Model1) ## ## Call: ## glm(formula = cbind(n_deaths, n_subjects - n_deaths) ~ dose, ## family = binomial(link = logit), data = Insect) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.14983 -0.22403 0.25301 0.70846 0.99107 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -14.086403 1.228393 -11.467 &lt; 2.2e-16 *** ## dose 0.236593 0.020303 11.653 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 268.26829 on 7 degrees of freedom ## Residual deviance: 4.61548 on 6 degrees of freedom ## AIC: 37.394 ## ## Number of Fisher Scoring iterations: 4 計算 CS2 在 55mg/l 時該模型預測的昆蟲死亡概率是多少。 \\[ \\text{logit}(\\hat\\pi_i) = -14.09 + 0.2366\\times55 \\\\ \\Rightarrow \\hat\\pi_i = \\frac{\\exp(-14.09 + 0.2366\\times55)}{1+\\exp(-14.09 + 0.2366\\times55)} = 0.254 \\] 計算昆蟲死亡比例達到50%的CS2濃度(LD50)。 當死亡比例達到一半時， \\(\\hat\\pi = 0.5 \\Rightarrow \\text{logit}(\\hat\\pi) = 0\\) \\[ 0 = -14.09 + 0.2366 \\times \\text{LD50} \\\\ \\Rightarrow \\text{LD50} = 59.5 \\text{mg/l} \\] 有證據證明昆蟲的死亡率隨着 CS2 濃度的增加而升高嗎？ 有極強的證據證明昆蟲死亡率隨着 CS2 濃度增加而升高 \\((z = 11.65, P &lt; 0.001, \\text{Wald test})\\)。 將參數轉換成比值比，並解釋其實際含義。 CS2 濃每增加 1 個單位 (1 mg/l)，昆蟲死亡率的比值比是 \\(\\exp(0.2366) = 1.27\\)，95% 信賴區間下限: \\(\\exp(0.2366 - 1.96\\times0.0203) = 1.22\\)，上限: \\(\\exp(0.2366 + 1.96\\times0.0203) = 1.32\\)。 下面是在 R 裏計算的 OR 及其對應的信賴區間: epiDisplay::logistic.display(Model1) ## ## Logistic regression predicting cbind(n_deaths, n_subjects - n_deaths) ## ## OR(95%CI) P(Wald&#39;s test) P(LR-test) ## dose (cont. var.) 1.27 (1.22,1.32) &lt; 0.001 &lt; 0.001 ## ## Log-likelihood = -16.697 ## No. of observations = 8 ## AIC value = 37.394 提取模型中擬合值 fitted value # the fitted values relate to the probability of the deaths in each group Model1$fitted.values ## 1 2 3 4 5 6 7 8 ## 0.077332565 0.175181106 0.349349622 0.576375269 0.774754491 0.897077450 0.956586871 0.982405536 # to calculate the counts of numbers of deaths in each group Model1$fitted.values * Insect$n_subjects ## 1 2 3 4 5 6 7 8 ## 4.5626213 10.5108663 21.6596766 32.2770151 48.8095329 52.9275695 59.3083860 58.9443322 把模型擬合的概率和觀測概率放在同一個散點圖中比較: 圖 59.3: Observed (circles) and fitted (triangles) proportions are generally similar, with differences greatest in the third and fourth dose groups. 現在計算一個新的濃度值 dose2 = dose2。這個新的變量用於分析是否模型中使用濃度平方可以提升模型的擬合優度。1) 用 Wald 檢驗的結果說明濃度平方的回歸系數是否有意義。2) 新模型的擬合值是否有所改善？ Insect &lt;- Insect %&gt;% mutate(dose2 = dose^2) Model2 &lt;- glm(cbind(n_deaths, n_subjects - n_deaths) ~ dose + dose2, family = binomial(link = logit), data = Insect) summary(Model2) ## ## Call: ## glm(formula = cbind(n_deaths, n_subjects - n_deaths) ~ dose + ## dose2, family = binomial(link = logit), data = Insect) ## ## Deviance Residuals: ## 1 2 3 4 5 6 7 8 ## -0.004545 0.634377 -0.691056 -0.681962 1.223967 -0.154036 -0.029880 -0.561968 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -2.4881722 9.8677198 -0.2522 0.8009 ## dose -0.1500054 0.3291786 -0.4557 0.6486 ## dose2 0.0031871 0.0027273 1.1686 0.2426 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 268.26829 on 7 degrees of freedom ## Residual deviance: 3.18361 on 5 degrees of freedom ## AIC: 37.9621 ## ## Number of Fisher Scoring iterations: 4 加入了濃度平方以後，該項本身的 Wald 檢驗結果告訴我們，沒有證據證明濃度和昆蟲死亡比例的對數比值比之間呈拋物線關系。 圖 59.4: Fitted probabilities for each dose from two models 加入濃度平方二次項的模型在第三和第四組給出了比一次模型更加接近觀測值的估計。但是這種提升是極爲有限的，且統計學上加入的二次項的回歸系數並無意義。 所以，本數據分析的結論是，有很強的證據證明昆蟲死亡的概率隨着CS2 濃度的升高而升高 (P&lt;0.001)。死亡的比值 (odds)，隨着濃度每升高1個單位 (mg/l) 而升高 27% (95% CI: 22%-32%)。 59.6.2 哮喘門診數據 在一項橫斷面研究中，訪問哮喘門診連續達到 6 個月以上的全部患者被一一詢問其目前的用藥情況和症狀。下面的表格總結的是這些患者中，目前使用口服類固醇藥物與否，及患者報告夜間由於哮喘症狀而從睡眠中醒來的次數。 表 59.1: Frequency of night waking due to asthma Corticosteroids Never Less.than.once.a.week More.than.once.a.week Every.night User 27 41 44 38 Non-user 20 10 8 22 下面的 STATA 輸出報告，是對上述數據擬合的邏輯回歸的結果。其中變量 user 和 never 被編碼爲 0/1，1 代表該患者正在使用口服類固醇藥物，或者從未因爲哮喘而在夜間醒來。變量 sev 是患者自己報告的哮喘症狀嚴重程度 (0-3 分，分數越高症狀越嚴重)。 用表格的數據實施了一個總體的卡方檢驗還有一個卡方檢驗的傾向性檢驗。這兩個卡方檢驗的統計量分別是 12.87, 和 0.25。請解釋這兩個統計量的實際含義。 在零假設 – 使用口服類固醇藥物和夜間因爲哮喘而醒來次數之間沒有關系 – 條件下，表格總體的卡方檢驗服從 \\(\\chi^2_3\\) 分布。查表或者在 R 裏使用 1-pchisq(12.87, 3) ## [1] 0.0049263406 可以知道 p = 0.005。這是極強的反對零假設的證據。 相反，卡方檢驗的傾向性檢驗結果是 p = 0.62，這個結果提示使用類固醇藥物所佔的比例沒有傾向性: 1-pchisq(0.25, 1) ## [1] 0.61707508 兩個卡方檢驗的顯著不同應是因爲用類固醇藥物的患者比例在 “從不”, “低於每周一次”，“多餘每周一次” 中遞增，但是到了最後一組 “每天” 時又下降。傾向性檢驗比起總體的卡方檢驗在關系是單調遞增或者單調遞減時統計學效能更好，但是當關系變得復雜以後，傾向性卡方檢驗變得不再有優勢。傾向性檢驗其實等同於用一個變量 (用藥與否) 和另一個變量 (夜間因爲哮喘醒來次數) 做線性回歸。對於這個表格的數據來說，這是一個 U 型的關系，所以做線性回歸的結果也是會給出沒有意義的 p 值。 利用 STATA 的邏輯回歸報告，能對哮喘的嚴重程度和患者報告夜間從未因爲哮喘醒來(never wake up)之間的關系作出怎樣的結論？ 從 STATA 計算的結果來看，該數據提供了極強的證據證明哮喘的嚴重程度和報告從未因哮喘而醒來之間呈負相關。特別地，哮喘嚴重程度爲 2 的患者比 1 的患者報告從未醒來的比值比 (odds ratio) 是 0.077 (95% CI: 0.027, 0.224, p &lt; 0.001); 哮喘嚴重程度爲 3 的患者 比 1 的患者報告醒來的比值比是 0.0128 (95% CI: 0.0022, 0.0738, p &lt; 0.001)。所以，哮喘越嚴重，報告夜裏從未醒來的概率越低。 利用 STATA 的邏輯回歸報告，能對是否使用口服類固醇藥物和報告從未因哮喘而醒來之間的關系作出怎樣的結論？ 如果要計算未調整的比值比，我們可以把表格中第2-4列的數據合並，那麼在使用類固醇藥物的患者 (n = 150) 中 27 人報告從未醒來，在不使用類固醇藥物的患者中 (n = 60)，有 20 人報告從未醒來。這樣未調整的比值比就是 \\(\\frac{27 \\times 40}{20 \\times 123} = 0.44\\)。STATA 計算的邏輯回歸模型的結果顯示，這一數字在調整了哮喘症狀之後，發生了本質的變化: \\(e^{0.815} = 2.26\\)。雖然調整後的比值比並沒有統計學意義。但是它從小於 1 變成了大於 1，方向上發生了轉變。所以，調整了哮喘嚴重程度之後，數據似乎提示使用類固醇藥物和報告從不在夜間因哮喘醒來的概率呈正相關 (用藥者睡得更好)，但是這個相關性沒有統計學意義，其95%信賴區間很寬。 從這些分析來看，哮喘嚴重程度和是否口服類固醇藥物之間有什麼樣的關系？ 因爲用類固醇藥物和報告夜間不曾醒來在調整了哮喘嚴重程度之後從原先的負相關變成了正相關。又因爲哮喘嚴重程度本身和報告夜間不曾醒來之間是負相關，所以，是否口服類固醇藥物和哮喘嚴重程度之間呈正相關，也就是哮喘越嚴重，患者越傾向於使用類固醇藥物。 "],["model-comparison.html", "第 60 章 模型比較和擬合優度 60.1 嵌套式模型的比較 nested models 60.2 嵌套式模型比較實例 60.3 飽和模型，模型的偏差，擬合優度 60.4 個人數據擬合模型的優度檢驗 60.5 GLM Practical 04", " 第 60 章 模型比較和擬合優度 我們用數據擬合廣義線性模型時其實有許多不同的目的和意義： 估計某些因素的暴露和因變量之間的相關程度，同時調整其餘的混雜因素； 確定能夠強有力的預測因變量變化的因子； 用於預測未來的事件或者病人的預後等等。 但是一般情況下，我們拿到數據以後不可能立刻就能構建起來一個完美無缺的模型。我們常常會擬合兩三個甚至許多個模型，探索模型和數據的擬合程度，就成爲了比較哪個模型更優於其他模型的硬指標。本章的目的是介紹 GLM 嵌套式模型之間的兩兩比較方法，其中一個模型的預測變量是另一個模型的預測變量的子集。 對手裡的數據構建一個GLM的過程，其實就是在該數據的條件下(given the data)，對模型參數 \\(\\mathbf{\\beta}\\) 定義其對數似然 (log-likelihood)，並尋找能給出極大值的那一系列極大似然估計 (maximum likelihood estimates, MLE) \\(\\mathbf{\\hat\\beta}\\) 的過程。每次構建一個模型，我們都會獲得該模型對應的極大對數似然，它其實是極爲依賴構建它的觀察數據的，意味着每次觀察數據發生變化，你即使用了相同的模型來擬合相同的GLM獲得的極大似然都會發生變化。所以其實我們並不會十分關心這個極大似然的絕對值大小。我們關心的其實是，當對相同數據，構建了包含不同變量的模型時，極大似然的變化量。因爲這個極大似然(或者常被略稱爲對數似然 log likelihood，甚至直接只叫做似然)的變化量本身確實會反應我們思考的模型，和觀察數據之間的擬合程度。一般來說，模型中變量較少的那個 (通常叫做更加一般化的模型 more general model)獲得的似然值和變量較多的那個模型獲得的似然值相比較都會比較小，我們關心的似然值在增加了新變量之後的複雜模型後獲得的增量，是否有價值，是否真的改善了模型的擬合度 (whether the difference in log likelihoods is large enough to indicate that the less general model provides a “real” improvement in fit)。 60.1 嵌套式模型的比較 nested models 假如我們用相同的數據擬合兩個 GLM，\\(\\text{Model 1, Model 2}\\)。其中，當限制 \\(\\text{Model 2}\\) 中部分參數爲零之後會變成 \\(\\text{Model 1}\\)時， 我們說 \\(\\text{Model 1}\\) 是 \\(\\text{Model 2}\\) 的嵌套模型。 例1：嵌套式模型 I 模型 1 的線性預測方程爲 \\[\\eta_i = \\alpha + \\beta_1 x_{i1}\\] 模型 2 和模型 1 的因變量相同 (分佈相同)，使用相同的鏈接方程 (link function) 和尺度參數 (scale parameter, \\(\\phi\\))，但是它的線性預測方程爲 \\[\\eta_i = \\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i1} + \\beta_3 x_{i3}\\] 此時我們說模型 1 是模型 2 的嵌套模型，因爲令 \\(\\beta_2 = \\beta_3 = 0\\) 時，模型 2 就變成了 模型 1。 例2：嵌套式模型 II 模型 1 的線性預測方程爲 (此處默認 \\(x_{i1}\\) 是連續型預測變量) \\[\\eta_i = \\alpha + \\beta_1 x_{i1}\\] 模型 2 的線性預測方程如果是 \\[\\eta_i = \\alpha + \\beta_1 x_{i1} + \\beta_2 x^2_{i1}\\] 此時我們依然認爲 模型 1 是模型 2 的嵌套模型， 因爲令 \\(\\beta_2 = 0\\) 時，模型 2 就變成了 模型 1。 關於嵌套式模型，更加一般性的定義是這樣的：標記模型 2 的參數向量是 \\(\\mathbf{(\\psi, \\lambda)}\\)，其中，當我們限制了參數向量的一部分例如 \\(\\mathbf{\\psi = 0}\\)，模型 2 就變成了 模型 1 的話，模型 1 就是嵌套於 模型 2 的。所以比較嵌套模型之間的擬合度，我們可以比較較爲複雜的 模型 2 相較 模型 1 多出來的複雜的預測變量參數部分 \\(\\mathbf{\\psi}\\) 是否是必要的。也就是說，比較嵌套模型哪個更優的情況下，零假設是 \\(\\mathbf{\\psi = 0}\\)。 這是典型的多變量的模型比較，需要用到子集似然比檢驗 19，log-likelihood ratio test： \\[ \\begin{aligned} -2pllr(\\psi = 0) &amp; = -2\\{ \\ell_p(\\psi=0) - \\ell_p(\\hat\\psi) \\} \\stackrel{\\cdot}{\\sim} \\chi^2_{df}\\\\ \\text{Where } \\hat\\psi &amp; \\text{ denotes the MLE of } \\psi \\text{ in Model 2} \\\\ \\text{With } df &amp; = \\text{ the dimension of } \\mathbf{\\psi} \\end{aligned} \\] \\(\\ell_p(\\psi=0)\\)，其實是 模型 1 的極大對數似然，記爲 \\(\\ell_1\\)。\\(\\ell_p(\\hat\\psi)\\) 其實是 模型 2 的極大對數似然，記爲 \\(\\ell_2\\)。所以這個似然比檢驗統計量就變成了： \\[ -2pllr(\\psi = 0) = -2(\\ell_1-\\ell_2) \\] 這個統計量在零假設的條件下服從自由度爲兩個模型參數數量之差的卡方分佈。如果 \\(p\\) 值小於提前定義好的顯著性水平，將會提示有足夠證據證明 模型 2 比 模型 1 更好地擬合數據。 60.2 嵌套式模型比較實例 回到之前用過的瘋牛病和牲畜羣的數據 59.5。我們當時成功擬合了兩個 GLM 模型，模型 1 的預測變量只有 “飼料”，“羣”；模型 2 的預測變量在模型 1 的基礎上增加二者的交互作用項。並且我們當時發現交互作用項部分並無實際統計學意義 \\(p = 0.584\\)。現在用對數似然比檢驗來進行類似的假設檢驗。 先用 logLik(Model) 的方式提取兩個模型各自的對數似然，然後計算對數似然比，再去和自由度爲 1 (因爲兩個模型只差了 1 個預測變量) 的卡方分佈做比較： Model1 &lt;- glm(cbind(infect, cattle - infect) ~ factor(group) + dfactor, family = binomial(link = logit), data = Cattle) Model2 &lt;- glm(cbind(infect, cattle - infect) ~ factor(group) + dfactor + factor(group)*dfactor, family = binomial(link = logit), data = Cattle) logLik(Model1) ## &#39;log Lik.&#39; -13.12687 (df=3) logLik(Model2) ## &#39;log Lik.&#39; -12.973836 (df=4) LLR &lt;- -2*(logLik(Model1) - logLik(Model2)) 1-pchisq(as.numeric(LLR), df=1) # p value for the LLR test ## [1] 0.58010367 再和 lmtest::lrtest 的輸出結果作比較。 lmtest::lrtest(Model1, Model2) ## Likelihood ratio test ## ## Model 1: cbind(infect, cattle - infect) ~ factor(group) + dfactor ## Model 2: cbind(infect, cattle - infect) ~ factor(group) + dfactor + factor(group) * ## dfactor ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 3 -13.1269 ## 2 4 -12.9738 1 0.30607 0.5801 結果跟我們手計算的結果完全吻合。AWESOME !!! 值得注意的是，此時進行的似然比檢驗結果獲得的 p 值，和模型中 Wald 檢驗結果獲得的 p 值十分接近 (0.5801 v.s. 0.584)，這也充分顯示了這兩個檢驗方法其實是漸進相同的 (asymptotically equivalent)。 60.3 飽和模型，模型的偏差，擬合優度 在簡單線性迴歸中，殘差平方和提供了模型擬合數據好壞的指標 – 決定係數 \\(R^2\\) (Section 29.2.3)，並且在 偏 F 檢驗 (Section 31.3.4) 中得到模型比較的應用。 廣義線性迴歸模型中事情雖然沒有這麼簡單，但是思想可以借鑑。先介紹飽和模型 (saturated model) 的概念，再介紹其用於模型偏差 (deviance) 比較的方法。前文中介紹過的嵌套模型之間的對數似然比檢驗，也是測量兩個模型之間偏差大小的方法。 60.3.1 飽和模型 saturated model 飽和模型 saturated model，是指一個模型中所有可能放入的參數都被放進去的時候，模型達到飽和，自由度爲零。其實就是模型中參數的數量和觀測值個數相等的情況。飽和模型的情況下，所有的擬合值和對應的觀測值相等。所以，對於給定的數據庫，飽和模型提供了所有模型中最 “完美” 的擬合值，因爲擬合值和觀測值完全一致，所以飽和模型的對數似然，比其他所有你建立的模型的對數似然都要大。但是多數情況下，飽和模型並不是合理的模型，不能用來預測也無法拿來解釋數據，因爲它本身就是數據。 60.3.2 模型偏差 deviance 令 \\(L_c\\) 是目前擬合模型的對數似然，\\(L_s\\) 是數據的飽和模型的對數似然，所以兩個模型的對數似然比是 \\(\\frac{L_c}{L_s}\\)。那麼尺度化的模型偏差 (scaled deviance) \\(S\\) 被定義爲： \\[ S=-2\\text{ln}(\\frac{L_c}{L_s}) = -2(\\ell_c - \\ell_s) \\] 值得注意的是，非尺度化偏差 (unscaled deviance) 被定義爲 \\(\\phi S\\)，其中的 \\(\\phi\\) 是尺度參數，由於泊松分佈和二項分佈的尺度參數都等於 1 (\\(\\phi = 1\\))，所以尺度化偏差和非尺度化偏差才會在數值上相等。 這裏定義的模型偏差大小，可以反應一個模型擬合數據的程度，偏差越大，該模型對數據的擬合越差。“Deviance can be interpreted as Badness of fit”. 但是，模型偏差只適用於彙總後的二項分佈數據(aggregated)。當數據是個人的二進制數據時 (inidividual binary data)，模型的偏差值變得不再適用，無法用來比較模型對數據的擬合程度。 這是因爲當你的觀測值 (個人數據) 有很多時，擬合飽和模型所需要的參數個數會趨向於無窮大，這違背了子集對數似然比檢驗的條件。 60.3.3 彙總型二項分佈數據 aggregated/grouped binary data 假如，觀察數據是互相獨立的，服從二項分佈的 \\(n\\) 個觀測值: \\(Y_i \\sim Bin(n_i, \\pi_i), i=1,\\dots,n\\)。用彙總型的數據表達方法來描述它，那麼獲得的數據就是一個個分類變量在各自組中的人數或者百分比的數據 (如下面的數據所示)。這樣的數據的飽和模型，其實允許了每個分類變量的組中百分比變化 (The saturated model for this data allows the probability of “success” to be different in each group, so that \\(\\tilde{\\pi} = \\frac{y_i}{n_i}\\))。也就是每組的模型擬合後百分比，等於觀察到的百分比。 ## dose n_deaths n_subjects ## 1 49.06 6 59 ## 2 52.99 13 60 ## 3 56.91 18 62 ## 4 60.84 28 56 ## 5 64.76 52 63 ## 6 68.69 53 59 ## 7 72.61 60 62 ## 8 76.54 59 60 那麼彙總型二項分佈數據，其飽和模型的對數似然其實就是 \\[ \\ell_s = \\sum_{i = 1}^n\\{ \\log\\binom{n_i}{y_i} + y_i\\log(\\tilde{\\pi_i}) + (n_i - y_i)\\log(1 - \\tilde{\\pi_i}) \\} \\] 假設此時我們給這個數據擬合一個非飽和模型，該模型告訴我們每個分類組中的預測百分比是 \\(\\hat\\pi_i, i = 1, \\dots, n\\)，那麼這個非飽和模型的對數似然其實是 \\[ \\ell_c = \\sum_{i = 1}^n\\{ \\binom{n_i}{y_i} + y_i\\log(\\hat\\pi_i) + (n_i - y_i)\\log(1-\\hat\\pi_i)\\} \\] 那麼這個非飽和模型的模型偏差 (deviance) 就等於 \\[ \\begin{aligned} S &amp; = -2(\\ell_c - \\ell_s) \\\\ &amp; = 2\\sum_{i = 1}^n\\{ y_i\\log(\\frac{\\tilde{\\pi_i}}{\\hat\\pi_i}) + (n_i - y_i)\\log(\\frac{1-\\tilde{\\pi_i}}{1-\\hat\\pi_i}) \\} \\end{aligned} \\] 從上面這個表達式不難看出，模型偏差值的大小，將會隨着模型預測值的變化而變化，如果它更加接近飽和模型的預測值 (飽和模型的預測值其實就等於觀測值)，那麼模型的偏差就會比較小。如果你的彙總型數據擬合了你認爲合適的模型以後，你發現它的模型偏差值很大，那麼就意味着你的模型預測值其實和觀測值相去甚遠，模型和觀測值的擬合度應該不理想。對於彙總型數據來說，模型偏差值，其實等價於將你擬合的模型和飽和模型之間做子集對數似然比檢驗 (profile log-likelihood ratio test)。漸進來說 (asymptotically)，這個子集對數似然比檢驗的結果，會服從自由度爲 \\(n-p\\) 的 \\(\\chi^2\\) 分佈，其中 \\(n, p\\) 分別是飽和模型和你擬合的模型中被估計參數的個數。 60.4 個人數據擬合模型的優度檢驗 在上文中已經提到了，當你的數據不再是彙總型二項分佈數據，而是個人二項分佈數據 (individual binary data) 時，模型偏差 (deviance) 無法用來評價你建立的模型。這樣的數據其實比彙總型二項分佈數據更加常見，當模型中一旦需要加入一個連續型變量時，數據就只能被表達爲個人二項分佈數據。對於個人二項分佈數據模型擬合度比較，最常用的方法是 (Hosmer and Lemesbow 1980) 提出的模型擬合優度檢驗法 (goodness of fit)。該方法的主要思想是，把個人二項分佈數據模型獲得的個人預測值 (model predicted probabilities) \\(\\hat\\pi_i\\) 進行人爲的分組，把預測值數據強行變成彙總型二項分佈數據，那麼觀測值的樣本量即使增加到無窮大，也不會使得模型中組別增加到無窮大，從而可以規避 在 R 裏面，進行邏輯迴歸模型的擬合優度檢驗的自定義方程如下，參考網站： hosmer &lt;- function(y, fv, groups=10, table=TRUE, type=2) { # A simple implementation of the Hosmer-Lemeshow test q &lt;- quantile(fv, seq(0,1,1/groups), type=type) fv.g &lt;- cut(fv, breaks=q, include.lowest=TRUE) obs &lt;- xtabs( ~ fv.g + y) fit &lt;- cbind( e.0 = tapply(1-fv, fv.g, sum), e.1 = tapply(fv, fv.g, sum)) if(table) print(cbind(obs,fit)) chi2 &lt;- sum((obs-fit)^2/fit) pval &lt;- pchisq(chi2, groups-2, lower.tail=FALSE) data.frame(test=&quot;Hosmer-Lemeshow&quot;,groups=groups,chi.sq=chi2,pvalue=pval) } # lbw &lt;- read_dta(&quot;http://www.stata-press.com/data/r12/lbw.dta&quot;) lbw &lt;- read_dta(file = &quot;../backupfiles/lbw.dta&quot;) lbw$race &lt;- factor(lbw$race) lbw$smoke &lt;- factor(lbw$smoke) lbw$ht &lt;- factor(lbw$ht) Modelgof &lt;- glm(low ~ age + lwt + race + smoke + ptl + ht + ui, data = lbw, family = binomial(link = logit)) hosmer(lbw$low, fitted(Modelgof)) ## 0 1 e.0 e.1 ## [0.0273,0.0827] 19 0 17.8222227 1.1777773 ## (0.0827,0.128] 17 2 16.9739017 2.0260983 ## (0.128,0.201] 13 6 15.8285445 3.1714555 ## (0.201,0.243] 18 1 14.6957098 4.3042902 ## (0.243,0.279] 12 7 14.1062047 4.8937953 ## (0.279,0.314] 12 7 13.3601242 5.6398758 ## (0.314,0.387] 13 6 12.4628053 6.5371947 ## (0.387,0.483] 12 7 10.8241660 8.1758340 ## (0.483,0.594] 9 10 8.6901416 10.3098584 ## (0.594,0.839] 5 13 5.2361795 12.7638205 ## test groups chi.sq pvalue ## 1 Hosmer-Lemeshow 10 9.6506834 0.29040407 hosmer(lbw$low, fitted(Modelgof), group=5) ## 0 1 e.0 e.1 ## [0.0273,0.128] 36 2 34.796124 3.2038756 ## (0.128,0.243] 31 7 30.524254 7.4757458 ## (0.243,0.314] 24 14 27.466329 10.5336711 ## (0.314,0.483] 25 13 23.286971 14.7130287 ## (0.483,0.839] 14 23 13.926321 23.0736789 ## test groups chi.sq pvalue ## 1 Hosmer-Lemeshow 5 2.435921 0.48698297 60.5 GLM Practical 04 60.5.1 回到之前的昆蟲數據，嘗試評價該模型的擬合優度。 重新讀入昆蟲數據，擬合前一個練習中擬合過的模型，使用 glm() 命令。 Insect &lt;- read.table(&quot;../backupfiles/INSECT.RAW&quot;, header = FALSE, sep =&quot;&quot;, col.names = c(&quot;dose&quot;, &quot;n_deaths&quot;, &quot;n_subjects&quot;)) # print(Insect) Insect &lt;- Insect %&gt;% mutate(p = n_deaths/n_subjects) Model1 &lt;- glm(cbind(n_deaths, n_subjects - n_deaths) ~ dose, family = binomial(link = logit), data = Insect) summary(Model1); jtools::summ(Model1, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = cbind(n_deaths, n_subjects - n_deaths) ~ dose, ## family = binomial(link = logit), data = Insect) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.14983 -0.22403 0.25301 0.70846 0.99107 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -14.086403 1.228393 -11.467 &lt; 2.2e-16 *** ## dose 0.236593 0.020303 11.653 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 268.26829 on 7 degrees of freedom ## Residual deviance: 4.61548 on 6 degrees of freedom ## AIC: 37.394 ## ## Number of Fisher Scoring iterations: 4 Observations 8 Dependent variable cbind(n_deaths, n_subjects - n_deaths) Type Generalized linear model Family binomial Link logit 𝛘²(1) 263.652801 Pseudo-R² (Cragg-Uhler) 1.000000 Pseudo-R² (McFadden) 0.887580 AIC 37.393985 BIC 37.552868 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.000001 0.000000 0.000008 -11.467341 0.000000 dose 1.266925 1.217500 1.318357 11.653009 0.000000 Standard errors: MLE 根據上面模型輸出的結果，檢驗是否有證據證明該模型對數據的擬合不佳。 上面模型擬合的輸出結果中，可以找到最下面的模型偏差值的大小和相應的自由度： Residual deviance: 4.6155 on 6 degrees of freedom。如果我們要檢驗該模型中假設的前提條件之一–昆蟲死亡的對數比值 (on a log-odds scale) 和藥物濃度 (dose) 之間是線性關係（或者你也可以說，檢驗是否有證據證明該模型對數據擬合不佳），我們可以比較計算獲得的模型偏差值在自由度為 6 的卡方分布 (\\(\\chi^2_6\\)) 中出現的概率。這裡自由度 6 是由 \\(n - p = 8 - 2\\) 計算獲得，其中 \\(n\\) 是數據中觀察值個數，\\(p\\) 是模型中估計的參數的個數。檢驗方法很簡單： 1 - pchisq(4.6155, df = 6) ## [1] 0.59398469 所以，檢驗的結果，P 值就是 0.594，沒有任何證據反對零假設（模型擬合數據合理）。 試比較兩個模型對數據的擬合效果孰優孰劣：模型1，上面的模型；模型2，加入劑量的平方 (dose2)，作為新增的模型解釋變量。嵌套式模型之間的比較使用的是似然比檢驗法 (profile likelihood ratio test)，試着解釋這個比較方法和 Wald 檢驗之間的區別。 Model2 &lt;- glm(cbind(n_deaths, n_subjects - n_deaths) ~ dose + I(dose^2), family = binomial(link = logit), data = Insect) summary(Model2) ## ## Call: ## glm(formula = cbind(n_deaths, n_subjects - n_deaths) ~ dose + ## I(dose^2), family = binomial(link = logit), data = Insect) ## ## Deviance Residuals: ## 1 2 3 4 5 6 7 8 ## -0.004545 0.634377 -0.691056 -0.681962 1.223967 -0.154036 -0.029880 -0.561968 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -2.4881722 9.8677198 -0.2522 0.8009 ## dose -0.1500054 0.3291786 -0.4557 0.6486 ## I(dose^2) 0.0031871 0.0027273 1.1686 0.2426 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 268.26829 on 7 degrees of freedom ## Residual deviance: 3.18361 on 5 degrees of freedom ## AIC: 37.9621 ## ## Number of Fisher Scoring iterations: 4 anova(Model1, Model2) ## Analysis of Deviance Table ## ## Model 1: cbind(n_deaths, n_subjects - n_deaths) ~ dose ## Model 2: cbind(n_deaths, n_subjects - n_deaths) ~ dose + I(dose^2) ## Resid. Df Resid. Dev Df Deviance ## 1 6 4.61548 ## 2 5 3.18361 1 1.43188 # P-value for model comparison 1 - pchisq(1.43, df = 1) ## [1] 0.23176444 兩個模型比較的結果表明，無證據反對零假設（只用線性關係擬合數據是合理的），也就是說增加劑量的平方這一新的解釋變量並不能提升模型對數據的擬合程度。仔細觀察模型2的輸出結果中，可以發現 I(dose^2) 項的 Wald 檢驗結果是 p = 0.24，十分接近似然比檢驗的結果。因為它們兩者是漸近相同的 (asymptotically equivalent)。 60.5.2 低出生體重數據 讀入該數據，試分析數據中和低出生體重可能相關的變量： lbw &lt;- read_dta(&quot;../backupfiles/lbw.dta&quot;) head(lbw) ## # A tibble: 6 × 11 ## id low age lwt race smoke ptl ht ui ftv bwt ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl+lbl&gt; &lt;dbl+lbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 85 0 19 182 2 [black] 0 [nonsmoker] 0 0 1 0 2523 ## 2 86 0 33 155 3 [other] 0 [nonsmoker] 0 0 0 3 2551 ## 3 87 0 20 105 1 [white] 1 [smoker] 0 0 0 1 2557 ## 4 88 0 21 108 1 [white] 1 [smoker] 0 0 1 2 2594 ## 5 89 0 18 107 1 [white] 1 [smoker] 0 0 1 0 2600 ## 6 91 0 21 124 3 [other] 0 [nonsmoker] 0 0 0 0 2622 擬合一個這樣的邏輯回歸模型：結果變量使用低出生體重與否 low，解釋變量使用母親最後一次月經時體重 lwt (磅)。 M &lt;- glm(low ~ lwt, data = lbw, family = binomial(link = logit)) summary(M) ## ## Call: ## glm(formula = low ~ lwt, family = binomial(link = logit), data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.09482 -0.90217 -0.80197 1.36105 1.98141 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.9957634 0.7852434 1.2681 0.20476 ## lwt -0.0140371 0.0061685 -2.2756 0.02287 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 228.708 on 187 degrees of freedom ## AIC: 232.708 ## ## Number of Fisher Scoring iterations: 4 logistic.display(M) ## ## Logistic regression predicting low ## ## OR(95%CI) P(Wald&#39;s test) P(LR-test) ## lwt (cont. var.) 0.99 (0.97,1) 0.023 0.015 ## ## Log-likelihood = -114.354 ## No. of observations = 189 ## AIC value = 232.7081 利用 lowess 平滑曲線作圖，評價在 logit 單位上，lwt 和 low 之間是否可以認為是線性關係。 pi &lt;- M$fitted.values # with(lbw, scatter.smooth(lwt, pi, pch = 20, span = 0.4, lpars = # list(col = &quot;blue&quot;, lwd = 3, lty = 1), col=rgb(0,0,0,0.004), # xlab = &quot;Mother&#39;s weight at last menstural period (lbs)&quot;, # ylab = &quot;Logit(probability) of being low birth weight&quot;, # frame = FALSE)) plot(lbw$lwt, lbw$low, main=&quot;Lowess smoother plot\\n of the prob of having a low brith weight baby&quot;, xlab = &quot;Weight at at last menstural period (lbs)&quot;, ylab = &quot;Probability&quot;) lines(lowess(lbw$lwt, lbw$low, f = 0.7), col=2, lwd = 2) points(lbw$lwt, pi) 圖 60.1: The loess plot of the observed proportion with low birth weight against mother’s weight at last menstural period. Span = 0.6 Lowess 平滑曲線提示模型的擬合值(fitted.values)有一些變動，由於樣本採樣方法等原因，這是無法避免的。但是總體來說，擬合值和平滑曲線基本在同一個步調上，從該圖來看，認為母親的最後一次月經時體重和是否生下低出生體重兒的概率的 logit 之間的關係是線性的應該不是太大的問題。 References "],["count-outcomes.html", "第 61 章 計數型因變量 Count outcomes 61.1 泊松 GLM 61.2 泊松迴歸實例 61.3 過度離散 overdispersion 61.4 GLM Practical 05", " 第 61 章 計數型因變量 Count outcomes 計數型變量在臨牀醫學/流行病學研究中也十分常見，下面是一些例子： 某個呼吸科診所的患者中，每個人在過去一個月中哮喘發作的次數； 癲癇患者在過去一年中癲癇發作次數； 接受腦部 CT 掃描的患者中，每個人被診斷出顱內腫瘤個數。 最早的泊松模型可以追溯到普魯士騎兵連中被馬蹄踢死士兵的人數模型。 61.1 泊松 GLM 一個計數型的隨機變量，只能取大於等於零的正整數，\\(0,1,\\cdots\\)。泊松隨機變量可以理解爲產生於發生在一段時間內的事件次數。泊松模型可以用於計數型數據的迴歸模型的構建： \\[ \\begin{aligned} Y &amp;\\sim \\text{Po}(\\mu) \\\\ \\text{P} (Y = y) &amp; = \\frac{\\mu^y e^{-\\mu}}{y!} \\end{aligned} \\] 所以，一個泊松迴歸，默認的前提是因變量 \\(Y\\) 服從一個以預測變量 \\(x_1, \\cdots, x_p\\) 爲條件的泊松分佈。其標準鏈接方程是 \\(\\theta=\\text{log}(\\mu)\\)。 \\[ \\begin{aligned} Y_i &amp; \\sim \\text{Po}(\\mu_i) \\\\ \\text{log}(\\mu_i) &amp; = \\alpha + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip} \\end{aligned} \\] 觀測對象 1，用模型中全部的預測變量 \\(\\mathbf{x_1}=(x_{11},\\cdots,x_{1p})\\) 計算獲得的擬合值，和另一個觀測對象 0 的擬合值之比爲： \\[ \\begin{aligned} &amp; \\frac{\\text{exp}(\\alpha + \\beta_1 x_{11} + \\cdots + \\beta_p x_{1p})}{\\text{exp}(\\alpha + \\beta_1 x_{01} + \\cdots + \\beta_p x_{0p})} \\\\ = &amp; \\exp(\\beta_1(x_{11}-x_{01}) + \\cdots + \\beta_p(x_{1p} - x_{0p})) \\end{aligned} \\] 其中， 線性預測方程 linear predictor 中的截距 \\(\\alpha\\) 的含義是，當所有的預測變量均等於零 \\(\\mathbf{x_1} = 0\\) 時，因變量 \\(Y\\) 的均值之對數。 \\(\\beta_1\\) 的含義是，其餘預測變量保持不變時，預測變量 \\(x_1\\) 每增加一個單位時，因變量變化量的對數。 迴歸係數的指數 (自然底數) 大小，可以被理解爲是率比 (rate ratio) (詳見下一章率的 GLM)。 61.2 泊松迴歸實例 下列數據來自 UCLA 的統計學網站。數據內容是某高中全部學生，獲獎的次數。預測變量包括，1) 獲獎種類 “一般 General”，“學術類 Academic”，“技能類 Vocational”；和所有學生期末數學考試分數。 p &lt;- read_csv(&quot;../backupfiles/poisson_sim.csv&quot;) ## Rows: 200 Columns: 4 ## ── Column specification ──────────────────────────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## dbl (4): id, num_awards, prog, math ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. p &lt;- within(p, { prog &lt;- factor(prog, levels=1:3, labels=c(&quot;General&quot;, &quot;Academic&quot;, &quot;Vocational&quot;)) id &lt;- factor(id) }) summary(p) ## id num_awards prog math ## 1 : 1 Min. :0.00 General : 45 Min. :33.000 ## 2 : 1 1st Qu.:0.00 Academic :105 1st Qu.:45.000 ## 3 : 1 Median :0.00 Vocational: 50 Median :52.000 ## 4 : 1 Mean :0.63 Mean :52.645 ## 5 : 1 3rd Qu.:1.00 3rd Qu.:59.000 ## 6 : 1 Max. :6.00 Max. :75.000 ## (Other):194 下面的代碼擬合因變量爲獲獎次數，預測變量爲獲獎種類 (分類) 和數學成績 (連續) 的泊松分佈，泊松分佈默認的鏈接方程就是 \\(\\text{log}\\)，所以你可以像第一行那樣把鏈接方程部分省略。結果也是一樣的。 m1 &lt;- glm(num_awards ~ prog, family=&quot;poisson&quot;, data=p) m2 &lt;- glm(num_awards ~ prog, family=poisson(link = log), data=p) summary(m1); summary(m2) ## ## Call: ## glm(formula = num_awards ~ prog, family = &quot;poisson&quot;, data = p) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.41421 -0.69282 -0.63246 0.00000 3.39133 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.60944 0.33333 -4.8283 1.377e-06 *** ## progAcademic 1.60944 0.34733 4.6338 3.590e-06 *** ## progVocational 0.18232 0.44096 0.4135 0.6793 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for poisson family taken to be 1) ## ## Null deviance: 287.672 on 199 degrees of freedom ## Residual deviance: 234.460 on 197 degrees of freedom ## AIC: 416.515 ## ## Number of Fisher Scoring iterations: 6 ## ## Call: ## glm(formula = num_awards ~ prog, family = poisson(link = log), ## data = p) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.41421 -0.69282 -0.63246 0.00000 3.39133 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.60944 0.33333 -4.8283 1.377e-06 *** ## progAcademic 1.60944 0.34733 4.6338 3.590e-06 *** ## progVocational 0.18232 0.44096 0.4135 0.6793 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for poisson family taken to be 1) ## ## Null deviance: 287.672 on 199 degrees of freedom ## Residual deviance: 234.460 on 197 degrees of freedom ## AIC: 416.515 ## ## Number of Fisher Scoring iterations: 6 輸出結果的迴歸係數部分， 該學校學生獲得學術類獎項的平均次數和獲得一般獎項的平均次數的比值是 \\(\\text{exp}(1.6094) = 4.999\\)，所以獲得的學術類獎平均次數要高於一般獎次數 \\(390\\%\\)； 獲得技能類獎的平均次數和一般獎平均次數的比值是 \\(\\text{exp}(0.1823) = 1.199\\)，也就是高出了 \\(19.9\\%\\)； 該校學生獲得一般類獎的次數平均每人是 \\(\\text{exp}(-1.6094) = 0.20\\) 次； 該校學生獲得學術獎的次數平均每人是 \\(\\text{exp}(-1.6094 + 1.6094) = 1\\) 次；(一人一次夠流弊) 該校學生獲得技能類獎的次數平均每人是 \\(\\text{exp}(-1.6094 + 0.182) = 0.24\\) 次。 看來該校師生很重視學術。 當然也可以用下面定義的函數來幫助我們計算上面這些數值，及其信賴區間。 glm.RR &lt;- function(GLM.RESULT, digits = 2) { if (GLM.RESULT$family$family == &quot;binomial&quot;) { LABEL &lt;- &quot;OR&quot; } else if (GLM.RESULT$family$family == &quot;poisson&quot;) { LABEL &lt;- &quot;RR&quot; } else { stop(&quot;Not logistic or Poisson model&quot;) } COEF &lt;- stats::coef(GLM.RESULT) CONFINT &lt;- stats::confint(GLM.RESULT) TABLE &lt;- cbind(coef=COEF, CONFINT) TABLE.EXP &lt;- round(exp(TABLE), digits) colnames(TABLE.EXP)[1] &lt;- LABEL TABLE.EXP } glm.RR(m1) ## RR 2.5 % 97.5 % ## (Intercept) 0.2 0.10 0.36 ## progAcademic 5.0 2.68 10.63 ## progVocational 1.2 0.51 2.94 61.3 過度離散 overdispersion 泊松分佈的前提條件之一是，方差和均值相等。這是一個非常強的假設，很多計數型數據其實是無法滿足這個條件的。許多時候 (包括上面的例子也是) 方差要大於或者小於均值： epiDisplay::summ(p$num_awards[p$prog == &quot;Academic&quot;], graph = FALSE) ## obs. mean median s.d. min. max. ## 105 1 1 1.279 0 6 epiDisplay::summ(p$num_awards[p$prog == &quot;General&quot;], graph = FALSE) ## obs. mean median s.d. min. max. ## 45 0.2 0 0.405 0 1 epiDisplay::summ(p$num_awards[p$prog == &quot;Vocational&quot;], graph = FALSE) ## obs. mean median s.d. min. max. ## 50 0.24 0 0.517 0 2 試想一下，實際的數據中其實是經常出現這樣的違反泊松分佈前提的計數型數據的。例如某兩個觀測對象，如果他們二者的線性預測方程給出相等的結果 (他們各自的預測變量可以完全不同)，會被認爲服從相同均值，相同方差的泊松分佈，這顯然是不合理的。例如本章用到的學校學生獲獎的例子，有的學生成績好，那麼獲得學術類獎的平均次數 (及其方差) 自然和成績排在後面的學生不同，強制這樣的兩個學生服從相同均值，相同方差的泊松分佈顯然是不合情理的。手工好的學生，可能更傾向於獲得更多得技能類獎。實際情況下，還有許許多多其他的未知因素會影響學生獲獎的次數，例如家庭教育背景的不同，有些學生鋼琴獲獎多，因爲他每天都去練習彈鋼琴等等，這些都是沒有被收集到的數據。 真實情況應該是這樣的，當有其他的我們不知道的因素存在時，這些因素會導致某些人的均值高於其他人。如果對象 \\(i\\) 的因變量 \\(Y_i\\) 服從均值爲 \\(\\mu_i\\) 的泊松分佈，那麼對於所有的 \\(\\mu_i\\)，其均值 (overall mean) 是 \\(\\mu\\)，方差 (overall variance) 是 \\(\\sigma^2\\)。這是一個典型的隨機效應模型 random effect model，我們會在後面的 hierarchical data analysis 再深入討論，但是這裏的重點是，每個觀測對象自己的均值 \\(\\mu_i\\)，是我們在普通泊松迴歸中忽略掉的隨機共變量 (the effects of omitted covariates)。 所以樣本數據來自的人羣如果共同均值 (或者叫邊際效應均值，marginal mean) 爲 \\(\\mu\\)： \\[ E(Y_i) = E(E(Y_i | \\mu_i)) = E(\\mu_i) = \\mu \\] 和共同方差 (邊際效應方差) ，需要用到 總體方差法則 (Law of total variance) 概念： \\[ \\begin{aligned} \\text{Var}(Y_i) &amp; = E(\\text{Var}(Y_i | \\mu_i)) + \\text{Var}(E(Y_i | \\mu_i)) \\\\ &amp; = E(\\mu_i) + \\text{Var}(\\mu_i) \\\\ &amp; = \\mu + \\sigma^2 \\end{aligned} \\] 61.3.1 過度離散怎麼查？ 如果，我們的泊松回歸模型中的共變量全部都是分類型變量，我們可以把觀測值 \\(Y\\) 對每一個分類變量分別作簡單的數據總結，觀察其均值和方差是否可以認為大致相同。但是許多時候模型中不會只有分類型變量。 R 輸出的結果中的 模型偏差 deviance，可以用來初步判斷整體模型的擬合優度。如果模型偏差除以殘差獲得的殘差偏差 (residual deviance) 足夠小，說明擬合的模型跟數據本身比較接近，也就是模型和數據擬合程度較好，反之則提示模型本身具有較高的過度離散 overdispersion。另外，模型偏差由於在個人數據 (individual data) 情況下不適用 (因為模型偏差值就不再服從卡方分佈了)，下面的檢驗結果僅僅只能作為極為微弱的參考證據。此時應該推薦使用 Pearson 的模型擬合檢驗。如果 Pearson 統計量，除以殘差的自由度獲得的值遠大於 1，就提示存在過度離散。 with(m1, cbind(res.deviance = deviance, df = df.residual, p = pchisq(deviance, df.residual, lower.tail=FALSE))) ## res.deviance df p ## [1,] 234.45997 197 0.034961171 Goodness of fit 檢驗結果 提示本模型可能存在過度離散，數據擬合度不理想。值得注意的是如果樣本很大時，模型偏差的檢驗統計量將不再服從卡方分佈，應用的時候一定要慎重。 61.3.2 負二項式分佈模型 negative binomial model 如果普通泊松迴歸模型擬合數據時，發現數據本身有過度離散的嫌疑，那麼建議使用負二項式分佈模型來重新擬合數據。負二項式分佈模型其實是泊松分佈的擴展版本，即考慮了個體的方差和均值的隨機效應 subject-specific random effect。如果設每個觀測對象的隨機效應部分爲 \\(a_i\\)，預測變量爲向量 \\(\\mathbf{x_i} = (x_{i1}, \\cdots, x_{ip})\\)，那麼因變量 \\(Y_i\\) 服從均值爲 \\(\\text{exp}(\\beta^T\\mathbf{x_i}+a_i)\\) 泊松分佈。在負二項式分佈中，個體的隨機效應部分的自然底數的指數 \\(e^{a_i}\\) 其實是服從均值爲 1， 方差爲 \\(\\alpha\\) 的伽馬分佈 (gamma distribution)。\\(\\alpha\\) 越大，说明过度离散越明显。 接下來用相同的數據，使用負二項式分佈模型在 R 裏作模型的擬合，你就會看到差別： R 裏擬合負二項式分佈模型的函數 glm.nb 在基本包 MASS 裏。 m1 &lt;- glm.nb(num_awards ~ prog, data = p) m2 &lt;- glm(num_awards ~ prog, family=poisson(link = log), data=p) summary(m1) ## ## Call: ## glm.nb(formula = num_awards ~ prog, data = p, init.theta = 1.72267107, ## link = log) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.25581 -0.67036 -0.61517 0.00000 2.32349 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.60944 0.35215 -4.5703 4.87e-06 *** ## progAcademic 1.60944 0.37291 4.3159 1.59e-05 *** ## progVocational 0.18232 0.46793 0.3896 0.6968 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for Negative Binomial(1.7227) family taken to be 1) ## ## Null deviance: 211.264 on 199 degrees of freedom ## Residual deviance: 171.066 on 197 degrees of freedom ## AIC: 406.532 ## ## Number of Fisher Scoring iterations: 1 ## ## ## Theta: 1.723 ## Std. Err.: 0.717 ## ## 2 x log-likelihood: -398.532 summary(m2) ## ## Call: ## glm(formula = num_awards ~ prog, family = poisson(link = log), ## data = p) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.41421 -0.69282 -0.63246 0.00000 3.39133 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.60944 0.33333 -4.8283 1.377e-06 *** ## progAcademic 1.60944 0.34733 4.6338 3.590e-06 *** ## progVocational 0.18232 0.44096 0.4135 0.6793 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for poisson family taken to be 1) ## ## Null deviance: 287.672 on 199 degrees of freedom ## Residual deviance: 234.460 on 197 degrees of freedom ## AIC: 416.515 ## ## Number of Fisher Scoring iterations: 6 仔細比較普通泊松分佈迴歸和負二項式分佈迴歸的輸出結果，你會發現 迴歸係數的計算是完全相同的 (由於我們只放了一個簡單的分類型變量作爲預測變量，一般來說泊松迴歸和負二項式分佈迴歸計算的迴歸係數會有些許不同)； 另外一個變化是標準誤的估計量在負二項式分佈模型中明顯變大了，這就是我們放寬了前提條件，允許模型考慮個體的隨機效應的體現。如果泊松模型被數據本身的過度離散影響顯著，那麼泊松迴歸計算獲得的參數標準無是偏低的； 負二項式分佈迴歸的結果最底下出現的 Theta: 1.723 部分，它的倒數是前面提到的個體的隨機效應部分 \\(a_i\\) 服從的伽馬分佈的方差 \\(\\alpha\\)。它是關鍵的離散程度參數 (dispersion parameter)。在 STATA 裏，如果用 nbreg 擬合負二項式分佈迴歸的模型，輸出的結果最底下會有 \\(\\alpha\\) 值的報告，注意它和 R 輸出的 Theta 結果互爲倒數。另外，STATA 的輸出結果還會對 \\(\\alpha = 0\\) 直接進行檢驗。在 R 裏面則需要給兩個模型分別進行擬合優度檢驗，多數情況下你會發現負二項式分佈迴歸的模型更加擬合數據： with(m1, cbind(res.deviance = deviance, df = df.residual, p = pchisq(deviance, df.residual, lower.tail=FALSE))) ## res.deviance df p ## [1,] 171.06608 197 0.90901874 with(m2, cbind(res.deviance = deviance, df = df.residual, p = pchisq(deviance, df.residual, lower.tail=FALSE))) ## res.deviance df p ## [1,] 234.45997 197 0.034961171 另一種獲取沒有被低估的迴歸係數的標準誤的方法來自穩健統計學手段。在 R 裏，擬合完普通泊松迴歸以後，用 sandwich 包裏的 vcovHC() 命令進行穩健的參數誤差估計 (具體說是夾心方差矩陣估計 sandwich estimator of variance)： m2 &lt;- glm(num_awards ~ prog, family=poisson(link = log), data=p) cov.m2 &lt;- vcovHC(m2, type = &quot;HC0&quot;) std.err &lt;- sqrt(diag(cov.m2)) robust.est &lt;- cbind(Estimate= coef(m2), &quot;Robust SE&quot; = std.err, &quot;Pr(&gt;|z|)&quot; = 2 * pnorm(abs(coef(m2)/std.err), lower.tail=FALSE), LL = coef(m1) - 1.96 * std.err, UL = coef(m1) + 1.96 * std.err) robust.est ## Estimate Robust SE Pr(&gt;|z|) LL UL ## (Intercept) -1.60943791 0.29814240 6.7305731e-08 -2.19379701 -1.0250788 ## progAcademic 1.60943791 0.32296809 6.2517920e-07 0.97642045 2.2424554 ## progVocational 0.18232156 0.42426407 6.6738767e-01 -0.64923602 1.0138791 61.4 GLM Practical 05 在這次練習中，我們來探索幾個不同的計數型數據的模型，進一步探討如何處理過度離散的方法。數據來自Stata的網站，記錄的是美國亞利桑那州醫院的住院時長數據。使用如下代碼下載該數據: # medpar &lt;- read_dta(&quot;http://www.stata-press.com/data/hh3/medpar.dta&quot;) medpar &lt;- read_dta(file = &quot;../backupfiles/medpar.dta&quot;) 我們主要使用的數據是下面這幾列： Variable Description los length of hospital stay, in days age Age group type1 Binary variable indicating elective admission type2 Binary variable indicating urgent admission type3 Binary variable indicating emergency admission 分析住院時間長短和年齡及其他共變量之間關係之前，先瞭解一下 los 本身的特徵。 首先，計算 los 的平均值，及其 Wald 法的 95% 信賴區間。在怎樣的前提條件下，這個信賴區間可以被認爲有效 (valid)？你認爲這些前提條件在這裏得到滿足了嗎？ psych::describe(medpar$los) ## vars n mean sd median trimmed mad min max range skew kurtosis se ## X1 1 1495 9.85 8.83 8 8.61 5.93 1 116 115 3.65 26.16 0.23 t.test(medpar$los)$conf.int ## [1] 9.4060722 10.3022890 ## attr(,&quot;conf.level&quot;) ## [1] 0.95 這裏默認的前提條件是，住院時長 (days) 服從正態分佈。即使住院時長這一數據可能並不100% 服從正態分佈，但是如果樣本量足夠大，那麼該 95% 信賴區間依然可以被認爲近似可以涵蓋95%的可重複實驗的次數。這一結論依據的是中心極限定理。在這裏，住院時長的數據其實分佈的非常的偏，並非正態分佈。但是我們可以認爲由於樣本量接近1500，可以認爲計算獲得的95%信賴區間是漸進有效的。 接下來我們使用 glm 命令來估計 los 的邊際均值 (marginal mean)，不加任何預測變量。根據你擬合的泊松回歸模型獲得的結果，請思考 los 的模型估計 95% 信賴區間是多少。和前一步簡單的估計相比較，他們是否相似或者有怎樣的不同，原因是什麼。你認爲哪種估計更加有意義？ mA &lt;- glm(los ~ 1, family=poisson(link = log), data=medpar) jtools::summ(mA, digits = 6, confint = TRUE) Observations 1495 Dependent variable los Type Generalized linear model Family poisson Link log 𝛘²(0) -0.000000 Pseudo-R² (Cragg-Uhler) 0.000000 Pseudo-R² (McFadden) 0.000000 AIC 14618.283648 BIC 14623.593529 Est. 2.5% 97.5% z val. p (Intercept) 2.287896 2.271748 2.304044 277.694425 0.000000 Standard errors: MLE 根據這個模型的結果，住院時長的均值可以被估計爲 \\(\\exp(2.287896) = 9.854\\)。但是其95%信賴區間的估計是： 下限爲，\\(\\exp(2.287896 - 1.96\\times0.008239) = 9.696\\) 上限爲，\\(\\exp(2.287896 + 1.96\\times0.008239) = 10.014\\) 我們發現，均值的點估計，和第一步簡單歸納時的結果一致，都是 9.854 天。但是模型估計的95%信賴區間 (9.696, 10.014) 相比 Wald 法的 95% 信賴區間 (9.406, 10.302) 更加精確 (範圍更窄)。當然可以理解爲，當數據本身分佈較偏 (skew) 時，使用泊松模型分析獲得的結果更加可靠且更加有效 (more efficient)。在這個數據中，模型估計的信賴區間和wald法信賴區間之間的差別更加可能是由於住院時長數據本身的過度離散問題導致的。在R裏我們獲得的結果只有殘差離差量 (residual deviance): Residual deviance: 8901.1 on 1494 degrees of freedom。如果你用的是 Stata，還可以獲得 Pearson 統計量，以及他們除以自由度以後獲得的數字都顯著地大於1。這說明其實病人住院時長這樣的數據很大程度上有相當大的差異，因爲每個病人各自住院的時間長度更加取決於他們本身患病的程度。這樣的數據不會是通過泊松分佈可以簡單擬合的，因爲泊松分佈的均值和方差是嚴格相等的。 ## ## . use http://www.stata-press.com/data/hh3/medpar, clear ## ## . glm los, family(Poisson) ## ## Iteration 0: log likelihood = -7354.5568 ## Iteration 1: log likelihood = -7308.2078 ## Iteration 2: log likelihood = -7308.1418 ## Iteration 3: log likelihood = -7308.1418 ## ## Generalized linear models Number of obs = 1,495 ## Optimization : ML Residual df = 1,494 ## Scale parameter = 1 ## Deviance = 8901.134077 (1/df) Deviance = 5.957921 ## Pearson = 11828.70662 (1/df) Pearson = 7.917474 ## ## Variance function: V(u) = u [Poisson] ## Link function : g(u) = ln(u) [Log] ## ## AIC = 9.778116 ## Log likelihood = -7308.141824 BIC = -2019.829 ## ## ------------------------------------------------------------------------------ ## | OIM ## los | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## _cons | 2.287896 .0082389 277.69 0.000 2.271748 2.304044 ## ------------------------------------------------------------------------------ ## ## . 也就是下面這兩行所提示的內容。 ## Deviance = 8901.134077 (1/df) Deviance = 5.957921 ## Pearson = 11828.70662 (1/df) Pearson = 7.917474 下面我們在泊松回歸模型中加入不同的入院類型的啞變量，看他們是否和患者住院時長有關。嘗試用醫學文獻的文章寫法描述這個模型的結果。 mB &lt;- glm(los ~ type2 + type3, family=poisson(link = log), data=medpar) jtools::summ(mB, digits = 6, confint = TRUE, exp = TRUE) Observations 1495 Dependent variable los Type Generalized linear model Family poisson Link log 𝛘²(2) 717.506464 Pseudo-R² (Cragg-Uhler) 0.381200 Pseudo-R² (McFadden) 0.049090 AIC 13904.777184 BIC 13920.706828 exp(Est.) 2.5% 97.5% z val. p (Intercept) 8.830688 8.659413 9.005350 217.975720 0.000000 type2 1.267877 1.216985 1.320897 11.354985 0.000000 type3 2.065477 1.963233 2.173046 28.003160 0.000000 Standard errors: MLE 記得模型中省略掉了 type1 因爲它被當作參考組 (reference group)。 下面的文獻描述可以用於參考： There is strong evidence (p &lt; 0.0001) that the length of hospital admission is related to the type of admission. The mean length of stay for elective admission is 8.83 days (95% CI 8.66 to 9.01 days). Urgent admissions are associated with stays that are on average 26.8% (95% CI 21.7% to 32.1%) longer than those resulting from elective admissions. Emergency admissions result in stays that are on average 2.06 (95% CI 1.96 to 2.17) times as long as those from elective admissions. 值得注意的是，這些結果所依據的泊松回歸模型的前提條件很可能因爲數據本身存在過度離散 (overdispersion) 的問題而無法得到滿足。 在上述模型中如果加入年齡作爲解釋變量，試分析年齡是否可以認爲是住院時長的獨立解釋變量 (獨立於住院形態 type of admission)。 mC &lt;- glm(los ~ as.factor(age) + type2 + type3, family=poisson(link = log), data=medpar) jtools::summ(mC, digits = 6, confint = TRUE, exp = TRUE) Observations 1495 Dependent variable los Type Generalized linear model Family poisson Link log 𝛘²(10) 735.948666 Pseudo-R² (Cragg-Uhler) 0.388787 Pseudo-R² (McFadden) 0.050351 AIC 13902.334982 BIC 13960.743678 exp(Est.) 2.5% 97.5% z val. p (Intercept) 11.329126 9.015810 14.236002 20.830249 0.000000 as.factor(age)2 0.775566 0.608964 0.987746 -2.059888 0.039409 as.factor(age)3 0.817641 0.647619 1.032300 -1.692696 0.090513 as.factor(age)4 0.791049 0.628003 0.996425 -1.990375 0.046550 as.factor(age)5 0.765953 0.608122 0.964748 -2.264798 0.023525 as.factor(age)6 0.795170 0.631446 1.001345 -1.948541 0.051350 as.factor(age)7 0.759360 0.601769 0.958220 -2.319574 0.020364 as.factor(age)8 0.723916 0.570628 0.918383 -2.661289 0.007784 as.factor(age)9 0.731655 0.571365 0.936912 -2.476470 0.013269 type2 1.265918 1.214954 1.319021 11.246930 0.000000 type3 2.064878 1.962417 2.172690 27.922756 0.000000 Standard errors: MLE lrtest(mC, mB) ## Likelihood ratio test ## ## Model 1: los ~ as.factor(age) + type2 + type3 ## Model 2: los ~ type2 + type3 ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 11 -6940.17 ## 2 3 -6949.39 -8 18.4422 0.018145 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 加入和年齡組作爲預測變量的模型結果如上所示。和沒有加年齡的模型相比較的似然比檢驗 (likelihood ratio test) 結果顯示，如果泊松回歸模型前提得到滿足，那麼有證據證明 (p = 0.018)，在調整了住院形態之後，年齡依然是住院時長獨立的預測變量。 重新對加入年齡的泊松回歸模型加入穩健統計標準誤 (robust standard error) 的估計，獲得新的穩健信賴區間估計。與非穩健信賴區間相比較，你能得出怎樣的結論？ jtools::summ(mC, digits = 6, confint = TRUE, exp = TRUE, robust = &quot;HC1&quot;) Observations 1495 Dependent variable los Type Generalized linear model Family poisson Link log 𝛘²(10) 735.948666 Pseudo-R² (Cragg-Uhler) 0.388787 Pseudo-R² (McFadden) 0.050351 AIC 13902.334982 BIC 13960.743678 exp(Est.) 2.5% 97.5% z val. p (Intercept) 11.329126 9.015810 14.236002 20.830249 0.000000 as.factor(age)2 0.775566 0.608964 0.987746 -2.059888 0.039409 as.factor(age)3 0.817641 0.647619 1.032300 -1.692696 0.090513 as.factor(age)4 0.791049 0.628003 0.996425 -1.990375 0.046550 as.factor(age)5 0.765953 0.608122 0.964748 -2.264798 0.023525 as.factor(age)6 0.795170 0.631446 1.001345 -1.948541 0.051350 as.factor(age)7 0.759360 0.601769 0.958220 -2.319574 0.020364 as.factor(age)8 0.723916 0.570628 0.918383 -2.661289 0.007784 as.factor(age)9 0.731655 0.571365 0.936912 -2.476470 0.013269 type2 1.265918 1.214954 1.319021 11.246930 0.000000 type3 2.064878 1.962417 2.172690 27.922756 0.000000 Standard errors: Robust, type = HC1 可以看到加入了 robust 選項之後，並不會改變每個變量的回歸係數的點估計 (point estimates)。但是，可以發現每個變量的回歸係數對應的標準誤發生了較大的變化 – 信賴區間的範圍都無一例外地變大了。由於使用 robust = \"HC1\" 選項，這裏的標準誤估計不再依據泊松模型的前提條件 – 泊松分佈的特徵。在 Stata 中擬合相同的模型，我們可以獲得是否有過度離散的指標型數據結果，也就是殘差離差量 (residual deviance) 和 Pearson 統計量，以及他們對各自的自由度之比： ## ## . use http://www.stata-press.com/data/hh3/medpar, clear ## ## . glm los type2 type3 i.age, family(Poisson) robust eform ## ## Iteration 0: log pseudolikelihood = -7023.6853 ## Iteration 1: log pseudolikelihood = -6940.3577 ## Iteration 2: log pseudolikelihood = -6940.1675 ## Iteration 3: log pseudolikelihood = -6940.1675 ## ## Generalized linear models Number of obs = 1,495 ## Optimization : ML Residual df = 1,484 ## Scale parameter = 1 ## Deviance = 8165.18541 (1/df) Deviance = 5.502147 ## Pearson = 9346.752373 (1/df) Pearson = 6.298351 ## ## Variance function: V(u) = u [Poisson] ## Link function : g(u) = ln(u) [Log] ## ## AIC = 9.299221 ## Log pseudolikelihood = -6940.167491 BIC = -2682.679 ## ## ------------------------------------------------------------------------------ ## | Robust ## los | IRR Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## type2 | 1.265918 .067136 4.45 0.000 1.140942 1.404585 ## type3 | 2.064878 .2416633 6.20 0.000 1.641625 2.597257 ## | ## age | ## 2 | .7755658 .1792692 -1.10 0.272 .4930223 1.220031 ## 3 | .8176414 .173137 -0.95 0.342 .5399076 1.238244 ## 4 | .7910486 .1623995 -1.14 0.254 .5289985 1.18291 ## 5 | .7659533 .1574871 -1.30 0.195 .5119027 1.146086 ## 6 | .7951697 .1646582 -1.11 0.268 .5299061 1.193221 ## 7 | .7593596 .1589473 -1.32 0.188 .5038207 1.144508 ## 8 | .7239164 .1535639 -1.52 0.128 .4776652 1.097118 ## 9 | .7316548 .1652243 -1.38 0.166 .4699868 1.139008 ## | ## _cons | 11.32913 2.271633 12.11 0.000 7.647503 16.78314 ## ------------------------------------------------------------------------------ ## Note: _cons estimates baseline incidence rate. ## ## . 可以看到殘差離差量 (residual deviance) 和 Pearson 統計量與各自的自由度之比均顯著大於1。提示該數據有相當程度的過度離散，也就是泊松回歸模型的前提泊松分佈無法得到滿足。而使用了 robust = \"HC1\" (in R) 或者 robust (in Stata) 的選項之後，就不再需要這一前提假設。我們也看到穩健信賴區間相較於沒有使用該選項時要不那麼精確，也就是區間範圍都變寬了。 當考慮了過度離散的模型被採納後 robust (in Stata)，我們無法再使用似然比檢驗法檢驗年齡是否是住院時長的獨立預測變量。但是我們可以使用 Stata 裏特有的模型擬合之後的 test 命令來實施聯合 Wald 檢驗 (joint Wald test) 年齡是否在穩健泊松模型下依然是住院時長的獨立預測變量。試解讀該檢驗結果和之前未考慮過度離散現象時使用的模型的年齡的獨立預測變量檢驗之間有何不同，原因是什麼呢？ ## ## . use http://www.stata-press.com/data/hh3/medpar, clear ## ## . quietly: glm los type2 type3 i.age, family(Poisson) robust eform ## ## . test 2.age = 3.age = 4.age = 5.age = 6.age = 7.age = 8.age = 9.age = 0 ## ## ( 1) [los]2.age - [los]3.age = 0 ## ( 2) [los]2.age - [los]4.age = 0 ## ( 3) [los]2.age - [los]5.age = 0 ## ( 4) [los]2.age - [los]6.age = 0 ## ( 5) [los]2.age - [los]7.age = 0 ## ( 6) [los]2.age - [los]8.age = 0 ## ( 7) [los]2.age - [los]9.age = 0 ## ( 8) [los]2.age = 0 ## ## chi2( 8) = 4.09 ## Prob &gt; chi2 = 0.8493 ## ## . 這個聯合 Wald 檢驗的結果是 p = 0.8493。這和之前未考慮數據過度離散時使用的模型時進行的對年齡這一變量的似然比模型檢驗結果大相徑庭 (p = 0.018)。之所以結果相差如此之大，我們相信主要是因爲之前忽略數據過度離散問題的模型其實是錯誤的。而考慮了數據過度離散特徵之後，可以認爲使用了穩健泊松回歸模型之後的聯合 Wald 檢驗結果才是真的值得相信的。 請使用負二項回歸模型 (negative binomial regression model) 來擬合上述模型，先擬合一個不加任何預測變量的負二項回歸模型。請解釋模型結果的下半部分出現的似然比檢驗的意義，和無預測變量的泊松回歸模型結果做一下對比。 在 Stata 裏： ## ## . use http://www.stata-press.com/data/hh3/medpar, clear ## ## . nbreg los ## ## Fitting Poisson model: ## ## Iteration 0: log likelihood = -7308.1418 ## Iteration 1: log likelihood = -7308.1418 ## ## Fitting constant-only model: ## ## Iteration 0: log likelihood = -4988.8172 ## Iteration 1: log likelihood = -4857.3372 ## Iteration 2: log likelihood = -4856.494 ## Iteration 3: log likelihood = -4856.494 ## ## Fitting full model: ## ## Iteration 0: log likelihood = -4856.494 ## Iteration 1: log likelihood = -4856.494 ## ## Negative binomial regression Number of obs = 1,495 ## LR chi2(0) = 0.00 ## Dispersion = mean Prob &gt; chi2 = . ## Log likelihood = -4856.494 Pseudo R2 = 0.0000 ## ## ------------------------------------------------------------------------------ ## los | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## _cons | 2.287896 .0198946 115.00 0.000 2.248903 2.326888 ## -------------+---------------------------------------------------------------- ## /lnalpha | -.7128727 .0431289 -.7974038 -.6283417 ## -------------+---------------------------------------------------------------- ## alpha | .4902339 .0211432 .450497 .5334758 ## ------------------------------------------------------------------------------ ## LR test of alpha=0: chibar2(01) = 4903.30 Prob &gt;= chibar2 = 0.000 ## ## . 在 R 裏： mD &lt;- glm.nb(los ~ 1, data=medpar) jtools::summ(mD, digits = 6, confint = TRUE, exp = TRUE) ## Error in glm.control(...) : ## unused argument (family = list(&quot;Negative Binomial(2.0398)&quot;, &quot;log&quot;, function (mu) ## log(mu), function (eta) ## pmax(exp(eta), .Machine$double.eps), function (mu) ## mu + mu^2/.Theta, function (y, mu, wt) ## 2 * wt * (y * log(pmax(1, y)/mu) - (y + .Theta) * log((y + .Theta)/(mu + .Theta))), function (y, n, mu, wt, dev) ## { ## term &lt;- (y + .Theta) * log(mu + .Theta) - y * log(mu) + lgamma(y + 1) - .Theta * log(.Theta) + lgamma(.Theta) - lgamma(.Theta + y) ## 2 * sum(term * wt) ## }, function (eta) ## pmax(exp(eta), .Machine$double.eps), expression({ ## if (any(y &lt; 0)) stop(&quot;negative values not allowed for the negative binomial family&quot;) ## n &lt;- rep(1, nobs) ## mustart &lt;- y + (y == 0)/6 ## }), function (mu) ## all(mu &gt; 0), function (eta) ## TRUE, function (object, nsim) ## { ## ftd &lt;- fitted(object) ## rnegbin(nsim * length(ftd), ftd, .Theta) ## })) ## Warning: Something went wrong when calculating the pseudo R-squared. Returning NA instead. Observations 1495 Dependent variable los Type Generalized linear model Family Negative Binomial(2.0398) Link log 𝛘²(NA) NA Pseudo-R² (Cragg-Uhler) NA Pseudo-R² (McFadden) NA AIC 9716.988008 BIC 9727.607771 exp(Est.) 2.5% 97.5% z val. p (Intercept) 9.854181 9.477334 10.246011 115.000849 0.000000 Standard errors: MLE summary(mD) ## ## Call: ## glm.nb(formula = los ~ 1, data = medpar, init.theta = 2.03984274, ## link = log) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.92829 -0.98645 -0.26025 0.38038 5.49923 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 2.287896 0.019895 115 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for Negative Binomial(2.0398) family taken to be 1) ## ## Null deviance: 1571.48 on 1494 degrees of freedom ## Residual deviance: 1571.48 on 1494 degrees of freedom ## AIC: 9716.99 ## ## Number of Fisher Scoring iterations: 1 ## ## ## Theta: 2.0398 ## Std. Err.: 0.0880 ## ## 2 x log-likelihood: -9712.9880 可以看到在 R 裏最下方出現的是 Theta 也就是評價過度離散程度的指標，他和 Stata 的輸出報告中的 alpha 互爲倒數。不同的是 Stata 的報告中還對 alpha = 0 做了檢驗。檢驗結果提示住院時長這個數據並不服從泊松分佈。也就是實際的住院時長的數據比泊松分佈時的結果的方差要大的多。 (there is more variability than would be expected from a Poisson variable) 其實，簡單對 los 分析一下就知道它的樣本均值和樣本方差分別是：（他們相差巨大，不符合泊松分佈的特徵） mean(medpar$los) ## [1] 9.8541806 var(medpar$los) ## [1] 78.020222 如果你有興趣，請擬合一個只有住院形態一個預測變量的負二項回歸模型。使用其輸出的結果來計算一下不同住院形態下的平均住院時長。比較模型預測的平均住院時長和觀測到的不同住院形態下的實際住院時長的平均值之間的差別。 在 Stata 裏： ## ## . use http://www.stata-press.com/data/hh3/medpar, clear ## ## . nbreg los type2 type3 ## ## Fitting Poisson model: ## ## Iteration 0: log likelihood = -6949.6915 ## Iteration 1: log likelihood = -6949.3886 ## Iteration 2: log likelihood = -6949.3886 ## ## Fitting constant-only model: ## ## Iteration 0: log likelihood = -4988.8172 ## Iteration 1: log likelihood = -4857.3372 ## Iteration 2: log likelihood = -4856.494 ## Iteration 3: log likelihood = -4856.494 ## ## Fitting full model: ## ## Iteration 0: log likelihood = -4802.8473 ## Iteration 1: log likelihood = -4800.2234 ## Iteration 2: log likelihood = -4800.2189 ## Iteration 3: log likelihood = -4800.2189 ## ## Negative binomial regression Number of obs = 1,495 ## LR chi2(2) = 112.55 ## Dispersion = mean Prob &gt; chi2 = 0.0000 ## Log likelihood = -4800.2189 Pseudo R2 = 0.0116 ## ## ------------------------------------------------------------------------------ ## los | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## type2 | .2373439 .0502166 4.73 0.000 .1389211 .3357666 ## type3 | .7253612 .0757014 9.58 0.000 .5769893 .8737332 ## _cons | 2.178233 .0222433 97.93 0.000 2.134637 2.221829 ## -------------+---------------------------------------------------------------- ## /lnalpha | -.8033559 .0443828 -.8903446 -.7163671 ## -------------+---------------------------------------------------------------- ## alpha | .4478236 .0198757 .4105142 .4885238 ## ------------------------------------------------------------------------------ ## LR test of alpha=0: chibar2(01) = 4298.34 Prob &gt;= chibar2 = 0.000 ## ## . 在 R 裏： mE &lt;- glm.nb(los ~ type2 + type3, data=medpar) jtools::summ(mE, digits = 6, confint = TRUE) ## Error in glm.control(...) : ## unused argument (family = list(&quot;Negative Binomial(2.233)&quot;, &quot;log&quot;, function (mu) ## log(mu), function (eta) ## pmax(exp(eta), .Machine$double.eps), function (mu) ## mu + mu^2/.Theta, function (y, mu, wt) ## 2 * wt * (y * log(pmax(1, y)/mu) - (y + .Theta) * log((y + .Theta)/(mu + .Theta))), function (y, n, mu, wt, dev) ## { ## term &lt;- (y + .Theta) * log(mu + .Theta) - y * log(mu) + lgamma(y + 1) - .Theta * log(.Theta) + lgamma(.Theta) - lgamma(.Theta + y) ## 2 * sum(term * wt) ## }, function (eta) ## pmax(exp(eta), .Machine$double.eps), expression({ ## if (any(y &lt; 0)) stop(&quot;negative values not allowed for the negative binomial family&quot;) ## n &lt;- rep(1, nobs) ## mustart &lt;- y + (y == 0)/6 ## }), function (mu) ## all(mu &gt; 0), function (eta) ## TRUE, function (object, nsim) ## { ## ftd &lt;- fitted(object) ## rnegbin(nsim * length(ftd), ftd, .Theta) ## })) ## Warning: Something went wrong when calculating the pseudo R-squared. Returning NA instead. Observations 1495 Dependent variable los Type Generalized linear model Family Negative Binomial(2.233) Link log 𝛘²(NA) NA Pseudo-R² (Cragg-Uhler) NA Pseudo-R² (McFadden) NA AIC 9608.437779 BIC 9629.677305 Est. 2.5% 97.5% z val. p (Intercept) 2.178233 2.134637 2.221829 97.927402 0.000000 type2 0.237344 0.138921 0.335767 4.726402 0.000002 type3 0.725361 0.576989 0.873733 9.581877 0.000000 Standard errors: MLE summary(mE) ## ## Call: ## glm.nb(formula = los ~ type2 + type3, data = medpar, init.theta = 2.233022138, ## link = log) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.47528 -0.90422 -0.28563 0.43558 3.86701 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 2.178233 0.022243 97.9274 &lt; 2.2e-16 *** ## type2 0.237344 0.050217 4.7264 2.285e-06 *** ## type3 0.725361 0.075701 9.5819 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for Negative Binomial(2.233) family taken to be 1) ## ## Null deviance: 1685.08 on 1494 degrees of freedom ## Residual deviance: 1568.12 on 1492 degrees of freedom ## AIC: 9608.44 ## ## Number of Fisher Scoring iterations: 1 ## ## ## Theta: 2.2330 ## Std. Err.: 0.0991 ## ## 2 x log-likelihood: -9600.4380 從輸出的分析報告結果來看，模型估計的不同住院形態 (elective, urgent, and emergency) 的平均住院時長分別是 \\(\\exp(2.1782) = 8.83\\) 天，\\(\\exp(2.1782 + 0.2373) = 11.20\\) 天，\\(\\exp(2.1782 + 0.7253) = 18.24\\)天。要估算模型的預測方差，可以通過手工計算。已知如果期待值是 \\(\\mu\\)，那麼其方差是 \\(\\mu(1 + \\alpha \\mu)\\)。那麼依據這個公式，就可以估算不同住院形態 (elective, urgent, and emergency) 的住院時長的方差分別是 \\(8.83 \\times (1 + 0.4478 \\times 8.83) = 43.74\\) days\\(^2\\)，\\(11.2 \\times (1 + 0.4478 \\times 11.2) = 67.3\\) days\\(^2\\)，\\(18.24 \\times (1 + 0.4478 \\times 18.24) = 167.2\\) days\\(^2\\)。 和觀測值相比較： var(medpar$los[medpar$type1 == 1]) ## [1] 41.680046 var(medpar$los[medpar$type2 == 1]) ## [1] 77.878016 var(medpar$los[medpar$type3 == 1]) ## [1] 424.87884 可見，對於前兩種住院形態來說，模型推測的方差和觀測方差還是比較接近的。但是對於第三種住院形態 (emergency)，觀測方差遠遠大於模型推測方差。當然，這可能由於因爲緊急住院的患者人數較低 (n = 96)。也就是說，樣本量太低的組使用該模型推測的方差準確度就比較低。另一種原因值得考慮的就是，負二項回歸模型中使用的 Gamma 隨機效應分佈可能並不適用與本數據 (對於不同住院形態的住院時長可能需要不同的 alpha，而不是強迫他們都是相同的)。另外一個被忽視的是，住院時長這一數據其實是只能取正值的數據。然而泊松分佈和負二項分佈本身其實是允許有 0 這樣的數字的。如此一來，或許我們應該把住院時長定義爲允許 0 存在的數字。也就是把住院時長的數據減去1。(number of days from the day of admission) "],["GLM-rates.html", "第 62 章 率的廣義線性迴歸 Poisson GLM for rates 62.1 醫學中的率 62.2 泊松過程 62.3 率的模型 62.4 率的 GLM 62.5 分析實例 Example: British doctors study 62.6 GLM Practical 06", " 第 62 章 率的廣義線性迴歸 Poisson GLM for rates 62.1 醫學中的率 前章介紹的事件發生次數，使用的是泊松迴歸。本章介紹同樣利用泊松迴歸，對事件發生率類型數據的泊松迴歸模型。常見的率的數據例如： 肺癌發病率 工廠職工的死亡率 術後後遺症的發生率 下列數據來自英國醫生調查 (British doctors study)，研究的是男性醫生中吸菸與否和冠心病死亡之間的關係。最後一列是每組觀測對象被追蹤的人年 (person-year)。 ## agegrp smokes deaths pyrs ## 1 35-44 Smoker 32 52407 ## 2 45-54 Smoker 104 43248 ## 3 55-64 Smoker 206 28612 ## 4 65-74 Smoker 186 12663 ## 5 75+ Smoker 102 5317 ## 6 35-44 Non-smoker 2 18790 ## 7 45-54 Non-smoker 12 10673 ## 8 55-64 Non-smoker 28 5710 ## 9 65-74 Non-smoker 28 2585 ## 10 75+ Non-smoker 31 1462 這是一個已經被整理過的數據，我們沒有辦法從這樣的數據還原到每個觀察對象的個人水平數據。冠心病的粗死亡率 (crude death rate) 可以被計算如下表 (忽略年齡分組)，此時默認的前提是死亡事件在追蹤的過程中發生的概率不發生改變。 表 62.1: Death rates due to CHD in smokers and non-smokers, collapsed over age group Group Person-years of follow-up CHD deaths Death Rate per 1000 person-years Rate Ratios Non-smokers 39220 101 2.58 1.00 Smokers 142247 630 4.43 1.72 62.2 泊松過程 設 \\(Y\\) 是代表某段時間 \\(t\\) 內事件發生次數 (死亡) 的隨機變量。如果可以假設： 每次事件的發生，是互相獨立的，即在沒有重疊的時間線上，每個事件的發生是隨機的。 在一個無限小的時間段 \\(\\delta t\\) 內，事件發生的概率是 \\(\\lambda\\times\\delta t\\)，其中 \\(\\delta t \\rightarrow 0\\)。 那麼根據泊松分佈 (Section 6) 的定義，在這個時間段內，隨機變量 \\(Y\\) 事件發生次數服從泊松分佈： \\[ \\begin{aligned} Y &amp; \\sim \\text{Po}(\\mu) \\\\ \\text{Where } \\mu &amp; = \\lambda t, \\text{ and } \\lambda \\text{ is the Rate} \\end{aligned} \\] 所以，從泊松過程可以看到，我們關心的參數是事件發生率 \\(\\lambda\\)。 62.3 率的模型 既然關心的參數只是發生率，且我們已知泊松分佈是指數分佈的家族成員，可以用廣義線性模型的概念來建模。 因變量分佈，distribution of dependent variable \\[Y_i \\sim \\text{Po}(\\mu_i), \\text{ where } \\mu_i = \\lambda_i t_i\\] 線性預測方程，linear predictor \\[\\eta_i = \\alpha + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip}\\] 標準鏈接方程，canonical link function \\[\\text{log}(\\lambda_i) = \\text{log}(\\frac{\\mu_i}{t_i})\\] 所以，將率的模型整理一下，就變成了 \\[ \\begin{aligned} \\text{log}(\\mu_i) - \\text{log}(t_i) &amp; = \\alpha + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip} \\\\ \\text{log}(\\mu_i) &amp; = \\text{log}(t_i) + \\alpha + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip} \\end{aligned} \\] 你可以看到，時間項的對數部分 \\(\\text{log}(t_i)\\) 其實是被移到線性預測方程的右邊跟參數放在一起的，只是它的迴歸係數被強制爲 \\(1\\)。這個時間項被叫做 補償項 (offset)。這樣我們就成功地擬合了用於求事件發生率的一個泊松迴歸模型。在 R 裏，你可以用 glm() 命令的 offset = 選項功能，也可以把 offset(log(Person-year)) 作爲線性預測方程的一部分把時間項取對數以後放進模型裏面。 62.4 率的 GLM 所以我們一起來把率的 GLM 正式定義一下，它包含三個部分： 可被認爲互相獨立的因變量觀測值的分佈服從泊松分佈 \\[Y_i \\sim \\text{Po}(\\mu_i)\\] 其中 \\(E(Y_i) = \\mu_i = \\lambda_i t_i\\)，\\(t_i\\) 是第 \\(i\\) 個觀察對象 (或者觀察組) 的追蹤人年 (person-time)。 線性預測方程 \\[\\eta_i = \\text{log}(t_i) + \\alpha + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip}\\] 鏈接方程是均值的對數方程 \\[\\text{log}(\\mu_i) = \\eta_i\\] 和分組型二項分佈數據相似，如果泊松 GLM 擬合的數據也是分組型數據，如本章開頭的英國醫生隊列數據。那麼模型偏差值 (deviance) 可以用來衡量模型擬合的好壞。在零假設條件下，模型偏差值服從自由度爲 \\(n-p\\) 的卡方分佈 (這裏的 \\(n\\) 是分組型數據中的“組的數量”，也就是飽和模型中參數的數量，\\(p\\) 是擬合的線性預測方程中參數的數量)。 62.5 分析實例 Example: British doctors study 數據是本章開頭使用的英國醫生隊列 ## agegrp smokes deaths pyrs ## 1 35-44 Smoker 32 52407 ## 2 45-54 Smoker 104 43248 ## 3 55-64 Smoker 206 28612 ## 4 65-74 Smoker 186 12663 ## 5 75+ Smoker 102 5317 ## 6 35-44 Non-smoker 2 18790 ## 7 45-54 Non-smoker 12 10673 ## 8 55-64 Non-smoker 28 5710 ## 9 65-74 Non-smoker 28 2585 ## 10 75+ Non-smoker 31 1462 每組的死亡人數用 \\(y_i, i=1,\\cdots,10\\) 標記； 每組追蹤的人年用 \\(t_i\\) 標記； \\(x_{i1} = 0\\) 時對象是吸菸者，\\(x_{i1} = 1\\) 時對象是非吸菸者； \\(x_{i2}, x_{i3}, x_{i4}, x_{i5}\\) 作爲5個年齡組的啞變量。 分析目的是： 調查吸菸與冠心病死亡率的關係 (不調整年齡)； 調查吸菸與冠心病死亡率的年齡調整後關係； 調查年齡是否對吸菸與冠心病死亡率的關係起到交互作用。 62.5.1 模型 1: 吸菸 第一個模型可以用下面的數學表達式： \\[ \\text{log}(\\mu_i) = \\text{log}(t_i) + \\alpha + \\beta_1 x_{i1} \\] 在 R 裏面用下面的代碼來擬合這個模型，仔細閱讀輸出的結果： # the following 2 models are equivalent Model1 &lt;- glm(deaths ~ smokes + offset(log(pyrs)), family = poisson(link = &quot;log&quot;), data = BritishD) Model1 &lt;- glm(deaths ~ smokes, offset = log(pyrs), family = poisson(link = &quot;log&quot;), data = BritishD) summary(Model1); jtools::summ(Model1, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = deaths ~ smokes, family = poisson(link = &quot;log&quot;), ## data = BritishD, offset = log(pyrs)) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -16.5348 -6.0313 4.6116 8.1617 13.6441 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -5.961822 0.099504 -59.9157 &lt; 2.2e-16 *** ## smokesSmoker 0.542221 0.107183 5.0588 4.219e-07 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for poisson family taken to be 1) ## ## Null deviance: 935.067 on 9 degrees of freedom ## Residual deviance: 905.976 on 8 degrees of freedom ## AIC: 965.044 ## ## Number of Fisher Scoring iterations: 6 Observations 10 Dependent variable deaths Type Generalized linear model Family poisson Link log 𝛘²(1) 29.091145 Pseudo-R² (Cragg-Uhler) 0.945476 Pseudo-R² (McFadden) 0.029381 AIC 965.044126 BIC 965.649296 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.002575 0.002119 0.003130 -59.915661 0.000000 smokesSmoker 1.719823 1.393956 2.121867 5.058821 0.000000 Standard errors: MLE 輸出報告中的參數估計部分 Estimate 就是我們擬合模型中參數的估計 \\(\\hat\\alpha, \\hat\\beta_1\\)，他們各自的含義是： \\(\\hat\\alpha = -5.96\\)：非吸菸者的冠心病估計死亡率的對數 (the estimated log rate for non-smokers)； \\(\\hat\\beta_1 = 0.547\\)：非吸菸者和吸菸者兩組之間冠心病死亡率對數之差 (the estimated difference in log rate between non-smokers and smokers)。 注意看報告中間部分模型偏差部分的數字 Residual deviance: 905.98 on 8 degrees of freedom，如果對 模型 1 進行擬合優度檢驗： with(Model1, cbind(res.deviance = deviance, df = df.residual, p = pchisq(deviance, df.residual, lower.tail=FALSE))) ## res.deviance df p ## [1,] 905.97619 8 2.9024145e-190 擬合優度檢驗結果提示，這個模型對數據的擬合非常差 (poor fit)。可能的原因是，模型 1 中忽略了“年齡”這一重要的因素，使得當僅僅使用 吸菸與否 的信息擬合的泊松迴歸模型的擬合值和觀察值之間的差異的波動非常大，大到很可能無法滿足泊松分佈的前提假設。 62.5.2 模型 2: 吸菸 + 年齡 第二個模型的線性預測方程可以寫作： \\[ \\text{log}(\\mu_i) = \\text{ln}(t_i) + \\alpha + \\beta_1 x_{i1} + \\beta_2 x_{i2} + \\beta_3 x_{i3} + \\beta_4 x_{i4} + \\beta_5 x_{i5} \\] 在 R 裏面用下面的代碼來擬合這個模型，仔細閱讀輸出的結果： Model2 &lt;- glm(deaths ~ smokes + agegrp + offset(log(pyrs)), family = poisson(link = &quot;log&quot;), data = BritishD) summary(Model2); jtools::summ(Model2, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = deaths ~ smokes + agegrp + offset(log(pyrs)), family = poisson(link = &quot;log&quot;), ## data = BritishD) ## ## Deviance Residuals: ## 1 2 3 4 5 6 7 8 9 ## 0.901600 0.510379 0.051347 -0.087318 -0.912369 -2.179780 -1.308000 -0.137907 0.228819 ## 10 ## 1.919020 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -7.91933 0.19176 -41.2978 &lt; 2.2e-16 *** ## smokesSmoker 0.35454 0.10737 3.3019 0.0009604 *** ## agegrp45-54 1.48401 0.19510 7.6063 2.821e-14 *** ## agegrp55-64 2.62751 0.18373 14.3012 &lt; 2.2e-16 *** ## agegrp65-74 3.35049 0.18480 18.1305 &lt; 2.2e-16 *** ## agegrp75+ 3.70010 0.19222 19.2494 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for poisson family taken to be 1) ## ## Null deviance: 935.0673 on 9 degrees of freedom ## Residual deviance: 12.1324 on 4 degrees of freedom ## AIC: 79.2003 ## ## Number of Fisher Scoring iterations: 4 Observations 10 Dependent variable deaths Type Generalized linear model Family poisson Link log 𝛘²(5) 922.934964 Pseudo-R² (Cragg-Uhler) 1.000000 Pseudo-R² (McFadden) 0.932130 AIC 79.200307 BIC 81.015817 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.000364 0.000250 0.000530 -41.297843 0.000000 smokesSmoker 1.425519 1.154984 1.759421 3.301875 0.000960 agegrp45-54 4.410584 3.009014 6.464990 7.606281 0.000000 agegrp55-64 13.839200 9.654338 19.838070 14.301161 0.000000 agegrp65-74 28.516783 19.851789 40.963909 18.130508 0.000000 agegrp75+ 40.451206 27.753285 58.958789 19.249382 0.000000 Standard errors: MLE 此時可以計算吸菸者與非吸菸者相比時，年齡調整後冠心病死亡率的比爲： \\[ \\begin{aligned} e^{0.3545} &amp; = 1.43 \\text{ with } 95\\% \\text{ CI: } \\\\ (e^{0.3545 - 1.96\\times0.1074}, &amp; e^{0.3545 + 1.96\\times0.1074}) = (1.16, 1.76) \\end{aligned} \\] 報告中還包含了對吸菸項迴歸係數的 Wald 檢驗結果 smokesSmoker 0.3545 0.1074 3.302 0.00096 ***，從這一結果來看，數據提供了強有力的證據證明了年齡調整以後，吸菸會引起冠心病死亡率的顯著升高。再利用模型擬合報告中模型偏差部分的數據 Residual deviance: 905.98 on 8 degrees of freedom，模型的擬合優度檢驗結果爲： with(Model2, cbind(res.deviance = deviance, df = df.residual, p = pchisq(deviance, df.residual, lower.tail=FALSE))) ## res.deviance df p ## [1,] 12.132366 4 0.016393625 結果依然提示，即使把年齡組放入這個泊松迴歸，模型對數據的擬合程度依然非常的不好。所以，到這裏，在即使調整了年齡之後模型擬合度依然不理想的情況下 (這是需要加交互作用項的證據)，我們需要在模型中加入年齡和吸菸的交互作用項 (結果是加入交互作用項的模型就變成了飽和模型)。 62.5.3 模型 3: 吸菸 + 年齡 + 吸菸與年齡的交互作用項 Model3 &lt;- glm(deaths ~ smokes*agegrp + offset(log(pyrs)), family = poisson(link = &quot;log&quot;), data = BritishD) summary(Model3); jtools::summ(Model3, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = deaths ~ smokes * agegrp + offset(log(pyrs)), family = poisson(link = &quot;log&quot;), ## data = BritishD) ## ## Deviance Residuals: ## [1] 0 0 0 0 0 0 0 0 0 0 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -9.14793 0.70711 -12.9371 &lt; 2.2e-16 *** ## smokesSmoker 1.74687 0.72887 2.3967 0.016544 * ## agegrp45-54 2.35737 0.76376 3.0865 0.002025 ** ## agegrp55-64 3.83016 0.73192 5.2330 1.668e-07 *** ## agegrp65-74 4.62266 0.73192 6.3158 2.688e-10 *** ## agegrp75+ 5.29436 0.72956 7.2569 3.960e-13 *** ## smokesSmoker:agegrp45-54 -0.98662 0.79006 -1.2488 0.211741 ## smokesSmoker:agegrp55-64 -1.36281 0.75619 -1.8022 0.071512 . ## smokesSmoker:agegrp65-74 -1.44229 0.75653 -1.9065 0.056592 . ## smokesSmoker:agegrp75+ -1.84699 0.75717 -2.4393 0.014715 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for poisson family taken to be 1) ## ## Null deviance: 9.35067e+02 on 9 degrees of freedom ## Residual deviance: -2.30926e-14 on 0 degrees of freedom ## AIC: 75.0679 ## ## Number of Fisher Scoring iterations: 3 Observations 10 Dependent variable deaths Type Generalized linear model Family poisson Link log 𝛘²(9) 935.067331 Pseudo-R² (Cragg-Uhler) 1.000000 Pseudo-R² (McFadden) 0.944383 AIC 75.067940 BIC 78.093791 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.000106 0.000027 0.000426 -12.937135 0.000000 smokesSmoker 5.736638 1.374812 23.937107 2.396691 0.016544 agegrp45-54 10.563103 2.364154 47.196223 3.086519 0.002025 agegrp55-64 46.070053 10.974966 193.390103 5.233001 0.000000 agegrp65-74 101.764023 24.242574 427.178912 6.315753 0.000000 agegrp75+ 199.209986 47.676959 832.364715 7.256922 0.000000 smokesSmoker:agegrp45-54 0.372834 0.079252 1.753950 -1.248791 0.211741 smokesSmoker:agegrp55-64 0.255941 0.058140 1.126696 -1.802212 0.071512 smokesSmoker:agegrp65-74 0.236386 0.053661 1.041316 -1.906450 0.056592 smokesSmoker:agegrp75+ 0.157711 0.035756 0.695615 -2.439324 0.014715 Standard errors: MLE 此時你會看到模型的偏差已經幾乎接近於零，因爲這已經是一個飽和模型。你能根據這個模型的結果描述吸菸與冠心病發病率之間的關係及其如何隨着年齡變化而變化的嗎？ 根据上述模型的结果，相對於非吸菸人羣，吸菸人羣的年齡調整後的冠心病發病率比 (rate ratio)，隨着年齡的增加而呈現下降趨勢。在最低年齡組 “35-44歲” 中，吸菸與非吸菸相比冠心病發病率比的估計值是 \\(e^{1.747} = 5.74\\)。 在 “45-54歲” 年齡組中，吸菸與非吸菸相比冠心病發病率比的估計值是 \\(e^{1.747 - 0.987} = 2.14\\)。。。。 62.6 GLM Practical 06 在這個練習題中，我們將學會擬合，並能夠解釋多個不同的泊松回歸模型的分析結果，研究對象來自兩家橡膠製造工廠的男性職員。其中一家工廠在製造過程中對員工施加了保護的獨立設備，然而另一家工廠的工人則較多的暴露在製造橡膠過程中產生的粉塵和污染物中。該研究是爲了分析兩家工廠職工的死亡率是否有不同，需要考慮的已知的混雜因素是職工年齡。 62.6.1 將數據導入 R 環境中，初步計算每個工廠不同年齡組工人的死亡人數，和追蹤人年數據。 Rubber &lt;- read.table(&quot;../backupfiles/RUBBER.RAW&quot;, header = FALSE, sep =&quot;&quot;, col.names = c(&quot;Agegrp&quot;, &quot;Factory&quot;, &quot;n_deaths&quot;, &quot;Pyears&quot;)) Rubber &lt;- Rubber %&gt;% mutate(Factory = as.factor(Factory)) %&gt;% mutate(Agegrp = as.factor(Agegrp)) %&gt;% mutate(Agegrp = fct_recode(Agegrp, &quot;50-59&quot; = &quot;1&quot;, &quot;60-69&quot; = &quot;2&quot;, &quot;70-79&quot; = &quot;3&quot;, &quot;80-89&quot; = &quot;4&quot;)) tab &lt;- stat.table(index=list(Factory=Factory,Agegrp=Agegrp), contents=list(sum(n_deaths), sum(Pyears)), data=Rubber, margins=T) print(tab, digits = 0) ## -------------------------------------------------- ## -----------------Agegrp------------------ ## Factory 50-59 60-69 70-79 80-89 Total ## -------------------------------------------------- ## 1 7 27 30 8 72 ## 4045 3571 1777 381 9774 ## ## 2 7 37 35 9 88 ## 3701 3702 1818 350 9571 ## ## ## Total 14 64 65 17 160 ## 7746 7273 3595 731 19345 ## -------------------------------------------------- 上面的代碼計算了每個工廠不同年齡組的死亡人數 (總人數 160) ，以及追蹤的人年 (總人年 19345)。 在 Stata 裏面的代碼更簡單(嗎？) ## ## . infile agegrp factory deaths pyrs using &quot;../backupfiles/RUBBER.RAW&quot;, clear ## (8 observations read) ## ## . ## . label var agegrp &quot;Age group (1:5-59; 2:60-69; 3: 70-79; 4: 80-89)&quot; ## ## . label var factor &quot;Factory 1 or 2&quot; ## ## . label var deaths &quot;Number of deaths&quot; ## ## . label var pyrs &quot;Number of person-years of exposure&quot; ## ## . ## . table factory agegrp, c(sum deaths) row col ## ## --------------------------------------------- ## | Age group (1:5-59; 2:60-69; 3: ## Factory 1 | 70-79; 4: 80-89) ## or 2 | 1 2 3 4 Total ## ----------+---------------------------------- ## 1 | 7 27 30 8 72 ## 2 | 7 37 35 9 88 ## | ## Total | 14 64 65 17 160 ## --------------------------------------------- ## ## . ## . table factory agegrp, c(sum pyrs) row col ## ## --------------------------------------------- ## | Age group (1:5-59; 2:60-69; 3: ## Factory 1 | 70-79; 4: 80-89) ## or 2 | 1 2 3 4 Total ## ----------+---------------------------------- ## 1 | 4045 3571 1777 381 9774 ## 2 | 3701 3702 1818 350 9571 ## | ## Total | 7746 7273 3595 731 19345 ## --------------------------------------------- ## ## . 62.6.2 計算死亡率的對數值，繪製其與年齡組的點圖。 Rubber &lt;- Rubber %&gt;% mutate(logdeathR = log(n_deaths/Pyears)) ggplot(Rubber, aes(x = Agegrp, y = logdeathR, shape = Factory)) + geom_point(size=3)+ scale_y_continuous(breaks = seq(-7.5, -2.5, by = 0.5)) + theme(axis.text = element_text(size = 15), axis.text.x = element_text(size = 15), axis.text.y = element_text(size = 15)) + labs(x = &quot;Age group&quot;, y = &quot;Log death rate (deaths/year)&quot;) + theme(axis.title = element_text(size = 17), axis.text = element_text(size = 8), axis.line = element_line(colour = &quot;black&quot;), panel.border = element_blank(), panel.background = element_blank()) 圖 62.1: Rates increase with age and age specific rates are higher in factory 2. 下面是 Stata 繪製圖62.2的代碼： gen logdeathR = log(deaths/pyrs) twoway (scatter logdeathR agegrp, name(deathRAge, replace) mlabel(factory)), xtitle(age group) xlabel (1(1)4.2) 圖 62.2: Rates increase with age and age specific rates are higher in factory 2. 不論你用哪個圖，都可以看出，死亡率隨年齡增長而增加，2號工廠的死亡率似乎在各個年齡組都較1號工廠高。 62.6.3 請用數學語言描述死亡率和年齡組之間關係的模型。 令 \\(Y_i\\) 爲年齡組 \\(i, (i = 1,\\dots,8)\\) 死亡人數，對應的觀測時間則爲 \\(t_i\\) 年。如果前提條件每名工人之間相互獨立可以認爲得到滿足，那麼 \\(Y_i\\) 可以用一個死亡率爲 \\(\\lambda_i\\) 的泊松模型來描述： \\[ Y_i \\sim \\text{Po}(\\mu_i) \\text{ where } \\mu_i = \\lambda_i t_i \\] 對應的鏈接方程以及其線性預測變量之間的關係可以表述爲： \\[ \\begin{aligned} \\eta_i &amp; = \\log(\\mu_i) = \\log(t_i) + \\beta_0 + \\beta_1x_{1i} + \\beta_2x_{2i} + \\beta_3x_{3i} \\\\ \\text{where } x_{1i} &amp; = \\left\\{ \\begin{array}{ll} 0 \\text{ if the } i \\text{th group is not aged 60-69}\\\\ 1 \\text{ if the } i \\text{th group is aged 60-69}\\\\ \\end{array} \\right. \\\\ \\text{where } x_{2i} &amp; = \\left\\{ \\begin{array}{ll} 0 \\text{ if the } i \\text{th group is not aged 70-79}\\\\ 1 \\text{ if the } i \\text{th group is aged 70-79}\\\\ \\end{array} \\right. \\\\ \\text{where } x_{3i} &amp; = \\left\\{ \\begin{array}{ll} 0 \\text{ if the } i \\text{th group is not aged 80-89}\\\\ 1 \\text{ if the } i \\text{th group is aged 80-89}\\\\ \\end{array} \\right. \\\\ \\end{aligned} \\] 62.6.3.1 用R和Stata計算上述數學模型描述的死亡率和年齡之間關係的極大似然估計 (MLE)。年齡對於死亡率的效果有多強？ # fit a model without &quot;agegroup&quot; mA &lt;- glm(n_deaths ~ offset(log(Pyears)), family = poisson(link = &quot;log&quot;), data = Rubber) jtools::summ(mA, confint = TRUE, digits = 6) Observations 8 Dependent variable n_deaths Type Generalized linear model Family poisson Link log 𝛘²(0) -0.000000 Pseudo-R² (Cragg-Uhler) 0.000000 Pseudo-R² (McFadden) 0.000000 AIC 142.725329 BIC 142.804771 Est. 2.5% 97.5% z val. p (Intercept) -4.795015 -4.949964 -4.640067 -60.652699 0.000000 Standard errors: MLE # fit a model with age group mB &lt;- glm(n_deaths ~ Agegrp + offset(log(Pyears)), family = poisson(link = &quot;log&quot;), data = Rubber) jtools::summ(mB, confint = TRUE, digits = 6) Observations 8 Dependent variable n_deaths Type Generalized linear model Family poisson Link log 𝛘²(3) 102.171839 Pseudo-R² (Cragg-Uhler) 0.999997 Pseudo-R² (McFadden) 0.726037 AIC 46.553491 BIC 46.871257 Est. 2.5% 97.5% z val. p (Intercept) -6.315875 -6.839697 -5.792052 -23.631839 0.000000 Agegrp60-69 1.582833 1.004549 2.161118 5.364657 0.000000 Agegrp70-79 2.302963 1.725477 2.880448 7.816170 0.000000 Agegrp80-89 2.554674 1.847314 3.262034 7.078532 0.000000 Standard errors: MLE lrtest(mA, mB) ## Likelihood ratio test ## ## Model 1: n_deaths ~ offset(log(Pyears)) ## Model 2: n_deaths ~ Agegrp + offset(log(Pyears)) ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 1 -70.3627 ## 2 4 -19.2767 3 102.172 &lt; 2.22e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 你可以比較加入年齡和沒加入年齡時的兩個模型，如上面使用的似然比檢驗法 (likelihood ratio test)。 在 Stata 你可以這樣做上面相同的事： ## ## . infile agegrp factory deaths pyrs using &quot;../backupfiles/RUBBER.RAW&quot;, clear ## (8 observations read) ## ## . ## . gen lpyrs = log(pyrs) ## ## . ## . glm deaths, family(poisson) offset(lpyrs) link(log) ## ## Iteration 0: log likelihood = -76.82037 ## Iteration 1: log likelihood = -70.363937 ## Iteration 2: log likelihood = -70.362666 ## Iteration 3: log likelihood = -70.362666 ## ## Generalized linear models Number of obs = 8 ## Optimization : ML Residual df = 7 ## Scale parameter = 1 ## Deviance = 103.8826147 (1/df) Deviance = 14.84037 ## Pearson = 103.4540571 (1/df) Pearson = 14.77915 ## ## Variance function: V(u) = u [Poisson] ## Link function : g(u) = ln(u) [Log] ## ## AIC = 17.84067 ## Log likelihood = -70.3626661 BIC = 89.32652 ## ## ------------------------------------------------------------------------------ ## | OIM ## deaths | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## _cons | -4.795015 .0790569 -60.65 0.000 -4.949964 -4.640067 ## lpyrs | 1 (offset) ## ------------------------------------------------------------------------------ ## ## . est store A ## ## . ## . glm deaths i.agegrp, family(poisson) offset(lpyrs) link(log) ## ## Iteration 0: log likelihood = -19.667375 ## Iteration 1: log likelihood = -19.277924 ## Iteration 2: log likelihood = -19.276748 ## Iteration 3: log likelihood = -19.276748 ## ## Generalized linear models Number of obs = 8 ## Optimization : ML Residual df = 4 ## Scale parameter = 1 ## Deviance = 1.710778974 (1/df) Deviance = .4276947 ## Pearson = 1.704679988 (1/df) Pearson = .42617 ## ## Variance function: V(u) = u [Poisson] ## Link function : g(u) = ln(u) [Log] ## ## AIC = 5.819187 ## Log likelihood = -19.27674826 BIC = -6.606987 ## ## ------------------------------------------------------------------------------ ## | OIM ## deaths | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## agegrp | ## 2 | 1.582834 .2950484 5.36 0.000 1.004549 2.161118 ## 3 | 2.302963 .2946408 7.82 0.000 1.725477 2.880448 ## 4 | 2.554674 .3609046 7.08 0.000 1.847314 3.262034 ## | ## _cons | -6.315874 .2672612 -23.63 0.000 -6.839697 -5.792052 ## lpyrs | 1 (offset) ## ------------------------------------------------------------------------------ ## ## . est store B ## ## . ## . lrtest A B ## ## Likelihood-ratio test LR chi2(3) = 102.17 ## (Assumption: A nested in B) Prob &gt; chi2 = 0.0000 ## ## . 其實Stata裏面還可以用簡化的 Poisson 命令 ## ## . infile agegrp factory deaths pyrs using &quot;../backupfiles/RUBBER.RAW&quot;, clear ## (8 observations read) ## ## . ## . gen lpyrs = log(pyrs) ## ## . ## . poisson deaths i.agegrp, e(pyrs) ## ## Iteration 0: log likelihood = -19.280832 ## Iteration 1: log likelihood = -19.276746 ## Iteration 2: log likelihood = -19.276745 ## ## Poisson regression Number of obs = 8 ## LR chi2(3) = 102.17 ## Prob &gt; chi2 = 0.0000 ## Log likelihood = -19.276745 Pseudo R2 = 0.7260 ## ## ------------------------------------------------------------------------------ ## deaths | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## agegrp | ## 2 | 1.582833 .2950484 5.36 0.000 1.004549 2.161118 ## 3 | 2.302962 .2946408 7.82 0.000 1.725477 2.880448 ## 4 | 2.554674 .3609046 7.08 0.000 1.847314 3.262034 ## | ## _cons | -6.315874 .2672612 -23.63 0.000 -6.839697 -5.792052 ## ln(pyrs) | 1 (exposure) ## ------------------------------------------------------------------------------ ## ## . 62.6.3.2 計算下列兩組年齡組對比之下的模型估計死亡率比 (rate ratios) 60-69歲 比 50-59歲 RR 及其 95%CI \\[ \\exp(1.583) (\\exp(1.005), \\exp(2.161)) = 4.87 (2.73, 8.68) \\] 80-89歲 比 70-79歲 RR 及其 95%CI 的計算 \\[ \\exp(\\hat{\\beta_3} - \\hat{\\beta_2}) = \\exp(2.555 - 2.302) = 1.29 \\] 爲了獲取 \\(\\hat{\\beta_3} - \\hat{\\beta_2}\\) 的方差，已知 \\(\\text{Var}(\\hat{\\beta_3} - \\hat{\\beta_2}) = \\text{Var}(\\hat{\\beta_3}) + \\text{Var}(\\hat{\\beta_2}) - 2\\text{Cov}(\\hat{\\beta_3}, \\hat{\\beta_2})\\)。根據這個在概率論學到的方差性質，我們可以手動計算想要的方差和標準差，從而進一步獲取其 95% CI： You can also use vce command in Stata to obtain the Covariance matrix of coefficients of a fitted poisson model vcov(mB) ## (Intercept) Agegrp60-69 Agegrp70-79 Agegrp80-89 ## (Intercept) 0.071428571 -0.071428571 -0.071428571 -0.071428571 ## Agegrp60-69 -0.071428571 0.087053571 0.071428571 0.071428571 ## Agegrp70-79 -0.071428571 0.071428571 0.086813187 0.071428571 ## Agegrp80-89 -0.071428571 0.071428571 0.071428571 0.130252101 \\[ \\begin{aligned} \\text{Var}(\\hat{\\beta_3} - \\hat{\\beta_2}) &amp; = \\text{Var}(\\hat{\\beta_3}) + \\text{Var}(\\hat{\\beta_2}) - 2\\text{Cov}(\\hat{\\beta_3}, \\hat{\\beta_2}) \\\\ &amp; = 0.13025 + 0.08681 - 2 \\times 0.07143 \\\\ &amp; = 0.0743 \\\\ \\Rightarrow \\text{the 95%CI} &amp; = \\exp(2.555 - 2.303 \\pm\\sqrt{0.07143}) \\\\ &amp; = (0.75, 2.20) \\end{aligned} \\] 在R裏你可以這樣計算： # change the reference group to &quot;70-79&quot; Rubber &lt;- Rubber %&gt;% mutate(Agegrp1 = fct_relevel(Agegrp, &quot;70-79&quot;)) mC &lt;- glm(n_deaths ~ Agegrp1 + offset(log(Pyears)), family = poisson(link = &quot;log&quot;), data = Rubber) jtools::summ(mC, confint = TRUE, digits = 6, exp = TRUE) Observations 8 Dependent variable n_deaths Type Generalized linear model Family poisson Link log 𝛘²(3) 102.171839 Pseudo-R² (Cragg-Uhler) 0.999997 Pseudo-R² (McFadden) 0.726037 AIC 46.553491 BIC 46.871257 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.018081 0.014179 0.023056 -32.353131 0.000000 Agegrp150-59 0.099962 0.056110 0.178088 -7.816170 0.000000 Agegrp160-69 0.486689 0.344635 0.687297 -4.089424 0.000043 Agegrp180-89 1.286225 0.754119 2.193786 0.924013 0.355480 Standard errors: MLE 但是在 Stata 裏面可以使用靈活無比的 lincom 命令： ## ## . infile agegrp factory deaths pyrs using &quot;../backupfiles/RUBBER.RAW&quot;, clear ## (8 observations read) ## ## . ## . gen lpyrs = log(pyrs) ## ## . ## . quietly: poisson deaths i.agegrp, e(pyrs) ## ## . lincom 4.agegrp - 3.agegrp, eform ## ## ( 1) - [deaths]3.agegrp + [deaths]4.agegrp = 0 ## ## ------------------------------------------------------------------------------ ## deaths | exp(b) Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## (1) | 1.286225 .3503829 0.92 0.355 .7541189 2.193786 ## ------------------------------------------------------------------------------ ## ## . 62.6.4 接下來的模型中在前面的基礎上加入工廠編號，你認爲是否有證據證明工廠之間的工人的死亡率在調整了年齡之後依然有差異？計算年齡調整過後的兩工廠之間死亡率之比和95%CI。 mD &lt;- glm(n_deaths ~ Agegrp + Factory + offset(log(Pyears)), family = poisson(link = &quot;log&quot;), data = Rubber) jtools::summ(mD, confint = TRUE, digits = 6, exp = TRUE) Observations 8 Dependent variable n_deaths Type Generalized linear model Family poisson Link log 𝛘²(4) 103.666936 Pseudo-R² (Cragg-Uhler) 0.999998 Pseudo-R² (McFadden) 0.736662 AIC 47.058393 BIC 47.455601 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.001640 0.000947 0.002839 -22.900655 0.000000 Agegrp60-69 4.839413 2.714014 8.629254 5.343443 0.000000 Agegrp70-79 9.949876 5.584586 17.727369 7.796966 0.000000 Agegrp80-89 12.864610 6.341532 26.097509 7.077995 0.000000 Factory2 1.213953 0.888998 1.657687 1.219745 0.222561 Standard errors: MLE lrtest(mD, mB) ## Likelihood ratio test ## ## Model 1: n_deaths ~ Agegrp + Factory + offset(log(Pyears)) ## Model 2: n_deaths ~ Agegrp + offset(log(Pyears)) ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 5 -18.5292 ## 2 4 -19.2767 -1 1.4951 0.22143 從 mD 模型的報告來看，2號工廠比較1號工廠的工人死亡率比是 1.21 (95%CI: 0.89, 1.66)。兩個模型的似然比檢驗結果也提示，並無確實證據證明兩工廠工人的死亡率在調整了年齡因素之後有顯著差異。 62.6.5 現在在前一步加了工廠變量的基礎上，重新擬合模型，加入工廠和年齡之間的交互作用項 mE &lt;- glm(n_deaths ~ Agegrp + Factory + Factory*Agegrp + offset(log(Pyears)), family = poisson(link = &quot;log&quot;), data = Rubber) summary(mE); jtools::summ(mE, confint = TRUE, digits = 6, exp = TRUE) ## ## Call: ## glm(formula = n_deaths ~ Agegrp + Factory + Factory * Agegrp + ## offset(log(Pyears)), family = poisson(link = &quot;log&quot;), data = Rubber) ## ## Deviance Residuals: ## [1] 0 0 0 0 0 0 0 0 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -6.359327 0.377964 -16.8252 &lt; 2.2e-16 *** ## Agegrp60-69 1.474563 0.424139 3.4766 0.0005078 *** ## Agegrp70-79 2.277842 0.419750 5.4267 5.742e-08 *** ## Agegrp80-89 2.495969 0.517549 4.8227 1.416e-06 *** ## Factory2 0.088878 0.534522 0.1663 0.8679394 ## Agegrp60-69:Factory2 0.190175 0.591421 0.3216 0.7477889 ## Agegrp70-79:Factory2 0.042462 0.589592 0.0720 0.9425869 ## Agegrp80-89:Factory2 0.113771 0.722375 0.1575 0.8748544 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for poisson family taken to be 1) ## ## Null deviance: 1.03883e+02 on 7 degrees of freedom ## Residual deviance: 1.04361e-14 on 0 degrees of freedom ## AIC: 52.8427 ## ## Number of Fisher Scoring iterations: 3 Observations 8 Dependent variable n_deaths Type Generalized linear model Family poisson Link log 𝛘²(7) 103.882612 Pseudo-R² (Cragg-Uhler) 0.999998 Pseudo-R² (McFadden) 0.738194 AIC 52.842718 BIC 53.478250 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.001731 0.000825 0.003630 -16.825197 0.000000 Agegrp60-69 4.369124 1.902683 10.032807 3.476599 0.000508 Agegrp70-79 9.755607 4.285111 22.209899 5.426658 0.000000 Agegrp80-89 12.133483 4.399941 33.459862 4.822670 0.000001 Factory2 1.092948 0.383366 3.115916 0.166276 0.867939 Agegrp60-69:Factory2 1.209461 0.379467 3.854873 0.321556 0.747789 Agegrp70-79:Factory2 1.043376 0.328533 3.313620 0.072019 0.942587 Agegrp80-89:Factory2 1.120495 0.271972 4.616327 0.157495 0.874854 Standard errors: MLE 62.6.5.1 請問這是一個怎樣的模型？ 這是一個有8組觀測數據，8個參數估計的模型，是一個飽和模型。 The model is saturated. 62.6.5.2 有沒有足夠的證據證明工廠和年齡變量之間的交互作用項是有意義的？ lrtest(mE, mD) ## Likelihood ratio test ## ## Model 1: n_deaths ~ Agegrp + Factory + Factory * Agegrp + offset(log(Pyears)) ## Model 2: n_deaths ~ Agegrp + Factory + offset(log(Pyears)) ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 8 -18.4214 ## 2 5 -18.5292 -3 0.21568 0.97502 似然比檢驗結果顯示，沒有證據證明二者之間交互作用項是有意義的。 62.6.5.3 用數學語言描述上述包含了交互作用項的模型，並利用這個模型手頭計算下列各組的死亡率： 1號工廠的 70-79 歲 2號工廠的 50-50 歲 2號工廠的 60-69 歲 \\[ \\begin{aligned} \\eta_i = \\log(\\mu_i) &amp; = \\log(t_i) + \\beta_0 + \\beta_1x_{1i} + \\beta_2x_{2i} + \\beta_3x_{3i} + \\beta_4z_{i} \\\\ &amp; \\;\\;\\; + \\beta_5(x_{1i}z_{i}) + \\beta_6(x_{2i}z_{i}) + \\beta_7(x_{3i}z_{i})\\\\ \\text{where } x_{1i} &amp; = \\left\\{ \\begin{array}{ll} 0 \\text{ if the } i \\text{th group is not aged 60-69}\\\\ 1 \\text{ if the } i \\text{th group is aged 60-69}\\\\ \\end{array} \\right. \\\\ \\text{where } x_{2i} &amp; = \\left\\{ \\begin{array}{ll} 0 \\text{ if the } i \\text{th group is not aged 70-79}\\\\ 1 \\text{ if the } i \\text{th group is aged 70-79}\\\\ \\end{array} \\right. \\\\ \\text{where } x_{3i} &amp; = \\left\\{ \\begin{array}{ll} 0 \\text{ if the } i \\text{th group is not aged 80-89}\\\\ 1 \\text{ if the } i \\text{th group is aged 80-89}\\\\ \\end{array} \\right. \\\\ \\text{and } z_{i} &amp; = \\left\\{ \\begin{array}{ll} 0 \\text{ if the } i \\text{th group is from factory 1}\\\\ 1 \\text{ if the } i \\text{th group is from factory 2}\\\\ \\end{array} \\right. \\end{aligned} \\] 1號工廠的 70-79 歲組中該模型估計的死亡率是 \\[ \\exp(\\hat{\\beta}_0 + \\hat{\\beta}_2) = \\exp(-6.359 + 2.2778) = 16.9 /1000 \\text{ person-years} \\] 2號工廠的 50-59 歲組中該模型估計的死亡率是 \\[ \\exp(\\hat{\\beta}_0 + \\hat{\\beta}_4) = \\exp(-6.359 + 0.089) = 1.89 / 1000 \\text{ person-years} \\] 2號工廠的 60-69 歲組中該模型估計的死亡率是 \\[ \\exp(\\hat{\\beta}_0 + \\hat{\\beta}_1 + \\hat{\\beta}_4 + \\hat{\\beta}_5) = \\exp(-6.359 + 1.475 + 0.089 + 0.190) = 10.0 / 1000 \\text{ person-years} \\] 62.6.5.4 對比你計算的模型估計死亡率和實際觀測到的死亡率 tab &lt;- stat.table(index=list(Factory=Factory,Agegrp=Agegrp), contents=list(sum(n_deaths/Pyears)), data=Rubber, margins=FALSE) print(tab, digits = 7) ## -------------------------------------------------- ## -----------------Agegrp------------------ ## Factory 50-59 60-69 70-79 80-89 ## -------------------------------------------------- ## 1 0.0017305 0.0075609 0.0168824 0.0209974 ## 2 0.0018914 0.0099946 0.0192519 0.0257143 ## -------------------------------------------------- 我們發現該模型估計的各組的死亡率和觀測值完全一致。 62.6.6 現在把年齡當作連續型變量來考慮。擬合下列模型 62.6.6.1 只有年齡作爲連續型變量 mF &lt;- glm(n_deaths ~ as.numeric(Agegrp) + offset(log(Pyears)), family = poisson(link = &quot;log&quot;), data = Rubber) jtools::summ(mF, confint = TRUE, digits = 6, exp = TRUE) Observations 8 Dependent variable n_deaths Type Generalized linear model Family poisson Link log 𝛘²(1) 89.442531 Pseudo-R² (Cragg-Uhler) 0.999986 Pseudo-R² (McFadden) 0.635582 AIC 55.282799 BIC 55.441682 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.001421 0.000910 0.002217 -28.874573 0.000000 as.numeric(Agegrp) 2.239658 1.899333 2.640963 9.588396 0.000000 Standard errors: MLE mF 的結果提供很強的證據證明年齡作爲連續型變量和死亡率的變化有關。年齡每增加10歲，死亡率增長的數字要乘以 2.24。 62.6.6.2 年齡和工廠兩個預測變量 mG &lt;- glm(n_deaths ~ as.numeric(Agegrp) + Factory + offset(log(Pyears)), family = poisson(link = &quot;log&quot;), data = Rubber) jtools::summ(mG, confint = TRUE, digits = 6, exp = TRUE) Observations 8 Dependent variable n_deaths Type Generalized linear model Family poisson Link log 𝛘²(2) 91.170538 Pseudo-R² (Cragg-Uhler) 0.999989 Pseudo-R² (McFadden) 0.647862 AIC 55.554792 BIC 55.793116 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.001274 0.000790 0.002053 -27.358186 0.000000 as.numeric(Agegrp) 2.239890 1.899067 2.641880 9.575477 0.000000 Factory2 1.231652 0.902034 1.681716 1.311155 0.189805 Standard errors: MLE lrtest(mG, mF) ## Likelihood ratio test ## ## Model 1: n_deaths ~ as.numeric(Agegrp) + Factory + offset(log(Pyears)) ## Model 2: n_deaths ~ as.numeric(Agegrp) + offset(log(Pyears)) ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 3 -24.7774 ## 2 2 -25.6414 -1 1.72801 0.18867 並無有效證據證明工廠之間有死亡率的顯著區別。 62.6.6.3 年齡和工廠，及兩個變量的交互作用項 mH &lt;- glm(n_deaths ~ as.numeric(Agegrp) + Factory + as.numeric(Agegrp)*Factory + offset(log(Pyears)), family = poisson(link = &quot;log&quot;), data = Rubber) jtools::summ(mH, confint = TRUE, digits = 6, exp = TRUE) Observations 8 Dependent variable n_deaths Type Generalized linear model Family poisson Link log 𝛘²(3) 91.183730 Pseudo-R² (Cragg-Uhler) 0.999989 Pseudo-R² (McFadden) 0.647955 AIC 57.541599 BIC 57.859365 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.001240 0.000642 0.002395 -19.936299 0.000000 as.numeric(Agegrp) 2.263303 1.776141 2.884084 6.605055 0.000000 Factory2 1.293657 0.528919 3.164090 0.564224 0.572602 as.numeric(Agegrp):Factory2 0.980790 0.704402 1.365623 -0.114855 0.908560 Standard errors: MLE lrtest(mG, mH) ## Likelihood ratio test ## ## Model 1: n_deaths ~ as.numeric(Agegrp) + Factory + offset(log(Pyears)) ## Model 2: n_deaths ~ as.numeric(Agegrp) + Factory + as.numeric(Agegrp) * ## Factory + offset(log(Pyears)) ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 3 -24.7774 ## 2 4 -24.7708 1 0.01319 0.90856 並無有效證據證明工廠之間的相互作用項有意義。 62.6.7 計算只有年齡(連續型)和工廠兩個變量模型時的模型偏差 (deviance)，該模型和第一部分中飽和模型之間相比相差幾個參數(parameters)？你有怎樣的推論？ lrtest(mF, mE) ## Likelihood ratio test ## ## Model 1: n_deaths ~ as.numeric(Agegrp) + offset(log(Pyears)) ## Model 2: n_deaths ~ Agegrp + Factory + Factory * Agegrp + offset(log(Pyears)) ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 2 -25.6414 ## 2 8 -18.4214 6 14.4401 0.025088 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 看上面似然比檢驗結果顯示，有一些不太強的證據 (p = 0.0262) 證明相對飽和模型來說，把年齡當連續變量的模型可能擬合度較差。所以把年齡當作分類型變量 (categorical) 會是比較好的選擇。 62.6.8 對這個數據進行了這一系列的分析之後，你從流行病學的角度來說，有怎樣的結論？ 總的來說，死亡率隨着年齡增長而增加。60-69 歲組的死亡率是50-59 歲組的 4.8 (95% CI 2.7, 8.6) 倍。之後年齡每增長十歲死亡率也在增長，只是增長幅度逐漸減少。至於工廠之間的死亡率比較，2號工廠似乎有 21% 較高 (95%CI: -11%, 66%) 的死亡率。但是工廠之間的死亡率差異並無顯著性 (p = 0.22)。交互作用項的分析也表明，並沒有證據表明工廠之間的死亡率差異會由於年齡的變化而有所不同。 "],["confounding-interaction.html", "第 63 章 混雜的調整，交互作用，和模型的可壓縮性 63.1 混雜因素的調整 63.2 交互作用 63.3 可壓縮性 collapsibility 63.4 交互作用對尺度的依賴性 63.5 GLM Practical 07", " 第 63 章 混雜的調整，交互作用，和模型的可壓縮性 臨牀醫學，流行病學研究的許多問題，需要我們通過數據來評估某些結果變量 (outcome) 和某些預測變量 (predictors/exposures) 之間的關係 (甚至是因果關係)。這些問題的最佳解決方法應該說是隨機臨牀試驗 (ramdomized clinical trial, RCT)。但是有更多的時候 (由於違反醫學倫理，或者現狀所困，甚至是知識有限) 我們無法設計 RCT 來解決這些問題，就只能藉助於觀察性研究 (observational study)。觀察性研究最大的侷限性在於無法像 RCT 那樣從實驗設計階段把混雜因素排除或者降到最低，所以觀察數據在分析的時候，混雜 (confounding) 是必須要加以考慮的一大要因。在簡單線性迴歸章節 (Section 30.5)，詳細討論過混雜因素的定義及條件： 對於一個預測變量是否夠格被叫做混雜因子，它必須滿足下面的條件： 與關心的預測變量相關 (i.e. \\(\\delta_1 \\neq 0\\))； 與因變量相關 (當關心的預測變量不變時，\\(\\beta_2\\neq0\\) )； 不在預測變量和因變量的因果關係 (如果有的話) 中作媒介。Not be on the causal pathway between the predictor of interest and the dependent variable. 下面的統計數據來自一個比較手術和超聲碎石術對於腎結石治療結果的評價。已知大多數醫生都公認，腎結石的直徑小於 2 公分時治療成功的概率較高。 表 63.1: Lithotripsy &lt; 2cm Diameter &gt;= 2cm Diameter Group Surgery Lithotripsy Surgery Lithotripsy Success 81.00 234 192.00 55 Failure 6.00 36 71.00 25 Total 87.00 270 263.00 80 Odds Ratios 2.08 1.23 可以看到，在上面的分組表格中，左右兩邊的四格表分別統計了腎結石尺寸小於 2 cm 和大於 2 cm 時，手術摘除腎結石的成功/失敗次數，以及超聲碎石術的成功/失敗次數。這個表格告訴我們，無論腎結石的尺寸是大於還是小於 2 cm，手術的成功的比值比都大於超聲碎石術。但是如果我們沒有把數據按照腎結石尺寸區分時，數據就被壓縮 (collapsed) 成了下面表格總結的樣子： 表 63.2: Lithotripsy data collapsed Outcome Surgery Lithotripsy Success 273 (78%) 289 (83%) Failure 77 61 Total 350 350 Odds ratio 0.75 當腎結石尺寸被忽略時，數據卻顯示超聲碎石術的成功比值比要高於手術，和之前的結果是矛盾的，你會信哪個？ 不要慌，數據不會撒謊，撒謊(有意掩蓋事實)的永遠是人類。我們來把手術次數，超聲碎石術次數，以及腎結石尺寸之間的關係再列個表格： 表 49.3: Association between treatment and the size of the stone. Size of the Stone Surgery Lithotripsy \\(&lt; 2\\) cm 87 (33%) 270 (77%) \\(\\geqslant 2\\) cm 263 80 Total 350 350 可見醫生也都不是傻子，明明腎結石尺寸很大還要用超聲碎石術的人很少，有 77% 的腎結石尺寸小的患者選擇了超聲碎石術。然後我們再列一個表格來看看腎結石的尺寸大小和超聲碎石術成功與否有沒有關係： 表 49.4: Among the lithotripsy patients higher percentage of success was observed when stones were small. Outcome \\(&lt; 2\\) cm \\(\\geqslant 2\\) cm Success 234 (87%) 55 (69%) Failure 36 25 Total 370 80 可見結石尺寸較大時，超聲碎石術的成功率 (69%)，明顯低於尺寸小的時候的成功率 (87%)。在選擇做外科手術的患者中，大多數人的結石尺寸大於 2 cm，成功率仍然達到了 73%。 表 49.5: Among the surgery patients higher percentage of success in both stones compared with lithotripsy Outcome \\(&lt; 2\\) cm \\(\\geqslant 2\\) cm Success 81 (93%) 192 (73%) Failure 6 71 Total 87 263 看到這裏，你是否也發現了，腎結石尺寸大小，同時和手術類型的選擇有關 (尺寸小的傾向於選擇超聲碎石術)，尺寸大小，同樣也和手術結果的成功與否，高度相關 (結石小的人成功率高)。所以，分析手術類型和結石手術的成功率的關係的時候，患者體內結石尺寸的大小，對這個關係是產生了混雜效應的。他們三者之間的關係，可以用下面的圖 63.1 來理解： 圖 63.1: Confounding in kidney stones example 當數據被壓縮 (忽略了腎結石尺寸時)，比較兩種手術類型的成功率的時候，接受外科手術患者的尺寸大多數都較大的事實被“人爲的掩蓋住了”，但是當數據按照結石大小分層以後，你會看見外科手術不論是對付大的結石，還是小的結石，成功率都高於超聲碎石術。這個例子是混雜效應直接逆轉真實相關關係的極佳的實例。同時也提示我們，總體的比值比 (overall odds ratio) 不能通過簡單地把分層表格直接壓縮 (collapsed table) 獲得的數字來計算。 63.1 混雜因素的調整 在前面的腎結石手術的例子中，我們利用已有的背景知識 (小尺寸結石的成功率高)，和初步的統計分析 (變量之間兩兩列表分析其內在關係) 發現了混雜因素 (結石尺寸)，並且其結果也讓我們認定了要暴露因素和結果變量之間的關係，混雜因素必須被調整 (adjusted)。 如腎結石數據這樣簡單的情境下 (被認爲是混雜因素的變量和預測變量/暴露變量都只是一個二進制變量)，我們可以把變量兩兩捉對列表分析其相互關係，確定了混雜效應以後把暴露變量和結果變量按照混雜因素的有無列表之後，就可以求得混雜因素被調整後的分層的比值比。這些分層比值比，在暴露變量與結果變量的關係保持混雜因素的層之間保持不變的前提下，可以被“平均化”(簡單地說)以後求得總體/合併的比值比 (overall/pooled odds ratio)。這就是 Mantel-Haenszel 法或者 Woolf 法的合併比值比的思想出發點。我們來回顧一下 Woolf 法的全部計算過程： 現在假設我們關心的是某種疾病的患病與否 (是/否)，和某個暴露變量 (是/否) 之間的關係，但是同時想要調整另一個具有 \\(k\\) 個分層的混雜因素變量。 表 49.6: Woolf Method for estimating the stratified and pooled odds ratio Group \\(X=0\\) \\(X=1\\) \\(D=0\\) \\(X=0\\) \\(n_{00}\\) \\(n_{10}\\) \\(X=1\\) \\(n_{01}\\) \\(n_{10}\\) 63.1.1 Woolf 法估算合併比值比 對想要調整的一個 \\(k\\) 組的混雜因素，把數據按照它的分組分層整理以後，可以得到上面的 \\(k\\) 個四格表 (每個分層四格表都是暴露變量和結果變量結合的四個觀察值 \\(a_i, b_i, c_i, d_i, (i=1,\\cdots, k)\\))。每個分層四格表的觀測比值比爲 \\(\\hat\\Psi_i = \\frac{a_id_i}{c_ib_i}\\)，且可以證明方差爲 \\[ \\text{Var}(\\text{log}\\hat\\Psi_i) \\approx \\frac{1}{a_i} + \\frac{1}{b_i} + \\frac{1}{c_i} + \\frac{1}{d_i} = \\frac{1}{w_i} \\] 合併比值比的對數 \\(\\text{log}\\hat\\Psi_w\\) 的 Woolf 的計算方法就是 \\[ \\text{log}\\hat\\Psi_w = \\frac{\\sum w_i\\text{log}\\hat\\Psi_i}{\\sum w_i} \\] 所以，每個分層的對數比值比乘以自己的方差的倒數 (權重 weights) 之後求和，再除以所有權重之和，獲得的是合併後的對數比值比，然後再逆運算回來就是 Woolf 法計算合併比值比的原理是。 這個合併比值比的對數的方差是 \\[ \\text{Var}(\\text{log}\\hat\\Psi_w) = \\frac{1}{\\sum w_i} \\] 有了加權後的合併比值比，和方差，就可以求加權後的合併比值比的信賴區間了。值得注意的是，分層之後每個分層四格表中的四個數字 (四個樣本量) 都不能太小。腎結石手術數據滿足這些條件，那麼不妨跟我一起手算一下結石尺寸調整後的手術與超聲碎石術成功與否的比值比： \\[ \\begin{aligned} \\hat\\Psi_1 = 2.08 ;&amp;\\; \\hat\\Psi_2 = 1.23 \\\\ \\text{Var}(\\text{log}\\hat\\Psi_1) = \\frac{1}{81} &amp; + \\frac{1}{234} + \\frac{1}{6} + \\frac{1}{36} = 0.2111 \\\\ \\text{Var}(\\text{log}\\hat\\Psi_2) = \\frac{1}{192} &amp; + \\frac{1}{55} + \\frac{1}{71} + \\frac{1}{25} = 0.0775 \\\\ w_1 = \\frac{1}{\\text{Var}(\\text{log}\\hat\\Psi_1)} = 4.74 ; \\;&amp; w_2 = \\frac{1}{\\text{Var}(\\text{log}\\hat\\Psi_2)} = 12.91 \\\\ \\text{log}\\hat\\Psi_w = &amp; \\frac{4.74\\times\\text{log(2.08)} + 12.91\\times\\text{log(1.23)}}{4.74 + 12.91} \\\\ = &amp; 0.3481 \\\\ \\Rightarrow \\hat\\Psi_w =&amp; e^{0.3481} = 1.42\\\\ \\text{Var}(\\hat\\Psi_w) =&amp; \\frac{1}{4.74+12.91} = 0.0567 \\\\ \\Rightarrow 95\\% \\text{ CI} = &amp; e^{0.3481 \\pm 1.96\\times\\sqrt{0.0567}} \\\\ = &amp; (0.89, 2.26) \\end{aligned} \\] Woolf 的計算調整後的合併比值比的方法是在線性迴歸和廣義線性迴歸被發現之前誕生的，但是其想法之精妙，確實令人感嘆。可惜其最大的缺陷是無法用這樣的方法進行連續型變量的調整，也很難同時進行多個變量的調整，所以現在這一算法已經逐漸被淘汰。現在我們有了廣義線性迴歸模型這一更強大的工具，只要把變量加入廣義線性模型進行調整就可以計算曾經難以計算和擴展的調整後的合併比值比。從下面的代碼計算獲得的調整後比值比 \\(1.43 (0.91, 2.34)\\) 也可以看出，Woolf 方法的計算結果也是足夠令人滿意的。 size &lt;- c(&quot;&lt; 2cm&quot;, &quot;&lt; 2cm&quot;, &quot;&gt;= 2cm&quot;, &quot;&gt;= 2cm&quot;) treatment &lt;- c(&quot;Surgery&quot;,&quot;Lithotripsy&quot;,&quot;Surgery&quot;,&quot;Lithotripsy&quot;) n &lt;- c(87, 270, 263, 80) Success &lt;- c(81, 234, 192, 55) Stone &lt;- data.frame(size, treatment, n, Success) ModelStone &lt;- glm(cbind(Success, n - Success) ~ treatment + size, family = binomial(link = logit), data = Stone) summary(ModelStone) ## ## Call: ## glm(formula = cbind(Success, n - Success) ~ treatment + size, ## family = binomial(link = logit), data = Stone) ## ## Deviance Residuals: ## 1 2 3 4 ## 0.76357 -0.35881 -0.27563 0.46948 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.93655 0.17045 11.3614 &lt; 2.2e-16 *** ## treatmentSurgery 0.35723 0.22908 1.5594 0.1189 ## size&gt;= 2cm -1.26057 0.23900 -5.2742 1.333e-07 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 33.12395 on 3 degrees of freedom ## Residual deviance: 1.00816 on 1 degrees of freedom ## AIC: 26.3554 ## ## Number of Fisher Scoring iterations: 3 broom::tidy(ModelStone, exp = FALSE, conf.int = TRUE) %&gt;% knitr::kable(.) term estimate std.error statistic p.value conf.low conf.high (Intercept) 1.93655073 0.17044973 11.3614184 0.00000000 1.61463718 2.28439560 treatmentSurgery 0.35722866 0.22907985 1.5594068 0.11890013 -0.09069343 0.80856158 size&gt;= 2cm -1.26056536 0.23900383 -5.2742474 0.00000013 -1.73744172 -0.79909943 所以，此次分析的結論是，在 5% 的顯著性水平下，數據無法提供有效證據證明，當調整了結石尺寸之後，外科手術和超聲碎石術治療腎結石有差別。 We can conclude that there is no evidence at the 5% level for an effect of surgery, adjusted for stone size. 63.2 交互作用 我們決定調整一個混雜因素的時候，其實同時包含了 “在不同混雜因素的程度下，暴露變量和結果變量之間的關係不變/This implicitly assumes that the effect of the exposure is the same irrespective of the levels of the confounder.” 的假設。但是，一個混雜因素，它可能同時還扮演了改變暴露變量和結果變量之間關係的角色 (effect modifier/交互作用效應)。另外還有的情況下，某變量可能改變了暴露變量和結果變量之間的關係，卻不一定是一個混雜因素。此時我們說這個起到改變關係的變量和暴露變量之間發生了交互作用。 如果暴露變量在某個分組變量的不同層 (strata) 之間是不同質的 (hetergeneous, not constant)，我們建議要分析且報告不同層各自的比值比。惟一的例外是 RCT 臨牀試驗的時候，我們更加關心調整後合併比值比。因爲一項治療藥物對不同的 “個體” 有不同的療效是必然的，但是，RCT 的目的是要評價的其實是這個藥物或者新療法在整個人羣中的療效是怎樣的。 我們給腎結石數據加上治療方案和結石尺寸大小的交互作用項，結果如下： ModelStone2 &lt;- glm(cbind(Success, n - Success) ~ treatment*size, family = binomial(link = logit), data = Stone) summary(ModelStone2) ## ## Call: ## glm(formula = cbind(Success, n - Success) ~ treatment * size, ## family = binomial(link = logit), data = Stone) ## ## Deviance Residuals: ## [1] 0 0 0 0 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.87180 0.17903 10.4553 &lt; 2.2e-16 *** ## treatmentSurgery 0.73089 0.45942 1.5909 0.1116310 ## size&gt;= 2cm -1.08334 0.30039 -3.6065 0.0003104 *** ## treatmentSurgery:size&gt;= 2cm -0.52453 0.53716 -0.9765 0.3288211 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 3.31239e+01 on 3 degrees of freedom ## Residual deviance: 1.39888e-14 on 0 degrees of freedom ## AIC: 27.3472 ## ## Number of Fisher Scoring iterations: 3 broom::tidy(ModelStone2, exp = FALSE, conf.int = TRUE) %&gt;% knitr::kable(.) term estimate std.error statistic p.value conf.low conf.high (Intercept) 1.87180218 0.17902872 10.45531797 0.00000000 1.53494834 2.23884939 treatmentSurgery 0.73088751 0.45941624 1.59090482 0.11163100 -0.10165254 1.73013407 size&gt;= 2cm -1.08334482 0.30038825 -3.60648201 0.00031038 -1.67042760 -0.48874515 treatmentSurgery:size&gt;= 2cm -0.52452937 0.53715728 -0.97649124 0.32882109 -1.65338017 0.47642831 交互作用項的迴歸係數是否爲零的檢驗結果是 \\(p = 0.329\\)，提示數據無法提供足夠的證據證明結石尺寸對治療方案和手術成功與否之間的關係造成有意義的交互作用 (There is no evidence of an interaction between stone size and surgery)。所以此次的數據分析我們可以報告結石尺寸調整後的手術成功比值比就可以了。其中，交互作用項的迴歸係數 \\(-0.5245 = \\text{log}(0.59)\\)，的含義是當結石尺寸 \\(\\geqslant 2 \\text{cm}\\) 時，外科手術和超聲碎石術成功比值比的對數的差。我們可以看到一開始我們計算的分層比值比的比值 \\(\\frac{1.23}{2.08} = 0.59\\)。還注意到這已經是一個飽和模型 (模型偏差爲零)，模型的擬合值和我們的觀測值是完全相同的。 另外一點不得不提的是，交互作用項的迴歸係數的點估計 \\(0.59\\) 其實低於零假設時的 \\(1\\) 挺多的，它的 \\(95\\%\\) 信賴區間也相當的寬 \\((0.21,1.70)\\)，所以其實這裏我們沒有獲得足夠的證據證明替代假設 (有交互作用)，很難說不是因爲樣本量不足導致的統計效能較低，所以我們沒有辦法從這個數據完全排除結石尺寸對治療方案的選擇和手術成功的關係之間的交互作用。(We really cannot be sure that there is no interaction in truth - the data are consistent with quite large interactions between size and surgery effect.) 因此，有些統計學家可能會傾向於報告分層的比值比，因爲我們沒有辦法從這個樣本數據排除有較強交互作用存在的可能性。 63.3 可壓縮性 collapsibility 模型可壓縮性的概念可以這樣來理解： 當我們把一個 我們認爲很重要的混雜因子 加到模型中去時，自然而然我們會期待其對結果變量的 效果估計 (effect estimate) (迴歸係數)在調整前後發生變化。如果是反過來，當我們把一個 我們認爲不重要的非混雜因子 加到模型中去時，我們也會自然而然地期待其對結果變量的 效果估計 (effect estimate) 在調整前後不會發生改變才是。不幸的是，我們這種理想中的想當然，僅僅在某些情境下成立，其中之一是簡單線性迴歸 (Section 27)。 63.3.1 線性迴歸的可壓縮性 證明 令 \\(Y\\) 標記結果變量，\\(X\\) 標記暴露變量，\\(Z\\) 則標記我們想要調整的某個混雜因子： \\[ Y = \\alpha + \\beta_X X + \\beta_Z Z + \\varepsilon, \\text{ where } \\varepsilon \\sim N(0, \\sigma^2) \\] 然後把等式兩邊同時取以暴露變量 \\(X\\) 爲條件的期待值： \\[ E(Y | X) = \\alpha + \\beta_X X + \\beta_Z E(Z|X) \\] 如果 \\(Z\\) 和 \\(X\\) 是相互獨立的 (即，不是 \\(X, Y\\) 之間關係的混淆因子)，那麼 \\(E(Z|X) = E(Z) = \\mu_Z\\)，因爲 \\(X\\) 不能提供任何 \\(Z\\) 的有效信息。所以，等式就變爲： \\[ E(Y|X) = \\alpha + \\beta_Z \\mu_Z + \\beta_X X \\] 所以，當我們用簡單線性迴歸來擬合 \\(X,Y\\) 之間的關係時，如果 \\(Z,X\\) 是相互獨立的，模型中增加了 \\(Z\\)，不會影響 \\(X\\) 的迴歸係數。線性迴歸的這個性質被定義爲模型的可壓縮性 (linear regression models are collapsible)。 63.3.2 邏輯鏈接方程時的不可壓縮性 使用對數鏈接方程 (\\(\\text{log link}\\)) 的迴歸模型，同樣具有和線性迴歸類似的可壓縮性。但是，邏輯鏈接方程 (\\(\\text{logit link}\\)) 的迴歸模型則不具有可壓縮性。下面舉例的分層表格和壓縮表格，證明了邏輯鏈接方程不具有可壓縮性： .tg {border-collapse:collapse;border-color:#ccc;border-spacing:0;} .tg td{background-color:#fff;border-color:#ccc;border-style:solid;border-width:1px;color:#333; font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;} .tg th{background-color:#f0f0f0;border-color:#ccc;border-style:solid;border-width:1px;color:#333; font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;} .tg .tg-baqh{text-align:center;vertical-align:top} .tg .tg-0lax{text-align:left;vertical-align:top} 表 49.7: Non-collapsibility of logit link in GLM (stratified data) Strata 1 Strata 2 Outcome Exposure \\(+\\) Exposure \\(-\\) Exposure \\(+\\) Exposure \\(-\\) Success 90 50 50 10 Failure 10 50 50 90 Total 100 100 100 100 Odds Ratios 9 9 從表格的數據計算可知，要被調整的分組變量的兩層數據中，暴露變量和結果變量的關係相同，比值比都是 \\(9\\)，沒有交互作用，也沒有混雜效應 (每一層中暴露與非暴露均佔相同的 \\(50\\%\\))。但是，你如果把這個觀測數據合併： 表 49.8: Non-collapsibility of logit link in GLM (collapsed data) Outcome Exposure \\(+\\) Exposure \\(-\\) Success 140 60 Failure 60 140 Total 200 200 Odds ratio 5.4 既然已知我們拿來分層的變量對暴露和結果的關係既沒有交互作用，也沒有混雜效應，那麼壓縮數據以後的合併比值比應該和分層比值比一樣才說的通，可惜我們獲得了截然不同的合併比值比 (非調整的)。所以在應用邏輯鏈接方程建立廣義線性迴歸模型的時候，一定不能忘記其不可壓縮性的特徵。所以，即使加入一個非混淆因子，暴露變量的邏輯迴歸的效應估計 (係數) 也會發生改變。調整了 \\(Z\\) 以後的比值比被叫做條件 (或直接使用分層) 比值比。如同表格中實例所示，條件比值比會比邊緣比值比 (非調整) 看起來要大一些。 邏輯迴歸的不可壓縮性給我們的啓示是，加入某個變量進入邏輯迴歸模型前後，其他預測變量的迴歸係數發生的變化可能僅僅是由於模型的不可壓縮性導致的變化，而非由於新加入的變量對原先變量與結果之間的關係起到了交互作用或者混雜效應。所以，擬合迴歸模型的時候，如果你要考慮對某個因素進行調整，必須做的一件事是，先分析它和其他模型中已有的預測變量之間的關係，從而有助於分析並判斷把要調整的變量放進模型前後的迴歸係數變化是否是真的來自於交互作用或者混雜效應。 63.4 交互作用對尺度的依賴性 GLM 模型中的交互作用檢驗，對選用的尺度 (比值比 OR，還是危險度比 RR) 依賴性極高。用模型可壓縮性的數據例子也可以說明交互作用對尺度的依賴性。上文書說到，兩個分層中的比值比都是 9，該分層變量既沒有交互作用，也不是混淆因子 (當使用比值比的時候)。如果我們改用危險度比 (risk ratio, RR)，在分類變量的第一層 (Strata 1) 中，暴露的危險度比是 \\(\\frac{90/100}{50/100} = 1.8\\)；分類變量的第二層 (Strata 2) 中，暴露的危險度比是 \\(\\frac{50/100}{10/100} = 5\\)。所以使用危險度比作爲評價指標的時候，被調整的分類變量就突然搖身一變變成了有交互作用的因子。這裏，我們用數據，證明了交互作用的存在與否，對尺度的選用依賴性極高。這就導致我們在描述一個變量是否對我們關心的暴露和結果之間的關係有交互作用時，必須明確指出所使用的是比值比，還是危險度比進行的交互作用評價。 63.5 GLM Practical 07 在本次練習中，我們用一個計算機模擬的有5000名高血壓患者的RCT實驗數據。該數據只有三個隨機產生的二進制變量： treat 表示患者是接收了新療法 (1 = new)，或者繼續維持現有的療法 (0 = current)； basecontrol 表示患者在剛進入實驗時 (baseline) 血壓原本控制的狀態 (0 = bad; 1 = good)； fupcontrol 表示患者在實驗過程的隨訪結果中 (followup) 血壓原本控制的狀態 (0 = bad; 1 = good)； 63.5.1 使用你熟悉的統計學軟件擬合一個由 fupcontrol 作爲結果變量，treat 作爲唯一預測變量的廣義線性回歸模型。 根據報告的結果，寫一段適用於醫學/流行病學文獻雜誌的報告。 highbp &lt;- read_dta(&quot;../backupfiles/highbp.dta&quot;) m0 &lt;- glm(fupcontrol ~ treat, data = highbp, family = binomial(link = logit)) summary(m0); jtools::summ(m0, exp = TRUE, confint = TRUE, digits = 7) ## ## Call: ## glm(formula = fupcontrol ~ treat, family = binomial(link = logit), ## data = highbp) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.18217 -0.85608 -0.85608 1.17266 1.53724 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.815122 0.043368 -18.795 &lt; 2.2e-16 *** ## treat 0.826323 0.058999 14.006 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 6749.10 on 4999 degrees of freedom ## Residual deviance: 6548.24 on 4998 degrees of freedom ## AIC: 6552.24 ## ## Number of Fisher Scoring iterations: 4 Observations 5000 Dependent variable fupcontrol Type Generalized linear model Family binomial Link logit 𝛘²(1) 200.8606211 Pseudo-R² (Cragg-Uhler) 0.0531595 Pseudo-R² (McFadden) 0.0297611 AIC 6552.2390052 BIC 6565.2733916 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.4425851 0.4065197 0.4818502 -18.7953325 0.0000000 treat 2.2849008 2.0353891 2.5649993 14.0057422 0.0000000 Standard errors: MLE There was strong evidence (p &lt; 0.001) that treatment is associated with the probability of having BP controlled at followup, with patients randomised to the treatment having odds of BP controlled of 2.28 (95%CI 2.04 to 2.56) higher than those randomised to the current treatment. 63.5.2 分析 treat 和 basecontrol 之間的關係，結果是否如你的預期那樣？ m1 &lt;- glm(basecontrol ~ treat, data = highbp, family = binomial(link = logit)) summary(m1); jtools::summ(m1, exp = TRUE, confint = TRUE, digits = 7) ## ## Call: ## glm(formula = basecontrol ~ treat, family = binomial(link = logit), ## data = highbp) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.1972 -1.1849 1.1578 1.1699 1.1699 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.017600 0.040002 0.4400 0.6599 ## treat 0.028808 0.056577 0.5092 0.6106 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 6930.19 on 4999 degrees of freedom ## Residual deviance: 6929.93 on 4998 degrees of freedom ## AIC: 6933.93 ## ## Number of Fisher Scoring iterations: 3 Observations 5000 Dependent variable basecontrol Type Generalized linear model Family binomial Link logit 𝛘²(1) 0.2592686 Pseudo-R² (Cragg-Uhler) 0.0000691 Pseudo-R² (McFadden) 0.0000374 AIC 6933.9324824 BIC 6946.9668687 exp(Est.) 2.5% 97.5% z val. p (Intercept) 1.0177563 0.9410103 1.1007613 0.4399943 0.6599412 treat 1.0292268 0.9211969 1.1499256 0.5091777 0.6106277 Standard errors: MLE 這個分析結果提示我們無證據表明該數據中 basecontrol 與治療方案有關。模型比值比十分接近 1。這與完全符合預期，因爲如何選擇治療方案在這個實驗中是完全隨機分配的，它不應與基線時的血壓控制情況有任何關聯。隨機過程把基線血壓控制的情況在兩個治療組之間平衡了。 63.5.3 已知模型中如果增加調整基線變量可能對 fupcontrol 有一定的預測效果。 在你的模型中增加基線血壓控制情況的變量。與 m0 的結果 (治療效果 treatment effect；參數標準誤 standard error；和 p 值)。重新修改之前用於發表在醫學雜誌上關於這個分析結果的報告描述。 m2 &lt;- glm(fupcontrol ~ treat + basecontrol, data = highbp, family = binomial(link = logit)) summary(m2); jtools::summ(m2, exp = TRUE, confint = TRUE, digits = 7) ## ## Call: ## glm(formula = fupcontrol ~ treat + basecontrol, family = binomial(link = logit), ## data = highbp) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.60531 -0.79467 -0.50514 0.80315 2.06015 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.994537 0.067478 -29.558 &lt; 2.2e-16 *** ## treat 1.003756 0.066550 15.083 &lt; 2.2e-16 *** ## basecontrol 1.956770 0.067984 28.783 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 6749.10 on 4999 degrees of freedom ## Residual deviance: 5588.19 on 4997 degrees of freedom ## AIC: 5594.19 ## ## Number of Fisher Scoring iterations: 4 Observations 5000 Dependent variable fupcontrol Type Generalized linear model Family binomial Link logit 𝛘²(2) 1160.9142180 Pseudo-R² (Cragg-Uhler) 0.2797289 Pseudo-R² (McFadden) 0.1720102 AIC 5594.1854084 BIC 5613.7369879 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.1360766 0.1192192 0.1553176 -29.5584135 0.0000000 treat 2.7285122 2.3948517 3.1086597 15.0827896 0.0000000 basecontrol 7.0764349 6.1936470 8.0850477 28.7828138 0.0000000 Standard errors: MLE After adjusting for baseline BP control, the estimated log OR for the new vs current treatment is 1.00 (95%CI 0.87 to 1.13). This is quite a bit larger than the corresponding estimate from part 1, which was 0.83 (0.71, 0.94). The standard error has, perhaps contrary to expectation, increased from 0.059 to 0.067. The p-values are highly significant from both analyses, but the z-statistics is larger in the baseline adjusted analysis, which indicates this result is more statistically significant. The increase in the log OR estimate is due to the fact that the baseline adjusted analysis is estimating a different parameter. This is because, although there is no confounding, odds ratios are not collapsible - a conditional odds ratio has a different interpretation from a marginal one. The baseline adjusted analyses estimates the odds ratio for two patients who have the same value of baseline BP control, and this differs from the unconditional OR. 63.5.4 你更推薦使用哪個模型作爲最終主要結果的彙報？ 都可以。取決於你想拿這結果用於怎樣的解釋。因爲他們回答的是不同的問題。條件比值比 (conditional OR) 的一個缺點是，它的解釋需要考慮這個比值比究竟調整了哪些變量（有哪些條件）。這就帶來一個缺點，如果相同的治療方法選取了不同的條件，也就是調整了不同的變量的話，他們就會完全不同。因爲條件比值比回答的問題更加關心的是病人個體水平的層面 (individual level characteristics) 的問題，也就是說他/她在基線時是否是血壓控制的良好的，或者增加其他的變量 (性別或者年齡等)。相反的，無條件，或者粗比值比回答的問題是更加廣泛的人羣水平的治療效果而不拘泥與究竟調整了哪些變量。後者對於需要採納針對整體人羣政策的決策者來說更加有參考價值。前者對於有（或沒有）某些具體特徵的病人（或非病人）來說則更加有意義。 63.5.5 實驗研究者更想知道新的治療方案是否由於基線時患者的血壓控制情況而有不同。爲了回答這個問題，請擬合對應的廣義線性回歸模型。根據結果回答這個問題。 m3 &lt;- glm(fupcontrol ~ treat + basecontrol + treat*basecontrol, data = highbp, family = binomial(link = logit)) summary(m3); jtools::summ(m3, exp = TRUE, confint = TRUE, digits = 7) ## ## Call: ## glm(formula = fupcontrol ~ treat + basecontrol + treat * basecontrol, ## family = binomial(link = logit), data = highbp) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.59756 -0.80088 -0.49709 0.80906 2.07473 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -2.028696 0.088642 -22.8863 &lt;2e-16 *** ## treat 1.056110 0.109413 9.6525 &lt;2e-16 *** ## basecontrol 2.004905 0.105024 19.0900 &lt;2e-16 *** ## treat:basecontrol -0.083509 0.137947 -0.6054 0.5449 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 6749.10 on 4999 degrees of freedom ## Residual deviance: 5587.82 on 4996 degrees of freedom ## AIC: 5595.82 ## ## Number of Fisher Scoring iterations: 4 Observations 5000 Dependent variable fupcontrol Type Generalized linear model Family binomial Link logit 𝛘²(3) 1161.2815922 Pseudo-R² (Cragg-Uhler) 0.2798075 Pseudo-R² (McFadden) 0.1720647 AIC 5595.8180342 BIC 5621.8868070 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.1315068 0.1105340 0.1564591 -22.8862857 0.0000000 treat 2.8751646 2.3202252 3.5628315 9.6525024 0.0000000 basecontrol 7.4253853 6.0439727 9.1225341 19.0899856 0.0000000 treat:basecontrol 0.9198831 0.7019588 1.2054622 -0.6053666 0.5449354 Standard errors: MLE lrtest(m3, m2) ## Likelihood ratio test ## ## Model 1: fupcontrol ~ treat + basecontrol + treat * basecontrol ## Model 2: fupcontrol ~ treat + basecontrol ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 4 -2793.91 ## 2 3 -2794.09 -1 0.36737 0.54444 從模型本身的交互作用項結果(p = 0.54)和兩個模型的似然比檢驗結果 (p = 0.54) 來看，均無證據表示基線時的血壓控制情況和療效之間存在有意義的交互作用。 63.5.6 換一個模型，先不考慮 basecontrol，使用危險度比 (risk ratio) 來評價不同治療方案之間的療效。 m4 &lt;- glm(fupcontrol ~ treat, data = highbp, family = binomial(link = log)) summary(m4); jtools::summ(m4, exp = TRUE, confint = TRUE, digits = 7) ## ## Call: ## glm(formula = fupcontrol ~ treat, family = binomial(link = log), ## data = highbp) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.18217 -0.85608 -0.85608 1.17266 1.53724 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.181559 0.030058 -39.310 &lt; 2.2e-16 *** ## treat 0.493996 0.036042 13.706 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 6749.10 on 4999 degrees of freedom ## Residual deviance: 6548.24 on 4998 degrees of freedom ## AIC: 6552.24 ## ## Number of Fisher Scoring iterations: 5 Observations 5000 Dependent variable fupcontrol Type Generalized linear model Family binomial Link log 𝛘²(1) 200.8606211 Pseudo-R² (Cragg-Uhler) 0.0531595 Pseudo-R² (McFadden) 0.0297611 AIC 6552.2390052 BIC 6565.2733916 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.3068000 0.2892478 0.3254173 -39.3095666 0.0000000 treat 1.6388526 1.5270777 1.7588090 13.7062367 0.0000000 Standard errors: MLE 鏈接方程換爲對數而非邏輯方程的廣義線性回歸模型時，新治療方案和現行治療方案的血壓控制 RR 是 1.64 (95%CI: 1.52, 1.76) 63.5.7 在前一模型m4中加入 basecontrol，與未加入該變量時模型的輸出結果相比，有什麼不同？ m5 &lt;- glm(fupcontrol ~ treat + basecontrol, data = highbp, family = binomial(link = log)) summary(m5); jtools::summ(m5, exp = TRUE, confint = TRUE, digits = 7) ## ## Call: ## glm(formula = fupcontrol ~ treat + basecontrol, family = binomial(link = log), ## data = highbp) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.62393 -0.74052 -0.57858 0.78906 1.93392 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.870031 0.045140 -41.427 &lt; 2.2e-16 *** ## treat 0.442106 0.031752 13.924 &lt; 2.2e-16 *** ## basecontrol 1.116613 0.043236 25.826 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 6749.10 on 4999 degrees of freedom ## Residual deviance: 5613.89 on 4997 degrees of freedom ## AIC: 5619.89 ## ## Number of Fisher Scoring iterations: 6 Observations 5000 Dependent variable fupcontrol Type Generalized linear model Family binomial Link log 𝛘²(2) 1135.2087599 Pseudo-R² (Cragg-Uhler) 0.2742121 Pseudo-R² (McFadden) 0.1682015 AIC 5619.8908665 BIC 5639.4424461 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.1541189 0.1410694 0.1683756 -41.4273054 0.0000000 treat 1.5559807 1.4620984 1.6558911 13.9236039 0.0000000 basecontrol 3.0544926 2.8063141 3.3246190 25.8258341 0.0000000 Standard errors: MLE 由於對數鏈接方程和邏輯鏈接方程不同，是具有可壓縮性的 (collapisble)。所以如果增加的預測變量和結果變量是無關的，那麼我們應該認爲評價治療效果的危險度比在加入無關變量前後不會有太大的變化。但實際結果我們看見危險度比略微減少了一些。這主要是因爲這裏的模型本身是有問題的。 63.5.8 給上述模型增加交互作用項。對於危險度比作爲指標時的交互作用分析結果，和使用比值比時相比，你有怎樣的思考和結論？ m6 &lt;- glm(fupcontrol ~ treat + basecontrol + treat*basecontrol, data = highbp, family = binomial(link = log)) summary(m6); jtools::summ(m6, exp = TRUE, confint = TRUE, digits = 7) ## ## Call: ## glm(formula = fupcontrol ~ treat + basecontrol + treat * basecontrol, ## family = binomial(link = log), data = highbp) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.59756 -0.80088 -0.49709 0.80906 2.07473 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -2.152247 0.078341 -27.4728 &lt; 2.2e-16 *** ## treat 0.858952 0.091123 9.4263 &lt; 2.2e-16 *** ## basecontrol 1.447133 0.083363 17.3594 &lt; 2.2e-16 *** ## treat:basecontrol -0.481126 0.097048 -4.9576 7.136e-07 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 6749.10 on 4999 degrees of freedom ## Residual deviance: 5587.82 on 4996 degrees of freedom ## AIC: 5595.82 ## ## Number of Fisher Scoring iterations: 6 Observations 5000 Dependent variable fupcontrol Type Generalized linear model Family binomial Link log 𝛘²(3) 1161.2815922 Pseudo-R² (Cragg-Uhler) 0.2798075 Pseudo-R² (McFadden) 0.1720647 AIC 5595.8180342 BIC 5621.8868070 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.1162228 0.0996798 0.1355112 -27.4728008 0.0000000 treat 2.3606845 1.9745766 2.8222919 9.4262970 0.0000000 basecontrol 4.2509087 3.6101303 5.0054218 17.3593671 0.0000000 treat:basecontrol 0.6180868 0.5110253 0.7475780 -4.9576328 0.0000007 Standard errors: MLE lrtest(m6, m5) ## Likelihood ratio test ## ## Model 1: fupcontrol ~ treat + basecontrol + treat * basecontrol ## Model 2: fupcontrol ~ treat + basecontrol ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 4 -2793.91 ## 2 3 -2806.95 -1 26.0728 3.2878e-07 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 我們發現當我們把評價指標換成危險度比之後，治療方案和基線血壓控制情況之間的交互作用變得高度有統計學意義 (p &lt; 0.0001)。這和之前使用邏輯鏈接函數的模型大相徑庭。這個結果提示我們交互作用存在與否是取決於你使用的評價指標的 (scale dependent)。這裏我們發現本數據中 log risk ratio 的尺度上交互作用存在且有意義， log odds ratio 的尺度上則並不存在有意義的交互作用。所以，採用危險度比作爲評價指標時，我們發現之前我們作出的結論應該需要被修正。 63.5.9 如果說不考慮一個RCT的統計分析不能在收集完數據之後修改這一事實，你認爲危險度比模型和比值比模型更應該使用哪一個來總結本數據的結果呢？ Since there is no interaction on the log odds scale, using a logisitic regression is probably preferable, as it gives a simpler model which correctly models the data. Whether the unadjusted or baseline adjusted results are presented is a question which is still hotly debated. The latter has increased power to detect a treatment effect, but as we have seen it estimates a different parameter to the marginal unadjusted OR. 63.5.10 證明危險度比模型是可以壓縮的。Prove that the log-link models are collapsible. 令 \\(Y\\) 爲結果變量，\\(X\\) 爲主要暴露變量 (main exposure)，\\(Z\\) 爲與 \\(X\\) 相互獨立的變量，也就是 \\(Z\\) 本身並不是一個 \\(X\\) 的混雜因子。那麼爲了計算 \\(E(Y|X)\\)，我們可以使用期望的數學算法來證明： \\[ \\begin{aligned} \\text{Assume that } E(Y | X, Z) &amp; = \\exp(\\beta_0 + \\beta_X X + \\beta_Z Z) \\\\ \\text{then } E(Y|X) &amp; = E(E(Y | X,Z) | X) \\text{ by the law of total expectation}\\\\ &amp; = E(e^{\\beta_0}e^{\\beta_XX}e^{\\beta_ZZ} | X) \\\\ &amp; = e^{\\beta_0}e^{\\beta_XX}E(e^{\\beta_ZZ} |X) \\\\ \\because X \\perp \\!\\!\\! \\perp Z &amp; \\therefore E(e^{\\beta_ZZ} |X) = E(e^{\\beta_ZZ}) \\text{ is a constant}\\\\ &amp; = e^{\\beta_0}e^{\\beta_XX} \\times k \\\\ \\Rightarrow \\log(E(Y|X)) &amp; = \\beta_0 + \\beta_XX + \\log(k) \\end{aligned} \\] 由此，我們證明了在危險度比的對數鏈接方程的廣義線性回歸模型中，增加非混雜因子變量並不會改變主要暴露變量的回歸係數的參數估計。log risk ratio without adjusting for \\(Z\\) is \\(\\beta_X\\), the same value as in the adjusted value. Therefore, a GLM with a log-link do possess the collapsibility property. 如果你覺得上面的證明你看不懂，我下面自己寫的這個證明可能相對容易一些： 假定 \\(Z\\) 也是二進制變量。 \\[ \\begin{aligned} E(Y | X) &amp; = \\text{Pr}(Y = 1 | X) \\\\ &amp; = \\text{Pr}(Y = 1 | X, Z = 1) \\text{Pr}(Z = 1| X) + \\text{Pr}(Y = 1 | X, Z = 0)\\text{Pr}(Z = 0 | X) \\\\ &amp; = \\sum_Z \\text{Pr}(Y = 1 | X,Z) \\text{Pr}(Z | X) \\\\ &amp; = \\exp(\\beta_0 + \\beta_XX + \\beta_Z) \\text{Pr}(Z = 1 | X) + \\exp(\\beta_0 + \\beta_XX ) \\text{Pr}(Z = 0 | X) \\\\ &amp; = \\exp(\\beta_0 + \\beta_XX) \\color{red}{\\{\\exp(\\beta_Z)\\text{Pr}(Z = 1 | X) +\\text{Pr}(Z = 0 | X) \\}} \\\\ &amp; \\text{the part in red color is a constant denote as }k \\\\ &amp; = \\exp(\\beta_0 + \\beta_XX + \\log(k)) \\\\ \\Rightarrow &amp; \\beta_X \\text{ was not affected with or without adjusting for }Z \\end{aligned} \\] "],["epi-logistic.html", "第 64 章 流行病學中的邏輯迴歸 64.1 流行病學研究最常用的實驗設計 64.2 以簡單二進制暴露變量爲例 64.3 拓展到多個暴露變量的邏輯迴歸模型 64.4 流行病學研究中變量的調整策略 64.5 GLM Practical 08", " 第 64 章 流行病學中的邏輯迴歸 64.1 流行病學研究最常用的實驗設計 在流行病學研究中，我們最關心的無非是 暴露變量 (治療方案的選用，或者一些對象的某些特徵如吸菸或飲酒等生活習慣) 與結果變量 (罹患某種我們關心的疾病與否，或者死亡與否) 之間的關係。爲了方便解釋本章暫且只考慮 單一的結果變量 (univariate) 的情況，不過不要忘了真實世界中的數據和實驗，我們常要 同時處理多個不同的結果變量 (multivariate)。 流行病學最常用的兩種研究設計是： 隊列研究/前瞻性研究 cohort or prospective studies； 病例對照/回顧性研究 case-control or retrospective studies。 無論是這兩種研究中的哪一種，都要從定義研究的人羣開始 (start by defining some population we wish to study)。例如某個年齡段的男性或者女性；某個特定時間段內，在某特定地區範圍內生活的所有人等。這被定義爲 潛在研究人羣 (underlying population of interest)。 如果是隊列研究，我們需要對這個潛在研究人羣取樣，選取具 有代表性的，且有足夠樣本量 的一羣個體 (隊列) 參與研究。那些我們要研究的 暴露變量 \\((\\mathbf{X})\\) 被提前定義好，然後在開始研究的時候收集整理成數據庫。之後這個隊列的參與者不斷被隨訪，這個時間段可以是先定義好的 (一年，五年，十年…)，也可以因人而異，最終直至每個個體的結果變量被觀測到 \\((D=1 \\text{ or } D=0)\\)。更一般地，如果我們要研究的暴露因素是二進制的，甚至是多分類的，我們可能會使用一些取樣的技巧，從而保證取樣構成的隊列能夠真實地反應該暴露因子在人羣中的分佈情況，保證隊列的代表性。 如果是病例對照研究，從它的別名 – 回顧性研究 – 也可以看出，它的研究起點和隊列研究相反，是從收集到的病例開始的 \\((D=1)\\)。有了病例以後，我們從人羣中沒有該結果變量 \\((D=0)\\) 的人羣中，取適合樣本量的人作爲對照組。然後再分別對病例和對照組用採訪或者問卷，或者調取過去的病例記錄/數據庫記錄等等尋找他們是否接觸過我們要研究的暴露變量。 到這裏，如果你還沒暈，恭喜你應該能理解爲什麼說病例對照研究研究的是 “結果的原因/causes of effect”；隊列研究研究的是 “原因導致的結果/effect of causes”。二者的終極目標卻是一致的 – 尋找暴露和結果二者之間的關係/To investigate the association between exposures and the outcomes – 只是手段不同而已。 觀察性研究 (不論是隊列還是病例對照研究)，除了我們一定會測量並收集的暴露變量數據，在分析過程中還不可避免地需要把混雜效應考慮進來，也就是我們還必須測量並收集那些潛在的混雜因子的數據 \\((W)\\)。圖 64.1 用簡單示意圖總結了 \\(W (\\text{ confounders }), X (\\text{ exposures }), D (\\text{ outcomes })\\) 之間，在不同實驗設計下的關係。 圖 64.1: Path diagrams showing relationships between variables in the underlying population and selection to a cohort study and a case-control study. 64.2 以簡單二進制暴露變量爲例 64.2.1 先決條件 我們以一個最簡單的二進制暴露變量 \\((X)\\) (例如是否接觸了某種化學試劑)，和一個二進制結果變量 \\((D)\\) (是否患有食道癌) 爲例展開： 觀察對象樣本量爲 \\(n, i = 1,\\cdots,n\\)； \\(X_i\\) 爲一個二進制暴露變量 (是否接觸了某種化學試劑，\\(1=\\)是，\\(0=\\)否)； \\(D_i\\) 爲一個二進制結果變量 (是否有食道癌，\\(1=\\)是，\\(0=\\)否)。 所以，該研究的潛在研究人羣可以被分成四組：\\((X=1,D=1),(X=1,D=0),(X=0,D=1),(X=0,D=0)\\)。如果用 \\(\\pi_{11}, \\pi_{10}, \\pi_{01}, \\pi_{00}\\) 標記每組人在該潛在研究人羣中所佔的比例，那麼有： \\[ \\begin{aligned} \\pi_{xd} &amp; = \\text{Pr}(X=x, D=d) \\\\ \\pi_{11} &amp;+ \\pi_{10} + \\pi_{01} + \\pi_{00} = 1 \\end{aligned} \\tag{64.1} \\] 表 50.1: Probabilities associated with binary explanatory and binary response variables in the underlying population structure \\(D\\) \\(0\\) \\(1\\) \\(X\\) \\(0\\) \\(\\pi_{00}\\) \\(\\pi_{01}\\) \\(1\\) \\(\\pi_{10}\\) \\(\\pi_{11}\\) 這裏我們應用概率標記法來輔助理解隊列研究：我們從潛在研究人羣中抽樣，觀察其暴露情況，再追蹤其結果變量。所以實際上，隊列研究的樣本，來自與對暴露與否 \\((X=0, X=1)\\) 兩組人的抽樣，所以我們實際求的是， \\[ \\begin{equation} \\text{Pr}(D=d|X=x) = \\frac{\\pi_{xd}}{\\pi_{x0} + \\pi_{x1}} \\end{equation} \\] .tg {border-collapse:collapse;border-color:#ccc;border-spacing:0;} .tg td{background-color:#fff;border-color:#ccc;border-style:solid;border-width:0px;color:#333; font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;} .tg th{background-color:#f0f0f0;border-color:#ccc;border-style:solid;border-width:0px;color:#333; font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;} .tg .tg-baqh{text-align:center;vertical-align:top} .tg .tg-0lax{text-align:left;vertical-align:top} .tg .tg-nrix{text-align:center;vertical-align:middle} 表 50.2: Probabilities associated with binary explanatory and binary response variables in a cohort study \\(D\\) \\(\\text{Pr}(D=d|X=x)\\) \\(X\\) \\(0\\) \\(1\\) \\(0\\) \\(\\pi_{00}\\) \\(\\pi_{01}\\) \\(\\frac{\\pi_{01}}{\\pi_{01} + \\pi_{00}}\\) \\(1\\) \\(\\pi_{10}\\) \\(\\pi_{11}\\) \\(\\frac{\\pi_{11}}{\\pi_{10} + \\pi_{11}}\\) 相反地，病例對照研究中我們從已有的病例 \\((D=1)\\) 出發，這樣做的理由有很多，通常可能由於病例可能十分稀少，如果建立隊列研究可能需要龐大的樣本量 (即便如此也不一定能夠收集到足夠分析的數據，可能還要花費相當長的隨訪時間，吃力不討好)。所以，在病例對照研究的設計中，我們其實是獨立地從兩個人羣 (病例組，\\(D=1\\)，對照組，\\(D=0\\)) 中抽取樣本。所以，病例對照研究獲得的數據，只能用於計算暴露在病例組和對照組中的條件概率： \\[ \\text{Pr}(X=x|D=d) = \\frac{\\pi_{xd}}{\\pi_{0d}+\\pi_{1d}} \\] 表 50.3: Separate samples from subpopulations \\(D=0,1\\) with relavant conditional probabilities in a case-control study \\(D\\) \\(0\\) \\(1\\) \\(X\\) \\(0\\) \\(\\pi_{00}\\) \\(\\pi_{01}\\) \\(1\\) \\(\\pi_{10}\\) \\(\\pi_{11}\\) \\(\\text{Pr}(X=x|D=d)\\) \\(\\frac{\\pi_{10}}{\\pi_{10}+\\pi_{00}}\\) \\(\\frac{\\pi_{11}}{\\pi_{11}+\\pi_{01}}\\) 64.2.2 比值比 Odds ratios 某研究的數據中，暴露變量是二進制的 \\(X\\)，和 結果變量是二進制的 \\(D\\)。我們其實最關心的問題是：結果變量的兩個分類 \\(D=0, D=1\\)，在暴露變量 \\(X=0, X=1\\) 兩組中到底個佔多少比例。用吸菸與肺癌的例子來解釋就是，我們最關心的是，在吸菸人羣中，發生肺癌的人的比例，是否顯著地高於非吸菸人羣中發生肺癌的人的比例，僅此而已。這句話用概率論的標記法來寫的話，則是兩個條件概率：\\(\\text{Pr}(D=1|X=1), \\text{Pr}(D=1|X=0)\\)。此處，可以定義暴露變量 \\(X=1\\) 的條件下，結果變量 \\(D=1\\) 的概率的比值 (Odds)： \\[ \\text{Odds}_1 = \\frac{\\text{Pr}(D=1|X=1)}{1-\\text{Pr}(D=1|X=1)} = \\frac{\\pi_{11}/(\\pi_{10} + \\pi_{11})}{1-\\pi_{11}/(\\pi_{10} + \\pi_{11})} \\] 類似地，暴露變量 \\(X=0\\) 的條件下，結果變量 \\(D=1\\) 的概率的比值 (Odds)： \\[ \\text{Odds}_2 = \\frac{\\text{Pr}(D=1|X=0)}{1-\\text{Pr}(D=1|X=0)} = \\frac{\\pi_{01}/(\\pi_{01} + \\pi_{00})}{1-\\pi_{01}/(\\pi_{01} + \\pi_{00})} \\] 故，從隊列研究中，可以很自然的計算暴露變量和結果變量的比值比： \\[ \\begin{aligned} \\text{Odds Ratio}_{\\text{cohort}} = \\frac{\\text{Odds}_1}{\\text{Odds}_2} &amp; = \\frac{\\frac{\\text{Pr}(D=1|X=1)}{1-\\text{Pr}(D=1|X=1)}}{\\frac{\\text{Pr}(D=1|X=0)}{1-\\text{Pr}(D=1|X=0)}}\\\\ &amp; = \\frac{\\frac{\\pi_{11}/(\\pi_{10} + \\pi_{11})}{1-\\pi_{11}/(\\pi_{10} + \\pi_{11})}}{\\frac{\\pi_{01}/(\\pi_{01} + \\pi_{00})}{1-\\pi_{01}/(\\pi_{01} + \\pi_{00})}} \\\\ &amp; = \\frac{\\frac{\\pi_{11}/(\\pi_{10}+\\pi_{11})}{\\pi_{10}/(\\pi_{10}+\\pi_{11})}}{\\frac{\\pi_{01}/(\\pi_{01}+\\pi_{00})}{\\pi_{00}/(\\pi_{01}+\\pi_{00})}} \\\\ &amp; = \\frac{\\pi_{11}\\pi_{00}}{\\pi_{10}\\pi_{01}} \\end{aligned} \\] 從病例對照研究中，推算的暴露變量和結果變量的比值比是另外一個過程： \\[ \\begin{aligned} \\text{Odds Ratio}_{\\text{case-control}} = \\frac{\\text{Odds}^\\prime_1}{\\text{Odds}^\\prime_2} &amp; = \\frac{\\frac{\\text{Pr}(X=1|D=1)}{1-\\text{Pr}(X=1|D=1)}}{\\frac{\\text{Pr}(X=0|D=0)}{1-\\text{Pr}(X=0|D=0)}} \\\\ &amp; = \\frac{\\frac{\\pi_{11}/(\\pi_{11} + \\pi_{01})}{1-\\pi_{11}/(\\pi_{11} + \\pi_{01})}}{\\frac{\\pi_{10}/(\\pi_{10} + \\pi_{00})}{1-\\pi_{10}/(\\pi_{10} + \\pi_{00})}} \\\\ &amp; = \\frac{\\frac{\\pi_{11}/(\\pi_{11}+\\pi_{01})}{\\pi_{01}/(\\pi_{11}+\\pi_{01})}}{\\frac{\\pi_{10}/(\\pi_{10}+\\pi_{00})}{\\pi_{00}/(\\pi_{10}+\\pi_{00})}} \\\\ &amp; = \\frac{\\pi_{11}\\pi_{00}}{\\pi_{10}\\pi_{01}} \\end{aligned} \\] 經過上面的推演，我們發現用病例對照研究的數據，雖然不能像隊列研究一樣直接推算正確的暴露條件下的比值 (conditional odds given exposure)，卻能用較少的樣本量中獲得真實的比值比 (OR) 。 64.2.3 邏輯迴歸應用於病例對照研究的合理性 在一個隊列研究中，當我們有不止一個暴露變量時，顯然就需要更加複雜的模型來輔助分析 (迴歸型分析法) 暴露變量和結果變量之間的關係。估計比值比最佳的模型是邏輯迴歸。如果 \\(D\\) 表示一個隨機型結果變量，其中每個觀察對象的結果變量服從暴露變量的條件二項分佈 (繼續用單一的二進制暴露變量 \\(x_i\\))： \\[ D_i|X_i = x_i \\sim \\text{Binomial}(1, \\pi_i) \\] 所以，可以用邏輯迴歸來擬合： \\[ \\text{logit}(\\pi_i) = \\text{log}(\\frac{\\pi_i}{1-\\pi_i}) = \\alpha + \\beta x_i \\] 把這個邏輯迴歸方程重新整理： \\[ \\begin{aligned} \\text{Pr}(D=1|X=1) &amp; = \\frac{e^{\\alpha + \\beta}}{1 + e^{\\alpha + \\beta}} \\\\ \\text{Pr}(D=1|X=0) &amp; = \\frac{e^\\alpha}{1 + e^\\alpha} \\\\ \\text{Where, }\\alpha &amp; = \\text{log}{\\frac{\\pi_{01}}{\\pi_{00}}} \\\\ \\beta &amp; = \\text{log}{\\frac{\\pi_{11}\\pi_{00}}{\\pi_{10}\\pi_{01}}} \\end{aligned} \\] 在一個病例對照研究中，結果變量 \\(D_i\\) 被鎖死，暴露變量成了服從結果變量的條件二項分佈的隨機變量： \\[ X_i | D_i = d_i \\sim \\text{Binomial}(1,\\pi_i^*) \\] 繼續任性地用邏輯迴歸擬合的話： \\[ \\text{logit}(\\pi_i^*) = \\text{log}(\\frac{\\pi_i^*}{1-\\pi_i^*}) = \\alpha^* + \\beta d_i \\] 同樣整理成概率方程： \\[ \\begin{aligned} \\text{Pr}(X=1|D=1) &amp; = \\frac{e^{\\alpha^* + \\beta}}{1 + e^{\\alpha^* + \\beta}} \\\\ \\text{Pr}(X=1|D=0) &amp; = \\frac{e^{\\alpha^*}}{1 + e^{\\alpha^*}} \\\\ \\text{Where, }\\alpha &amp; = \\text{log}{\\frac{\\pi_{10}}{\\pi_{00}}} \\\\ \\beta &amp; = \\text{log}{\\frac{\\pi_{11}\\pi_{00}}{\\pi_{10}\\pi_{01}}} \\end{aligned} \\] 所以，用邏輯迴歸擬合病例對照研究的數據，同樣可以得到和隊列研究一樣正確的比值比估計。但是這個截距 \\(\\alpha\\)，在隊列研究中指的是，非暴露組中患病的比值的對數 (log odds of disease in the unexposed)；在病例對照研究中指的是，對照組中暴露的比值的對數 (log odds of exposure in the controls)。是兩個完全不同含義的估計量。 綜上所述，從一個隊列研究獲得的似然方程是： \\[ \\begin{aligned} L_{\\text{cohort}} &amp; = \\prod_{i=1}^n(\\frac{e^{\\alpha + \\beta x_i}}{1+e^{\\alpha + \\beta x_i}})^{d_i}(\\frac{1}{e^{\\alpha + \\beta x_i}})^{1-d_i} \\\\ \\text{Where } d_i &amp; = \\left\\{ \\begin{array}{ll} 0 \\text{ if subjects were not observed with the outcome}\\\\ 1 \\text{ if subjects were observed with the outcome}\\\\ \\end{array} \\right. \\\\ x_i &amp; = \\left\\{ \\begin{array}{ll} 0 \\text{ if subjects were not observed with the exposure}\\\\ 1 \\text{ if subjects were observed with the exposure}\\\\ \\end{array} \\right. \\end{aligned} \\] 從一個病例對照研究獲得的似然方程是： \\[ \\begin{aligned} L_{\\text{case-control}} &amp; = \\prod_{i=1}^n(\\frac{e^{\\alpha + \\beta d_i}}{1+e^{\\alpha + \\beta d_i}})^{x_i}(\\frac{1}{e^{\\alpha + \\beta d_i}})^{1-x_i} \\\\ \\text{Where } d_i &amp; = \\left\\{ \\begin{array}{ll} 0 \\text{ if subjects were not observed with the outcome}\\\\ 1 \\text{ if subjects were observed with the outcome}\\\\ \\end{array} \\right. \\\\ x_i &amp; = \\left\\{ \\begin{array}{ll} 0 \\text{ if subjects were not observed with the exposure}\\\\ 1 \\text{ if subjects were observed with the exposure}\\\\ \\end{array} \\right. \\end{aligned} \\] 64.3 拓展到多個暴露變量的邏輯迴歸模型 現在來考慮 \\(p\\) 個暴露變量的情況：\\(X_1, \\cdots, X_p\\)，這些暴露變量可以是分類型變量，也可以是連續型變量，例如， \\(D_i = 0 \\text{ or } 1\\)，第 \\(i\\) 名研究對象觀察到有 \\((=1)\\)，或沒有 \\((=0)\\) 結果變量 (如發生胰腺癌)； \\(X_{i1} = 0 \\text{ or } 1\\)，第 \\(i\\) 名研究對象有 \\((=1)\\)，或沒有 \\((=0)\\) 暴露變量 (如吸菸)； \\(X_{i2} = 0 \\text{ or } 1\\)，第 \\(i\\) 名研究對象是男性 \\((=1)\\)，或女性 \\((=0)\\)； \\(X_{i3}\\)，第 \\(i\\) 名研究對象的年齡 (years)。 64.3.1 Mantel Haenszel 法 如果數據有且只有兩個暴露變量，\\(X_1, X_2\\)，其中 \\(X_1\\) 是一個二進制變量，\\(X_2\\) 是一個可以分成 \\(C\\) 組的分類變量。那麼如果樣本量足夠大，可以把數據整理成 \\(C\\) 個四格表用於分析每一個 \\(X_2\\) 的分層中 \\(X_1\\) 和結果變量 \\(D\\) 之間的關係。多層數據的合併比值比可以用 Mantel Haenszel 法。此法在兩個分類暴露變量的情況下還能適用，當某個(或兩個)分類變量的層數越來越多時，你會發現最終落到小格子裏的樣本量急劇下降，侷限性就體現了出來。另外，此法亦不能應用於連續型變量的調整，用處簡直就是捉襟見肘。迫切地我們需要有更加一般的 (藉助於迴歸的威力的) 方法來對多個暴露變量進行調整。 64.3.2 隊列研究和病例對照研究的似然 一個隊列研究，用邏輯迴歸擬合其結果變量 (因變量) \\(D\\) 和暴露變量 \\(X_1, \\cdots, X_p\\) 之間的關係時，可以寫作： \\[ \\begin{aligned} D_i=1 | (X_{i1} &amp; = x_{i1}, \\cdots, X_{ip} = x_{ip}) \\sim \\text{Binomial}(1, \\pi_i) \\\\ \\text{logit} (\\pi_i) &amp; = \\text{log}(\\frac{\\pi_i}{1-\\pi_i}) = \\alpha + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip} \\end{aligned} \\] 將這個迴歸方程重新整理成爲概率方程： \\[ \\text{Pr}(D_i = 1 | X_{i1} = x_{i1}, \\cdots, X_{ip} = x_{ip}) = \\frac{e^{\\alpha + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip}}}{1+e^{\\alpha + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip}}} \\] 截距 \\(\\alpha\\) 的含義是，當所有的暴露變量都取 \\(0\\) 時，研究對象觀察到結果變量爲 \\(1\\) 的對數比值 \\((\\text{log odds})\\)； 迴歸係數 \\(\\beta_k\\) 的含義是，當其餘的暴露變量保持不變時，\\(x_k\\) 每增加一個單位，結果變量爲 \\(1\\) 的對數比值比 \\((\\text{log odds-ratio})\\) (即，調整了其餘所有變量之後，\\(x_k\\) 和結果變量之間的對數比值比)。 所以，隊列研究的數據，其似然方程是： \\[ \\begin{aligned} L_{\\text{cohort}} &amp; = \\prod_{i=1}^n\\text{Pr}(D_i = d_i | X_{i1} = x_{i1}, \\cdots, X_{ip} = x_{ip}) \\\\ &amp; = \\prod_{i=1}^n\\text{Pr}(\\frac{e^{\\alpha + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip}}}{1+e^{\\alpha + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip}}})^{d_i}(\\frac{1}{1+e^{\\alpha + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip}}})^{1-d_i} \\end{aligned} \\] 當數據變成了病例對照研究，其似然方程會變成怎樣呢？ \\[ L_{\\text{case-control}} = \\prod_{i=1}^n\\text{Pr}(X_{i1} = x_{i1}, \\cdots, X_{ip} = x_{ip} |D_i = d_i) \\] 這裏，我們很難看出這到底是怎樣的一個條件概率，如果預測變量中同時包括了連續型變量和分類變量，情況就更加複雜，剪不斷理還亂。 64.3.3 病例對照研究中的邏輯迴歸 用 \\(\\text{Pr}(S_i=1 \\text{ or } 0)\\) 表示在潛在研究人羣 (underlying study population) 中，被抽樣 (或者沒有被抽樣) 進入該隊列研究的概率。那麼，理想情況下，可認爲實施病例對照研究時，病例是稀少的，即我們收集到的病例，幾乎等價於我們關心的潛在研究人羣中全部的病例，且可以被證明： \\[ \\begin{aligned} &amp; \\text{Pr}(X_{i1} = x_{i1}, \\cdots, X_{ip} = x_{ip} |D_i = 1) \\\\ =&amp; \\text{Pr}(X_{i1} = x_{i1}, \\cdots, X_{ip} = x_{ip} |D_i = 1, S_i=1) \\\\ =&amp; \\frac{e^{\\alpha^* + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip}}}{1+e^{\\alpha^* + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip}}} \\\\ &amp; \\;\\;\\;\\; \\times \\frac{\\text{Pr}(X_{i1} = x_{i1}, \\cdots, X_{ip} = x_{ip} |S_i=1)}{\\text{Pr}(D_i = 1 | S_i = 1)} \\\\ \\text{Where } \\alpha^* &amp; = \\alpha + \\text{log}(\\frac{\\text{Pr}(D_i = 0)}{\\text{Pr}(D_i = 1)}) + \\text{log}(\\frac{\\text{Pr}(D_i = 1|S_i=1)}{\\text{Pr}(D_i = 0|S_i=1)}) \\end{aligned} \\tag{64.2} \\] 概率方程 (64.2) 中，可以看出第一部分 \\(\\frac{e^{\\alpha^* + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip}}}{1+e^{\\alpha^* + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip}}}\\) 是一個邏輯迴歸模型。跟隊列研究的邏輯迴歸模型相比較，差別只是截距不同 \\(\\alpha \\neq \\alpha^*\\)。其餘的部分如 \\(\\text{Pr}(X_{i1} = x_{i1}, \\cdots, X_{ip} = x_{ip} |S_i=1)\\) 的含義是潛在人羣中被取樣放入該隊列研究，且預測變量各自不同的隨機概率分佈，其實和我們尋找的參數 \\(\\beta_1,\\cdots,\\beta_p\\)，是沒有什麼關係的。最後一部分分母的 \\(\\text{Pr}(D_i = 1 | S_i = 1)\\) 的意思是，結果變量爲 \\(1\\) 的人被選入本項病例對照研究的概率，理想的實驗設計下這被認爲是接近於 \\(1\\) 的，即使不是，它也是一個固定不變的常數。所以，病例對照研究的似然方程中，我們關心的只有第一部分，邏輯迴歸模型： \\[ L_{\\text{case-control}} \\propto \\prod_{i=1}^n(\\frac{e^{\\alpha^* + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip}}}{1+e^{\\alpha^* + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip}}})^{d_i}(\\frac{1}{1+e^{\\alpha^* + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip}}})^{1-d_i} \\] 這裏必須明確的一點是，病例對照研究擬合的邏輯迴歸，其截距是 \\(\\alpha^*\\)，並非 \\(\\alpha\\)。這個 \\(\\alpha^*\\) 其實是包含了 \\(\\text{Pr}(D_i=1),\\text{Pr}(D_i=0)\\) 的，可惜這些概率也無法用病例對照研究設計獲得。所以，病例對照研究數據擬合了邏輯迴歸模型以後的截距，其實沒有太多實際的含義。 64.4 流行病學研究中變量的調整策略 圖 64.2: relationships between three variables in an underlying population of interest 圖 64.2 展示的是在潛在研究人羣中 \\(W (\\text{potential confounder}),X (\\text{exposure}),D (\\text{outcome})\\) 三者之間可能存在的四種關係。 圖 64.2 - (a) \\(W\\) 和 \\(X, D\\) 都沒有關係，那麼我們研究 \\(X,D\\) 之間的關係時，完全可以忽略掉 \\(W\\)，不用調整。 但是，如果在邏輯迴歸模型中調整了一個和暴露變量結果變量之間無關的變量，獲得的比值比估計幾乎不會有太大改變，但是代價是會獲得較大的對數比值比的標準誤 (standard error)，降低了對比值比估計的精確程度。 圖 64.2 - (b) \\(W\\) 和 \\(X, D\\) 同時都相關，且不在 \\(X\\rightarrow D\\) 的因果關係通路上，此種情況下，必須對 \\(W\\) 進行調整，否則獲得的比值比估計是帶有嚴重偏倚的。 圖 64.2 - (c) \\(W\\) 僅僅和 \\(X\\) 有關係，和結果變量 \\(D\\) 沒有相關性。此時研究 \\(X,D\\) 之間的關係時，忽略掉 \\(W\\)，不需要對之進行任何調整。和 (a) 一樣，如果此時調整了 \\(W\\)，估計的比值比不會發生質變，但是會損失估計的精確度。 圖 64.2 - (d) \\(W\\) 僅僅和結果變量 \\(D\\) 有關係，和暴露變量 \\(X\\) 無關時，如果模型對 \\(W\\) 進行調整，我們會獲得完全不同的比值比估計，因爲這種情況下其實調整 \\(W\\) 前後的比值比估計的是具有不同含義的，二者都具有實際意義。調整前的估計量，是總體估計，有助於作總體的決策；調整後的估計量，是帶有某些特徵的部分人羣估計，有助於評價個人水平的 \\(X,D\\) 之間的關係。 64.5 GLM Practical 08 64.5.1 Part 1 在第一部分的數據分析中，我們會使用邏輯回歸模型來分析來自病例對照研究設計的數據，並獲取比值比 (odds ratios)。 該病例對照研究數據來自一項關於食道癌的研究 (Breslow, Day, and research 1980)。病例是200名被診斷爲患有食道癌的法國男性。對照組則來自176名健康男性。 數據包含的變量及其解釋描述如下： Variable Name Content case 1 = case, 0 = control age_group age group [1: 25-34; 2: 35-44; 3: 45-54; 4: 55-64; 5: 65-74; 6: 75+] tobacco_group tobacco intake group [0: None; 1: 1-9 g/d; 2: 10-19 g/d; 3: 20-29 g/day; 4: 30+ g/d] alcohol_grp alcohol intake group [0: 0-39 g/d; 1: 40-79 g/d; 80-119 g/d; 3: 120+ g/d] 該研究的主要目的是分析吸菸量 tobacco_group 與飲酒量 alcohol_grp 是否是食道癌的危險因子。變量中的年齡 age_group 則作爲唯一已知的混雜因子。 64.5.1.1 簡單初步總結各個解釋變量的分佈及特徵。思考吸菸量和飲酒量，吸菸量和年齡之間有怎樣的關係。 Oesophageal &lt;- read_dta(&quot;../backupfiles/oesophageal_data-1.dta&quot;) tab &lt;- stat.table(index=list(Tobacco_gr = tobacco_group, Alcohol_gr = alcohol_grp), contents=list(count(), percent(alcohol_grp)), data=Oesophageal, margins=TRUE) print(tab, digits = 2) ## ----------------------------------------------------- ## ---------------Alcohol_gr---------------- ## Tobacco_gr 0 1 2 3 Total ## ----------------------------------------------------- ## 0 148.00 83.00 27.00 6.00 264.00 ## 56.06 31.44 10.23 2.27 100.00 ## ## 1 112.00 97.00 35.00 18.00 262.00 ## 42.75 37.02 13.36 6.87 100.00 ## ## 2 84.00 85.00 49.00 18.00 236.00 ## 35.59 36.02 20.76 7.63 100.00 ## ## 3 42.00 62.00 16.00 12.00 132.00 ## 31.82 46.97 12.12 9.09 100.00 ## ## 4 28.00 29.00 12.00 13.00 82.00 ## 34.15 35.37 14.63 15.85 100.00 ## ## ## Total 414.00 356.00 139.00 67.00 976.00 ## 42.42 36.48 14.24 6.86 100.00 ## ----------------------------------------------------- tab &lt;- stat.table(index=list(Tobacco_gr = tobacco_group, Age_gr = age_group), contents=list(count(), percent(age_group)), data=Oesophageal, margins=TRUE) print(tab, digits = 2) ## --------------------------------------------------------------------- ## -------------------------Age_gr-------------------------- ## Tobacco_gr 1 2 3 4 5 6 Total ## --------------------------------------------------------------------- ## 0 50.00 69.00 56.00 50.00 26.00 13.00 264.00 ## 18.94 26.14 21.21 18.94 9.85 4.92 100.00 ## ## 1 21.00 40.00 48.00 67.00 73.00 13.00 262.00 ## 8.02 15.27 18.32 25.57 27.86 4.96 100.00 ## ## 2 19.00 46.00 57.00 65.00 38.00 11.00 236.00 ## 8.05 19.49 24.15 27.54 16.10 4.66 100.00 ## ## 3 11.00 27.00 33.00 38.00 20.00 3.00 132.00 ## 8.33 20.45 25.00 28.79 15.15 2.27 100.00 ## ## 4 16.00 17.00 19.00 22.00 4.00 4.00 82.00 ## 19.51 20.73 23.17 26.83 4.88 4.88 100.00 ## ## ## Total 117.00 199.00 213.00 242.00 161.00 44.00 976.00 ## 11.99 20.39 21.82 24.80 16.50 4.51 100.00 ## --------------------------------------------------------------------- 似乎在吸菸量和飲酒量之間存在正關係，吸菸較多的人，飲酒量也呈現較多的趨勢。另外，不吸菸的人中，以及吸菸量最多的人中，都有較多的年輕人。吸菸量和飲酒量也許都和患有食道癌相關。而且上述簡單的表格總結也提示，吸菸量同時和飲酒量和年齡相關。 64.5.1.2 我們先從分析吸菸習慣着手。將研究對象根據吸菸習慣分爲吸菸者 (tobacco_group = 1~4) 與非吸菸者 (tobacco_group = 0)。使用2 \\(\\times\\) 2表格分析吸菸與否和患有食道癌與否之間的關係。使用公式手頭計算比值比 0dds ratio，和它的 95% 信賴區間。用統計軟件確認你的計算結果是否正確。 Oesophageal &lt;- Oesophageal %&gt;% mutate(Tobacco_2 = as.factor(tobacco_group)) %&gt;% mutate(Tobacco_2 = fct_collapse(Tobacco_2, NonSMker = &quot;0&quot;, SMker = c(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;))) tab &lt;- stat.table(index=list(Case = case, Tobacco_gr = Tobacco_2), contents=list(count(), percent(Tobacco_2)), data=Oesophageal, margins=TRUE) print(tab, digits = 2) ## --------------------------------- ## --------Tobacco_gr-------- ## Case NonSMker SMker Total ## --------------------------------- ## 0 255.00 521.00 776.00 ## 32.86 67.14 100.00 ## ## 1 9.00 191.00 200.00 ## 4.50 95.50 100.00 ## ## ## Total 264.00 712.00 976.00 ## 27.05 72.95 100.00 ## --------------------------------- 手動計算比值比和95%信賴區間： OR &lt;- (255*191)/(9*521) Var &lt;- 1/255 + 1/191 + 1/9 + 1/521 Var ## [1] 0.12218767 OR_L &lt;- OR*exp(-1.96*sqrt(Var)) OR_U &lt;- OR*exp(1.96*sqrt(Var)) c(OR, OR_L, OR_U) ## [1] 10.3870761 5.2353696 20.6081631 所以，從表格推算的比值比 OR = 10.39；該比值比的對數對應的分佈方差估算爲 0.122。據此，該比值比的 95% CI爲 (5.24, 20.61)。有很強的證據表明，吸菸習慣的有無和患有食道癌之間有正關係。 用R驗證你的計算結果： with(Oesophageal, epiDisplay::cc(Tobacco_2, case, graph = FALSE)) ## ## case ## Tobacco_2 0 1 Total ## NonSMker 255 9 264 ## SMker 521 191 712 ## Total 776 200 976 ## ## OR = 10.39 ## 95% CI = 5.24, 20.61 ## Chi-squared = 64.82, 1 d.f., P value = 0 ## Fisher&#39;s exact test (2-sided) P value = 0 用 Stata 做一樣的事情： ## ## . use &quot;../backupfiles/oesophageal_data-1.dta&quot; ## ## . ## . gen tobacco_2 = . ## (976 missing values generated) ## ## . replace tobacco_2 = 0 if tobacco_group == 0 ## (264 real changes made) ## ## . replace tobacco_2 = 1 if tobacco_group &gt;= 1 ## (712 real changes made) ## ## . ## . mhodds case tobacco_2 ## ## Maximum likelihood estimate of the odds ratio ## Comparing tobacco_2==1 vs. tobacco_2==0 ## ## ---------------------------------------------------------------- ## Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ## ---------------------------------------------------------------- ## 10.387076 64.75 0.0000 5.109681 21.115085 ## ---------------------------------------------------------------- ## ## . 值得注意的是，Stata 裏面的 mhodds 用的是不同於R的方法計算 95% 信賴區間的。 64.5.1.3 考慮使用邏輯回歸模型來獲取我們感興趣的比值比。請用數學語言寫下下列兩個模型的表達式： 吸菸與否爲結果變量，病例和對照的標記爲預測變量。 令 \\(X\\) 爲吸菸與否變量，\\(D\\) 爲病例/對照標記變量。 \\[ \\text{Pr}(X = 1 | D = d) = \\frac{e^{\\alpha^* + \\beta d}}{1 + e^{\\alpha^* + \\beta d}} \\] 病例和對照的標記爲結果變量，吸菸與否爲預測變量。 使用相同的標記來表達這個模型，另外，用 \\(S = 1\\) 表示該對象被選做本次研究的病例-對照樣本。所以，在下面的模型中，不要忘記我們還有一個條件變量，也就是該對象被選入本次實驗中。 \\[ \\text{Pr}(D = 1|X = x, S = 1) = \\frac{e^{\\lambda^* + \\beta x}}{1 + e^{\\lambda^* + \\beta x}} \\] 64.5.1.4 用你熟悉的統計軟件分別擬合上述兩個邏輯回歸模型。比較兩個解析報告的結果，並試着解釋他們各自的截距估計量的含義。用概率的數學表達式來說明二者的不同。 M1 &lt;- glm(Tobacco_2 ~ case, data = Oesophageal, family = binomial(link = logit)) summary(M1); jtools::summ(M1, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = Tobacco_2 ~ case, family = binomial(link = logit), ## data = Oesophageal) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.49042 -1.49190 0.89264 0.89264 0.89264 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.714486 0.076426 9.3487 &lt; 2.2e-16 *** ## case 2.340562 0.349515 6.6966 2.133e-11 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 1139.47 on 975 degrees of freedom ## Residual deviance: 1056.12 on 974 degrees of freedom ## AIC: 1060.12 ## ## Number of Fisher Scoring iterations: 5 Observations 976 Dependent variable Tobacco_2 Type Generalized linear model Family binomial Link logit 𝛘²(1) 83.357682 Pseudo-R² (Cragg-Uhler) 0.118838 Pseudo-R² (McFadden) 0.073154 AIC 1060.117214 BIC 1069.884140 exp(Est.) 2.5% 97.5% z val. p (Intercept) 2.043137 1.758910 2.373294 9.348719 0.000000 case 10.387076 5.235833 20.606336 6.696606 0.000000 Standard errors: MLE M2 &lt;- glm(case ~ Tobacco_2, data = Oesophageal, family = binomial(link = logit)) summary(M2); jtools::summ(M2, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = case ~ Tobacco_2, family = binomial(link = logit), ## data = Oesophageal) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -0.79035 -0.79035 -0.79035 -0.26338 2.59951 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -3.34404 0.33916 -9.8596 &lt; 2.2e-16 *** ## Tobacco_2SMker 2.34056 0.34955 6.6959 2.144e-11 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 989.947 on 975 degrees of freedom ## Residual deviance: 906.590 on 974 degrees of freedom ## AIC: 910.59 ## ## Number of Fisher Scoring iterations: 6 Observations 976 Dependent variable case Type Generalized linear model Family binomial Link logit 𝛘²(1) 83.357682 Pseudo-R² (Cragg-Uhler) 0.128443 Pseudo-R² (McFadden) 0.084204 AIC 910.589629 BIC 920.356554 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.035294 0.018155 0.068612 -9.859637 0.000000 Tobacco_2SMker 10.387076 5.235437 20.607897 6.695866 0.000000 Standard errors: MLE 你看到兩個模型計算出的比值比結果是完全一致的。這符合我們的預期。 其中，第一個模型的截距 \\(\\exp(\\hat{\\alpha*}) = 2.043\\)。用概率的數學表達式表達爲： \\(\\exp(\\hat{\\alpha*}) =\\text{Pr}(X=1 | D=0)/\\text{Pr}(X = 0 | D = 0)\\)。我們可以從原始的表格中的數據直接計算來獲得驗證： \\[ \\text{Pr}(X=1|D=0) = 521/776 = 0.6714 \\\\ \\text{Pr}(X=0|D=0) = 255/776 = 0.3286 \\\\ \\Rightarrow \\frac{\\text{Pr}(X=1|D=0)}{\\text{Pr}(X=0|D=0)} = \\frac{0.6714}{0.3286} = 2.043 \\] 在另外一個模型中的截距 \\(\\exp(\\hat{\\lambda}) = 0.035\\)。從該模型的數學表達式出發，不難知道： \\[ \\begin{aligned} \\exp(\\lambda^*) &amp; = \\frac{\\text{Pr}(D = 1 | X = 0, S = 1)}{\\text{Pr}(D = 0 | X = 0, S = 1)} \\\\ &amp; = \\frac{9 / 264}{255 / 264} = 0.03529 \\end{aligned} \\] 64.5.1.5 接下來我們將要分析酒精攝入量對上述關係可能存在的影響。請嘗試使用 Mantel-Haenszel 法來計算酒精攝入量調整後的吸菸與食道癌的比值比。調整了飲酒量之後的比值比發生了多大的變化？ ## ## . use &quot;../backupfiles/oesophageal_data-1.dta&quot; ## ## . ## . gen tobacco_2 = . ## (976 missing values generated) ## ## . replace tobacco_2 = 0 if tobacco_group == 0 ## (264 real changes made) ## ## . replace tobacco_2 = 1 if tobacco_group &gt;= 1 ## (712 real changes made) ## ## . ## . mhodds case tobacco_2, by(alcohol_grp) ## ## Maximum likelihood estimate of the odds ratio ## Comparing tobacco_2==1 vs. tobacco_2==0 ## by alcohol_grp ## ## ------------------------------------------------------------------------------- ## alcoho~p | Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ## ----------+-------------------------------------------------------------------- ## 0-39 gra | . 17.31 0.0000 . . ## 40-79 gr | 9.552239 19.77 0.0000 2.82084 32.34690 ## 80-119 g | 3.066667 4.73 0.0296 1.05865 8.88347 ## 120+ gra | 12.941176 7.51 0.0061 1.20415 139.08120 ## ------------------------------------------------------------------------------- ## ## Mantel-Haenszel estimate controlling for alcohol_grp ## ---------------------------------------------------------------- ## Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ## ---------------------------------------------------------------- ## 8.587244 46.47 0.0000 4.079007 18.078115 ## ---------------------------------------------------------------- ## ## Test of homogeneity of ORs (approx): chi2(3) = 6.09 ## Pr&gt;chi2 = 0.1073 ## ## . 調整酒精攝入量之後，可見吸菸與食道癌的比值比 OR 從 10.39 略微降低到 8.59。與第一步的問題相結合，當時我們發現吸菸與飲酒之間有關聯，所以綜合以上信息可以認爲飲酒量是吸菸與食道癌關係的混雜因子 (confounder)。但是吸菸者與食道癌之間的強正關係 (strong positive association) 在調整了飲酒量之後依然是有統計學意義的。調整了飲酒量之後，吸菸者患有食道癌的比值 (odds) 高過不吸菸的人8倍以上。 64.5.1.6 請擬合合適的模型重複上述的分析，根據模型報告的結果尋找能夠評價調整了飲酒量以後的吸菸與患有食道癌之間關係的比值比及其信賴區間。解釋該模型的截距的含義是什麼。 M3 &lt;- glm(case ~ Tobacco_2 + as.factor(alcohol_grp), data = Oesophageal, family = binomial(link = logit)) summary(M3); jtools::summ(M3, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = case ~ Tobacco_2 + as.factor(alcohol_grp), family = binomial(link = logit), ## data = Oesophageal) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.58458 -0.78012 -0.46294 -0.16370 2.53054 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -4.30590 0.38538 -11.1731 &lt; 2.2e-16 *** ## Tobacco_2SMker 2.12652 0.35884 5.9260 3.103e-09 *** ## as.factor(alcohol_grp)1 1.14562 0.23664 4.8412 1.290e-06 *** ## as.factor(alcohol_grp)2 1.91822 0.26815 7.1535 8.459e-13 *** ## as.factor(alcohol_grp)3 3.09942 0.33503 9.2511 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 989.947 on 975 degrees of freedom ## Residual deviance: 786.564 on 971 degrees of freedom ## AIC: 796.564 ## ## Number of Fisher Scoring iterations: 6 Observations 976 Dependent variable case Type Generalized linear model Family binomial Link logit 𝛘²(4) 203.383008 Pseudo-R² (Cragg-Uhler) 0.295141 Pseudo-R² (McFadden) 0.205448 AIC 796.564303 BIC 820.981616 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.013489 0.006338 0.028708 -11.173058 0.000000 Tobacco_2SMker 8.385601 4.150364 16.942686 5.926028 0.000000 as.factor(alcohol_grp)1 3.144379 1.977466 4.999894 4.841238 0.000001 as.factor(alcohol_grp)2 6.808843 4.025526 11.516593 7.153511 0.000000 as.factor(alcohol_grp)3 22.185079 11.504870 42.779944 9.251133 0.000000 Standard errors: MLE 結論其實是一樣的。調整了飲酒量之後，吸菸者患有食道癌的比值高於非吸菸者 8 倍以上。另外，飲酒量的增加也與食道癌呈正相關。調整了吸菸量之後，飲酒量最多的人患有食道癌的比值比飲酒量最少的人高22倍以上。這個模型裏的截距可以用下列的數學表達式來解釋： \\[ \\exp(\\hat{\\lambda^*}) = \\frac{\\text{Pr}(D = 1 | X = 0, \\text{ alcohol } &lt; 40 \\text{ g/d}, S = 1)}{\\text{Pr}(D = 0 | X = 0, \\text{ alcohol } &lt; 40 \\text{ g/d}, S = 1)} \\] 64.5.1.7 Mantel-Haenszel法計算的95%信賴區間和邏輯回歸模型給出的95%信賴區間估計相比有什麼不同？ 二者不完全一樣。使用Mantel-Haenszel法計算的信賴區間範圍更寬。 64.5.1.8 接下來嘗試使用Mantel-Haenszel法和邏輯回歸模型各自進一步調整年齡。請觀察年齡對吸菸和患有食道癌之間的關係有何影響。比較兩種方法獲得的信賴區間估計。 Mantel-Haenszel法 ## ## . use &quot;../backupfiles/oesophageal_data-1.dta&quot; ## ## . ## . gen tobacco_2 = . ## (976 missing values generated) ## ## . replace tobacco_2 = 0 if tobacco_group == 0 ## (264 real changes made) ## ## . replace tobacco_2 = 1 if tobacco_group &gt;= 1 ## (712 real changes made) ## ## . ## . mhodds case tobacco_2, by(alcohol_grp age_group) ## ## Maximum likelihood estimate of the odds ratio ## Comparing tobacco_2==1 vs. tobacco_2==0 ## by alcohol_grp age_group ## ## note: only 17 of the 24 strata formed in this analysis contribute ## information about the effect of the explanatory variable ## ## ------------------------------------------------------------------------------- ## alcoho~p age_gr~p | Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ## --------------------+---------------------------------------------------------- ## 0-39 gra 1 | . . . . . ## 0-39 gra 2 | . 0.74 0.3897 . . ## 0-39 gra 3 | . 0.53 0.4669 . . ## 0-39 gra 4 | . 5.97 0.0145 . . ## 0-39 gra 5 | . 3.44 0.0637 . . ## 0-39 gra 6 | . 3.11 0.0779 . . ## 40-79 gr 1 | . . . . . ## 40-79 gr 2 | . 1.52 0.2172 . . ## 40-79 gr 3 | 8.595238 5.47 0.0194 0.98028 75.36422 ## 40-79 gr 4 | . 7.06 0.0079 . . ## 40-79 gr 5 | 2.500000 1.10 0.2946 0.42406 14.73848 ## 40-79 gr 6 | . 1.10 0.2943 . . ## 80-119 g 1 | . . . . . ## 80-119 g 2 | . . . . . ## 80-119 g 3 | 4.631579 2.07 0.1504 0.46444 46.18758 ## 80-119 g 4 | 0.368421 0.73 0.3943 0.03362 4.03739 ## 80-119 g 5 | 1.714286 0.17 0.6778 0.13070 22.48431 ## 80-119 g 6 | . . . . . ## 120+ gra 1 | . 0.25 0.6171 . . ## 120+ gra 2 | . 0.67 0.4142 . . ## 120+ gra 3 | . . . . . ## 120+ gra 4 | . 7.34 0.0068 . . ## 120+ gra 5 | 0.000000 0.33 0.5637 . . ## 120+ gra 6 | . . . . . ## ------------------------------------------------------------------------------- ## ## Mantel-Haenszel estimate controlling for alcohol_grp and age_group ## ---------------------------------------------------------------- ## Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ## ---------------------------------------------------------------- ## 6.973912 31.04 0.0000 3.146924 15.454919 ## ---------------------------------------------------------------- ## ## Test of homogeneity of ORs (approx): chi2(16) = 21.16 ## Pr&gt;chi2 = 0.1725 ## ## . 邏輯回歸模型 M4 &lt;- glm(case ~ Tobacco_2 + as.factor(alcohol_grp) + as.factor(age_group), data = Oesophageal, family = binomial(link = logit)) summary(M4); jtools::summ(M4, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = case ~ Tobacco_2 + as.factor(alcohol_grp) + as.factor(age_group), ## family = binomial(link = logit), data = Oesophageal) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.064050 -0.552410 -0.246922 -0.059923 2.877670 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -7.67141 1.10729 -6.9281 4.266e-12 *** ## Tobacco_2SMker 1.96635 0.37410 5.2562 1.471e-07 *** ## as.factor(alcohol_grp)1 1.34978 0.24982 5.4029 6.557e-08 *** ## as.factor(alcohol_grp)2 1.86788 0.28402 6.5766 4.813e-11 *** ## as.factor(alcohol_grp)3 3.51255 0.38314 9.1679 &lt; 2.2e-16 *** ## as.factor(age_group)2 1.58061 1.08758 1.4533 0.1461325 ## as.factor(age_group)3 3.36320 1.04676 3.2130 0.0013138 ** ## as.factor(age_group)4 3.83362 1.04188 3.6795 0.0002337 *** ## as.factor(age_group)5 4.19618 1.04877 4.0010 6.306e-05 *** ## as.factor(age_group)6 4.37550 1.10517 3.9591 7.522e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 989.947 on 975 degrees of freedom ## Residual deviance: 686.554 on 966 degrees of freedom ## AIC: 706.554 ## ## Number of Fisher Scoring iterations: 7 Observations 976 Dependent variable case Type Generalized linear model Family binomial Link logit 𝛘²(9) 303.392825 Pseudo-R² (Cragg-Uhler) 0.419209 Pseudo-R² (McFadden) 0.306474 AIC 706.554486 BIC 755.389112 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.000466 0.000053 0.004082 -6.928093 0.000000 Tobacco_2SMker 7.144524 3.431918 14.873381 5.256174 0.000000 as.factor(alcohol_grp)1 3.856561 2.363465 6.292907 5.402894 0.000000 as.factor(alcohol_grp)2 6.474554 3.710671 11.297108 6.576602 0.000000 as.factor(alcohol_grp)3 33.533519 15.825306 71.056883 9.167852 0.000000 as.factor(age_group)2 4.857925 0.576369 40.944982 1.453329 0.146132 as.factor(age_group)3 28.881558 3.712057 224.712149 3.212957 0.001314 as.factor(age_group)4 46.229816 5.998900 356.264618 3.679524 0.000234 as.factor(age_group)5 66.431757 8.504718 518.909462 4.001039 0.000063 as.factor(age_group)6 79.479504 9.110343 693.386792 3.959127 0.000075 Standard errors: MLE 從模型計算的結果來看，兩種方法其實點估計和信賴區間的估計值都很接近。不會有相互矛盾的結果。另外，Mantel-Haenszel法的計算在即使有些表格沒有人數的情況下也能穩健地給出計算結果。事實上我們可以認爲當存在數據分佈過於稀少 (sparse data issue) 的時候，Mantel-Haenszel法可能會更加可靠。 計算結果也表明，調整了年齡和飲酒量之後，吸菸者和食道癌的比值比又略降至7.14。年齡對酒精攝入和食道癌的比值比影響似乎較小，年齡本身與食道癌呈極強的正相關。 64.5.1.9 其實飲酒量和年齡本身是可以作爲連續型預測變量放入模型裏。重新加載含有連續變量的數據 oesophageal_data-2.dta後，把分類變量至換成連續型變量重新擬合前一個問題的模型.嘗試理解兩種策略的不同及相同之處。 Oesophageal2 &lt;- read_dta(&quot;../backupfiles/oesophageal_data-2.dta&quot;) Oesophageal2 &lt;- Oesophageal2 %&gt;% mutate(Tobacco_2 = as.factor(tobacco_group)) %&gt;% mutate(Tobacco_2 = fct_collapse(Tobacco_2, NonSMker = &quot;0&quot;, SMker = c(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;))) M5 &lt;- glm(case ~ Tobacco_2 + age + alcohol, data = Oesophageal2, family = binomial(link = logit)) summary(M5); jtools::summ(M5, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = case ~ Tobacco_2 + age + alcohol, family = binomial(link = logit), ## data = Oesophageal2) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.091909 -0.587340 -0.308824 -0.098386 2.751818 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -8.2302252 0.6511441 -12.6396 &lt; 2.2e-16 *** ## Tobacco_2SMker 1.9275819 0.3663570 5.2615 1.429e-07 *** ## age 0.0646601 0.0081722 7.9122 2.528e-15 *** ## alcohol 0.0259834 0.0025424 10.2201 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 989.947 on 975 degrees of freedom ## Residual deviance: 702.994 on 972 degrees of freedom ## AIC: 710.994 ## ## Number of Fisher Scoring iterations: 6 Observations 976 Dependent variable case Type Generalized linear model Family binomial Link logit 𝛘²(3) 286.953775 Pseudo-R² (Cragg-Uhler) 0.399678 Pseudo-R² (McFadden) 0.289868 AIC 710.993536 BIC 730.527386 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.000266 0.000074 0.000955 -12.639638 0.000000 Tobacco_2SMker 6.872871 3.351927 14.092297 5.261485 0.000000 age 1.066796 1.049845 1.084021 7.912217 0.000000 alcohol 1.026324 1.021222 1.031451 10.220096 0.000000 Standard errors: MLE 相同之處是，這兩種分析手法都在說明一件事，吸菸本身和患食道癌是高度相關的，這個關係在調整了年齡，和飲酒量之後依然存在。不同之處在與比值比在年齡和飲酒量使用連續變量時似乎又縮水了一些。值得注意的是，在回歸模型中決定使用連續型變量的時候，需要特別小心如何處理這些連續型預測變量。上面的模型其實還增加了另一個默認的前提條件，就是年齡，飲酒量在這個模型中默認和患有食道癌的比值的對數 (log-odds of being a case) 呈線性關係。但是，現實情況下這樣的默認前提可能不能得到滿足。也就是說在現實中，預測變量和結果變量的對數比值的關係很可能不是線性的。事實上你看 M4 的分析結果，飲酒量最多的那組的比值比飆得非常高。飲酒量的變量很可能就不適合用簡單地連續型變量模式放入模型中。但是使用連續型變量的另一個潛在的優點是模型中需要估計的參數個數相對較少。後面的章節會仔細討論連續型變量的處理。 64.5.2 Part 2 64.5.2.1 在這部分的練習中，我們使用一個計算機模擬數據來觀察一下比值比的特徵。該數據只有三個二進制變量：x, y, w。 64.5.2.2 運用簡單的表格分析三個二進制變量之間可能存在的關係。 Log_prac &lt;- read_dta(&quot;../backupfiles/logistic_data_part2.dta&quot;) tab &lt;- stat.table(index=list(y = y, x = x), contents=list(count(), percent(x)), data=Log_prac, margins=TRUE) print(tab, digits = 2) ## -------------------------------- ## ------------x------------ ## y 0 1 Total ## -------------------------------- ## 0 1400.00 600.00 2000.00 ## 70.00 30.00 100.00 ## ## 1 600.00 1400.00 2000.00 ## 30.00 70.00 100.00 ## ## ## Total 2000.00 2000.00 4000.00 ## 50.00 50.00 100.00 ## -------------------------------- tab &lt;- stat.table(index=list(y = y, w = w), contents=list(count(), percent(w)), data=Log_prac, margins=TRUE) print(tab, digits = 2) ## -------------------------------- ## ------------w------------ ## y 0 1 Total ## -------------------------------- ## 0 600.00 1400.00 2000.00 ## 30.00 70.00 100.00 ## ## 1 1400.00 600.00 2000.00 ## 70.00 30.00 100.00 ## ## ## Total 2000.00 2000.00 4000.00 ## 50.00 50.00 100.00 ## -------------------------------- tab &lt;- stat.table(index=list(x = x, w = w), contents=list(count(), percent(w)), data=Log_prac, margins=TRUE) print(tab, digits = 2) ## -------------------------------- ## ------------w------------ ## x 0 1 Total ## -------------------------------- ## 0 1000.00 1000.00 2000.00 ## 50.00 50.00 100.00 ## ## 1 1000.00 1000.00 2000.00 ## 50.00 50.00 100.00 ## ## ## Total 2000.00 2000.00 4000.00 ## 50.00 50.00 100.00 ## -------------------------------- y 和 x, w 兩者都有較強的相關性，但是 x, w 之間好像相互獨立沒有關係。 64.5.2.3 計算下列比值比： y 的 x 條件邊際比值比 (marginal odds ratio for y given x)。 M6 &lt;- glm(y ~ x, data = Log_prac, family = binomial(link = logit)) jtools::summ(M6, digits = 6, confint = TRUE, exp = TRUE) Observations 4000 Dependent variable y Type Generalized linear model Family binomial Link logit 𝛘²(1) 658.263028 Pseudo-R² (Cragg-Uhler) 0.202317 Pseudo-R² (McFadden) 0.118709 AIC 4890.914416 BIC 4903.502516 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.428571 0.389483 0.471582 -17.364447 0.000000 x 5.444444 4.755707 6.232927 24.557037 0.000000 Standard errors: MLE 把數據分成兩個部分，一部分是 w = 0，令一部分 w = 1。分別計算各個部分數據裏 y 的 x 條件邊際比值比。 M7 &lt;- glm(y ~ x, data = Log_prac[Log_prac$w == 0,], family = binomial(link = logit)) jtools::summ(M7, digits = 6, confint = TRUE, exp = TRUE) Observations 2000 Dependent variable y Type Generalized linear model Family binomial Link logit 𝛘²(1) 406.996900 Pseudo-R² (Cragg-Uhler) 0.261072 Pseudo-R² (McFadden) 0.166566 AIC 2040.460308 BIC 2051.662113 exp(Est.) 2.5% 97.5% z val. p (Intercept) 1.000000 0.883416 1.131969 -0.000000 1.000000 x 9.000000 7.073152 11.451755 17.875268 0.000000 Standard errors: MLE M8 &lt;- glm(y ~ x, data = Log_prac[Log_prac$w == 1,], family = binomial(link = logit)) jtools::summ(M8, digits = 6, confint = TRUE, exp = TRUE) Observations 2000 Dependent variable y Type Generalized linear model Family binomial Link logit 𝛘²(1) 406.996900 Pseudo-R² (Cragg-Uhler) 0.261072 Pseudo-R² (McFadden) 0.166566 AIC 2040.460308 BIC 2051.662113 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.111111 0.090373 0.136608 -20.846420 0.000000 x 9.000000 7.073152 11.451755 17.875268 0.000000 Standard errors: MLE 數據在 w 變量分組中都得到了 OR = 9，的結果，說明 w 並非 x 與 y 之間關係的交互作用變量。 y 的 x 和 w 的條件比值比 M9 &lt;- glm(y ~ x + w, data = Log_prac, family = binomial(link = logit)) jtools::summ(M9, digits = 6, confint = TRUE, exp = TRUE) Observations 4000 Dependent variable y Type Generalized linear model Family binomial Link logit 𝛘²(2) 1472.256829 Pseudo-R² (Cragg-Uhler) 0.410570 Pseudo-R² (McFadden) 0.265502 AIC 4078.920616 BIC 4097.802765 exp(Est.) 2.5% 97.5% z val. p (Intercept) 1.000000 0.890953 1.122394 0.000000 1.000000 x 9.000000 7.590288 10.671532 25.279446 0.000000 w 0.111111 0.093707 0.131747 -25.279446 0.000000 Standard errors: MLE M9 的結果和預期的相同，調整了 w 之後，模型估計的 x 的比值比 OR = 9。和他們在 w 變量的各個分組數據的結果相同。 可以清楚的看到，沒調整 w 時，x 的比值比 OR = 5.44。但是 w 既不是 x, y 之間關係的混雜因子，也沒有有意義的交互作用。但是想要正確估計 x, y 之間的關係的話，不調整 w 計算獲得的比值比是錯誤的，這就是體現比值比不可壓縮性質的極好的例子。 References "],["GLM-strategy.html", "第 65 章 分析策略 65.1 明確分析目的 65.2 分析目的 1.1 – 估計 RCT 中治療效果 (treatment effect) 65.3 分析目的 1.2 – 估計流行病學研究中暴露變量和結果變量的關係 (exposure effect) 65.4 分析目的 2 和 3 – 建立預測模型 (predictive models) 65.5 GLM practical 09", " 第 65 章 分析策略 65.1 明確分析目的 作爲統計學家，着手分析數據之前，千萬記得，必須要制定一個儘可能詳盡的分析計劃。即使你的分析，可能並不一定受到第三方的監管或者調控，因爲同行評審的專家們，喜歡看到你分析的目的明確，假設檢驗的過程是經過仔細推敲的。同時，也可以避免陷入 “玩弄數據 (data dredging)” 指控的危險。 數據分析的目的，可以分成三大類： 估計一個或者幾個暴露變量，對結果變量的影響。以此目的的數據分析過程，需要我們有醫學偵探一樣的眼光和見解，從數據中判斷那些需要被調整和控制的混雜因子，從而提高你的分析效率。最常見的例子是分析隨機對照臨牀實驗 (RCT) 中，療效的差異；或者流行病學研究中，分析某種生活習慣，和疾病的發生或者死亡之間的關係。 在現有的數據庫中，尋找並且建立 “最佳” 模型。以此目的的數據分析，需要我們對模型中的結果變量有極爲深入的瞭解，把與之相關的所有要因，儘可能多的納入你的分析模型。常見的例子如，在某個特定人羣的數據庫中尋找並確定能夠決定自殺這一結果變量的決定性因素，之所以有這樣的目的，背後可能有決策者希望尋找這些決定性因素後採取一些對策從而達到改善現狀的最終目的。所以找到和結果變量相關的因素，是此類研究的重中之重。 建立預測模型。例如，某項研究的目的是爲了能夠建立一個能夠預測孕期胎兒患有唐氏綜合症的預測模型，用能夠測量的一些指標(如血液指標，或者母親的一些健康指標)，通過模型的算法，去計算胎兒患病的概率是多大。這樣的模型，對與診斷醫學有重大意義。所以，此類研究的目的，不是爲了尋找確定和胎兒患病相關的全部要因，而是怎樣才能提高模型預測的準確度，提高診斷的效率，減少錯誤診斷，拯救生命。 當然，上述目的中的 2 和 3 有時候易讓人混淆，因爲我們可能建立最佳模型，除了想要找到和 “自殺” 這一結果相關的所有要因，還可能希望通過該模型做出預測，尋找可能自殺的高危人羣，進行干預。這並不矛盾。 65.2 分析目的 1.1 – 估計 RCT 中治療效果 (treatment effect) 先揀最軟的柿子捏，RCT 的療效比較作爲數據分析的目的時，情況要比其他的目的相對簡單些。RCT 的隨機過程，確保了臨牀試驗不會受到混雜因素的影響。但是我們還會出於爲了提高統計分析效能，改善估計的精確度的目的，對參與臨牀試驗的受試者最初測量的一些特徵進行調整。當然，不是所有的數據專家，也不是所有的 RCT 實施者都同意進行這一調整的。如果確定要調整，放入模型中的變量，可能常常是一開始隨機分配時用到的那些用於將受試者分層歸類或者最小化 (minimisation) 的那些變量。 基線值調整 (baseline adjustment)，在結果變量爲連續型，同時模型是線性迴歸模型時，能夠顯著提高統計效能 (statistical efficiency)，降低估計值的標準誤。理論上，一個基線測量時的連續型變量，如果它和實驗後測量的連續型結果變量之間的 皮爾森相關係數 Pearson correlation coefficient 是 \\(r\\)，那麼如果你用 ANCOVA 模型調整了這個基線值的話，療效差異估計值的標準誤會是沒有調整時的 \\(\\sqrt{1-r^2}\\) 倍 (也就是永遠比不調整時要小，大大提高精確度，縮小療效差異估計值的 95% 信賴區間)。 但是，但是，但是！如果一個 RCT 測量的結果變量是一個二進制變量 (死亡/存活)，線性迴歸模型不適用，只能使用邏輯迴歸時，模型中加入和結果變量相關 (和暴露變量無關) 的基線值的做法对分析效能的提高顯得十分有限，相反還会受到邏輯迴歸的不可壓縮性較大的影響 (Section 63.3.2)。 再把之前講邏輯迴歸不可壓縮性時用过的例子拿过来这里解释这个现象： 表 51.1: Non-collapsibility of logit link in GLM (stratified data) Strata 1 Strata 2 Outcome Drug Placebo Drug Placebo Success 90 50 50 10 Failure 10 50 50 90 Total 100 100 100 100 Odds Ratios 9 9 上面的數據表示，分層變量 (Strata 1-2) 本身和使用藥物和安慰劑無交互作用，也和藥物使用與臨牀試驗結果之間的關係無關。但是，即使這個分類變量無關，壓縮後的數據計算獲得的比值比和分層時的比值比差異巨大： 表 51.2: Non-collapsibility of logit link in GLM (collapsed data) Outcome Drug Placebo Success 140 60 Failure 60 140 Total 200 200 Odds ratio 5.4 實際在 R 裏擬合邏輯迴歸模型的結果如下： ## ## Call: ## glm(formula = Result ~ Treatment, family = binomial(link = logit), ## data = RCT) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.5518 -0.8446 0.0000 0.8446 1.5518 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.84730 0.15430 5.4911 3.994e-08 *** ## TreatmentPlacebo -1.69460 0.21822 -7.7656 8.125e-15 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 554.518 on 399 degrees of freedom ## Residual deviance: 488.691 on 398 degrees of freedom ## AIC: 492.691 ## ## Number of Fisher Scoring iterations: 4 ## ## Call: ## glm(formula = Result ~ Treatment + Strata, family = binomial(link = logit), ## data = RCT) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.1460 -1.1774 0.0000 1.1774 2.1460 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 2.19722 0.26505 8.2898 &lt; 2.2e-16 *** ## TreatmentPlacebo -2.19722 0.27486 -7.9941 1.306e-15 *** ## Strata2 -2.19722 0.27486 -7.9941 1.306e-15 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 554.518 on 399 degrees of freedom ## Residual deviance: 407.292 on 397 degrees of freedom ## AIC: 413.292 ## ## Number of Fisher Scoring iterations: 4 從結果的迴歸係數估計和計算的標準誤來看，調整了其他的變量會引起： 使對數比值比的估計量升高 (這是由於模型的不可壓縮性) \\(1.69 \\rightarrow 2.19\\)； 對數比值比的標準誤估計升高 (非但不能增加估計精確度，反而起到了反作用) \\(0.22\\rightarrow0.27\\)； 對數比值比的統計檢驗量升高 (由於對數比值比的升高比標準誤升高的更多一些) \\(7.77\\rightarrow7.99\\)。 事實上，上面的現象在使用邏輯迴歸的時候基本上都會呈現。在經典論文 (L. D. Robinson and Jewell 1991) 中給出了詳細的論證。所以其實使用邏輯迴歸擬合數據的 RCT 臨牀試驗，我們可以推論，當模型中加入第三個僅和結果變量有關的基線共變量 (baseline covariates)，如果模型估計的對數比值比在調整前後變化不大 (即，不可壓縮性造成的影響很小)，那這樣的調整對於改善分析的統計效能上幾乎也沒有貢獻。(跟使用線性迴歸的 RCT 完全不同！) 由於邏輯迴歸受使用 \\(\\text{logit}\\) 鏈接方程時不可壓縮性的侷限，同時還由於使用 \\(\\text{log}\\) 鏈接方程時獲得的危險度比 (risk ratios) 比比值比 (odds ratios) 更加容易讓人理解，結果變量爲二進制的 RCT 臨牀試驗常常會選用 \\(\\text{log}\\) 鏈接方程的廣義線性迴歸模型 (見 Section 59.3 第 5 條討論)。選用 \\(\\text{log}\\) 鏈接方程的 GLM 最大的問題在於，當模型中加入過多的預測變量時，會導致模型無法收斂 (converge)–無法找到極大似然估計。 至於使用泊松迴歸模型的時候，預測變量如果放入不合理，那麼很容易違反泊松分佈的前提 (方差和均值相同)。對於違反了泊松分佈前提，模型變得過度離散 (over-dispersed) 的 GLM，加入適當的基線共變量 (baseline covariates) 則有助於減少模型的過度離散，減小參數估計的標準誤 (使之變得更精確些)。和線性迴歸相同的是，泊松迴歸模型不受不可壓縮性 (non-collapsibility) 的影響。 65.2.1 RCT 數據分析的一些不成熟的小建議 RCT 臨牀試驗通常都有嚴格的數據管理和監控，且統計分析計劃 (statistical analysis plan, SAP) 在任何一個 RCT 都已經是必須條件。除此之外，還要在試驗進行前就制訂所有詳細的計劃，並寫成實驗實施計劃文件，以供參與的所有人及倫理審查委員會等各種第三方機構的監督。所以，RCT 的統計分析計劃必須儘量考慮到所有的可能情況，因爲一旦開始了試驗，分析計劃是很難改動的。 SAP 必須詳細記錄哪些共變量需要被調整，常見的是實驗設計階段用於實施隨機化過程的那些特徵變量。對於連續型結果變量，(還有過度離散的計數型變量)，基線共變量的調整許多時候會有助於改善參數估計的精確度，提高統計效能。對於使用邏輯迴歸模型的試驗，調整基線共變量則沒有太多的好處，且調整後的比值比的含義會發生較大的改變，需慎重。 有些統計學家支持調整基線共變量，認爲這樣做有助於減少萬一隨機化不徹底造成的治療組和對照組之間隨機產生的殘差偏倚 (residual bias)，但是你無法提前欲知那些變量可能會產生隨機的殘差偏倚，這樣便無法在事先需要準備的SAP計劃文件中明確到底哪些基線變量需要被調整。 另有許多研究者喜歡在 RCT 中尋找交互作用的存在，但是他們常常忽略掉的一點是，一個 RCT 本身的檢驗效能是 80%-90%，其用於檢驗交互作用的效能會更低。建議在 RCT 中儘量少 (甚至不建議) 進行任何交互作用的統計檢驗。 65.3 分析目的 1.2 – 估計流行病學研究中暴露變量和結果變量的關係 (exposure effect) 前文討論的關於調整僅僅和結果變量相關 (與暴露變量無關) 的基線共變量的內容，同樣適用與一般的流行病學研究。流行病學研究中另一個 (應該是更加) 重要的點是，混雜因子的排查和調整。 實例： \\(Y\\) 標記結果變量，如嬰兒的出生體重； \\(X_1\\) 標記最主要的 (想要分析其與結果變量之間的關係的) 預測變量，如母親孕期高血壓 (是/否)； \\(X_2, X_3, \\cdots, X_Q\\) 標記其他非主要預測變量，但是可能是 \\(X_1, Y\\) 之間關係中重要的潛在混雜因子，如嬰兒的性別/母親孕前體重/嬰兒胎齡等等。 在這個簡單流行病學研究實例中，我們關心的問題包括： 主要暴露變量–孕期高血壓，和結果變量–嬰兒出生體重二者的未调整前 (粗) 關係 (crude/before adjustment association) 是什麼樣的？ 主要暴露變量和結果變量之間的關係是否被其他因素影響 (例如胎齡)？如果有，那麼調整後的關係會發生怎樣的變化？ 有沒有其他的變量會改變 (modify) 主要暴露變量和結果變量之間的關係？也就是，有沒有那個變量和主要暴露變量有交互作用？ 有沒有其他的變量和主要暴露變量無關，卻可能和結果變量有關係呢？如果存在這樣的變量，模型中調整它在一些情況下可能會改善擬合的結果提高模型的統計效能 (statistical power)。 收集的變量中，有沒有哪個變量可能是在主要暴露變量和結果變量之間因果關係 (如果存在因果關係的話) 的通路上 (on the causal pathway) 的呢？如果有，這樣的變量應該被認爲是媒介因子 (mediator)。 65.3.1 不成熟的小策略 這是很常見的簡單流行病學數據分析。可以按照 (但不一定非要按照) 下面建議的步驟實施統計分析： 第一步，分析主要暴露變量和結果變量之間的未調整前 (粗) 關係： \\[g\\{ E(Y|X_1) \\} = \\alpha + \\beta_1 X_1\\] 第二步，逐個分析其餘的變量和主要暴露變量之間的關係，以及這些潛在的混雜因子和結果變量之間的關係。注意，這一步可能耗時較長，但是它並不是決定模型中是否要加入某個或某些非主要暴露變量的步驟，通過這一步過程有助於我們分析和理解，進一步分析中調整前後的參數估計變化。 第三步，建立主要暴露變量和這些潛在混雜因子同時放入模型中的 GLM，逐步放入，一次放入一個 (one at a time) 潛在混雜因子，和上一步分析的三者之間的關係相結合，分析調整該潛在混雜因子前後，主要暴露變量的迴歸係數的參數估計變化的原因。 \\[g\\{ E(Y|X_1, X_k) \\} = \\alpha^* + \\beta_1^*X_1 + \\beta_kX_k,\\; k= 1,\\cdots,Q\\] 我們來分析這個可以從 Stata 網站上下載的數據： 第一步，先看看暴露變量和結果變量之間的關係 lbw &lt;- read_dta(&quot;http://www.stata-press.com/data/r12/lbw.dta&quot;) lbw$race &lt;- factor(lbw$race) lbw$smoke &lt;- factor(lbw$smoke) lbw$ht &lt;- factor(lbw$ht) a &lt;- Epi::stat.table(list(&quot;Birthweight &lt;2500g&quot; = low, &quot;History of hypertension&quot;=ht), list(count(),percent(low)), data = lbw, margins = TRUE) # We first tabulate the data print(a, digits = c(percent = 2)) ## -------------------------------------- ## -History of hypertension- ## Birthweight 0 1 Total ## &lt;2500g ## -------------------------------------- ## 0 125 5 130 ## 70.62 41.67 68.78 ## ## 1 52 7 59 ## 29.38 58.33 31.22 ## ## ## Total 177 12 189 ## 100.00 100.00 100.00 ## -------------------------------------- 第二步，分析母親高血壓病史和嬰兒低出生體重之間的調整前 (粗) 關係。 Model0 &lt;- glm(low~ht, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(Model0); epiDisplay::logistic.display(Model0) ## ## Call: ## glm(formula = low ~ ht, family = binomial(link = &quot;logit&quot;), data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.32323 -0.83407 -0.83407 1.56519 1.56519 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.87707 0.16502 -5.3150 1.066e-07 *** ## ht1 1.21354 0.60835 1.9948 0.04606 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 230.650 on 187 degrees of freedom ## AIC: 234.65 ## ## Number of Fisher Scoring iterations: 4 ## ## Logistic regression predicting low ## ## OR(95%CI) P(Wald&#39;s test) P(LR-test) ## ht: 1 vs 0 3.37 (1.02,11.09) 0.046 0.045 ## ## Log-likelihood = -115.3249 ## No. of observations = 189 ## AIC value = 234.6499 所以，數據提供了一些證據證明母親的高血壓病史和嬰兒低出生體重之間可能存在正關係，這個調整前的關係是，粗比值比 (crude odds ratio) 爲 3.37 (1.02, 11.09)。 接下來，分析潛在的混雜因子是否和主要暴露變量相關： # lwt is the last weight of mothers before pregnancy Model1 &lt;- lm(lwt ~ ht, data = lbw) summary(Model1); epiDisplay::regress.display(Model1) ## ## Call: ## lm(formula = lwt ~ ht, data = lbw) ## ## Residuals: ## Min 1Q Median 3Q Max ## -62.5000 -17.9435 -7.9435 10.0565 122.0565 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 127.9435 2.2390 57.1426 &lt; 2e-16 *** ## ht1 29.5565 8.8858 3.3262 0.00106 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 29.788 on 187 degrees of freedom ## Multiple R-squared: 0.05586, Adjusted R-squared: 0.050811 ## F-statistic: 11.064 on 1 and 187 DF, p-value: 0.0010596 ## Linear regression predicting lwt ## ## Coeff.(95%CI) P(t-test) P(F-test) ## ht: 1 vs 0 29.56 (12.03,47.09) 0.001 0.001 ## ## No. of observations = 189 可見，有高血壓病史的母親，孕前體重較高。再看其與結果變量是否有關係： Model2 &lt;- glm(low ~ lwt, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(Model2); epiDisplay::logistic.display(Model2) ## ## Call: ## glm(formula = low ~ lwt, family = binomial(link = &quot;logit&quot;), data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.09482 -0.90217 -0.80197 1.36105 1.98141 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.9957634 0.7852434 1.2681 0.20476 ## lwt -0.0140371 0.0061685 -2.2756 0.02287 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 228.708 on 187 degrees of freedom ## AIC: 232.708 ## ## Number of Fisher Scoring iterations: 4 ## ## Logistic regression predicting low ## ## OR(95%CI) P(Wald&#39;s test) P(LR-test) ## lwt (cont. var.) 0.99 (0.97,1) 0.023 0.015 ## ## Log-likelihood = -114.354 ## No. of observations = 189 ## AIC value = 232.7081 由此知，母親孕前體重較高的人，有較低的可能生下低出生體重的嬰兒。這兩個單獨的關係，各自看都具有 5% 的統計學意義，但是這 (或者其他變量分析的結果沒有統計學意義時) 並不是決定模型中是否加入母親孕前體重這一潛在的混雜因子的理由。接下來，我們通過模型中加入母親孕前體重這一變量前後模型的參數估計變化來分析： Model3 &lt;- glm(low ~ ht + lwt, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(Model3);epiDisplay::logistic.display(Model3) ## ## Call: ## glm(formula = low ~ ht + lwt, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.85912 -0.87274 -0.73845 1.29224 2.17964 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.4478621 0.8208975 1.7638 0.077773 . ## ht1 1.8544773 0.7008245 2.6461 0.008142 ** ## lwt -0.0186285 0.0065928 -2.8256 0.004720 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 221.165 on 186 degrees of freedom ## AIC: 227.165 ## ## Number of Fisher Scoring iterations: 4 ## ## Logistic regression predicting low ## ## crude OR(95%CI) adj. OR(95%CI) P(Wald&#39;s test) P(LR-test) ## ht: 1 vs 0 3.37 (1.02,11.09) 6.39 (1.62,25.23) 0.008 0.006 ## ## lwt (cont. var.) 0.99 (0.97,1) 0.98 (0.97,0.99) 0.005 0.002 ## ## Log-likelihood = -110.5827 ## No. of observations = 189 ## AIC value = 227.1654 加入了孕前體重的模型給出的母親是否有高血壓病史對嬰兒的低出生體重關係的比值比估計爲 \\(6.39\\)，這很明顯比調整孕前體重前的粗比值比 \\((3.37)\\) 大了很多。這個比值比估計的變化有兩個原因： (常被忽略的) 邏輯迴歸模型的不可壓縮性導致的； 母親孕前體重對高血壓病史和嬰兒的低出生體重之間的關係造成了混雜效應。 上面的分析結果告訴我們，該數據提供了足夠的證據證明母親孕前體重和是否有高血壓病史，在調整了彼此之後，仍然獨立地和嬰兒低出生體重的發生有相關性。這裏，我們可以下結論認爲，模型中加入母親孕前體重作爲混雜因子，是合情合理的。 完成了目前爲止的初步分析和混雜因子的判斷以後，下一階段的分析側重於尋找有沒有任何第三方的預測變量，會對主要暴露變量 \\(X_1\\) (孕期高血壓) 與結果變量 \\(Y\\) (嬰兒出生體重過低) 之間的關係產生交互作用。如果數據中的預測變量有多個，那可能導致需要分析潛在的交互作用有許多對，通常建議在遇到多個預測變量之間的複雜關係需要討論的時候，建議不要一股腦全部作交互作用的分析，而是限定一個或者幾個最有可能有交互作用的變量就可以了。否則模型過於複雜，反而不利於理解。一般生物醫學的統計分析中考慮的重要交互作用分析，需要有重要的生物學意義，常見的例子是年齡，性別等。 本節使用的例子中，令人感興趣的是，母親的孕前體重，會不會對妊娠高血壓的有無與嬰兒出生體重過低之間的關係造成交互作用： Model4 &lt;- glm(low ~ ht*lwt, family = binomial(link = &quot;logit&quot;), data = lbw) summary(Model4); epiDisplay::logistic.display(Model4) ## ## Call: ## glm(formula = low ~ ht * lwt, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.77338 -0.87349 -0.74658 1.28246 2.20403 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.5393115 0.9174755 1.6778 0.093392 . ## ht1 1.2869895 2.5493528 0.5048 0.613678 ## lwt -0.0193796 0.0074129 -2.6143 0.008941 ** ## ht1:lwt 0.0037324 0.0161735 0.2308 0.817490 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 221.113 on 185 degrees of freedom ## AIC: 229.113 ## ## Number of Fisher Scoring iterations: 4 ## ## Logistic regression predicting low ## ## crude OR(95%CI) adj. OR(95%CI) P(Wald&#39;s test) P(LR-test) ## ht: 1 vs 0 3.37 (1.02,11.09) 3.62 (0.02,535.73) 0.614 0.605 ## ## lwt (cont. var.) 0.99 (0.97,1) 0.98 (0.97,1) 0.009 &lt; 0.001 ## ## ht1:lwt - 1.0037 (0.9724,1.0361) 0.817 0.819 ## ## Log-likelihood = -110.5567 ## No. of observations = 189 ## AIC value = 229.1133 由於交互作用項結果爲 ht1:lwt 0.003732 0.016173 0.231 0.81749，無足夠的證據證明孕前體重會對妊娠高血壓和嬰兒出生體重過低之間的關係造成交互作用。 如果確認沒有交互作用，建立本例最終模型前的幾個建議： 最終分析 \\(X_1, Y\\) 之間關係的模型，需要加入我們逐一甄別之後確認過的混淆因子，此時稱爲模型 1； 對於確認不是 \\(X_1, Y\\) 之間關係的混淆因子的那些剩餘變量，逐一加入模型 1，比較前後是否模型中各個混淆因子的參數估計是否發生了變化 (有沒有混淆因子的混淆因子？)； 最終模型中的變量，需要包含前兩步確認過的全部混淆因子； 在報告中把調整前後的參數估計整理成表格。 如果在分析過程中發現了有重要意義的交互作用，那麼除了包含全部的混淆因子之外，你的最終模型中還需加入重要的交互作用項。此時需要報告的參數估計是有交互作用項部分的分層比值比/其他指標。 65.3.2 補充 除了使用二項分佈的邏輯迴歸之外，當結果變量是連續型或者計數型，也就是分析模型使用線性迴歸 (ANCOVA)，或者 (可能過度離散的) 泊松迴歸時，爲了提高模型的統計效能，減小參數估計的標準誤，模型可以選擇進一步調整一個或幾個只和結果變量有關的基線變量。此時，在你寫論文或者報告時，必須把這些變量和確認是混雜因子的變量加以區分，因爲加它們進入模型的目的不同。 65.4 分析目的 2 和 3 – 建立預測模型 (predictive models) 建立預測模型的過程，其實就是選擇哪個或者那些變量進入模型的過程。方法有很多，可惜的是，沒有哪種是公認完美的。這裏只介紹兩種最常見，也最常被批評的方法 – 前/後 逐步選擇法 (forward stepwise selection/backward elimination)。強調一下，逐步法本身並不是神奇法術，不同的算法選擇的變量自然會有不同，如果你用了逐步選擇法，選出來的模型變量僅僅只能作爲參考，而不能作爲最終結論。 vitc &lt;- haven::read_dta(&quot;../backupfiles/vitC.dta&quot;) vitc$ctakers &lt;- factor(vitc$ctakers) vitc$sex &lt;- factor(vitc$sex) stats::step(lm(seruvitc~1,data=vitc[complete.cases(vitc),]),direction=&quot;forward&quot;,scope=~age+height+weight+sex+cigs+ctakers) ## Start: AIC=575.43 ## seruvitc ~ 1 ## ## Df Sum of Sq RSS AIC ## + ctakers 1 6967.43 42659.6 563.663 ## + sex 1 3688.53 45938.5 570.402 ## + cigs 1 2470.90 47156.1 572.783 ## + height 1 1243.73 48383.3 575.121 ## &lt;none&gt; 49627.0 575.430 ## + age 1 273.59 49353.4 576.927 ## + weight 1 1.53 49625.5 577.427 ## ## Step: AIC=563.66 ## seruvitc ~ ctakers ## ## Df Sum of Sq RSS AIC ## + sex 1 2713.526 39946.0 559.683 ## + cigs 1 2150.581 40509.0 560.956 ## + height 1 1049.000 41610.6 563.398 ## &lt;none&gt; 42659.6 563.663 ## + age 1 247.944 42411.6 565.133 ## + weight 1 18.227 42641.3 565.625 ## ## Step: AIC=559.68 ## seruvitc ~ ctakers + sex ## ## Df Sum of Sq RSS AIC ## + cigs 1 1527.704 38418.3 558.134 ## &lt;none&gt; 39946.0 559.683 ## + weight 1 445.296 39500.7 560.663 ## + age 1 183.277 39762.8 561.264 ## + height 1 131.722 39814.3 561.382 ## ## Step: AIC=558.13 ## seruvitc ~ ctakers + sex + cigs ## ## Df Sum of Sq RSS AIC ## &lt;none&gt; 38418.3 558.134 ## + weight 1 257.1523 38161.2 559.523 ## + age 1 205.2889 38213.0 559.647 ## + height 1 58.2745 38360.1 559.996 ## ## Call: ## lm(formula = seruvitc ~ ctakers + sex + cigs, data = vitc[complete.cases(vitc), ## ]) ## ## Coefficients: ## (Intercept) ctakers1 sex1 cigs ## 46.0283 19.8317 9.7642 -12.2550 stats::step(lm(seruvitc~.,data=vitc[complete.cases(vitc),]),direction=&quot;backward&quot;) ## Start: AIC=563.38 ## seruvitc ~ serial + age + height + cigs + weight + sex + ctakers ## ## Df Sum of Sq RSS AIC ## - height 1 1.48 37272.5 561.379 ## - age 1 64.18 37335.2 561.532 ## - weight 1 174.65 37445.7 561.801 ## - serial 1 808.36 38079.4 563.328 ## &lt;none&gt; 37271.1 563.375 ## - cigs 1 979.26 38250.3 563.735 ## - sex 1 1123.50 38394.6 564.078 ## - ctakers 1 6407.24 43678.3 575.811 ## ## Step: AIC=561.38 ## seruvitc ~ serial + age + cigs + weight + sex + ctakers ## ## Df Sum of Sq RSS AIC ## - age 1 65.27 37337.8 559.538 ## - weight 1 217.51 37490.0 559.908 ## - serial 1 807.51 38080.1 561.329 ## &lt;none&gt; 37272.5 561.379 ## - cigs 1 977.97 38250.5 561.736 ## - sex 1 2584.37 39856.9 565.479 ## - ctakers 1 6442.37 43714.9 573.887 ## ## Step: AIC=559.54 ## seruvitc ~ serial + cigs + weight + sex + ctakers ## ## Df Sum of Sq RSS AIC ## - weight 1 366.60 37704.4 558.427 ## - serial 1 823.37 38161.2 559.523 ## &lt;none&gt; 37337.8 559.538 ## - cigs 1 944.21 38282.0 559.811 ## - sex 1 2816.28 40154.1 564.155 ## - ctakers 1 6462.15 43800.0 572.064 ## ## Step: AIC=558.43 ## seruvitc ~ serial + cigs + sex + ctakers ## ## Df Sum of Sq RSS AIC ## - serial 1 713.92 38418.3 558.134 ## &lt;none&gt; 37704.4 558.427 ## - cigs 1 1156.10 38860.5 559.176 ## - sex 1 2451.95 40156.4 562.161 ## - ctakers 1 6385.14 44089.5 570.664 ## ## Step: AIC=558.13 ## seruvitc ~ cigs + sex + ctakers ## ## Df Sum of Sq RSS AIC ## &lt;none&gt; 38418.3 558.134 ## - cigs 1 1527.70 39946.0 559.683 ## - sex 1 2090.65 40509.0 560.956 ## - ctakers 1 5841.01 44259.3 569.014 ## ## Call: ## lm(formula = seruvitc ~ cigs + sex + ctakers, data = vitc[complete.cases(vitc), ## ]) ## ## Coefficients: ## (Intercept) cigs sex1 ctakers1 ## 46.0283 -12.2550 9.7642 19.8317 65.5 GLM practical 09 在本次練習中，我們將嘗試使用多個不同的分析策略分析前文中使用過的低體重數據。 65.5.1 Part 1 第一部分，假設我們的主要研究目的是想要知道，在儘可能多的考慮所有潛在的混雜因子之後，患有孕期高血壓的孕婦是否和低出生體重嬰兒的誕生有關。 65.5.1.1 在你熟悉的統計分析軟件中載入該數據，重複前文中做過的分析，即調查母親的體重是否對主要分析的高血壓和低出生體重嬰兒之間關係造成混雜。在模型中加入他們的交互作用項試以分析。 lbw &lt;- read_dta(&quot;../backupfiles/lbw.dta&quot;) a &lt;- Epi::stat.table(list(&quot;Birthweight &lt;2500g&quot; = low, &quot;History of hypertension&quot;=ht), list(count(),percent(low)), data = lbw, margins = TRUE) # We first tabulate the data print(a, digits = c(percent = 2)) ## -------------------------------------- ## -History of hypertension- ## Birthweight 0 1 Total ## &lt;2500g ## -------------------------------------- ## 0 125 5 130 ## 70.62 41.67 68.78 ## ## 1 52 7 59 ## 29.38 58.33 31.22 ## ## ## Total 177 12 189 ## 100.00 100.00 100.00 ## -------------------------------------- # get the un-adjusted odds ratios for the association # between maternal hypertension and low birth weight M0 &lt;- glm(low ~ ht, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M0); jtools::summ(M0, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ ht, family = binomial(link = &quot;logit&quot;), data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.32323 -0.83407 -0.83407 1.56519 1.56519 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.87707 0.16502 -5.3150 1.066e-07 *** ## ht 1.21354 0.60835 1.9948 0.04606 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 230.650 on 187 degrees of freedom ## AIC: 234.65 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(1) 4.022134 Pseudo-R² (Cragg-Uhler) 0.029611 Pseudo-R² (McFadden) 0.017139 AIC 234.649863 BIC 241.133357 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.416000 0.301044 0.574852 -5.315016 0.000000 ht 3.365385 1.021427 11.088221 1.994814 0.046063 Standard errors: MLE # get the association between maternal weight and hypertension M.linear &lt;- lm(lwt ~ ht, data = lbw) summary(M.linear); jtools::summ(M.linear, confint = TRUE, digits = 6) ## ## Call: ## lm(formula = lwt ~ ht, data = lbw) ## ## Residuals: ## Min 1Q Median 3Q Max ## -62.5000 -17.9435 -7.9435 10.0565 122.0565 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 127.9435 2.2390 57.1426 &lt; 2e-16 *** ## ht 29.5565 8.8858 3.3262 0.00106 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 29.788 on 187 degrees of freedom ## Multiple R-squared: 0.05586, Adjusted R-squared: 0.050811 ## F-statistic: 11.064 on 1 and 187 DF, p-value: 0.0010596 Observations 189 Dependent variable lwt Type OLS linear regression F(1,187) 11.063918 R² 0.055860 Adj. R² 0.050811 Est. 2.5% 97.5% t val. p (Intercept) 127.943503 123.526516 132.360489 57.142604 0.000000 ht 29.556497 12.027125 47.085869 3.326247 0.001060 Standard errors: OLS # get the association between maternal weight and low birth weight M1 &lt;- glm(low ~ lwt, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M1); jtools::summ(M1, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ lwt, family = binomial(link = &quot;logit&quot;), data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.09482 -0.90217 -0.80197 1.36105 1.98141 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.9957634 0.7852434 1.2681 0.20476 ## lwt -0.0140371 0.0061685 -2.2756 0.02287 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 228.708 on 187 degrees of freedom ## AIC: 232.708 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(1) 5.963938 Pseudo-R² (Cragg-Uhler) 0.043683 Pseudo-R² (McFadden) 0.025414 AIC 232.708058 BIC 239.191552 exp(Est.) 2.5% 97.5% z val. p (Intercept) 2.706790 0.580837 12.614062 1.268095 0.204764 lwt 0.986061 0.974211 0.998055 -2.275604 0.022870 Standard errors: MLE # get the association between maternal hypertension and # low birth weight adjusted for maternal weight M2 &lt;- glm(low ~ lwt + ht, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M2); jtools::summ(M2, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ lwt + ht, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.85912 -0.87274 -0.73845 1.29224 2.17964 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.4478621 0.8208975 1.7638 0.077773 . ## lwt -0.0186285 0.0065928 -2.8256 0.004720 ** ## ht 1.8544773 0.7008245 2.6461 0.008142 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 221.165 on 186 degrees of freedom ## AIC: 227.165 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(2) 13.506547 Pseudo-R² (Cragg-Uhler) 0.096991 Pseudo-R² (McFadden) 0.057555 AIC 227.165449 BIC 236.890690 exp(Est.) 2.5% 97.5% z val. p (Intercept) 4.254010 0.851235 21.259240 1.763755 0.077773 lwt 0.981544 0.968942 0.994309 -2.825577 0.004720 ht 6.388358 1.617508 25.230866 2.646137 0.008142 Standard errors: MLE lrtest(M2, M0) ## Likelihood ratio test ## ## Model 1: low ~ lwt + ht ## Model 2: low ~ ht ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 3 -110.583 ## 2 2 -115.325 -1 9.48441 0.0020722 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## we see that odds ratio for the association between ## maternal hypertension and low birth weight after ## adjustment for mother&#39;s weight. Clear evidence of ## confounding. # fit the model with interaction term M3 &lt;- glm(low ~ lwt*ht, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M3); jtools::summ(M3, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ lwt * ht, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.77338 -0.87349 -0.74658 1.28246 2.20403 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.5393115 0.9174755 1.6778 0.093392 . ## lwt -0.0193796 0.0074129 -2.6143 0.008941 ** ## ht 1.2869895 2.5493528 0.5048 0.613678 ## lwt:ht 0.0037324 0.0161735 0.2308 0.817490 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 221.113 on 185 degrees of freedom ## AIC: 229.113 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(3) 13.558683 Pseudo-R² (Cragg-Uhler) 0.097352 Pseudo-R² (McFadden) 0.057777 AIC 229.113313 BIC 242.080301 exp(Est.) 2.5% 97.5% z val. p (Intercept) 4.661380 0.771894 28.149527 1.677768 0.093392 lwt 0.980807 0.966660 0.995161 -2.614315 0.008941 ht 3.621866 0.024486 535.729382 0.504830 0.613678 lwt:ht 1.003739 0.972420 1.036067 0.230774 0.817490 Standard errors: MLE ## No evidence of an interaction. 65.5.1.2 把前一步中擬合過的模型的母親體重變量替換爲母親的年齡。你有怎樣的結論？ # get the association between age and hypertension M.linear &lt;- lm(age ~ ht, data = lbw) summary(M.linear); jtools::summ(M.linear, confint = TRUE, digits = 6) ## ## Call: ## lm(formula = age ~ ht, data = lbw) ## ## Residuals: ## Min 1Q Median 3Q Max ## -9.25989 -4.25989 -0.25989 2.74011 21.74011 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 23.25989 0.39929 58.2536 &lt;2e-16 *** ## ht -0.34322 1.58462 -0.2166 0.8288 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 5.3122 on 187 degrees of freedom ## Multiple R-squared: 0.00025081, Adjusted R-squared: -0.0050954 ## F-statistic: 0.046913 on 1 and 187 DF, p-value: 0.82876 Observations 189 Dependent variable age Type OLS linear regression F(1,187) 0.046913 R² 0.000251 Adj. R² -0.005095 Est. 2.5% 97.5% t val. p (Intercept) 23.259887 22.472202 24.047572 58.253639 0.000000 ht -0.343220 -3.469247 2.782806 -0.216595 0.828760 Standard errors: OLS M1.1 &lt;- glm(low ~ age, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M1.1); jtools::summ(M1.1, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ age, family = binomial(link = &quot;logit&quot;), data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.04024 -0.90182 -0.77544 1.41191 1.77999 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.384582 0.732125 0.5253 0.5994 ## age -0.051153 0.031514 -1.6232 0.1045 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 231.912 on 187 degrees of freedom ## AIC: 235.912 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(1) 2.760038 Pseudo-R² (Cragg-Uhler) 0.020387 Pseudo-R² (McFadden) 0.011761 AIC 235.911958 BIC 242.395452 exp(Est.) 2.5% 97.5% z val. p (Intercept) 1.469000 0.349813 6.168898 0.525296 0.599378 age 0.950133 0.893223 1.010669 -1.623194 0.104548 Standard errors: MLE M1.2 &lt;- glm(low ~ age + ht, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M1.2); jtools::summ(M1.2, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ age + ht, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.41416 -0.88874 -0.74591 1.40428 1.77486 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.304977 0.741987 0.4110 0.6811 ## age -0.051504 0.031938 -1.6126 0.1068 ## ht 1.214791 0.612127 1.9845 0.0472 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 227.927 on 186 degrees of freedom ## AIC: 233.927 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(2) 6.745090 Pseudo-R² (Cragg-Uhler) 0.049303 Pseudo-R² (McFadden) 0.028743 AIC 233.926906 BIC 243.652147 exp(Est.) 2.5% 97.5% z val. p (Intercept) 1.356594 0.316862 5.808050 0.411028 0.681052 age 0.949800 0.892168 1.011156 -1.612604 0.106831 ht 3.369591 1.015158 11.184607 1.984541 0.047196 Standard errors: MLE lrtest(M0, M1.2) ## Likelihood ratio test ## ## Model 1: low ~ ht ## Model 2: low ~ age + ht ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 2 -115.325 ## 2 3 -113.963 1 2.72296 0.098915 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 M1.3 &lt;- glm(low ~ age*ht, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M1.3); jtools::summ(M1.3, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ age * ht, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.52114 -0.89947 -0.72614 1.39913 1.82235 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.560224 0.770466 0.7271 0.46715 ## age -0.062810 0.033417 -1.8796 0.06017 . ## ht -4.269768 4.195117 -1.0178 0.30878 ## age:ht 0.242368 0.187151 1.2950 0.19531 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 225.661 on 185 degrees of freedom ## AIC: 233.661 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(3) 9.010600 Pseudo-R² (Cragg-Uhler) 0.065472 Pseudo-R² (McFadden) 0.038397 AIC 233.661396 BIC 246.628384 exp(Est.) 2.5% 97.5% z val. p (Intercept) 1.751064 0.386795 7.927273 0.727123 0.467150 age 0.939122 0.879583 1.002690 -1.879560 0.060168 ht 0.013985 0.000004 52.065896 -1.017795 0.308776 age:ht 1.274263 0.882989 1.838919 1.295037 0.195308 Standard errors: MLE 並無證據提示年齡是孕期高血壓和低出生體重之間的關係的混雜因子 (confounder)，也沒有證據表明年齡對該關係有交互作用。 65.5.1.3 分析吸菸史是否對孕期高血壓和低出生體重之間的關係有混雜作用 (confounding effect)。注意這裏吸菸史是一個二進制變量。 M2.1 &lt;- glm(ht ~ smoke, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M2.1); jtools::summ(M2.1, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = ht ~ smoke, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -0.37406 -0.37406 -0.35440 -0.35440 2.36602 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -2.73622 0.39002 -7.0156 2.289e-12 *** ## smoke 0.11155 0.60548 0.1842 0.8538 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 89.3856 on 188 degrees of freedom ## Residual deviance: 89.3519 on 187 degrees of freedom ## AIC: 93.3519 ## ## Number of Fisher Scoring iterations: 5 Observations 189 Dependent variable ht Type Generalized linear model Family binomial Link logit 𝛘²(1) 0.033747 Pseudo-R² (Cragg-Uhler) 0.000474 Pseudo-R² (McFadden) 0.000378 AIC 93.351859 BIC 99.835353 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.064815 0.030178 0.139206 -7.015634 0.000000 smoke 1.118012 0.341241 3.662956 0.184238 0.853827 Standard errors: MLE ## here both the exposure of interest and the potential confounder ## are confounder are binary, so we need to use logistic regression ## (not linear regression) to explore the relationship between them. ## In the logistic regression model either of the two variables ## could be the dependent variable. M2.2 &lt;- glm(low ~ smoke, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M2.2); jtools::summ(M2.2, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ smoke, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.01968 -0.76235 -0.76235 1.34378 1.65990 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.08705 0.21473 -5.0623 4.142e-07 *** ## smoke 0.70406 0.31964 2.2026 0.02762 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 229.805 on 187 degrees of freedom ## AIC: 233.805 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(1) 4.867397 Pseudo-R² (Cragg-Uhler) 0.035754 Pseudo-R² (McFadden) 0.020741 AIC 233.804600 BIC 240.288094 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.337209 0.221370 0.513667 -5.062322 0.000000 smoke 2.021944 1.080660 3.783111 2.202647 0.027620 Standard errors: MLE M2.3 &lt;- glm(low ~ smoke + ht, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M2.3); jtools::summ(M2.3, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ smoke + ht, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.51383 -0.73245 -0.73245 1.38100 1.70116 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.17873 0.22319 -5.2813 1.283e-07 *** ## smoke 0.71187 0.32365 2.1995 0.02784 * ## ht 1.23005 0.61765 1.9915 0.04643 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 225.792 on 186 degrees of freedom ## AIC: 231.792 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(2) 8.880061 Pseudo-R² (Cragg-Uhler) 0.064545 Pseudo-R² (McFadden) 0.037840 AIC 231.791935 BIC 241.517177 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.307668 0.198656 0.476499 -5.281299 0.000000 smoke 2.037802 1.080606 3.842877 2.199486 0.027843 ht 3.421389 1.019665 11.480150 1.991493 0.046427 Standard errors: MLE lrtest(M2.3, M0) ## Likelihood ratio test ## ## Model 1: low ~ smoke + ht ## Model 2: low ~ ht ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 3 -112.896 ## 2 2 -115.325 -1 4.85793 0.027519 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 M2.4 &lt;- glm(low ~ smoke*ht, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M2.4); jtools::summ(M2.4, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ smoke * ht, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.35373 -0.72566 -0.72566 1.36987 1.71070 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.19996 0.22814 -5.2598 1.442e-07 *** ## smoke 0.75813 0.33600 2.2564 0.02405 * ## ht 1.48765 0.79711 1.8663 0.06200 . ## smoke:ht -0.64035 1.23675 -0.5178 0.60462 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 225.527 on 185 degrees of freedom ## AIC: 233.527 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(3) 9.144894 Pseudo-R² (Cragg-Uhler) 0.066424 Pseudo-R² (McFadden) 0.038969 AIC 233.527102 BIC 246.494090 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.301205 0.192605 0.471038 -5.259761 0.000000 smoke 2.134286 1.104716 4.123392 2.256359 0.024048 ht 4.426667 0.928062 21.114292 1.866305 0.061999 smoke:ht 0.527108 0.046685 5.951510 -0.517766 0.604622 Standard errors: MLE 模型結果和似然比檢驗的結果提示孕婦的吸菸史與低出生體重有關。但是調整了吸菸史並不太改變孕期高血壓和低出生體重之間的比值比 OR。這主要是因爲吸菸史和孕期高血壓之間沒有太多關係。所以，孕婦的吸菸史似乎不太需要被認定爲混雜因子，也沒有明顯的交互作用。 65.5.1.4 分析人種 (race) 是否有混雜效應。注意這裏人種變量的分類多於兩個。 M3.1 &lt;- glm(ht ~ as.factor(race), data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M3.1); jtools::summ(M3.1, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = ht ~ as.factor(race), family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -0.49518 -0.35088 -0.32707 -0.32707 2.43101 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -2.90142 0.45932 -6.3168 2.67e-10 *** ## as.factor(race)2 0.86454 0.76667 1.1277 0.2595 ## as.factor(race)3 0.14458 0.69054 0.2094 0.8342 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 89.3856 on 188 degrees of freedom ## Residual deviance: 88.1841 on 186 degrees of freedom ## AIC: 94.1841 ## ## Number of Fisher Scoring iterations: 5 Observations 189 Dependent variable ht Type Generalized linear model Family binomial Link logit 𝛘²(2) 1.201470 Pseudo-R² (Cragg-Uhler) 0.016816 Pseudo-R² (McFadden) 0.013441 AIC 94.184136 BIC 103.909377 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.054945 0.022333 0.135177 -6.316796 0.000000 as.factor(race)2 2.373913 0.528291 10.667355 1.127653 0.259466 as.factor(race)3 1.155556 0.298542 4.472772 0.209375 0.834155 Standard errors: MLE ## Here the potential confounder is a 3-level categorical ## variable so we need to treat this as the predictor ## variable when exploring its relationship with the ## exposure of interest. The exposure of interest is ## binary, so we need to use logistic regression. M3.2 &lt;- glm(low ~ as.factor(race), data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M3.2); jtools::summ(M3.2, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ as.factor(race), family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.04885 -0.96646 -0.74012 1.40415 1.69048 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.15497 0.23912 -4.8301 1.364e-06 *** ## as.factor(race)2 0.84481 0.46341 1.8230 0.0683 . ## as.factor(race)3 0.63617 0.34783 1.8290 0.0674 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 229.662 on 186 degrees of freedom ## AIC: 235.662 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(2) 5.010366 Pseudo-R² (Cragg-Uhler) 0.036791 Pseudo-R² (McFadden) 0.021351 AIC 235.661630 BIC 245.386871 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.315068 0.197183 0.503433 -4.830132 0.000001 as.factor(race)2 2.327536 0.938507 5.772384 1.823014 0.068301 as.factor(race)3 1.889234 0.955458 3.735596 1.828968 0.067404 Standard errors: MLE M3.3 &lt;- glm(low ~ as.factor(race) + ht, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M3.3); jtools::summ(M3.3, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ as.factor(race) + ht, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.49520 -0.93846 -0.71605 1.37141 1.72429 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.23023 0.24546 -5.0119 5.389e-07 *** ## as.factor(race)2 0.78492 0.47086 1.6670 0.09552 . ## as.factor(race)3 0.63830 0.35122 1.8174 0.06916 . ## ht 1.16712 0.61857 1.8868 0.05919 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 226.061 on 185 degrees of freedom ## AIC: 234.061 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(3) 8.610811 Pseudo-R² (Cragg-Uhler) 0.062633 Pseudo-R² (McFadden) 0.036693 AIC 234.061185 BIC 247.028173 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.292226 0.180627 0.472775 -5.011923 0.000001 as.factor(race)2 2.192239 0.871142 5.516795 1.666990 0.095516 as.factor(race)3 1.893265 0.951153 3.768532 1.817376 0.069160 ht 3.212725 0.955750 10.799480 1.886797 0.059188 Standard errors: MLE lrtest(M3.3, M0) ## Likelihood ratio test ## ## Model 1: low ~ as.factor(race) + ht ## Model 2: low ~ ht ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 4 -113.031 ## 2 2 -115.325 -2 4.58868 0.10083 M3.4 &lt;- glm(low ~ as.factor(race)*ht, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M3.4); jtools::summ(M3.4, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ as.factor(race) * ht, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.66511 -0.92689 -0.72438 1.36987 1.71250 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.20397 0.24881 -4.8390 1.305e-06 *** ## as.factor(race)2 0.76214 0.49441 1.5415 0.1232 ## as.factor(race)3 0.58144 0.36297 1.6019 0.1092 ## ht 0.79851 0.94617 0.8439 0.3987 ## as.factor(race)2:ht 0.33647 1.60555 0.2096 0.8340 ## as.factor(race)3:ht 0.92263 1.51605 0.6086 0.5428 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 225.670 on 183 degrees of freedom ## AIC: 237.67 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(5) 9.001675 Pseudo-R² (Cragg-Uhler) 0.065408 Pseudo-R² (McFadden) 0.038359 AIC 237.670321 BIC 257.120803 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.300000 0.184220 0.488546 -4.838993 0.000001 as.factor(race)2 2.142857 0.813108 5.647269 1.541504 0.123194 as.factor(race)3 1.788618 0.878121 3.643181 1.601891 0.109180 ht 2.222222 0.347861 14.196098 0.843937 0.398705 as.factor(race)2:ht 1.400000 0.060185 32.566497 0.209569 0.834004 as.factor(race)3:ht 2.515909 0.128893 49.108965 0.608577 0.542805 Standard errors: MLE 我們發現一些比較弱的證據似乎認爲不同人種可能和低出生體重有關，儘管這個關係並無統計學意義。調整了人種之後，孕期高血壓的比值比 OR 變小了一點點 (從3.37 降到 3.21)。所以，調整人種恐怕並沒有太多的意義。也應該沒有交互作用。 65.5.1.5 用相似的方法試分析子宮痙攣 (uterine irritability) 是否是混雜因子，有沒有可疑的交互作用？ a &lt;- stat.table(list(&quot;History of Hypertension&quot; = ht, &quot;Uterine Irritability&quot; = ui), list(count(),percent(low)), data = lbw, margins = TRUE) # We first tabulate the data # There is a strong observed association here. # The Zero in the contingency table means # that fitting a logistic regression model # will be uninformative, with subjects in one # predictor variable category being dropped print(a, digits = c(percent = 2)) ## --------------------------------------- ## --Uterine Irritability--- ## History of 0 1 Total ## Hypertension ## --------------------------------------- ## 0 149 28 177 ## 100.00 100.00 100.00 ## ## 1 12 0 12 ## 100.00 NA 100.00 ## ## ## Total 161 28 189 ## 100.00 100.00 100.00 ## --------------------------------------- M4.1 &lt;- glm(low ~ ui, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M4.1); jtools::summ(M4.1, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ ui, family = binomial(link = &quot;logit&quot;), data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.17741 -0.80971 -0.80971 1.17741 1.59671 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.94693 0.17562 -5.3919 6.973e-08 *** ## ui 0.94693 0.41677 2.2720 0.02308 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 229.596 on 187 degrees of freedom ## AIC: 233.596 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(1) 5.076097 Pseudo-R² (Cragg-Uhler) 0.037267 Pseudo-R² (McFadden) 0.021631 AIC 233.595899 BIC 240.079393 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.387931 0.274957 0.547323 -5.391870 0.000000 ui 2.577778 1.138905 5.834499 2.272045 0.023084 Standard errors: MLE M4.2 &lt;- glm(low ~ ht + ui, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M4.2); jtools::summ(M4.2, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ ht + ui, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.32323 -0.76735 -0.76735 1.17741 1.65309 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.07194 0.18795 -5.7034 1.175e-08 *** ## ht 1.40842 0.61496 2.2902 0.02201 * ## ui 1.07194 0.42212 2.5395 0.01110 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 224.321 on 186 degrees of freedom ## AIC: 230.321 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(2) 10.351369 Pseudo-R² (Cragg-Uhler) 0.074950 Pseudo-R² (McFadden) 0.044110 AIC 230.320627 BIC 240.045868 exp(Est.) 2.5% 97.5% z val. p (Intercept) 0.342342 0.236853 0.494815 -5.703384 0.000000 ht 4.089474 1.225204 13.649807 2.290238 0.022008 ui 2.921053 1.277126 6.681056 2.539454 0.011103 Standard errors: MLE lrtest(M4.2, M0) ## Likelihood ratio test ## ## Model 1: low ~ ht + ui ## Model 2: low ~ ht ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 3 -112.160 ## 2 2 -115.325 -1 6.32924 0.011876 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 有一些證據提示子宮痙攣應該對孕期高血壓和低出生體重之間有一定的混雜因子效應。表示子宮痙攣和孕期高血壓，及其與低出生體重之間關係的比值比 OR 發生了顯著的變化 (OR changed materially from 3.37 to 4.09)。 但是由於沒有一位母親同時有孕期高血壓且有子宮痙攣，我們並沒有辦法分析他們之間是否存在交互作用。 65.5.1.6 根據目前爲止建立過的模型和他們之間體現的可能存在的關係，你會怎樣建立關於有效評價孕期高血壓和低出生體重之間關係的邏輯回歸模型？ 我們認爲目前爲止對數據中的變量之間關係的評價，我們應該考慮在最終模型中加入母親的體重，以及子宮痙攣作爲混雜因子 (共變量, covariates)。 M5 &lt;- glm(low ~ ht + ui + lwt, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M5); jtools::summ(M5, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ ht + ui + lwt, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.80936 -0.81607 -0.72064 1.15535 2.12396 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.0648676 0.8328755 1.2785 0.201058 ## ht 1.9604955 0.6955433 2.8187 0.004823 ** ## ui 0.9300291 0.4336034 2.1449 0.031962 * ## lwt -0.0168934 0.0065631 -2.5740 0.010052 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 216.636 on 185 degrees of freedom ## AIC: 224.636 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(3) 18.036428 Pseudo-R² (Cragg-Uhler) 0.127998 Pseudo-R² (McFadden) 0.076858 AIC 224.635568 BIC 237.602556 exp(Est.) 2.5% 97.5% z val. p (Intercept) 2.900455 0.566919 14.839219 1.278544 0.201058 ht 7.102846 1.817125 27.763864 2.818654 0.004823 ui 2.534583 1.083484 5.929122 2.144884 0.031962 lwt 0.983248 0.970682 0.995978 -2.574023 0.010052 Standard errors: MLE 此時，模型估計的孕期高血壓和低出生體重之間關係的比值比爲 7.10。接下來，重新把另外幾個數據中的變量一一逐個加入上面的 M5 模型中去，觀察孕期高血壓和低出生體重之間關係的比值比是否有本質變化。 M5.1 &lt;- glm(low ~ ht + ui + lwt + age, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M5.1); jtools::summ(M5.1, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ ht + ui + lwt + age, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.79612 -0.83888 -0.67688 1.08739 2.14183 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.7468696 1.0568007 1.6530 0.098335 . ## ht 1.9266741 0.6955792 2.7699 0.005608 ** ## ui 0.9165658 0.4334661 2.1145 0.034472 * ## lwt -0.0159071 0.0066016 -2.4096 0.015971 * ## age -0.0350727 0.0333641 -1.0512 0.293162 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 215.501 on 184 degrees of freedom ## AIC: 225.501 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(4) 19.170815 Pseudo-R² (Cragg-Uhler) 0.135648 Pseudo-R² (McFadden) 0.081692 AIC 225.501181 BIC 241.709917 exp(Est.) 2.5% 97.5% z val. p (Intercept) 5.736617 0.722945 45.520417 1.652979 0.098335 ht 6.866635 1.756572 26.842441 2.769885 0.005608 ui 2.500688 1.069282 5.848257 2.114504 0.034472 lwt 0.984219 0.971566 0.997036 -2.409568 0.015971 age 0.965535 0.904417 1.030784 -1.051211 0.293162 Standard errors: MLE M5.2 &lt;- glm(low ~ ht + ui + lwt + as.factor(smoke), data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M5.2); jtools::summ(M5.2, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ ht + ui + lwt + as.factor(smoke), family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.66266 -0.80587 -0.66468 1.08091 1.94286 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.7184771 0.8490130 0.8462 0.397413 ## ht 1.9210194 0.6825223 2.8146 0.004884 ** ## ui 0.8963519 0.4429079 2.0238 0.042992 * ## lwt -0.0162771 0.0065445 -2.4871 0.012877 * ## as.factor(smoke)1 0.6528692 0.3356572 1.9450 0.051769 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 212.850 on 184 degrees of freedom ## AIC: 222.85 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(4) 21.822445 Pseudo-R² (Cragg-Uhler) 0.153350 Pseudo-R² (McFadden) 0.092991 AIC 222.849551 BIC 239.058286 exp(Est.) 2.5% 97.5% z val. p (Intercept) 2.051307 0.388463 10.832079 0.846250 0.397413 ht 6.827915 1.791943 26.016698 2.814589 0.004884 ui 2.450646 1.028672 5.838275 2.023788 0.042992 lwt 0.983855 0.971315 0.996556 -2.487140 0.012877 as.factor(smoke)1 1.921045 0.995006 3.708937 1.945047 0.051769 Standard errors: MLE M5.3 &lt;- glm(low ~ ht + ui + lwt + as.factor(race), data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M5.3); jtools::summ(M5.3, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ ht + ui + lwt + as.factor(race), family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.86476 -0.84236 -0.63790 1.09558 2.30619 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.9487466 0.8939306 1.0613 0.288544 ## ht 1.9338144 0.7063595 2.7377 0.006187 ** ## ui 0.9561224 0.4338223 2.2039 0.027528 * ## lwt -0.0186076 0.0068965 -2.6981 0.006973 ** ## as.factor(race)2 1.0991313 0.4993768 2.2010 0.027736 * ## as.factor(race)3 0.4305449 0.3703007 1.1627 0.244955 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 211.534 on 183 degrees of freedom ## AIC: 223.534 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(5) 23.138325 Pseudo-R² (Cragg-Uhler) 0.162043 Pseudo-R² (McFadden) 0.098599 AIC 223.533671 BIC 242.984153 exp(Est.) 2.5% 97.5% z val. p (Intercept) 2.582471 0.447837 14.891912 1.061320 0.288544 ht 6.915840 1.732171 27.612088 2.737720 0.006187 ui 2.601589 1.111651 6.088480 2.203950 0.027528 lwt 0.981564 0.968386 0.994922 -2.698133 0.006973 as.factor(race)2 3.001558 1.127915 7.987613 2.201006 0.027736 as.factor(race)3 1.538095 0.744359 3.178219 1.162690 0.244955 Standard errors: MLE 可見，除了母親體重，和子宮痙攣兩個變量之外，增加任何一個變量並不再實質改變孕期高血壓和低出生體重之間關係的比值比。 65.5.2 Part 2 65.5.2.1 想象另外一個研究者的分析目的是要使用相同的數據來建立一個預測式的模型。預測一名孕婦會產下一位低出生體重胎兒的危險度。 65.5.2.2 使用下面的Stata代碼，試用逐步選擇法尋找模型： ## ## . use &quot;../backupfiles/lbw.dta&quot; ## (Hosmer &amp; Lemeshow data) ## ## . ## . * the brackets (i.race) ensure that the race indicator variables are consider ## &gt; ed ## ## . * as a group, not individually ## ## . ## . xi: stepwise, forward pe(0.05): logistic low i.ht lwt age (i.race) i.smoke i. ## &gt; ui ## i.ht _Iht_0-1 (naturally coded; _Iht_0 omitted) ## i.race _Irace_1-3 (naturally coded; _Irace_1 omitted) ## i.smoke _Ismoke_0-1 (naturally coded; _Ismoke_0 omitted) ## i.ui _Iui_0-1 (naturally coded; _Iui_0 omitted) ## begin with empty model ## p = 0.0229 &lt; 0.0500 adding lwt ## p = 0.0081 &lt; 0.0500 adding _Iht_1 ## p = 0.0320 &lt; 0.0500 adding _Iui_1 ## ## Logistic regression Number of obs = 189 ## LR chi2(3) = 18.04 ## Prob &gt; chi2 = 0.0004 ## Log likelihood = -108.31778 Pseudo R2 = 0.0769 ## ## ------------------------------------------------------------------------------ ## low | Odds Ratio Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## lwt | .9832484 .0064531 -2.57 0.010 .9706816 .995978 ## _Iht_1 | 7.102846 4.940338 2.82 0.005 1.817125 27.76387 ## _Iui_1 | 2.534583 1.099004 2.14 0.032 1.083484 5.929122 ## _cons | 2.900455 2.415719 1.28 0.201 .5669188 14.83923 ## ------------------------------------------------------------------------------ ## Note: _cons estimates baseline odds. ## ## . ## . 逐步篩選的過程是先加入和母親的體重，其次是孕期高血壓，最後保留了子宮痙攣作爲了低出生體重的預測變量。這和我們在第一部分最終保留的，模型完全一樣。 ## ## . use &quot;../backupfiles/lbw.dta&quot; ## (Hosmer &amp; Lemeshow data) ## ## . ## . xi: stepwise, forward pe(0.1): logistic low i.ht lwt age (i.race) i.smoke i.u ## &gt; i ## i.ht _Iht_0-1 (naturally coded; _Iht_0 omitted) ## i.race _Irace_1-3 (naturally coded; _Irace_1 omitted) ## i.smoke _Ismoke_0-1 (naturally coded; _Ismoke_0 omitted) ## i.ui _Iui_0-1 (naturally coded; _Iui_0 omitted) ## begin with empty model ## p = 0.0229 &lt; 0.1000 adding lwt ## p = 0.0081 &lt; 0.1000 adding _Iht_1 ## p = 0.0320 &lt; 0.1000 adding _Iui_1 ## p = 0.0518 &lt; 0.1000 adding _Ismoke_1 ## p = 0.0173 &lt; 0.1000 adding _Irace_2 _Irace_3 ## ## Logistic regression Number of obs = 189 ## LR chi2(6) = 30.43 ## Prob &gt; chi2 = 0.0000 ## Log likelihood = -102.11978 Pseudo R2 = 0.1297 ## ## ------------------------------------------------------------------------------ ## low | Odds Ratio Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## lwt | .9834361 .0066887 -2.46 0.014 .9704134 .9966336 ## _Iht_1 | 6.490237 4.483259 2.71 0.007 1.676009 25.13302 ## _Iui_1 | 2.471801 1.106213 2.02 0.043 1.028189 5.942297 ## _Ismoke_1 | 2.817403 1.105908 2.64 0.008 1.305356 6.080917 ## _Irace_2 | 3.758631 1.959795 2.54 0.011 1.352705 10.44375 ## _Irace_3 | 2.526023 1.087054 2.15 0.031 1.08675 5.871446 ## _cons | 1.054066 .9884219 0.06 0.955 .1677556 6.623063 ## ------------------------------------------------------------------------------ ## Note: _cons estimates baseline odds. ## ## . ## . 這裏設定了 pe(0.1) 之後，我們發現又增加了吸菸習慣，和種族兩個變量。 ## ## . use &quot;../backupfiles/lbw.dta&quot; ## (Hosmer &amp; Lemeshow data) ## ## . ## . xi: stepwise, pe(0.1): logistic low i.ht lwt age (i.race) i.smoke i.ui ## i.ht _Iht_0-1 (naturally coded; _Iht_0 omitted) ## i.race _Irace_1-3 (naturally coded; _Irace_1 omitted) ## i.smoke _Ismoke_0-1 (naturally coded; _Ismoke_0 omitted) ## i.ui _Iui_0-1 (naturally coded; _Iui_0 omitted) ## begin with empty model ## p = 0.0229 &lt; 0.1000 adding lwt ## p = 0.0081 &lt; 0.1000 adding _Iht_1 ## p = 0.0320 &lt; 0.1000 adding _Iui_1 ## p = 0.0518 &lt; 0.1000 adding _Ismoke_1 ## p = 0.0173 &lt; 0.1000 adding _Irace_2 _Irace_3 ## ## Logistic regression Number of obs = 189 ## LR chi2(6) = 30.43 ## Prob &gt; chi2 = 0.0000 ## Log likelihood = -102.11978 Pseudo R2 = 0.1297 ## ## ------------------------------------------------------------------------------ ## low | Odds Ratio Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## lwt | .9834361 .0066887 -2.46 0.014 .9704134 .9966336 ## _Iht_1 | 6.490237 4.483259 2.71 0.007 1.676009 25.13302 ## _Iui_1 | 2.471801 1.106213 2.02 0.043 1.028189 5.942297 ## _Ismoke_1 | 2.817403 1.105908 2.64 0.008 1.305356 6.080917 ## _Irace_2 | 3.758631 1.959795 2.54 0.011 1.352705 10.44375 ## _Irace_3 | 2.526023 1.087054 2.15 0.031 1.08675 5.871446 ## _cons | 1.054066 .9884219 0.06 0.955 .1677556 6.623063 ## ------------------------------------------------------------------------------ ## Note: _cons estimates baseline odds. ## ## . ## . 這時，只有年量被移出了最終模型，獲得了和逐步加入變量法 (forward) 相同的模型。但是實際上在很多現實數據中，這種情況很少見。 ## ## . use &quot;../backupfiles/lbw.dta&quot; ## (Hosmer &amp; Lemeshow data) ## ## . ## . xi: stepwise, pe(0.05): logistic low i.ht lwt age (i.race) i.smoke i.ui ## i.ht _Iht_0-1 (naturally coded; _Iht_0 omitted) ## i.race _Irace_1-3 (naturally coded; _Irace_1 omitted) ## i.smoke _Ismoke_0-1 (naturally coded; _Ismoke_0 omitted) ## i.ui _Iui_0-1 (naturally coded; _Iui_0 omitted) ## begin with empty model ## p = 0.0229 &lt; 0.0500 adding lwt ## p = 0.0081 &lt; 0.0500 adding _Iht_1 ## p = 0.0320 &lt; 0.0500 adding _Iui_1 ## ## Logistic regression Number of obs = 189 ## LR chi2(3) = 18.04 ## Prob &gt; chi2 = 0.0004 ## Log likelihood = -108.31778 Pseudo R2 = 0.0769 ## ## ------------------------------------------------------------------------------ ## low | Odds Ratio Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## lwt | .9832484 .0064531 -2.57 0.010 .9706816 .995978 ## _Iht_1 | 7.102846 4.940338 2.82 0.005 1.817125 27.76387 ## _Iui_1 | 2.534583 1.099004 2.14 0.032 1.083484 5.929122 ## _cons | 2.900455 2.415719 1.28 0.201 .5669188 14.83923 ## ------------------------------------------------------------------------------ ## Note: _cons estimates baseline odds. ## ## . 這時，逐步刪除法即使使用了更加嚴格的p值標準，留下的變量和逐步增加法的模型也不同。所以，分析者採用逐步刪除或者逐步增加變量的方法，可能獲得截然不同的最終保留模型。 65.5.2.3 建立一個包含全部變量的模型。解釋其提示的孕期高血壓和低出生體重之間的關係。 M6 &lt;- glm(low ~ ht + ui + lwt + as.factor(race) + age + as.factor(smoke), data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M6); jtools::summ(M6, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ ht + ui + lwt + as.factor(race) + age + as.factor(smoke), ## family = binomial(link = &quot;logit&quot;), data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.73162 -0.83298 -0.53446 0.98682 2.16710 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.4342545 1.1918299 0.3644 0.715590 ## ht 1.8564821 0.6887108 2.6956 0.007026 ** ## ui 0.8953379 0.4484747 1.9964 0.045890 * ## lwt -0.0162548 0.0068565 -2.3707 0.017755 * ## as.factor(race)2 1.2800691 0.5266377 2.4306 0.015072 * ## as.factor(race)3 0.9022946 0.4343165 2.0775 0.037755 * ## age -0.0182848 0.0353519 -0.5172 0.605000 ## as.factor(smoke)1 1.0275430 0.3938993 2.6086 0.009090 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 203.970 on 181 degrees of freedom ## AIC: 219.97 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(7) 30.701874 Pseudo-R² (Cragg-Uhler) 0.210853 Pseudo-R² (McFadden) 0.130829 AIC 219.970122 BIC 245.904098 exp(Est.) 2.5% 97.5% z val. p (Intercept) 1.543812 0.149316 15.961799 0.364359 0.715590 ht 6.401179 1.659695 24.688325 2.695590 0.007026 ui 2.448163 1.016478 5.896342 1.996407 0.045890 lwt 0.983877 0.970743 0.997188 -2.370697 0.017755 as.factor(race)2 3.596888 1.281304 10.097220 2.430645 0.015072 as.factor(race)3 2.465253 1.052375 5.775006 2.077505 0.037755 age 0.981881 0.916152 1.052327 -0.517224 0.605000 as.factor(smoke)1 2.794192 1.291126 6.047055 2.608644 0.009090 Standard errors: MLE 放入了全部的變量之後，調整後的孕期高血壓和低出生體重之間關係的比值比變成了 6.40 ，它的95%信賴區間是 (1.66, 24.69)。這個結果和逐步變量篩選法，以及第一部分中逐個分析變量之間關係之後建立起來的模型所估算的比值比結果其實十分接近。在彙報這些結果的時候，無論分析者選用了哪種方法，最終獲得接近的答案，會讓讀者相信結果是穩定可靠的。分析者也應該在論文中提示使用不同的策略分析選擇變量和模型之後獲得的比值比都很接近。當然，有些人會樂意展示所有分析策略的過程和結果。另外值得注意的是，保留不同變量的模型所估計的各自的比值比之間嚴格來說是不同的條件比值比，由於邏輯回歸的不可壓縮型，他們不適宜直接拿來比較。 65.5.3 Part 3 已知這個數據中收集到的數據還包含 1）懷孕初期（最初三個月），孕婦訪問醫生的次數；2）該母親是否曾經有過流產史。根據這一實情，回答下面的問題： 65.5.3.1 你是否同一把上述這兩個中的一個或者兩者全部都放入前面兩個部分建立的回歸模型中做預測變量？在怎樣的條件下，你會認爲可能增加這兩個變量是可以考慮的？ 關於懷孕初期訪問醫生次數這一變量，它很可能其實是處在孕期高血壓和低出生體重兩者因果關係通路上的變量。所以，增加它作爲預測變量可能引起不小的爭議。 調整母親的流產史同樣也是一件容易引起爭議的事。如果說，研究的目的是要預測某母親會產下低出生體重胎兒的概率，那麼增加這個變量可能會被認可。但是如果說研究目的是爲了分析孕期高血壓和低出生體重胎兒的出生之間可能存在的病因學關係，那你應該拒絕增加調整這個變量。這是由於母親的流產史可能和某些基因上的或者環境上的因素有關，間接或者直接的成爲母親的孕期高血壓（有或無），及低出生體重胎兒（有或無）的原因。 65.5.3.2 如果你認爲應該增加這兩個變量中的一個或者全部，請建立包含你認爲應該增加的變量的模型，觀察結果的變化。 儘管增加這兩個變量可能引起一些爭議，但是實際上增加了這兩個變量中的任何一個對孕期高血壓和低出生體重之間的關係影響都幾乎可以忽略不計。 M7 &lt;- glm(low ~ ht + ui + lwt + ftv, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M7); jtools::summ(M7, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ ht + ui + lwt + ftv, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.81697 -0.82243 -0.70736 1.14260 2.10438 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.0878869 0.8387712 1.2970 0.19463 ## ht 1.9429161 0.6969828 2.7876 0.00531 ** ## ui 0.9231848 0.4344255 2.1251 0.03358 * ## lwt -0.0167706 0.0065898 -2.5449 0.01093 * ## ftv -0.0482029 0.1697755 -0.2839 0.77647 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 216.554 on 184 degrees of freedom ## AIC: 226.554 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(4) 18.117740 Pseudo-R² (Cragg-Uhler) 0.128548 Pseudo-R² (McFadden) 0.077205 AIC 226.554256 BIC 242.762991 exp(Est.) 2.5% 97.5% z val. p (Intercept) 2.967996 0.573456 15.361253 1.297001 0.194631 ht 6.979073 1.780430 27.357134 2.787610 0.005310 ui 2.517295 1.074361 5.898176 2.125070 0.033581 lwt 0.983369 0.970750 0.996153 -2.544936 0.010930 ftv 0.952940 0.683207 1.329165 -0.283921 0.776471 Standard errors: MLE M8 &lt;- glm(low ~ ht + ui + lwt + ptl, data = lbw, family = binomial(link = &quot;logit&quot;)) summary(M8); jtools::summ(M8, digits = 6, confint = TRUE, exp = TRUE) ## ## Call: ## glm(formula = low ~ ht + ui + lwt + ptl, family = binomial(link = &quot;logit&quot;), ## data = lbw) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.05197 -0.79228 -0.68950 1.10836 2.14262 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.8291144 0.8483560 0.9773 0.328411 ## ht 1.9435809 0.7005454 2.7744 0.005531 ** ## ui 0.7732965 0.4458041 1.7346 0.082810 . ## lwt -0.0158861 0.0066317 -2.3955 0.016599 * ## ptl 0.6273847 0.3372620 1.8602 0.062853 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 234.672 on 188 degrees of freedom ## Residual deviance: 213.036 on 184 degrees of freedom ## AIC: 223.036 ## ## Number of Fisher Scoring iterations: 4 Observations 189 Dependent variable low Type Generalized linear model Family binomial Link logit 𝛘²(4) 21.636480 Pseudo-R² (Cragg-Uhler) 0.152117 Pseudo-R² (McFadden) 0.092199 AIC 223.035516 BIC 239.244251 exp(Est.) 2.5% 97.5% z val. p (Intercept) 2.291289 0.434468 12.083750 0.977319 0.328411 ht 6.983714 1.769217 27.567142 2.774383 0.005531 ui 2.166898 0.904418 5.191676 1.734610 0.082810 lwt 0.984239 0.971529 0.997116 -2.395465 0.016599 ptl 1.872706 0.966923 3.627001 1.860229 0.062853 Standard errors: MLE References "],["checkingGLM.html", "第 66 章 檢查你的模型 Model Checking - GLM 66.1 線性預測方程的定義 66.2 共變量模式殘差 covariate pattern residuals 66.3 鏈接方程 66.4 NHANES 飲酒量數據實例 66.5 Practical 10", " 第 66 章 檢查你的模型 Model Checking - GLM 每次定義一個 GLM 模型的時候 (Section 58.2)，均分三步走，所以一個模型會出錯的部分，就在這三步驟中的任何一步： 因變量分佈定義錯誤 (或者分佈的假設不成立) mis-specified distribution: 因變量之間是否相互獨立，且服從某個已知的分佈，這兩個條件中的任意一個不能滿足，第一步都無法成立。例如，最常見的是我們用泊松迴歸模型來擬合計數型數據時，因爲缺乏一些關鍵變量，導致模型遇到過度離散的問題 (over-dispersed for a Poisson distribution due to an omitted covariate)； 線性預測方程定義錯誤 mis-specified linear predictor: 線性預測方程中放入的變量，有的可能需要被轉換 (連續型轉換成分類型，或者是需要數學轉換)。或者是應該加入的交互作用項被我們粗心忽略了； 鏈接方程錯誤 mis-specified link function: 對前一步定義好的線性預測方程，第三步的鏈接方程指定很可能出現錯誤。或者是，我們可以考慮選用別的鏈接方程 (\\(\\text{log instead of logit}\\))，改變了鏈接方程之後，很可能原先認爲有交互作用的變量之間交互作用就消失了 (Section 63.4)。 本章介紹一些廣義線性迴歸模型診斷的方法，這些手段雖然偶爾有一些檢驗方法，但更多的診斷方法需要繪圖通過視覺判斷。介紹邏輯迴歸時解釋過模型比較時使用的模型偏差 (deviance) 概念 (Section 60.3.2) Pearson 的擬合優度檢驗，以及使用 Hosmer-Lemeshow 檢驗法檢驗個人二進制變量數據的邏輯迴歸擬合優度 (Section 60.4) 法。值得注意的是，這些方法是一種整體檢驗 (global test)，其零假設是 “模型可以擬合數據”，如果擬合優度檢驗的結果是拒絕這個零假設，那麼可以認爲模型建立的不佳，即接受 “模型不能擬合數據” 的替代假設。如果擬合優度檢驗的結果是無法拒絕零假設，那麼我們僅僅只能認爲無證據證明 “模型不可以擬合數據”，而不能證明設計的模型可以良好的擬合數據。所以，擬合優度的檢驗結果可以警告我們模型擬合有沒有錯誤，卻不能證明這個模型到底是不是一個良好的模型 (個人感覺應把擬合優度檢驗 goodness of fit 的名稱改爲 擬合劣度檢驗 badness of fit)。 66.1 線性預測方程的定義 線性預測方程定義錯誤的最常見的就是“忽略了不該忽略的交互作用”，及連續型變量可能被以不恰當的方式加入預測方程中。當然，你可以通過把一個變量放入模型前後，該變量本身的迴歸係數是否有意義 (Wald test) 或者你關心的預測變量的迴歸係數的變化程度 (magnitude of the corresponding parameter estimate) 來判斷是否保留這個變量在你的模型裏。這麼做的時候，你要當心自己陷入多重比較 (multiple testing) 的陷阱 (某次或者某幾次出現的統計學有意義的結果，可以僅僅是由於偶然，而不是因爲它真的有意義)。 66.1.1 殘差 觀測值跟擬合值之間的差距，就是我們常說的殘差。 以二項分佈數據爲例， \\[Y_i\\sim\\text{Bin}(n_i, \\pi_i), \\\\ \\text{where n is the number of subjects in one group} \\\\ \\text{logit}(\\pi_i) = \\eta_i\\] 其第 \\(i\\) 個觀測值的原始殘差 (raw residual)，是 \\[ \\begin{aligned} r_i &amp; = y_i - \\hat\\mu_i \\\\ &amp; = y_i - n_i\\hat\\pi_i \\end{aligned} \\] 觀測值 \\(Y_i\\) 的變化程度 (variability) 本身並不是一成不變的 (會根據模型中加入的共變量而改變)，其變化程度可能是觀測值 \\(Y_i\\) 的方差導致的。二項分佈數據的方差已知是 \\(\\text{Var}(Y_i) = n_i\\pi_i(1-\\pi_i)\\)。舉個栗子，如果 \\(n_i = 10, \\hat\\pi_i = 0.01, Y_i = 10\\)，那麼 \\(r_i \\approx 10\\)，這是一個很差的擬合效果。如果，\\(n_i = 100000, \\hat\\pi_i = 0.5, Y_i = 5010\\)，那麼 \\(r_i = 10\\)，此時的殘差也是 \\(10\\) 又證明了這是一個擬合效果良好的模型。相同的殘差，由於方差不同，判斷則不一樣，所以我們需要有一個類似簡單線性迴歸中標準化殘差 (Section 32.6.1) 的過程 – Pearson 殘差: \\[ p_i = \\frac{r_i}{\\sqrt{\\hat{\\text{Var}}}(Y_i)} \\] 所以，二項分佈數據的 Pearson 殘差公式爲 \\[ p_i = \\frac{r_i}{\\sqrt{n_i\\hat\\pi_i(1-\\hat\\pi_i)}} \\] Pearson 殘差的平方和，就是 Pearson 卡方統計量，在只有分類變量的邏輯迴歸模型中可以用於擬合度診斷 (Section 67.1)，自由度爲 \\(1\\)： \\[ \\sum_i^Np^2_i = \\text{Pearson&#39;s } \\chi^2 \\text{ statistic} \\] 和標準化 Pearson 殘差相似地，另一個選項是使用偏差殘差 (deviance residual)。只要使偏差殘差 \\(d_i\\) 和原始殘差 \\(r_i\\) 保持相同的符號，偏差殘差也可以被標準化用於模型診斷。 用二項分佈數據的例子， \\[ \\begin{aligned} d_i &amp; = \\text{sign}(r_i)\\sqrt{2\\{ y_i\\text{ln}(\\frac{y_i}{\\hat\\mu_i}) + (n_i - y_i)\\text{ln}(\\frac{n_i-y_i}{n_i - \\hat\\mu_i})\\}} \\\\ \\sum_{i=1}^n d^2 = D &amp; = 2\\sum_{i=1}^N\\{ y_i\\text{ln}(\\frac{y_i}{\\hat\\mu_i}) + (n_i - y_i)\\text{ln}(\\frac{n_i - y_i}{n_i - \\hat\\mu_i}) \\} \\end{aligned} \\] 66.1.2 GLM 在 R 裏獲取殘差 boot::glm.diag(modelname)$rp ## 可以獲取 standardized Pearson residuals resid(modelname, type = &quot;pearson&quot;) ## 可以獲取 Pearson residuals rstandard(modelname) ## 可以獲取 standardized deviance residuals resid(modelname) ## 可以獲取 deviance residuals 66.1.3 如何利用獲得的殘差 將殘差和觀測值的排序作散點圖–查看是否有觀測值擁有過大的標準化殘差； 作殘差和線性預測方程值的散點圖–如果模型合理的話，這兩者之間視覺上可以判斷是沒有關係的 (no systematic relationship)； 作殘差和模型中任意一個連續型變量 (如果有的話) – 可以判定該連續型變量的放入方式是否合理； 作殘差和數據中尚未加入模型的新變量之間的散點圖 (甚至是已有變量的二次/三次方值)–如果二者之間有明顯的相關性，需要考慮是否加入這個新變量到模型中去。 做這些散點圖時，推薦都加上 lowess 的非線性平滑曲線，用於輔助判斷是否變量之間存在特殊關係。 66.2 共變量模式殘差 covariate pattern residuals 66.3 鏈接方程 66.4 NHANES 飲酒量數據實例 數據的變量和每個變量的解釋如下表，總樣本量是 2548 人，飲酒量大於 5 杯每日者被定義爲重度飲酒者。 Variable Description gender 1=male, 2=female ageyrs Age in years at survey bmi Body mass index \\((\\text{kg/m}^2)\\) sbp Systolic blood pressure \\((\\text{mmHg})\\) ALQ130 Reported average number of drinks per day NHANES &lt;- read_dta(&quot;../backupfiles/nhanesglm.dta&quot;) NHANES &lt;- NHANES %&gt;% mutate(Gender = ifelse(gender == 1, &quot;Male&quot;, &quot;Female&quot;)) %&gt;% mutate(Gender = factor(Gender, levels = c(&quot;Male&quot;, &quot;Female&quot;))) with(NHANES, table(gender)) ## gender ## 1 2 ## 1391 1157 NHANES &lt;- mutate(NHANES, Heavydrinker = ALQ130 &gt; 5) Model_NH &lt;- glm(Heavydrinker ~ gender + ageyrs, data = NHANES, family = binomial(link = &quot;logit&quot;)) logistic.display(Model_NH);summary(Model_NH) ## ## Logistic regression predicting Heavydrinker ## ## crude OR(95%CI) adj. OR(95%CI) P(Wald&#39;s test) P(LR-test) ## gender (cont. var.) 0.17 (0.12,0.24) 0.16 (0.11,0.23) &lt; 0.001 &lt; 0.001 ## ## ageyrs (cont. var.) 0.97 (0.97,0.98) 0.97 (0.96,0.98) &lt; 0.001 &lt; 0.001 ## ## Log-likelihood = -801.292 ## No. of observations = 2548 ## AIC value = 1608.5839 ## ## Call: ## glm(formula = Heavydrinker ~ gender + ageyrs, family = binomial(link = &quot;logit&quot;), ## data = NHANES) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -0.86408 -0.57154 -0.34828 -0.22281 2.85177 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.6410885 0.2755315 5.9561 2.584e-09 *** ## gender -1.8249474 0.1736041 -10.5121 &lt; 2.2e-16 *** ## ageyrs -0.0304506 0.0039882 -7.6351 2.257e-14 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 1810.21 on 2547 degrees of freedom ## Residual deviance: 1602.58 on 2545 degrees of freedom ## AIC: 1608.58 ## ## Number of Fisher Scoring iterations: 6 當用邏輯迴歸模型擬合數據，線性迴歸方程加入年齡和性別時，數據給出了極強的證據證明性別和年齡和是否爲重度飲酒者都有很大的關係。但是，擬合完這樣一個邏輯迴歸模型之後，我們最大的擔心是，模型中的年齡變量和 \\(\\text{logit}(\\text{P}(Y=1))\\) 之間的關係，用簡單線性是不是恰當？要檢驗這樣的擔憂，最好的方法是追加一個非線性轉換後的年齡值，去看看模型的擬合程度是否得到改善： NHANES &lt;- mutate(NHANES, age2 = ageyrs^2) Model_NH2 &lt;- glm(Heavydrinker ~ gender + ageyrs + age2, data = NHANES, family = binomial(link = &quot;logit&quot;)) logistic.display(Model_NH2) ; summary(Model_NH2) ## ## Logistic regression predicting Heavydrinker ## ## crude OR(95%CI) adj. OR(95%CI) P(Wald&#39;s test) P(LR-test) ## gender (cont. var.) 0.17 (0.12,0.24) 0.16 (0.11,0.23) &lt; 0.001 &lt; 0.001 ## ## ageyrs (cont. var.) 0.9726 (0.9652,0.9801) 1.01 (0.966,1.056) 0.663 0.662 ## ## age2 (cont. var.) 0.9997 (0.9996,0.9998) 0.9996 (0.9991,1) 0.073 0.067 ## ## Log-likelihood = -799.6124 ## No. of observations = 2548 ## AIC value = 1607.2249 ## ## Call: ## glm(formula = Heavydrinker ~ gender + ageyrs + age2, family = binomial(link = &quot;logit&quot;), ## data = NHANES) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -0.80207 -0.60342 -0.32980 -0.23312 2.87272 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.83418082 0.52440600 1.5907 0.11167 ## gender -1.82748612 0.17346142 -10.5354 &lt; 2e-16 *** ## ageyrs 0.00991164 0.02272523 0.4362 0.66273 ## age2 -0.00043512 0.00024311 -1.7898 0.07348 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 1810.21 on 2547 degrees of freedom ## Residual deviance: 1599.22 on 2544 degrees of freedom ## AIC: 1607.22 ## ## Number of Fisher Scoring iterations: 6 擬合了年齡的平方 (age2) 進入邏輯迴歸模型中之後，age2 的迴歸係數的 Wald 檢驗結果是 \\(p = 0.073\\)，這證明用簡單的線性關係把年齡放在模型裏並不算不妥當 (not unreasonable)。 另外，可以提取 Model_NH 的標準化 Pearson 殘差和年齡作如下的散點圖： 圖 66.1: Standardized Pearson residuals agianst age, in logistic model with gender and linear age as covariates 圖 66.1 中靠近橫軸的藍色實線是 LOWESS 平滑曲線，它十分接近平直的橫線，也證明了 Pearson 標準化殘差值和年齡本身並無關聯。這同時也佐證了，將年齡以連續型共變量的形式放入本次邏輯迴歸模型中並非不合理 (not unreasonable)。 下一步，我們再來考慮，模型中加入 bmi 是否合理 (能改善模型的擬合度)： Model_NH3 &lt;- glm(Heavydrinker ~ gender + ageyrs + bmi, data = NHANES, family = binomial(link = &quot;logit&quot;)) logistic.display(Model_NH3) ; summary(Model_NH3) ## ## Logistic regression predicting Heavydrinker ## ## crude OR(95%CI) adj. OR(95%CI) P(Wald&#39;s test) P(LR-test) ## gender (cont. var.) 0.17 (0.12,0.24) 0.16 (0.11,0.23) &lt; 0.001 &lt; 0.001 ## ## ageyrs (cont. var.) 0.97 (0.97,0.98) 0.97 (0.96,0.98) &lt; 0.001 &lt; 0.001 ## ## bmi (cont. var.) 0.9965 (0.9756,1.0179) 1.0084 (0.9855,1.0318) 0.477 0.479 ## ## Log-likelihood = -801.0412 ## No. of observations = 2548 ## AIC value = 1610.0825 ## ## Call: ## glm(formula = Heavydrinker ~ gender + ageyrs + bmi, family = binomial(link = &quot;logit&quot;), ## data = NHANES) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -0.93712 -0.57479 -0.34466 -0.22359 2.82847 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.4251178 0.4096026 3.4793 0.0005028 *** ## gender -1.8299784 0.1738183 -10.5281 &lt; 2.2e-16 *** ## ageyrs -0.0306880 0.0040105 -7.6518 1.982e-14 *** ## bmi 0.0083460 0.0117336 0.7113 0.4769053 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 1810.21 on 2547 degrees of freedom ## Residual deviance: 1602.08 on 2544 degrees of freedom ## AIC: 1610.08 ## ## Number of Fisher Scoring iterations: 6 BMI的迴歸係數是否爲零的 Wald 檢驗 \\(p=0.477\\)，提示數據無法提供證據去反對零假設：“調整了年齡和性別之後，BMI 和是否是重度飲酒者的概率的對數比值 \\(\\text{log-odds}\\) 之間無線性關係”，也就是二者之間可能有非線性關係。如果把 Pearson 標準化殘差和 BMI 作殘差散點圖，如下所示： 圖 66.2: Standardized Pearson residuals agianst BMI, in logistic model with gender and linear age as covariates 此殘差圖 66.2 的 LOWESS 平滑曲線卻提示我們，BMI 和殘差之間不完全是毫無關係的 (應該是非線性的，拋物線關係？)。如果我們把 BMI 取平方放入模型中再看其結果： NHANES &lt;- mutate(NHANES, bmi2 = bmi^2) Model_NH4 &lt;- glm(Heavydrinker ~ gender + ageyrs + bmi + bmi2, data = NHANES, family = binomial(link = &quot;logit&quot;)) summary(Model_NH4) ## ## Call: ## glm(formula = Heavydrinker ~ gender + ageyrs + bmi + bmi2, family = binomial(link = &quot;logit&quot;), ## data = NHANES) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -0.93349 -0.57566 -0.34335 -0.21636 2.85524 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -2.1277529 1.4806329 -1.4371 0.15070 ## gender -1.7784430 0.1745978 -10.1859 &lt; 2.2e-16 *** ## ageyrs -0.0323786 0.0040936 -7.9096 2.583e-15 *** ## bmi 0.2551992 0.1003287 2.5436 0.01097 * ## bmi2 -0.0041230 0.0016854 -2.4464 0.01443 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 1810.21 on 2547 degrees of freedom ## Residual deviance: 1594.91 on 2543 degrees of freedom ## AIC: 1604.91 ## ## Number of Fisher Scoring iterations: 6 logistic.display(Model_NH4) ## ## Logistic regression predicting Heavydrinker ## ## crude OR(95%CI) adj. OR(95%CI) P(Wald&#39;s test) P(LR-test) ## gender (cont. var.) 0.17 (0.12,0.24) 0.17 (0.12,0.24) &lt; 0.001 &lt; 0.001 ## ## ageyrs (cont. var.) 0.97 (0.97,0.98) 0.97 (0.96,0.98) &lt; 0.001 &lt; 0.001 ## ## bmi (cont. var.) 1 (0.98,1.02) 1.29 (1.06,1.57) 0.011 0.006 ## ## bmi2 (cont. var.) 0.9999 (0.9995,1.0002) 0.9959 (0.9926,0.9992) 0.014 0.007 ## ## Log-likelihood = -797.4554 ## No. of observations = 2548 ## AIC value = 1604.9108 lmtest::lrtest(Model_NH, Model_NH4) ## Likelihood ratio test ## ## Model 1: Heavydrinker ~ gender + ageyrs ## Model 2: Heavydrinker ~ gender + ageyrs + bmi + bmi2 ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 3 -801.292 ## 2 5 -797.455 2 7.67309 0.021568 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 通過似然比檢驗比較加了 bmi, bmi2 兩個共變量的模型和只有 gender, ageyrs 兩個共變量的模型 \\((p=0.022)\\)，提示我們 BMI 和是否是重度飲酒者 (概率的對數比值 \\(\\text{log-odds}\\)) 之間的關係並非簡單的線性關係。不過這樣的關係似乎並不是特別的明顯，圖 66.2 的平滑曲線的彎曲程度也沒有特別明顯。所以，在這樣的情況下，有的統計學家可能還是會選擇不放 BMI 進入模型裏。 66.5 Practical 10 繼續沿用 NHANES 數據，此次練習我們把重點放在收集到的收縮期血壓數據上。定義收縮期血壓大於 140 \\(\\text{mmHg}\\) 者爲高血壓患者。 # 1. load the data and define a binary variable indicating whether # each observation has hypertension (1) or not (0) NHANES &lt;- read_dta(&quot;../backupfiles/nhanesglm.dta&quot;) NHANES &lt;- NHANES %&gt;% mutate(Gender = ifelse(gender == 1, &quot;Male&quot;, &quot;Female&quot;)) %&gt;% mutate(Gender = factor(Gender, levels = c(&quot;Male&quot;, &quot;Female&quot;))) NHANES &lt;- mutate(NHANES, hypertension = sbp &gt;= 140) tab1(NHANES$hypertension, graph = FALSE) ## NHANES$hypertension : ## Frequency Percent Cum. percent ## FALSE 2116 83 83 ## TRUE 432 17 100 ## Total 2548 100 100 # 2. Bearing in mind that we know blood pressure increases with age # we begin by including age into a logistic regression for the # the binary hypertension variable. We can use a lowess smoother # plot to examine how the probability of hypertension varies with # age. pi &lt;- with(NHANES, predict(loess(hypertension ~ ageyrs))) with(NHANES, scatter.smooth(ageyrs, logit(pi), pch = 20, span = 0.6, lpars = list(col = &quot;blue&quot;, lwd = 3, lty = 1), col=rgb(0,0,0,0.004), xlab = &quot;Age in years&quot;, ylab = &quot;Logit(probability) of Hypertension&quot;, frame = FALSE)) 圖 66.3: The loess plot of the observed proportin with hypertension against age. Span = 0.6 Lowess 平滑曲線圖提示，高血壓患病的可能性的 \\(\\text{logit}\\)，和年齡之間的關係似乎不是簡單直線關係。我們可能需要把年齡本身和年齡的平方放入邏輯迴歸模型中去看看。 # 3. Include age into the logistic regression in the way suggested by the lowess plot. # do your results support your findings from the previous graph? NHANES &lt;- mutate(NHANES, agesq = ageyrs^2) Model_NH5 &lt;- glm(hypertension ~ ageyrs + agesq, data = NHANES, family = binomial(link = &quot;logit&quot;)) logistic.display(Model_NH5) ; summary(Model_NH5) ## ## Logistic regression predicting hypertension ## ## crude OR(95%CI) adj. OR(95%CI) P(Wald&#39;s test) P(LR-test) ## ageyrs (cont. var.) 1.07 (1.06,1.07) 1.15 (1.1,1.21) &lt; 0.001 &lt; 0.001 ## ## agesq (cont. var.) 1.0005 (1.0005,1.0006) 0.9993 (0.9989,0.9997) 0.001 &lt; 0.001 ## ## Log-likelihood = -943.7811 ## No. of observations = 2548 ## AIC value = 1893.5622 ## ## Call: ## glm(formula = hypertension ~ ageyrs + agesq, family = binomial(link = &quot;logit&quot;), ## data = NHANES) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.20772 -0.61574 -0.33152 -0.18319 2.97415 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -6.92931228 0.67205641 -10.311 &lt; 2.2e-16 *** ## ageyrs 0.13933661 0.02419897 5.758 8.514e-09 *** ## agesq -0.00067035 0.00020870 -3.212 0.001318 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 2319.51 on 2547 degrees of freedom ## Residual deviance: 1887.56 on 2545 degrees of freedom ## AIC: 1893.56 ## ## Number of Fisher Scoring iterations: 6 正如同 Lowess 平滑曲線建議的那樣，數據提供了極強的證據證明年齡和患有高血壓概率的對數比值 \\((\\text{log-odds})\\) 之間呈現的是拋物線關係。 # 4. Generate Pearson residuals and investigate whether the way in # which you have included age in the logistic regression in the # previous part is correct. # obtain the standardized Pearson residuals by covariate pattern Diag &lt;- LogisticDx::dx(Model_NH5) ggplot(Diag, aes(x = ageyrs, y = sPr)) + geom_point() + geom_smooth(span = 0.9, se = FALSE) + theme_bw() + theme(axis.text = element_text(size = 15), axis.text.x = element_text(size = 15), axis.text.y = element_text(size = 15)) + labs(x = &quot;Age in years&quot;, y = &quot;standardised Pearson residual&quot;) + theme(axis.title = element_text(size = 17), axis.text = element_text(size = 8), axis.line = element_line(colour = &quot;black&quot;), panel.border = element_blank(), panel.background = element_blank()) 圖 66.4: Standardized Pearson residuals (by covariate pattern) vs. age. Logistic mdoel with linear and quadratic age as covariates. 標準化 Pearson 殘差 (共變量模式) 和年齡之間的散點圖 66.4 提示此時的殘差和年齡之間再無明顯的關係。也就是說，年齡作爲連續變量和高血壓患病概率的對數比值之間的關係，用拋物線 (二次方程) 擬合並非不合理 (not unreasonable)。 # 5. Next, use individual level residuals to examine whether BMI ought to be # included in the model, and depending on what you find, continue with you # previous model or add BMI. In the latter case, generate new residuals and # assess if you have included BMI using the most appropriate functional form. NHANES$stresPearson &lt;- boot::glm.diag(Model_NH5)$rp ggplot(NHANES, aes(x = bmi, y = stresPearson)) + geom_point() + theme_bw() + geom_smooth(span = 0.8, se = FALSE) + theme(axis.text = element_text(size = 15), axis.text.x = element_text(size = 15), axis.text.y = element_text(size = 15)) + labs(x = &quot;Body Mass Index&quot;, y = &quot;Standardized Pearson residual&quot;) + theme(axis.title = element_text(size = 17), axis.text = element_text(size = 8), axis.line = element_line(colour = &quot;black&quot;), panel.border = element_blank(), panel.background = element_blank()) 圖 66.5: Standardized Pearson residuals vs. BMI. Logistic mdoel with just linear and quadratic age as covariates. 圖 66.5，提示，標準化 Pearson 殘差和連續型 BMI 值之間應該存在相關性，也就是該圖提示需要加入連續型變量 BMI 進入邏輯迴歸模型中去！ Model_NH6 &lt;- glm(hypertension ~ ageyrs + agesq + bmi, data = NHANES, family = binomial(link = &quot;logit&quot;)) logistic.display(Model_NH6) ; summary(Model_NH6) ## ## Logistic regression predicting hypertension ## ## crude OR(95%CI) adj. OR(95%CI) P(Wald&#39;s test) P(LR-test) ## ageyrs (cont. var.) 1.07 (1.06,1.07) 1.14 (1.09,1.2) &lt; 0.001 &lt; 0.001 ## ## agesq (cont. var.) 1.0005 (1.0005,1.0006) 0.9994 (0.999,0.9998) 0.005 0.004 ## ## bmi (cont. var.) 1.02 (1.01,1.04) 1.03 (1.01,1.05) 0.007 0.007 ## ## Log-likelihood = -940.1583 ## No. of observations = 2548 ## AIC value = 1888.3166 ## ## Call: ## glm(formula = hypertension ~ ageyrs + agesq + bmi, family = binomial(link = &quot;logit&quot;), ## data = NHANES) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.32095 -0.61276 -0.33033 -0.18260 2.85207 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -7.54111034 0.71010300 -10.6197 &lt; 2.2e-16 *** ## ageyrs 0.13107997 0.02430813 5.3924 6.951e-08 *** ## agesq -0.00059168 0.00021030 -2.8135 0.004900 ** ## bmi 0.02840320 0.01046359 2.7145 0.006638 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 2319.51 on 2547 degrees of freedom ## Residual deviance: 1880.32 on 2544 degrees of freedom ## AIC: 1888.32 ## ## Number of Fisher Scoring iterations: 6 加入連續型變量 BMI 進入模型後，bmi 項的 Wald 檢驗結果果然證實了 之前殘差圖提示的 BMI 和高血壓患病概率之間存在相關性。再對 Model_NH6 的殘差和 bmi 作殘差散點圖： 圖 66.6: Standardized Pearson residuals vs. BMI. Logistic mdoel with linear and quadratic age and BMI as covariates. 現在的殘差散點圖提示殘差和 bmi 之間不再有關係，所以之前把 bmi 加入邏輯迴歸模型是個並非不合理 (not unreasonable)的選擇。 # 6. So far we have ingored gender. Explore whether gender should be included # in the model. including whether or not the other covariates included # already interact with gender with their effects on hypertension. Model_NH7 &lt;- glm(hypertension ~ ageyrs + agesq + bmi + Gender, data = NHANES, family = binomial(link = &quot;logit&quot;)) logistic.display(Model_NH7) ; summary(Model_NH7) ## ## Logistic regression predicting hypertension ## ## crude OR(95%CI) adj. OR(95%CI) P(Wald&#39;s test) P(LR-test) ## ageyrs (cont. var.) 1.07 (1.06,1.07) 1.14 (1.09,1.2) &lt; 0.001 &lt; 0.001 ## ## agesq (cont. var.) 1.0005 (1.0005,1.0006) 0.9994 (0.999,0.9998) 0.005 0.004 ## ## bmi (cont. var.) 1.02 (1.01,1.04) 1.03 (1.01,1.05) 0.009 0.009 ## ## Gender: Female vs Male 1.1 (0.9,1.36) 1.24 (0.98,1.56) 0.07 0.07 ## ## Log-likelihood = -938.5164 ## No. of observations = 2548 ## AIC value = 1887.0328 ## ## Call: ## glm(formula = hypertension ~ ageyrs + agesq + bmi + Gender, family = binomial(link = &quot;logit&quot;), ## data = NHANES) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.37006 -0.61503 -0.33044 -0.18099 2.89593 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -7.64411420 0.71405324 -10.7052 &lt; 2.2e-16 *** ## ageyrs 0.13206361 0.02435967 5.4214 5.913e-08 *** ## agesq -0.00059709 0.00021066 -2.8344 0.004592 ** ## bmi 0.02730943 0.01043204 2.6178 0.008849 ** ## GenderFemale 0.21213190 0.11703954 1.8125 0.069912 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 2319.51 on 2547 degrees of freedom ## Residual deviance: 1877.03 on 2543 degrees of freedom ## AIC: 1887.03 ## ## Number of Fisher Scoring iterations: 6 lmtest::lrtest(Model_NH6, Model_NH7) ## Likelihood ratio test ## ## Model 1: hypertension ~ ageyrs + agesq + bmi ## Model 2: hypertension ~ ageyrs + agesq + bmi + Gender ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 4 -940.158 ## 2 5 -938.516 1 3.28378 0.069967 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # some evidence of an effect of gender. # the Wald test and the likelihood ratio test are both borderline # statistically significant. Model_NH8 &lt;- glm(hypertension ~ ageyrs + agesq + bmi*Gender, data = NHANES, family = binomial(link = &quot;logit&quot;)) logistic.display(Model_NH8) ## ## Logistic regression predicting hypertension ## ## crude OR(95%CI) adj. OR(95%CI) P(Wald&#39;s test) P(LR-test) ## ageyrs (cont. var.) 1.07 (1.06,1.07) 1.14 (1.09,1.2) &lt; 0.001 &lt; 0.001 ## ## agesq (cont. var.) 1.0005 (1.0005,1.0006) 0.9994 (0.999,0.9998) 0.006 0.005 ## ## bmi (cont. var.) 1.02 (1.01,1.04) 1.05 (1.01,1.08) 0.005 &lt; 0.001 ## ## Gender: Female vs Male 1.1 (0.9,1.36) 3.01 (0.9,10) 0.072 0.072 ## ## bmi:GenderFemale - 0.97 (0.93,1.01) 0.139 0.139 ## ## Log-likelihood = -937.423 ## No. of observations = 2548 ## AIC value = 1886.846 lmtest::lrtest(Model_NH7, Model_NH8) ## Likelihood ratio test ## ## Model 1: hypertension ~ ageyrs + agesq + bmi + Gender ## Model 2: hypertension ~ ageyrs + agesq + bmi * Gender ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 5 -938.516 ## 2 6 -937.423 1 2.18675 0.1392 # no strong evidence of an interaction between BMI and gender # from both wald test and likelihood ratio test. Model_NH9 &lt;- glm(hypertension ~ ageyrs*Gender + agesq + bmi, data = NHANES, family = binomial(link = &quot;logit&quot;)) logistic.display(Model_NH9) ## ## Logistic regression predicting hypertension ## ## crude OR(95%CI) adj. OR(95%CI) P(Wald&#39;s test) P(LR-test) ## ageyrs (cont. var.) 1.07 (1.06,1.07) 1.13 (1.08,1.19) &lt; 0.001 &lt; 0.001 ## ## Gender: Female vs Male 1.1 (0.9,1.36) 0.34 (0.14,0.84) 0.02 0.018 ## ## agesq (cont. var.) 1.0005 (1.0005,1.0006) 0.9994 (0.999,0.9998) 0.004 0.003 ## ## bmi (cont. var.) 1.02 (1.01,1.04) 1.03 (1.01,1.05) 0.008 0.009 ## ## ageyrs:GenderFemale - 1.02 (1.01,1.04) 0.004 0.004 ## ## Log-likelihood = -934.2658 ## No. of observations = 2548 ## AIC value = 1880.5315 lmtest::lrtest(Model_NH7, Model_NH9) ## Likelihood ratio test ## ## Model 1: hypertension ~ ageyrs + agesq + bmi + Gender ## Model 2: hypertension ~ ageyrs * Gender + agesq + bmi ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 5 -938.516 ## 2 6 -934.266 1 8.50127 0.003549 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # strong evidence of an interaction between gender and age lmtest::lrtest(Model_NH6, Model_NH9) ## Likelihood ratio test ## ## Model 1: hypertension ~ ageyrs + agesq + bmi ## Model 2: hypertension ~ ageyrs * Gender + agesq + bmi ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 4 -940.158 ## 2 6 -934.266 2 11.7851 0.00276 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # joint test of gender and its interaction with age is also significant 增加性別項進入邏輯迴歸模型以後，數據提供了臨界有意義證據 \\((p = 0.070)\\) 證明了調整了年齡和 BMI 以後，高血壓的患病概率依然和性別有關係。增加了 BMI 和性別的交互作用項之後發現，無證據證明性別和 BMI 之間存在有意義的交互作用 \\((p=0.139)\\)。但是，增加了年齡和性別的交互作用項以後，發現了有很強的證據證明性別和年齡之間存在交互作用 \\((p=0.004)\\)。增加性別以及性別和年齡的交互作用項，顯著提升了模型對數據的擬合度 \\((p = 0.0028)\\)。此處，我們可以下結論認爲，雖然加入年齡本身，對模型擬合程度提升有有限的幫助，但是當模型考慮了年齡和性別的交互作用之後，擬合數據的程度得到極爲顯著的改善。 當然，想要繼續下去也是可以的，例如 Model_NH9 的前提下，再加入年齡平方與性別的交互作用項，會發現其 Wald 檢驗結果提示年齡平方，和性別的交互作用是沒有意義的 \\((p=0.58)\\)。 # 7. Based on your final model, calculate fitted probabilities for an individual # aged 60 years, at BMI values from 20 to 40 in increments of 5, separately # for men and women, and plot the resulting values. a &lt;- data.frame(bmi = seq(20, 40, 5), ageyrs = rep(60, 5), agesq = rep(3600, 5), Gender = factor(rep(&quot;Male&quot;, 5))) b &lt;- data.frame(bmi = seq(20, 40, 5), ageyrs = rep(60, 5), agesq = rep(3600, 5), Gender = factor(rep(&quot;Female&quot;, 5))) Predict_men &lt;- predict(Model_NH9, a, se.fit = TRUE)$fit Predict_men_se &lt;- predict(Model_NH9, a, se.fit = TRUE)$se.fit Point_pred_men &lt;- exp(Predict_men)/(1+exp(Predict_men)) PredictCI_men_L &lt;- exp(Predict_men - 1.96*Predict_men_se)/(1+exp(Predict_men- 1.96*Predict_men_se)) PredictCI_men_U &lt;- exp(Predict_men + 1.96*Predict_men_se)/(1+exp(Predict_men+ 1.96*Predict_men_se)) cbind(Point_pred_men, PredictCI_men_L, PredictCI_men_U) ## Point_pred_men PredictCI_men_L PredictCI_men_U ## 1 0.20999989 0.16990237 0.25663492 ## 2 0.23409879 0.19980473 0.27227618 ## 3 0.26005285 0.22575914 0.29755387 ## 4 0.28780311 0.24411252 0.33583907 ## 5 0.31724500 0.25701542 0.38428866 Predict_women &lt;- predict(Model_NH9, b, se.fit = TRUE)$fit Predict_women_se &lt;- predict(Model_NH9, b, se.fit = TRUE)$se.fit Point_pred_women &lt;- exp(Predict_women)/(1+exp(Predict_women)) PredictCI_women_L &lt;- exp(Predict_women - 1.96*Predict_women_se)/(1+exp(Predict_women- 1.96*Predict_women_se)) PredictCI_women_U &lt;- exp(Predict_women + 1.96*Predict_women_se)/(1+exp(Predict_women+ 1.96*Predict_women_se)) cbind(Point_pred_women, PredictCI_women_L, PredictCI_women_U) ## Point_pred_women PredictCI_women_L PredictCI_women_U ## 1 0.24913421 0.20076523 0.30471354 ## 2 0.27615418 0.23478059 0.32175308 ## 3 0.30491460 0.26477267 0.34825967 ## 4 0.33528289 0.28659479 0.38774675 ## 5 0.36707847 0.30191960 0.43748678 "],["assess-perf.html", "第 67 章 評價模型的表現 Assessing model performance 67.1 精準度 calibration 67.2 可解釋因變量的變異度及 \\(R^2\\) 決定係數 67.3 分辨能力 descrimination 67.4 Practical 11", " 第 67 章 評價模型的表現 Assessing model performance 在廣義線性迴歸的模型表現中，還有幾個重要的概念，精準度 (calibration)，變異度 (variation)，和分辨能力 (descrimination)，本章繼續用二進制結果變量和多個共變量的廣義線性迴歸模型來理解這幾個概念。本章使用邏輯迴歸，也就是 \\(\\text{logit}\\) 鏈接方程的 GLM 來解釋，但是實際上使用其他鏈接方程時，這些概念也是一樣通用的。 當用邏輯迴歸模型擬合了觀測數據。我們可以通過擬合的模型來計算每個觀測對象的預測“成功”概率 (the predicted probability of “success” for each subject)。當使用 \\(\\text{logit}\\) 作鏈接方程時，每個人的預測概率 (predicted probability) 爲： \\[ \\hat\\pi_i = \\frac{\\text{exp}(\\hat\\alpha + \\hat\\beta_1x_{i1} + \\cdots + \\hat\\beta_px_{ip})}{1+\\text{exp}(\\hat\\alpha + \\hat\\beta_1x_{i1} + \\cdots + \\hat\\beta_px_{ip})} \\] 67.1 精準度 calibration 模型具有良好的精準度時，其計算獲得的每個觀測對象的預測概率，和每個觀測對象本身“成功”的概率期望值保持一致。 \\[ E(Y|\\hat\\pi = p) = p \\] 當一個 GLM 具有良好精準度時，我們可以利用它在臨牀醫學中發揮重要的作用 (如預測患者死亡，發病或療效等)。如果模型的精準度不佳，那可能導致的嚴重後果有：治療不必要治療的“健康人”，或者漏掉應該治療的“患者”。當一個模型的預測變量只包含了分類型變量，比較觀測概率和預測概率的過程較爲簡單，比較各個分類變量的排列組合後，不同共變量類型 (covariate pattern) 的患者的觀測值和預測值即可。 這裏再沿用之前 NHANES 的重度飲酒相關的數據 (Section 66.4)來繼續下面對精準度的說明，先擬合一個只有性別作爲預測變量的邏輯迴歸模型： NHANES &lt;- read_dta(&quot;../backupfiles/nhanesglm.dta&quot;) NHANES &lt;- NHANES %&gt;% mutate(Gender = ifelse(gender == 1, &quot;Male&quot;, &quot;Female&quot;)) %&gt;% mutate(Gender = factor(Gender, levels = c(&quot;Male&quot;, &quot;Female&quot;))) with(NHANES, table(Gender)) ## Gender ## Male Female ## 1391 1157 NHANES &lt;- mutate(NHANES, Heavydrinker = ALQ130 &gt; 5) Model_perf &lt;- glm(Heavydrinker ~ Gender, data = NHANES, family = binomial(link = &quot;logit&quot;)) logistic.display(Model_perf) ## ## Logistic regression predicting Heavydrinker ## ## OR(95%CI) P(Wald&#39;s test) P(LR-test) ## Gender: Female vs Male 0.17 (0.12,0.24) &lt; 0.001 &lt; 0.001 ## ## Log-likelihood = -834.1079 ## No. of observations = 2548 ## AIC value = 1672.2158 完成這個模型之後，在 STATA 裏可以用簡便的 estat gof, table 命令獲取模型擬合的觀測值和期待值表格，然而 R 裏面需要用到 LogisticDx 包裏的診斷命令 dx 獲取 (我花了好幾個小時才找到這個命令，不得不說 STATA 對於流行病的傳統計算真的是比較方便)： LogisticDx::dx(Model_perf)[, 2:6] ## GenderFemale y P n yhat ## 1: 0 249 0.179007908 1391 249 ## 2: 1 42 0.036300778 1157 42 # obtain Pearson&#39;s test statistics chi2 &lt;- sum((LogisticDx::dx(Model_perf)$sPr)^2) pval &lt;- pchisq(chi2, 1, lower.tail=FALSE) data.frame(test=&quot;Pearson chi2(1)&quot;,chi.sq=chi2,pvalue=pval) ## test chi.sq pvalue ## 1 Pearson chi2(1) 7.3480399e-25 1 在這個只有性別作預測變量的邏輯迴歸模型裏，當然只有男，女，兩種共變量模式 (covariate patterns)。此時，模型的精準度100% (y 是觀測值， yhat 是期待值)。接下來，再在模型中加入一個是否體重超重的二進制變量。再獲取其觀測值和期待值表格如下： NHANES &lt;- mutate(NHANES, highbmi = bmi &gt; 25) Model_perf &lt;- glm(Heavydrinker ~ Gender + highbmi, data = NHANES, family = binomial) logistic.display(Model_perf) ## ## Logistic regression predicting Heavydrinker ## ## crude OR(95%CI) adj. OR(95%CI) P(Wald&#39;s test) P(LR-test) ## Gender: Female vs Male 0.17 (0.12,0.24) 0.17 (0.12,0.24) &lt; 0.001 &lt; 0.001 ## ## highbmi 1.21 (0.93,1.58) 1.11 (0.84,1.46) 0.456 0.453 ## ## Log-likelihood = -833.8269 ## No. of observations = 2548 ## AIC value = 1673.6539 LogisticDx::dx(Model_perf)[,2:7] ## GenderFemale highbmiTRUE y P n yhat ## 1: 0 1 175 0.183662501 961 176.499664 ## 2: 0 0 74 0.168605433 430 72.500336 ## 3: 1 1 29 0.037620159 731 27.500336 ## 4: 1 0 13 0.034036770 426 14.499664 # obtain Pearson&#39;s test statistics chi2 &lt;- sum((LogisticDx::dx(Model_perf)$sPr)^2) pval &lt;- pchisq(chi2, 1, lower.tail=FALSE) data.frame(test=&quot;Pearson chi2(1)&quot;,chi.sq=chi2,pvalue=pval) ## test chi.sq pvalue ## 1 Pearson chi2(1) 0.29881856 0.58462403 此時的模型有 4 種共變量模式 (covariate patterns)，其實就是性別和超重與否的四種排列組合。這裏報告的 Pearson's test statisitics 我們在前一章講邏輯迴歸殘差的部分有講過，它就是 Pearson 標準化殘差的平方和。此處它的卡方檢驗，檢驗零假設是“模型制定正確”。所以，我們無足夠的證據 \\((p=0.58)\\) 來反對零假設，數據觀測值和模型的期待值似乎也較爲吻合。 但是一旦模型裏加入了新的連續型變量，整個模型的共變量模式 (covariate patterns)，將會變得很難進行上面的觀測值和期待值的比較，由於加入的連續型變量會導致模型的共變量模式變得越來越多，甚至接近與樣本量個數 \\(n\\)，也就是每個共變量模式的樣本越來越小，直至等於 \\(1\\)。連續型變量的模型中我們 Hosmer-Lemeshow 檢驗 (Section 60.4) 而不是 Pearson 統計檢驗量。 67.2 可解釋因變量的變異度及 \\(R^2\\) 決定係數 精準度的確重要，但是模型精準度好，只代表它和過去擬合它的觀測數據之間關係接近，不代表它能準確地預測其他的個體的概率。前文中只有性別作爲預測變量的邏輯迴歸模型就是實例，它和擬合的觀測數據做到了 100% 完美擬合，但是不用大腦思考也知道，除了性別還有其他更多的能預測一個人是否是重度飲酒者的變量，且擁有能提升模型的擬合程度的潛質。只有性別作預測變量的邏輯迴歸模型，最大的問題在於，它只能解釋個體之間重度飲酒者概率的變異度(variation)中極少的部分。事實上，它只能解釋能夠用性別解釋的個體之間重度飲酒者概率的變異度。所以，此處打算引伸出的概念就是類似簡單線性迴歸中的 \\(R^2\\) 決定係數 (Section 29.2.3) 的定義。 你應該還能記得，在簡單線性迴歸中決定係數 \\(R^2\\) 的含義是因變量的平方和 (平方和) 中能被模型解釋的部分： \\[ R^2 = \\frac{SS_{REG}}{SS_{yy}} = \\frac{\\sum_{i=1}^n(\\hat{y}_i-\\bar{y})^2}{\\sum_{i=1}^n(y_i-\\bar{y})^2} = 1-\\frac{\\sum_{i=1}^n(y_i-\\hat{y}_i)^2}{\\sum_{i=1}^n(y_i-\\bar{y})^2} \\] 許多前人嘗試過試圖將線性迴歸的決定係數概念擴展到廣義線性迴歸模型中來，但是目前爲止的嘗試都不太成功。所以，只有一些借鑑了簡單線性迴歸的的決定係數思想的概念，得到了擴展，但是要注意，他們本身和決定係數是有區別的。 “假決定係數 (pseudo-R2)”，別名 McFadden 的似然比係數 (McFadden’s likelihood ratio index) \\[R^r_{\\text{McFadden}} = 1 - \\frac{\\ell_c}{\\ell_\\text{null}}\\] 其中 \\(\\ell_c, \\ell_{\\text{null}}\\) 分別是模型的極大似然值 和零模型時的極大似然值。 假決定係數，之所以被冠名“假”，因爲這個係數你也可以在簡單線性迴歸下計算，但是其大小常常和一般我們熟知的決定係數結果有些差距。所以，常有人質疑其到底是否可用 (因爲它在現實生活中根本不可能取到 \\(0\\) 或 \\(1\\))。 在 R 裏，擬合了邏輯迴歸以後通常也不會報告假決定係數值的大小。所以想要獲得它，需要 DescTools::PseudoR2() 命令來獲取： PseudoR2(Model_perf) ## McFadden ## 0.078752188 上文中包含了性別和是否超重的模型的假決定係數只有區區 \\(0.0785\\)，可見，只有性別和是否超重兩個變量只能解釋結果變量變異度中極少的部分。 67.3 分辨能力 descrimination 67.3.1 敏感度和特異度 評價一個邏輯迴歸的表現，最後的一個手段是，看這個模型對觀測對象的分辨能力。也就是，當我們人爲地指定一個概率值 \\(p\\) 作爲是否患病的閾值，那麼，觀測對象通過模型計算獲得的概率，已經觀測對象本身的觀測概率之間，其實可以用診斷學的敏感度和特異度的概念來評價模型對於觀測對象的分別能力到底如何。所以邏輯迴歸模型的敏感度就是，病例中通過模型計算被判斷爲陽性的概率；特異度是，非病例中，通過模型計算本判斷爲陰性的概率。這個敏感度特異度當然會隨着我們選擇的閾值而變化。 圖 67.1 所示的是，將性別， BMI，和年齡三個變量放入邏輯迴歸模型之後，模型對於觀察對象的分辨能力的 ROC 示意圖。計算所得的 ROC 曲線下面積爲 0.7484。如果一個模型是失敗的，那麼其曲線下面積爲 (接近) 0.5。也就是會十分貼近 \\(y=x\\) 的直線。 Model_perf &lt;- glm(Heavydrinker ~ Gender + bmi + ageyrs, data = NHANES, family = binomial) ROC_graph &lt;- lroc(Model_perf, grid.col = &quot;grey&quot;, lwd = 3, frame = FALSE) 圖 67.1: Receiver operating curve for model for heavy drinking with gender, age, and BMI ROC_graph$auc ## [1] 0.74835297 曲線下面積，AUC 的另一個有用的意義是，從觀測對象中任意選取兩個人，一個是病例 \\((y_i = 1)\\)，一個是非病例 \\((y_j = 0)\\)，那麼曲線下面積就是模型能夠正確將這兩個對象按照是否患病的可能性進行排序的概率。 \\(\\text{AUC} = \\text{Pr}(\\pi_i &gt; \\pi_j | y_i = 1 \\&amp; y_j = 0)\\) ROC 曲線本身有自己的優點，也有許多侷限性。最近有另外一個用於診斷的新型曲線–預測曲線(Pepe et al. 2007)。預測曲線繪製的是，觀測對象的擬合後概率 \\(\\hat\\pi_i\\) 和這個概率在所有觀察對象的擬合後概率的百分位數 (percentile) 之間的曲線。一個模型，如果給許多對象相似的概率，那麼不能說這個模型的分辨能力足夠好。同時，此圖也能一目瞭然讓人看到大概多少對象的患病概率是大於一定水平的。 Predictive &lt;- data.frame(fitted(Model_perf), rank(fitted(Model_perf))/2548) names(Predictive) &lt;- c(&quot;hatpi&quot;, &quot;percentile&quot;) ggplot(Predictive, aes(x = percentile, y = hatpi)) + geom_line() + ylim(0, 0.4) + labs(x = &quot;Risk percentile&quot;, y = &quot;Heavy drinker risk&quot;) + theme_bw() + theme(axis.title = element_text(size = 17), axis.text.x = element_text(size = 15), axis.text.y = element_text(size = 15)) 圖 67.2: Predictiveness curve for model for heavy drinking with gender, age, and BMI as covariate 圖 67.2 所示的是，性別，年齡，BMI作爲共變量的邏輯迴歸模型的預測變量，預測重度飲酒概率的模型給出的預測曲線。從圖中可見，大多數人的概率值各不相同。而且，圖中也能告訴我們大約 20% 的觀測對象其重度飲酒的概率大於 0.2。 67.4 Practical 11 本次練習題中我們將會探索模型表現的評估方法和可能出現的問題。數據是前文中使用的 nhanesglm.dta。 NHANES &lt;- read_dta(&quot;../backupfiles/nhanesglm.dta&quot;) References "],["paired-ana.html", "第 68 章 配對實驗數據的分析法 68.1 配對的原理 68.2 結果變量爲連續型變量的配對實驗 68.3 結果變量是二進制變量的配對實驗 68.4 條件 (conditional) 比值比和邊際 (marginal) 比值比", " 第 68 章 配對實驗數據的分析法 配對實驗是指觀察對象中的一個以上 (通常是2-3個) 以事先確定的條件進行配對 (matched under conditions)。配對實驗中根據條件配對後的觀察對象常常被稱爲一個個區塊 (block)。 例1： 配對交叉設計實驗，結果變量爲連續型。 給予五十名實驗對象抗高血壓藥物用於降低其舒張期血壓 (diastolic blood pressure)。舒張期血壓在實驗前 \\((y_{i1})\\) 和實驗後 \\((y_{i2})\\) 分別測量。此時的實驗區塊是每個患者的自身前後對照數據。 例2： 干預實驗，結果變量爲二進制型。 77名已經有眼底病變的糖尿病患者被選爲實驗對象，每人隨機選取一隻眼睛接受最新的雷射激光治療，另一隻眼睛使用標準治療法。經過五年的隨訪，觀察患者的兩隻眼睛是病變爲全盲 (是/否)。此時的實驗區塊是每個患者自己，左右眼互爲對照。 例3： 隊列研究中的配對設計，結果變量爲二進制型。 100 名觀察對像根據性別年齡和 100 名服他汀類藥物 (statin) 的患者，以高膽固醇血癥的有無作爲對照變量 (病例對照同時患病，或同時無病) 一一對應。這 200 名對象被追蹤隨訪 3 年，記錄他們是否罹患心血管疾病。此時的實驗區塊，是 100 個成對的實驗對象。 例4： 配對病例對照實驗。 20 名肺癌患者，和另外 20 名沒有肺癌的對照以同年齡，同性別爲條件配對。研究人員詢問每個實驗參與者過去的吸菸史。本實驗的結果變量爲對象是否吸過香菸。此時的實驗區塊是一名肺癌患者和一名同年齡，同性別的對照。 配對實驗中，我們通常認爲在每個區塊裏的個人，或者他們的測量值應該比不同一區塊裏的觀察對象的測量值更加相似。 例1 中，每個個體實驗前後的血壓值，理論上會比另外一個個體的血壓值相比更加接近，無論他是否接受抗高血壓治療，故每個個體本身，構成了“完美”的病例 (實驗前) 和對照 (實驗後)。 例3 中，無論一個人是否服用他汀類藥物，兩個同時都是高膽固醇血癥的人理論上會比無此症狀的人更加有可能罹患心血管疾病。 例4 中，年齡和性別可能既和一個人是否患有肺癌有關係，也和一個人是否吸菸有關。所以，在考察吸菸和肺癌關係的時候，需要在相同年齡，性別的條件下才是公平的。 68.1 配對的原理 不同的實驗，配對的設計可能有不同的理由： 在 RCT 設計中，配對實驗是爲了提升實驗數據對治療的真實效果的估計 (to improve the precision of the estimated effect of the treatment on the outcome)； 隊列研究和病例對照研究中，使用配對實驗設計 主要是爲了在實驗設計階段就控制已知的混雜因素。當然有時也有人使用配對設計去提升差異估計的精確度。 68.1.1 爲了提升估計的精確度 使用配對實驗設計，獲得數據以後就應使用相應的統計手法，從而達到提高差異估計的精確度的目的。因爲配對實驗設計允許我們在分析階段去除掉 “區塊差異 block variability”： \\[ \\begin{aligned} Y_{ij} &amp; = C_j + P_i + O_{ij} \\\\ \\text{Where } Y_{ij} &amp; = \\text{outcome for block } i \\text{ under treatment } j\\\\ C_j &amp; = \\text{component of outcome due to treatment } j \\\\ P_i &amp; = \\text{component of outcome due to characteristics of block } i\\\\ O_{ij} &amp; = \\text{residual component of outcome} \\end{aligned} \\] 在上述式子描述的配對實驗設計下，如果成對的觀察值是 \\(Y_{i1}, Y_{i2} (i = 1,\\cdots, n)\\)，那麼可以把二者的差用於估計治療效果： \\[ \\begin{equation} Y_{i2} - Y_{i1} = C_2 - C_1 + O_{i2} - O_{i1} \\end{equation} \\tag{68.1} \\] 所以，配對實驗中，由於區塊 \\((P_i)\\) 造成的估計的方差被從隨機變異 (random variation) 中去除掉，\\(C_j\\) 之間的差異的估計精確度得到提高。這一結論在結果變量是連續型或是二進制型中同樣適用。 68.1.2 控制混雜因素 在病例對照實驗中，常常用配對設計來控制已知的混雜。但是必須強調的是，如果實驗設計中用了配對，那麼統計分析時，也必須用配對實驗的分析方法。 隊列研究中： 暴露組對象和非暴露組對象之間的配對根據一些已知的混雜變量，常見的如年齡和性別配對。 病例對照研究中：病例和對照之間通過某些特徵配對，從而控制這些特徵的混雜，常見的也是年齡和性別。另外還有的病例會從他/她居住的區域附近中尋找相似的對照，或者從他/她的家庭醫生的患者中尋找相似的對象，這時配對設計爲的是控制那些可能無法精確測量的如社會經濟條件，或環境因子。有些研究會尋找病例同一家族中的非患病者作爲對照，從而達到控制 “遺傳因素” 這一混雜因子的效果。 68.2 結果變量爲連續型變量的配對實驗 用 \\(Y_{i1}, Y_{i2}, (i = 1,\\cdots, n)\\) 標記 \\(n\\) 組配對實驗對象的結果變量的測量值。所以每對實驗對象中的兩個成員，分別被給予不同的實驗條件 (治療或安慰劑，暴露或非暴露)，用數字 \\(1,2\\) 表示。所以，分析此種數據的策略是，計算每個實驗區塊的結果變量之差： \\[ \\begin{equation} Y_{i2} - Y_{i1}, (i = 1, \\cdots, n) \\end{equation} \\tag{68.2} \\] 那麼，配對實驗的結果變量是連續型變量時，等同於單樣本的假設檢驗，零假設是結果變量在不同實驗條件下的差等於零。 68.2.1 一般檢驗方法 常用的有： 均值的配對 \\(t\\) 檢驗。其實就是和 \\(0\\) 作比較的單樣本 \\(t\\) 檢驗 (Section 23.6)； Wilcoxon 配對檢驗 (Wilcoxon matched pairs test)。此法其實是 Wilcoxon 符號秩和檢驗 (Wilcoxon signed rank test)，在零假設是兩組數據中位數之差等於零的條件下的假設檢驗 (Section 37.2)。 符號檢驗 (Sign test) (Section 37.1)。 例：17名實驗對象同時給予抗高血壓治療，數據記錄了實驗前後收縮壓的測量值： library(haven) sbp &lt;- read_dta(&quot;../backupfiles/sbp.dta&quot;) sbp ## # A tibble: 17 × 4 ## ptid sbp_A sbp_B diff_AB ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 148 132 16 ## 2 2 128 120 8 ## 3 3 152 148 4 ## 4 4 135 134 1 ## 5 5 150 128 22 ## 6 6 165 140 25 ## 7 7 155 138 17 ## 8 8 132 136 -4 ## 9 9 140 135 5 ## 10 10 165 144 21 ## 11 11 145 115 30 ## 12 12 140 126 14 ## 13 13 135 140 -5 ## 14 14 135 130 5 ## 15 15 122 132 -10 ## 16 16 144 118 26 ## 17 17 158 115 43 ## Wilcoxon signed-rank test wilcox.test(sbp$sbp_A, sbp$sbp_B, paired = TRUE, correct = FALSE) ## ## Wilcoxon signed rank test ## ## data: sbp$sbp_A and sbp$sbp_B ## V = 137.5, p-value = 0.0038567 ## alternative hypothesis: true location shift is not equal to 0 ## 秩和檢驗結果提示，數據提供了顯著性水平低於 1% (0.0038567) 的證據 ## 證明實驗前後收縮期血壓值的變化的中位數不等於零。 ## 由此可以下結論，數據能夠提供足夠的證據證明實驗前後的收縮期血壓的 ## 分佈，是不同的。 ## 注意，這不是一個 RCT，所以，這樣的不同不一定是由於抗高血壓治療。 ## 3 different methods to conduct sign test Positive_n &lt;- sum(sbp$diff_AB &gt;0) total_n &lt;- length(sbp$diff_AB) 2*pbinom(total_n-Positive_n, total_n, 0.5) ## sign test -- just p-value ## [1] 0.01272583 binom.test(Positive_n, total_n,0.5) ## sign test through binomial test ## ## Exact binomial test ## ## data: Positive_n and total_n ## number of successes = 14, number of trials = 17, p-value = 0.012726 ## alternative hypothesis: true probability of success is not equal to 0.5 ## 95 percent confidence interval: ## 0.56568213 0.96201493 ## sample estimates: ## probability of success ## 0.82352941 BSDA::SIGN.test(sbp$sbp_A, sbp$sbp_B) ## sign-test from BSDA package ## ## Dependent-samples Sign-Test ## ## data: sbp$sbp_A and sbp$sbp_B ## S = 14, p-value = 0.012726 ## alternative hypothesis: true median difference is not equal to 0 ## 95 percent confidence interval: ## 4.0101487 21.9898513 ## sample estimates: ## median of x-y ## 14 ## ## Achieved and Interpolated Confidence Intervals: ## ## Conf.Level L.E.pt U.E.pt ## Lower Achieved CI 0.8565 5.0000 21.0000 ## Interpolated CI 0.9500 4.0101 21.9899 ## Upper Achieved CI 0.9510 4.0000 22.0000 符號檢驗的結果，相比 Wilcoxon 秩和檢驗的結果來說， P 值稍大，由於符號檢驗需要的假設前提比 Wilcoxon 秩和檢驗更少，更穩健 (檢驗效能更低, lacks power)。即便如此，數據依然提供足夠的證據 (p = 0.01273) 證明，實驗前後的收縮期血壓的中位數之差不等於零。 下面是 STATA 中同一數據的 Wilcoxon 秩和檢驗和符號檢驗的結果，和上面的 R 輸出結果作比較： . signrank sbp_A = sbp_B Wilcoxon signed-rank test sign | obs sum ranks expected -------------+--------------------------------- positive | 14 137.5 76.5 negative | 3 15.5 76.5 zero | 0 0 0 -------------+--------------------------------- all | 17 153 153 unadjusted variance 446.25 adjustment for ties -0.63 adjustment for zeros 0.00 ---------- adjusted variance 445.63 Ho: sbp_A = sbp_B z = 2.890 Prob &gt; |z| = 0.0039 . signtest sbp_A = sbp_B Sign test sign | observed expected -------------+------------------------ positive | 14 8.5 negative | 3 8.5 zero | 0 0 -------------+------------------------ all | 17 17 One-sided tests: Ho: median of sbp_A - sbp_B = 0 vs. Ha: median of sbp_A - sbp_B &gt; 0 Pr(#positive &gt;= 14) = Binomial(n = 17, x &gt;= 14, p = 0.5) = 0.0064 Ho: median of sbp_A - sbp_B = 0 vs. Ha: median of sbp_A - sbp_B &lt; 0 Pr(#negative &gt;= 3) = Binomial(n = 17, x &gt;= 3, p = 0.5) = 0.9988 Two-sided test: Ho: median of sbp_A - sbp_B = 0 vs. Ha: median of sbp_A - sbp_B != 0 Pr(#positive &gt;= 14 or #negative &gt;= 14) = min(1, 2*Binomial(n = 17, x &gt;= 14, p = 0.5)) = 0.0127 68.2.2 用迴歸法分析 配對實驗數據還可以使用迴歸手段分析。使用迴歸分析時，需要考慮兩種不同的情形： 配對使用的特徵具有唯一性，即有且只有一個對照。 自己作自己的對照，如實驗前實驗後的觀測值變化； 同一個實驗對象，左右兩眼隨機抽取一隻作病例，一隻作對照； 病例和自己的配偶配對。 配對使用的特徵不具有唯一性，病例可以有多個潛在對照。 病例和性別相同，年齡相近的對照； 第 1 種情況：配對使用的特徵具有唯一性 用 \\(Y_{ij}\\) 標記第 \\(j\\) 個配對實驗區塊中第 \\(i\\) 個對象的觀測結果。我們可以使用下面的迴歸模型： \\[ \\begin{equation} Y_{ij} = \\beta_0 + \\beta_1 X_{ij} + \\gamma_j + \\varepsilon_{ij} \\end{equation} \\tag{68.3} \\] 其中， \\(\\gamma_j\\) 是第 \\(j\\) 個配對實驗區塊的固定效應 (fixed effect)；\\(\\varepsilon_{ij}\\) 是殘差。這個模型可以在簡單線性迴歸中直接加入一個代表不同配對實驗區塊的變量 (分類型) 進行調整即可。用簡單線性迴歸擬合 (68.3) 是一個等同於配對 \\(t\\) 檢驗的迴歸方程。 注意：在迴歸模型中加入代表實驗區塊的分類型變量調整僅適用與簡單線性迴歸。非線性迴歸例如邏輯迴歸，方程中試圖加入區塊變量作爲固定效應是不合適的。 在模型中加入隨機效應 (random effect)，作爲另一種迴歸手段，則可以同時應用於線性迴歸和非線性迴歸。這種模型被叫做分層迴歸模型 (hierarchical models)，或混合效應模型 (mixed effect model)，或隨機效應模型 (random effect model)。這將會在等級線性回歸 (Section 72) 這一章節中詳細討論，此處且先按下不表。 第 2 種情況：配對使用的特徵不具有唯一性 用 \\(Y_i\\) 標記第 \\(i\\) 個個體的觀測結果， \\(X_i\\) 標記主要關心的暴露變量，\\(W_i\\) 標記用於配對的一系列變量的向量。那麼我們可以擬合兩種迴歸模型，差別在於是否調整配對變量向量： \\[ \\begin{equation} Y_i = \\beta_0 + \\beta_1 X_i + \\varepsilon_i \\end{equation} \\tag{68.4} \\] \\[ \\begin{equation} Y_i = \\beta_0 + \\beta_1 X_i + \\beta_2^TW_i + \\delta_i \\end{equation} \\tag{68.5} \\] 需要指出的是，這兩個模型，都是合理有效的迴歸模型，理論上會給出相同或者十分近似的 \\(\\beta_1\\) 估計。因爲配對，意味着在該樣本中，\\(X_i\\) 和 \\(W_i\\) 是無關的，所以加入 \\(W_i\\) 不會影響 \\(\\beta_1\\) 的估計值。即使，實驗樣本所來自的潛在人羣 (the unerlying population) 中，\\(X_i, W_i\\) 是相關的 (也是最主要的要拿 \\(W_i\\) 進行配對的動機所在)，兩個模型給出的 \\(\\beta_1\\) 估計理論上也不會有太大差距。但是，如果說配對是爲了控制混雜 (即人羣中 \\(X_i, W_i\\) 是相關的)，建議應該使用模型 (68.5)。因爲模型 (68.5) 給出的 \\(\\beta_1\\) 的標準誤估計會比較小 (更小的信賴區間，更精確)。 前一節提到的一般檢驗法，是直接把“配對”這個條件放在檢驗過程中，它們只關心差異大小是否有意義。本小節討論的迴歸方法，則需要一些前提假設 (參考簡單線性迴歸的前提和邏輯迴歸的前提)。當前提條件可以滿足時，我們會更推薦使用迴歸方法對配對數據進行檢驗。因爲通常除了拿來配對的變量，我們對觀察對象還收集了其他的潛在混雜因子數據，使用迴歸方法可以進一步對其餘未用於配對的變量進行調整。 68.3 結果變量是二進制變量的配對實驗 用 \\(Y_{i1}, Y_{i2} (i = 1,\\cdots,n)\\) 標記 \\(n\\) 個配對的二進制型的結果變量，其對應的暴露變量是 \\(X_{i1}, X_{i2}\\)。 這樣的數據，有兩種方法來分析暴露和結果之間是否相關： McNemar’s test; Odds ratio. 用前文中糖尿病患者眼底病變和是否變盲的例子來說明就是：第 \\(i\\) 個實驗對象，他/她接受標準治療的眼睛是否變盲，決定了 \\(Y_{i1} = 1 \\text{ or } 0\\)；他/她接受新的治療的那隻眼睛是否變盲決定了 \\(Y_{i2} = 1 \\text{ or } 0\\)。 但是，用病例對照實驗 (肺癌例) 來解釋時，20 名肺癌患者被一一和同性別，年齡相近的 20 名非肺癌對象配對，每個實驗對象都被詢問其吸菸史。這樣的配對病例對照實驗的設計，決定了其實際上是把我們關心的問題 (吸菸是否導致肺癌) 逆轉了的 (肺癌患者中吸菸的比例是否大於沒有患肺癌的人)。此時應當使用 比值比 Odds ratio 來評價吸菸和肺癌之間的關係。 68.3.1 第一步 對數據作表格 有兩種方式對結果變量是二進制變量的實驗數據作表格歸納。其一，配對與否的信息被忽略掉 (表格 68.1)；其二，包含配對信息 (表格 68.2)。 表 68.1: Unmatched presentation of data from a study with binary outcome and binary treatment New treatment Standard treatment Blind 10 34 Not blind 67 43 Total 77 77 表 68.2: Matched presentation of data from a study with binary outcome and binary treatment New treatment Not blind Blind Standard treatment Not blind 39 4 43 Standard treatment Blind 28 6 34 Standard treatment 67 10 77 68.3.2 McNemar’s test 下面的表格，是前面表格 68.2 的一般化形式。可以用於 McNemar 檢驗。在暴露對象中，結果變量等於 \\(Y_{i1} = 1\\) 的配對數量的比例是 \\(p_1 = (n_{10} + n_{11})/n\\)；在非暴露對象中，結果變量等於 \\(Y_{i2} = 2\\) 的配對數量的比例是 \\(p_2 = (n_{01} + n_{11})/n\\)。 表 54.3 General arrangement of data for McNemar’s test Exposed \\((j = 1)\\) Failure \\((Y_{i1} = 0)\\) Success \\((Y_{i1} = 1)\\) Unexposed \\((j = 2)\\) Failure \\((Y_{i2} = 0)\\) \\(n_{00}\\) \\(n_{10}\\) \\(n_{00}+n_{10}\\) Success \\((Y_{i2} = 1)\\) \\(n_{01}\\) \\(n_{11}\\) \\(n_{01}+n_{11}\\) \\(n_{00}+n_{01}\\) \\(n_{10}+n_{11}\\) \\(n\\) McNemar 檢驗的零假設是，\\(p_2 - p_1 = 0\\)，其實這等價於比較表格中 \\(n_{10}, n_{01}\\) 是否相等。所以，在零假設條件下： \\[ n_{10} \\sim \\text{Binomial}(n_{10} + n_{01}, 0.5) \\] 此時既可以選用精確的二項分佈檢驗，也可以用正態分佈近似法進行假設檢驗。用表格 68.2 的數據進行的檢驗結果如下： binom.test(28, 32, 0.5) ## ## Exact binomial test ## ## data: 28 and 32 ## number of successes = 28, number of trials = 32, p-value = 0.000019301 ## alternative hypothesis: true probability of success is not equal to 0.5 ## 95 percent confidence interval: ## 0.71005158 0.96486935 ## sample estimates: ## probability of success ## 0.875 68.3.3 二進制型結果變量配對實驗的比值比 McNemar 檢驗只能用於判斷暴露和結果之間是否有關係。衡量這個關係的大小，還需要用比值比 (odds ratio)。我們已知可以用 Mantel Haenszel 方法來總結以某個分類變量爲條件的分層/合併比值比。同樣的方法也可以用於配對實驗數據的分析。此時的分層變量使用的是配對的實驗區塊 (blocks)。每個實驗區塊的數據可以歸納成下面的表格： 表 54.4 Example of matched data in stratum \\(i\\): numbers of individuals in stratum \\(i\\) with each combination Unexposed (0) Exposed (1) Outcome 0 \\(a_i\\) \\(b_i\\) Outcome 1 \\(c_i\\) \\(d_i\\) 實驗區塊 \\(i\\) 的比值比 OR 是： \\[ \\text{OR} = \\frac{a_id_i}{b_ic_i} \\] Mantel Haenszel 合併 OR 是： \\[ \\Psi = \\frac{\\sum_i(a_id_i/n_i)}{\\sum_i(b_ic_i/n_i)} \\\\ \\text{where } n_i = 2 \\] 可以繼續推導： \\[ \\begin{aligned} \\Psi &amp; = \\frac{\\sum_i(a_id_i/n_i)}{\\sum_i(b_ic_i/n_i)} \\\\ &amp; = \\frac{\\text{number of blocks with } Y_{i1} = 1 \\;\\&amp;\\; Y_{i2} = 0}{\\text{number of blocks with } Y_{i1} = 0 \\;\\&amp;\\; Y_{i2} = 1} \\\\ &amp; = \\frac{n_{10}}{n_{01}} \\end{aligned} \\] 所以，從上述推導可知，在配對實驗中，比值比只取決於那些配對中出現了不同結果的數據。這些結果不一致的配對被命名爲不一致配對 (discordant pairs)。那些結果變量相同的配對對最終的比值比估計毫無用處。 68.3.4 配對實驗比值比的信賴區間 配對實驗比值比信賴區間的精確計算步驟如下： \\(\\pi\\) 標記暴露對象中，結果變量等於 \\(Y_{i1} = 1\\)，且非暴露對象中，結果變量等於 \\(Y_{i2} = 0\\) 的配對數在全部不一致配對數中所佔的比例：\\[\\hat\\pi = \\frac{n_{10}}{n_{10} + n_{01}}\\] \\(\\Psi\\) 爲不一致配對的比值比：\\[\\hat\\Psi = \\frac{n_{10}}{n_{01}}\\] \\(\\pi, \\Psi\\) 之間的關係是：\\[\\Psi = \\frac{\\pi}{1-\\pi}\\] \\(n_{10}\\) 服從二項分佈：\\[n_{10}\\sim \\text{Binomial}(n_{10} + n_{01}, \\pi)\\] 根據二項分佈的性質計算 \\(\\pi\\) 的信賴區間： \\[\\pi_L, \\pi_U\\] 所以 \\(\\Psi\\) 的信賴區間就可以計算爲：\\[(\\frac{\\pi_L}{1-\\pi_L},\\frac{\\pi_U}{1-\\pi_U})\\] 用表格68.2 的數據計算其比值比估計： \\[\\hat{\\text{OR}} = \\frac{n_{10}}{n_{01}} = \\frac{4}{28} = 0.14\\] \\(n_{10} = 4 \\sim \\text{Binomial}(32, \\pi = 4/32 = 0.125)\\) 所以 \\(\\pi\\) 的 95% 信賴區間爲： FSA::binCI(4, 32) ## 95% LCI 95% UCI ## Exact 0.035130653 0.28994842 ## Wilson 0.049701344 0.28068305 ## Asymptotic 0.010413848 0.23958615 那麼該比值比的精確 95% 信賴區間爲： \\[ \\begin{aligned} &amp; (\\frac{0.03513065}{1-0.03513065},\\frac{0.2899484}{1-0.2899484}) \\\\ =&amp; (0.036, 0.408) \\end{aligned} \\] 精確計算的結果和 R 裏獲得的結果一致： library(exact2x2) mcnemar.exact(matrix(c(39, 28, 4, 6),2,2)) ## ## Exact McNemar test (with central confidence intervals) ## ## data: matrix(c(39, 28, 4, 6), 2, 2) ## b = 4, c = 28, p-value = 0.000019301 ## alternative hypothesis: true odds ratio is not equal to 1 ## 95 percent confidence interval: ## 0.036409751 0.408348391 ## sample estimates: ## odds ratio ## 0.14285714 68.4 條件 (conditional) 比值比和邊際 (marginal) 比值比 從配對實驗獲得的比值比是條件比值比 (conditional odds ratio)，所謂條件比值比，意思就是從配對實驗獲得的比值比是以配對的試驗區塊爲條件的。 用表格 68.2 的糖尿病患者眼底病變的數據來進一步解釋：該實驗獲得的條件比值比爲 0.143，實驗區塊是每位眼底發生病變的糖尿病患者本身。這個條件比值比應被正確解讀爲：每位眼底發生病變的患者中的兩隻眼睛中接受新療法的眼睛最終失明的機率 (odds)，和另一隻接受標準療法的眼睛最終失明的機率的比值是 0.143。數學表達式標記爲： \\[ \\text{Conditional OR} = \\frac{\\frac{\\text{Pr(Blind|new, individual) } i}{\\text{Pr(Not Blind|new, individual) } i}}{\\frac{\\text{Pr(Blind|standard, individual) } i}{\\text{Pr(Not blind|standard, individual) } i}} \\] 此條件比值比被認爲在不同的發生眼底病變的糖尿病患者\\((i)\\)中保持不變。需要指出的是這個條件比值比不等同於認爲在糖尿病人羣中接受新療法治療的眼睛失明機率和接受標準療法的眼睛失明機率之比爲 0.134 (邊際比值比 marginal odds ratio)。邊際比值比的數學表達式爲： \\[ \\text{Marginal OR} = \\frac{\\text{Pr(Blind | new)/Pr(Not blind | new)}}{\\text{Pr(Blind | standard)/Pr(Not blind | standard)}} \\] 如果要估計上式的邊際比值比，我們需要有糖尿病人羣中失明的危險度 (the risk of blindness in the population)，以及失明高危人羣，低危人羣各自接受標準療法的失明概率。假如已知如下的信息： 糖尿病人羣中有 50% 的人可以被歸類爲失明高危人羣 (high risk, HR)，另 50% 可以被歸類會失明低危人羣 (low risk, LR)； 接受標準療法時，高危人羣失明的概率是 90%，低危人羣失明的概率是 10%。 上述信息告訴我們，總體糖尿病人羣中接受標準療法失明的概率 \\(\\text{Pr(Blind|standard)}\\) 是： \\[ \\begin{aligned} \\text{Pr(Blind|standard)} &amp; = \\text{Pr(Blind|standard,HR)Pr(HR)} \\\\ &amp; \\;\\;\\;+ \\text{Pr(Blind|standard, LR)Pr(LR)} \\\\ &amp; = 0.9\\times0.5 + 0.1\\times0.5 = 0.5 \\end{aligned} \\] 再利用條件比值比 \\(0.143\\) 我們可以計算糖尿病人羣中接受新療法失明的概率 \\(\\text{Pr(Blind | new)}\\) 是： \\[ \\begin{aligned} \\frac{\\text{Pr(Blind|new, HR)}}{\\text{PR(Not blind | new, HR)}} &amp; = 0.143 \\times \\frac{\\text{Pr(Blind|standard, HR)}}{\\text{Pr(Not blind|standard, HR)}} \\\\ &amp; = 0.143 \\times \\frac{0.9}{0.1} = 1.287 \\\\ \\frac{\\text{Pr(Blind|new, LR)}}{\\text{PR(Not blind | new, LR)}} &amp; = 0.143 \\times \\frac{\\text{Pr(Blind|standard, LR)}}{\\text{Pr(Not blind|standard, LR)}} \\\\ &amp; = 0.143 \\times \\frac{0.1}{0.9} = 0.016 \\\\ \\Rightarrow \\text{Pr(Blind|new, HR)} &amp; = 1.287/(1+1.287) = 0.563 \\\\ \\text{Pr(Blind|new, LR)} &amp; = 0/016/(1+0.016) = 0.016 \\\\ \\Rightarrow\\;\\;\\; \\text{Pr(Blind | new)} &amp; = \\text{Pr(Blind|new, HR)Pr(HR)} + \\text{Pr(Blind|new, LR)PR(LR)} \\\\ &amp; = 0.563\\times0.5 + 0.016\\times0.5 = 0.290 \\end{aligned} \\] 獲得了 \\(\\text{Pr(Blind|standard), Pr(Blind | new)}\\) 之後，邊際比值比 (糖尿病人羣中接受新療法治療的眼睛失明機率和接受標準療法的眼睛失明機率之比)： \\[ \\begin{aligned} \\text{Marginal OR} &amp; = \\frac{\\text{Pr(Blind | new)/Pr(Not blind | new)}}{\\text{Pr(Blind | standard)/Pr(Not blind | standard)}} \\\\ &amp; = \\frac{0.5/(1-0.5)}{0.290/(1-0.290)} = 0.408 \\end{aligned} \\] 比起條件比值比 (0.143)，邊際比值比 (0.408) 要大出許多來。 "],["conditional-logistic.html", "第 69 章 條件邏輯迴歸 Conditional logistic regression 69.1 配對實驗的邏輯迴歸模型 69.2 條件邏輯回歸 – 二進制暴露變量 69.3 條件邏輯回歸模型的一般化", " 第 69 章 條件邏輯迴歸 Conditional logistic regression 配對實驗設計可以用於 RCT，隊列研究，病例對照研究： RCT實驗設計中，接受治療方案 A 的患者，和接受治療方案 B 的患者，以 1:1 的比例按照他們的某種醫學特徵配對。這種配對可以是同一個患者在交叉設計RCT 實驗中的觀測值，也可以是同一個患者接受治療的前後測量值，當然還可以是同一個患者的左右兩隻眼睛 (手臂，腿，等等)； 隊列研究裏，暴露和非暴露對象根據事先決定的配對原則配對 (相同性別，年齡接近，或者居住在同一社區，或者是同一家庭中暴露和非暴露的兩個個體)； 病例對照研究裏，病例和非病例按照事先決定的配對原則配對，一個病例可能和一個或者多個對照相匹配。 本章節着重討論病例對照研究中，條件邏輯迴歸模型的使用。在病例對照研究中，配對設計極爲常見。如同前面提到的那樣，在病例對照研究的設計階段，研究者可能設計一個病例和一個或者多個對照進行配對。要研究的暴露因素變量可以是多種多樣的 (二進制，或連續型)，且可以考慮對多個不同的暴露進行觀察和分析時的調整。相反，隊列研究中能夠進行配對的暴露就只能僅限於二進制變量。所以，病例對照研究中對某個特徵進行的配對，其實是對病例-對照這樣的實驗設計本身與生俱來的特質進行了合理的利用。隊列研究則沒有了這樣的優勢，所以隊列研究中使用配對設計的其實不太常見。 配對病例對照研究中，研究者常用一些最常見的混雜因素作爲配對的變量 (如性別年齡)，且這些配對所使用的變量本身不是該實驗主要探討的話題。有些研究者還認爲配對是一個方便地尋找對照組的手段。當然，選取對照組的原則，可以是具有唯一性的配對原則 (使對照有且僅有1-2個)，或者是無唯一性的配對原則 (病例可以有多個潛在的對照)。唯一性配對原則導致的最大問題是，你可能根本找不到合適的對照，所以研究者會更傾向於把配對原則放寬一些，以獲取足夠的對照組樣本量，但是這也會帶來別的附加問題，那就是需要用匹配的數學模型來控制殘差之間的依賴性 (residual dependency)。在考慮了生存時間的一些病例對照研究中，原則上還會考慮選取和病例存活相同時間 (年齡) 的人作對照，詳細會繼續在生存分析中深入探討。 69.1 配對實驗的邏輯迴歸模型 定義 \\(X_u\\) 是一個簡單的二進制暴露變量，\\(D_u\\) 是一個簡單的二進制結果變量，\\(u = 1, \\cdots, n\\) 是配對的個數。第 \\(u\\text{th}\\) 組中的研究對象，互爲配對。在某些特殊場合，每組配對只有2個研究對象 (例如糖尿病患者的左右兩隻眼睛)。 用概率標記法定義每個患者的概率： \\[ \\begin{equation} \\pi_{u;xd} = \\text{Pr}(X_u = x, D_u = d) \\end{equation} \\tag{69.1} \\] 用 (Section 64.2) 中相似的表格來理解，第 \\(u\\) 組 \\((u = 1, \\cdots, n)\\) 配對中的研究對象可以用下表來歸納其概率。 表 55.1: Separate samples from subpopulations \\(D=0,1\\) with relavant conditional probabilities in a matched case-control study within each pair \\(D\\) \\(0\\) \\(1\\) \\(X\\) \\(0\\) \\(\\pi_{u;00}\\) \\(\\pi_{u;01}\\) \\(1\\) \\(\\pi_{u;10}\\) \\(\\pi_{u;11}\\) \\(\\text{Pr}(X_u=x|D_u=d)\\) \\(\\frac{\\pi_{u;10}}{\\pi_{u;10}+\\pi_{u;00}}\\) \\(\\frac{\\pi_{u;11}}{\\pi_{u;11}+\\pi_{u;01}}\\) 那麼第 \\(u\\) 組配對中，暴露和結果之間真實的比值比 (odds ratio)是： \\[ \\begin{equation} \\frac{\\pi_{u;11}\\pi_{u;00}}{\\pi_{u;10}\\pi_{u;01}} \\end{equation} \\tag{69.2} \\] 所以，在配對病例對照研究中，我們假設這樣的前提得到滿足：每個配對中的比值比是不變的 (we assume that the true log odds ratio relating exposure to disease is the same for all pairs)： \\[ \\begin{equation} \\frac{\\pi_{u;11}\\pi_{u;00}}{\\pi_{u;10}\\pi_{u;01}} = e^\\beta \\end{equation} \\tag{69.3} \\] 69.1.1 配對病例對照研究 在探討非配對的病例對照研究時，我們給二進制型暴露變量定義過下列邏輯迴歸模型 (Section 64.2.3)： \\[ \\begin{equation} \\text{Pr}(X_i = 1 | D_i = d_i) = \\frac{e^{\\lambda^*+\\beta d_i}}{1+e^{\\lambda^*+\\beta d_i}}\\\\ \\text{Where } i \\text{ refers to an individual} \\end{equation} \\tag{69.4} \\] 接下來，我們來把這個邏輯回歸模型擴展到配對實驗數據: 每對實驗數據包含一個病例，一個對照。用 \\(X_{u;0}\\) 標記第 \\(u\\) 對配對數據中，對照的某二進制解釋變量的值 (the binary explanatory variable \\(X\\) for the control in the \\(u\\)th matched pair)。\\(X_{u;1}\\) 表示該對照的病例的相應二進制解釋變量的值。如此，一個包含了配對的病例和對照二者的邏輯回歸模型可以寫爲: \\[ \\begin{equation} \\text{Pr}(X_{u;0} = 1) = \\frac{e^{\\lambda^*_u}}{1+e^{\\lambda^*_u}} ; \\text{Pr}(X_{u;1} = 1) = \\frac{e^{\\lambda^*_u + \\beta}}{1+e^{\\lambda^*_u + \\beta}} \\end{equation} \\tag{69.5} \\] 或者你如果願意，可以把它改寫成: \\[ \\begin{equation} \\text{Pr}(X_{u;d} = 1) = \\frac{e^{\\lambda^*_u + d\\beta}}{1+e^{\\lambda^*_u + d\\beta}}, \\;d = 0,1 \\end{equation} \\tag{69.6} \\] 該模型的參數 \\(\\beta\\) 是第 \\(u\\) 配對中的對數比值比 (log-odds ratio)。可是，我們使用它的前提是，默認這個對數比值比在所有的配對數據 \\(u = 1, \\cdots, n\\) 中都是相同的。另一個參數 \\(\\lambda^*_u\\) 是第 \\(u\\) 組的特徵值。被定義爲第 \\(u\\) 組配對中對照的暴露 \\((X = 1)\\) 的對數幾率 (log odds of exposure for the exposure in the \\(u\\)th pair): \\[ \\lambda^*_u = \\log(\\frac{\\pi_{u;10}}{\\pi_{u;00}}) \\] 在第 \\(u\\) 組配對中，有且只有4種 \\((x_{u;1},x_{u;0})\\) 結果: 也就是 \\((0,0), (1,0), (0,1), (1,1)\\)。該對數據的似然方程是: \\[ \\begin{equation} \\frac{e^{\\lambda^*_ux_{u;0}}}{1+e^{\\lambda^*_u}}\\cdot\\frac{e^{(\\lambda^*_u + \\beta)x_{u;1}}}{1+e^{\\lambda^*_u + \\beta}} \\end{equation} \\tag{69.7} \\] 所以把所有配對的似然相乘可得整個數據的似然方程: \\[ \\begin{equation} \\frac{\\exp(\\sum\\lambda^*_ux_{u;0})}{\\prod(1+e^{\\lambda^*_u})}\\cdot\\frac{\\exp(\\sum(\\lambda^*_u + \\beta)x_{u;1})}{\\prod(1+e^{\\lambda^*_u+\\beta})} \\end{equation} \\tag{69.8} \\] 整體數據的似然方程 (69.8) 中的和 \\(\\sum\\) 與積 \\(\\prod\\) 分別對應相加與相乘所有的病例與對照的 \\(n\\) 組配對。對於第 \\(u\\) 組來說，它對似然方程的貢獻的部分只是式子 (69.7) 中包含 \\(\\lambda_u^*\\) 的部分。該信息其實就是第 \\(u\\) 組配對自有/特有的信息。但其實每組配對中的病例和對照又與其他組略微不同，他們各自提供的信息其實對於整體的似然來說雖然微小，但是當配對數量越來越多，就變得不可忽略。此時對 (69.8) 直接進行粗暴的取參數 \\(\\beta\\) 的極大值是錯誤的，其導致的後果會在下文中繼續討論。我們需要用另一種新的途徑來求參數 \\(\\beta\\)。 69.1.2 配對隊列研究 這裏簡略地分析一下配對隊列研究中會遇見的和配對病例對照研究相似問題的過程。在配對隊列研究中，一個接受暴露的研究對象被配對給另一個沒有接受暴露的研究對象 (注意在配對病例對照研究中，是一個病例和一個對照做配對)。在第 \\(u\\) 組隊列配對中，用 \\(D_{u;1}\\) 標記暴露對象的追蹤結果 (發病/死亡/事件發生的有無)，用 \\(D_{u;0}\\) 標記非暴露對象的追蹤結果 (發病/死亡/事件發生的有無)。 隊列研究中已知暴露 \\(X\\) 有無的前提下，結果 \\(D\\) 發生的有無的邏輯回歸模型，加入對配對設計的考量是: \\[ \\begin{equation} \\text{Pr}(D_{u;0} = 1) = \\frac{e^{\\lambda_u}}{1+e^{\\lambda_u}}\\;; \\; \\text{Pr}(D_{u;1} = 1) = \\frac{e^{\\lambda_u + \\beta}}{1+e^{\\lambda_u+\\beta}} \\end{equation} \\tag{69.9} \\] 正如之前在無配對條件下的隊列研究和病例對照研究中的推導過的那樣 64.2.3，\\(\\lambda_u\\) 和 \\(\\lambda_u^*\\) 是有不同涵義的，但是配對隊列研究和配對病例對照研究則具有相同的對數比值比–參數 \\((\\beta)\\)。這是基於一個重要的前提–相同人羣，相同暴露和相同疾病的結果在不同實驗設計 (病例對照和隊列研究) 時使用相同的配對變量。 在配對病例對照研究中，某對暴露和非暴露對象其實驗結果的可能性也只有四種 \\((d_{u;1}, d_{u;0})\\)，該配對的似然是: \\[ \\begin{equation} \\frac{e^{\\lambda_ud_{u;0}}}{(1+e^{\\lambda_ud_{u;0}})}\\cdot\\frac{e^{(\\lambda_u+\\beta)d_{u;1}}}{(1+e^{\\lambda_u+\\beta})} \\end{equation} \\tag{69.10} \\] 整體數據的似然方程就是和配對病例對照研究一樣的，將每對這樣的似然相乘。所以，我們就又遇見了和配對病例對照研究相似的問題，此時如果直接對整體似然方程中求極大似然獲得的 \\(\\beta\\) 將會是錯誤的。 69.2 條件邏輯回歸 – 二進制暴露變量 我們再回到簡單的一對一配對病例對照實驗設計，且研究的實驗暴露是一個簡單的二進制變量。這一節的目的是克服前面遇見的困難 (繞過不需要的 \\(\\lambda_u^*, u = 1, 2, \\cdots, n\\)) ，找到能夠準確估計參數 \\(\\beta\\) 的數學方法。 69.2.1 充分統計量 sufficient statistics 繞過雜音變量(不需要的變量)，直接估計我們感興趣的參數的過程，需要利用充分統計量 (sufficient statistics) 的概念。這裏，噪音變量就是 \\(\\lambda_u^*, u = 1, 2, \\cdots, n\\)。下面是對充分統計量的定義: 假設隨機變量 \\(\\mathbf{y}\\) 的概率(密度)方程中含有其他的雜音變量 \\(\\theta_1, \\cdots, \\theta_p\\): \\[ f(\\mathbf{y}|\\theta_1, \\cdots, \\theta_9) \\] 如果統計量 \\(T_k\\)，是實驗數據中得到的某方程，且 \\(\\mathbf{y}\\) 基於 \\(T_k\\) 的條件分布與 \\(\\theta_k\\) 無關 (獨立)，那麼該方程被稱作參數 \\(\\theta_k\\) 的充分統計量。其實就是，如果 \\(T_k\\) 可以給我們足夠估計 \\(\\theta_k\\) 的信息量，我們就稱 \\(T_k\\) 是 \\(\\theta_k\\) 的充分統計量。 舉例來說，假設我們手頭的樣本數據 \\(y_1, y_2, \\cdots, y_n\\) 可以被認爲從正態分布的人羣中採集，我們希望通過這個樣本來估計總體人羣的均值 \\(\\mu\\)。此時常常(不自覺地)做總體方差已知的假設。該數據的似然方程是: \\[ \\prod_{i = 1}^n \\frac{1}{\\sqrt{2\\pi\\sigma^2}} \\exp\\{ -\\frac{(y_i-\\mu)^2}{2\\sigma^2} \\} \\] 此時，估計要總體均值 \\(\\mu\\) 我們僅需要 \\(\\sum_i y_i\\) (或者只要 \\(\\bar{y}\\)) 就足夠了。這裏我們說 \\(\\sum_i y_i\\) 是參數總體均值 \\(\\mu\\) 的充分統計量。 69.2.2 條件邏輯回歸的推導 在簡單配對病例對照研究的實驗設定下，可以被證明的是，第 \\(u\\) 對配對的暴露變量 \\((x_{u;0}, x_{u;1})\\) 是雜音變量 \\(\\lambda_u^*\\) 的充分統計量。值得注意的是，我們其實不需要知道 \\((x_{u;0}, x_{u;1})\\) 這一對暴露數據中哪個來自病例，哪個來自對照。對於一個二進制暴露變量，如果我們已知 \\((x_{u;0}, x_{u;1})\\)，那麼我們就知道了每個病例對照配對中暴露的個數。所以，我們完全可以用 \\(T_u = x_{u;0} + x_{u;1}\\) 來替代 \\((x_{u;0}, x_{u;1})\\)，因爲它只有三種取值的可能: 0: 病例對照都沒有暴露; 1: 病例或者對照其中之一有暴露; 2: 病例和對照均有暴露。 利用已知的關於充分統計量的概念，在尋找第 \\(u\\) 對配對對總體似然的貢獻時我們把 \\(T_u = x_{u;0} + x_{u;1}\\) 作條件 (condition on)。有了這個條件，剩下的隨機現象就是暴露在病例和對照中的分布，也就是: \\[ \\begin{equation} \\text{Pr}(X_{u;0} = x_{u;0}, X_{u;1} = x_{u;1} | T_u = x_{u;0} + x_{u;1}) \\end{equation} \\tag{69.11} \\] 如果 \\(x_{u;0}=x_{u;1}\\)，也就是當病例和對照同時爲暴露或非暴露時，我們有 100% 的把握對他們的暴露信息加以區分: \\[ \\begin{aligned} &amp; \\text{Pr}(X_{u;0} = 0, X_{u;1} = 0| T_u = 0) = 1,\\\\ &amp; \\text{Pr}(X_{u;0} = 1, X_{u;1} = 1| T_u = 2) = 1 \\end{aligned} \\tag{69.12} \\] 如果 \\(x_{u;0} \\neq x_{u;1}\\)，也就是 \\(T_u = 1\\)，那只有兩種可能性，要麼病例是暴露，對照非暴露，要麼病例是非暴露，對照是暴露: \\[ \\begin{aligned} &amp; \\text{Pr}(X_{u;0} = 1, X_{u;1} = 0| T_u = 1),\\\\ &amp; \\text{Pr}(X_{u;0} = 0, X_{u;1} = 1| T_u = 1) \\end{aligned} \\tag{69.13} \\] 這兩個概率可以被計算爲: \\[ \\begin{aligned} &amp; \\text{Pr}(X_{u;0} = 1, X_{u;1} = 0| T_u = 1) \\\\ &amp; = \\frac{\\text{Pr}(X_{u;0} = 1, X_{u;1} = 0)}{\\text{Pr}(X_{u;0} = 1, X_{u;1} = 0) +\\text{Pr}(X_{u;0} = 0, X_{u;1} = 1)} \\end{aligned} \\tag{69.14} \\] \\[ \\begin{aligned} &amp; \\text{Pr}(X_{u;0} = 0, X_{u;1} = 1| T_u = 1) \\\\ &amp; = \\frac{\\text{Pr}(X_{u;0} = 0, X_{u;1} = 1)}{\\text{Pr}(X_{u;0} = 1, X_{u;1} = 0) +\\text{Pr}(X_{u;0} = 0, X_{u;1} = 1)} \\end{aligned} \\tag{69.15} \\] 用前面推導過的邏輯回歸模型公式 (69.5) 可以推導出: \\[ \\begin{aligned} \\text{Pr}(X_{u;0} = 1, X_{u;1} = 0| T_u = 1) &amp; = \\frac{\\frac{e^{\\lambda^*_u}}{(1+e^{\\lambda^*_u})(1+e^{\\lambda^*_u + \\beta})}}{\\frac{e^{\\lambda^*_u}}{(1+e^{\\lambda^*_u})(1+e^{\\lambda^*_u + \\beta})} + \\frac{e^{\\lambda^*_u + \\beta}}{(1+e^{\\lambda^*_u})(1+e^{\\lambda^*_u + \\beta})}} \\\\ &amp; = \\frac{1}{1+e^\\beta} \\end{aligned} \\tag{69.16} \\] 類似地: \\[ \\begin{aligned} \\text{Pr}(X_{u;0} = 0, X_{u;1} = 1| T_u = 1) = \\frac{e^\\beta}{1+e^\\beta} \\end{aligned} \\tag{69.17} \\] 69.2.3 條件似然 conditional likelihood 一個簡單設計，暴露變量爲二進制變量的配對病例對照研究，可以用下面的四格表歸納收集的數據: 表 55.2: Data from a matched case control study with a single binary \\(D = 1\\) \\(X=0\\) \\(X=1\\) \\(D=0\\) \\(X=0\\) \\(n_{00}\\) \\(n_{10}\\) \\(X=1\\) \\(n_{01}\\) \\(n_{10}\\) 用上之前推導的結論，和上面表格的總結，我們可以知道，對於 1:1 的配對病例對照研究，且暴露爲二進制變量來說，它的似然是: \\[ \\begin{equation} L = (\\frac{e^\\beta}{1+e^\\beta})^{n_{10}}(\\frac{1}{1+e^\\beta})^{n_{01}} \\end{equation} \\tag{69.18} \\] 接下來用我們熟悉的極大似然法就可以推導出 \\(\\beta\\) : \\[ \\begin{aligned} \\ell &amp; = n_{10}\\beta - (n_{10} + n_{01})\\frac{e^\\beta}{1+e^\\beta} \\\\ \\Rightarrow \\frac{\\text{d}\\ell}{\\text{d}\\beta} &amp; = n_{10} - (n_{10} + n_{01})\\frac{e^\\beta}{1+e^\\beta} \\\\ \\Rightarrow \\hat\\beta &amp; = \\log\\frac{n_{10}}{n_{01}} \\end{aligned} \\] 69.2.4 進一步擴展 目前為止推導的條件邏輯回歸模型雖然只是簡單的一對一配對病例對照研究實驗設計，且暴露變量也只是二進制變量。但是經驗告訴我們，這樣的理論基礎可以被進一步擴展到更加復雜的實驗設計: 上述理論很容易地可以擴展到一對一配對隊列研究和RCT實驗。我們需要做的只是修改 \\(X_{u;d}\\) 成 \\(D_{u;x}\\) 即可，推導獲得的條件似然是完全相同的。唯一不同的是 \\(n_{10}, n_{01}\\) 在隊列研究和RCT臨牀試驗中的含義從病例中暴露和對照中非暴露的對數變成了暴露中病例和非暴露中對照的對數。(\\(n_{10}\\) becomes the number of pairs in which the exposed individual becomse a case and the unexposed becomes a control, and vice versa for \\(n_{01}\\))。 配對病例對照研究常見的可以一個病例配對1-5個對照。 也可以在配對病例對照研究中研究(比二進制變量)更加復雜的暴露因素，既可以是非類型變量，也可以是連續型變量。 69.3 條件邏輯回歸模型的一般化 現在我們拋棄簡單實驗設計思維，考慮在配對實驗中需要研究一個一般的暴露變量 (可以是二進制，多分類，連續型)，或者是一個多種不同變量組成的預測變量的向量。此時我們關心的主要是這些預測變量在病例或者對照的條件下分布 (conditional distribution): \\(P(X_{u;0} = x), P(X_{u;1} = x)\\)。假設，某對病例和對照對象中，對照被觀測到有預測變量 \\(x_{u;0}\\)，病例則被觀察到的是 \\(x_{u;1}\\)，那麼我們關心的條件概率其實是研究對象被觀測到預測變量 \\(x_{u;0}\\) 且他/她本身正好是對照，且同時他/她的病例被觀測到預測變量 \\(x_{u;1}\\) 的概率。此時，充分統計量就是 \\((x_{u;0}, x_{u;1})\\)，且聯合條件分布 (joint conditional distribution) 是: \\[ \\begin{aligned} &amp; \\text{P}(X_{u;0} = x_{u;0}, X_{u; 1} = x_{u;1} | T_u = (x_{u;0}, x_{u;1})) \\\\ =&amp; \\frac{\\text{P}(X_{u;0} = x_{u;0})\\text{P}(X_{u;1} = x_{u;1})}{\\text{P}(X_{u;0} = x_{u;0})\\text{P}(X_{u;1} = x_{u;1}) + \\text{P}(X_{u;0} = x_{u;1})\\text{P}(X_{u;1} = x_{u;0})} \\end{aligned} \\tag{69.19} \\] 其實，當且僅當我們在研究一個簡單二進制預測變量時，一樣。這裏當我們需要把它一般化的時候，需要來點不太一樣的方法。先用 \\(D_{u;x}\\) 標記第 \\(u\\) 對配對中觀測到預測變量 \\(x\\) 的研究對象的病例/對照狀態。那麼 \\(D_{u;x}\\) 的邏輯回歸模型是: \\[ \\begin{aligned} \\text{Pr}(D_{u;x} =1) &amp; = \\frac{e^{\\lambda_u+\\beta^Tx}}{1+e^{\\lambda_u+\\beta^Tx}} \\\\ \\text{Pr}(D_{u;x} =0) &amp; = \\frac{1}{1+e^{\\lambda_u+\\beta^Tx}} \\end{aligned} \\tag{69.20} \\] 應用貝葉斯定理: \\[ \\begin{equation} \\text{Pr}(X_{u;1} = x) = \\frac{\\text{Pr}(D_{u;x} = 1)\\times\\text{Pr}(X_{u;\\cdot} = x)}{\\text{Pr}(D_{u;\\cdot} = 1)} \\end{equation} \\tag{69.21} \\] 其中, \\(\\text{Pr}(X_{u;\\cdot} = x)\\) 指的是預測變量 \\(X\\) 在產生第 \\(u\\) 對病例對照配對的人羣 (subpopulation which generates the \\(u\\)th matched set) 中的邊際分布 (marginal distribution，或者叫做非條件分布 unconditional distribution); \\(\\text{Pr}(D_{u;\\cdot} = 1)\\) 指的是在產生第 \\(u\\) 對病例對照配對的人羣中，成爲病例的概率 (unconditional probability of being a case in that sub-population)。 那麼將 (69.21) 代入 (69.19) 經過推導和精簡可以得到: \\[ \\begin{aligned} &amp; \\text{P}(X_{u;0} = x_{u;0},X_{u;1} = x_{u;1} | T_u = (x_{u;0}, x_{u;1})) \\\\ = &amp; \\frac{\\text{Pr}(D_{u;x_{u;0}} = 0)\\text{Pr}(D_{u;x_{u;1}} = 1)}{\\text{Pr}(D_{u;x_{u;0}} = 0)\\text{Pr}(D_{u;x_{u;1}} = 1) + \\text{Pr}(D_{u;x_{u;0}} = 1)\\text{Pr}(D_{u;x_{u;1}} = 0)} \\end{aligned} \\tag{69.22} \\] 此時再帶入 (69.20)，推導精簡之後可以獲得: \\[ \\begin{aligned} &amp; \\text{P}(X_{u;0} = x_{u;0},X_{u;1} = x_{u;1} | T_u = (x_{u;0}, x_{u;1})) \\\\ = &amp; \\frac{e^{\\beta^{T}x_{u;1}}}{e^{\\beta^{T}x_{u;1}} + e^{\\beta^{T}x_{u;0}}} \\end{aligned} \\tag{69.23} \\] 這就是第 \\(u\\) 組病例對照配對數據對條件似然 (conditional likelihood) 的貢獻。那麼對於完整的整套數據來說，整體似然就是把所有的病例對照配對的似然相乘: \\[ \\begin{equation} L_{\\text{matched}} = \\prod_{u}\\frac{\\exp{(\\beta^{T}x_{u;1})}}{\\exp{(\\beta^{T}x_{u;1})} + \\exp{(\\beta^{T}x_{u;0})}} \\end{equation} \\tag{69.24} \\] 這樣的一對一病例對照研究的似然可以擴展到 1:c 的情況，也就是一個病例和 c 個對照相配對的情況，其條件邏輯回歸的似然是: \\[ \\begin{equation} L_{\\text{matched}} = \\prod_{u}\\frac{\\exp{(\\beta^{T}x_{u;1})}}{\\exp{(\\beta^{T}x_{u;1})} + \\sum_{k=1}^c\\exp{(\\beta^{T}x_{u;0k})}} \\end{equation} \\] "],["multinomial-logistic.html", "第 70 章 多項邏輯回歸 Multinomial Logistic Regression", " 第 70 章 多項邏輯回歸 Multinomial Logistic Regression "],["ordinal-logistic.html", "第 71 章 順序邏輯回歸 Ordinal Logistic Regression", " 第 71 章 順序邏輯回歸 Ordinal Logistic Regression "],["Hierarchical.html", "第 72 章 相互依賴數據及簡單的應對方案 72.1 相互依賴的數據 72.2 依賴性的來源在哪裏 72.3 數據有依賴性導致的結果 72.4 邊際模型和條件模型 marginal and conditional models 72.5 簡單線性迴歸複習 72.6 Practical Hierarchical 01", " 第 72 章 相互依賴數據及簡單的應對方案 To call in the statistician after the experiment is done may be no more than asking him to perform a post-mortem examination: he may be able to say what the experiment died of. Sir Ronald Aylmer Fisher The Analysis of Hierarchical and Other Dependent Data lectures were orgainised and taught by Professor Linda Sharples, and Dr. Edmund Njeru Njagi. 72.1 相互依賴的數據 線性回歸模型，廣義線性回歸模型，他們背後都有一個十分十分十分重要的假設–數據的相互獨立性。這個前提假設常常會在現實數據中得不到滿足，因爲數據與數據之間在背後很可能會有有所關聯，也許是已知的，也許是未知的因素讓某些數據顯得更加接近彼此。這個章節，主要的內容就是舉例說明分層數據在日常生活中的常見性，以及處理這個非獨立性質的必要性。 圖 72.1 展示的箱式圖顯示的是六個不同醫院對各自 12 名患者收縮期血壓測量的結果。如果把醫院看做一個單位，取院內患者的平均值，那麼六所醫院的血壓均值最大爲 135.7 mmHg，最小是 117.7 mmHg，六所醫院測量的血壓總體均值爲 125.6 mmHg。 圖 72.1: Box and whiskers plot of measured SBP in patients from six hospitals 圖 72.2 展示的是對 17 名患者使用兩種不同的測量方法測量的最大呼吸速率 (peak-expiratory-flow rate, PEFR)。兩種方法又測量了兩次，途中展示的是其中一種測量方法前後兩次測量結果的散點圖。 圖 72.2: Two recordings of PEFR taken with the Mini Wright meter 圖 72.3 展示的來自全英 65 所學校的 4059 名學生入學前閱讀水平測試成績 (LRT) 和畢業時 GCSE 考試成績之間的散點圖關系。值得注意的是該圖其實無視了學校這個變量，把每個學生看成相互獨立的個體。但是當我們隨機選取四所學校，看它們各自的學生的成績表現 (圖 72.4)。很顯然，之前忽視了學校這一層級的變量是不恰當的，因爲不同學校學生的入學前和畢業時成績之間的相關性很明顯存在不同的模式 (四所學校的回歸線各自的截距和斜率各不相同)。 圖 72.3: GCSE by LRT in all 65 schools 圖 72.4: GCSE by LRT in four randomly selected schools 另一個特別好的例子展示在圖 72.5 中，是關於同一個母親的不同孩子的出生體重的數據。一個母親可以有多個孩子，每個母親的孩子之間的出生體重很明顯無法看作相互獨立。圖中展示的是，3300 名生了兩個孩子的母親的孩子們出生體重的散點圖。同一個母親的小孩用線相連。顯然，同一個母親生的孩子，其出生體重比不同母親的孩子出生體重差距更小，更接近彼此，因爲他們來自同一個母親。可以想象，一個母親如果身材高大，那麼她的孩子們可能都傾向於有比較高的出生體重。所以同一個母親的孩子之間體重是有相關關系的 (within correlation)。 圖 72.5: Birthweight of siblings by maternal identifier 最後一個用於本章節的實例是，一項研究亞洲兒童生長狀況的調查分別記錄了 198 個數據點，68 個兒童在 0 到 3 歲之間的四個年齡點的體重數據。圖 72.6 展示的就是這個典型的隨訪數據的個人生長曲線。且圖中每個人的生長軌跡提示，男孩子的生長過程可能相互之間體重差異顯得較女孩子來得大。如果，我們用每個兒童自己的數據，給每個兒童擬合各自的回歸線，數據顯然不足，但是如果我們決定忽略個體的生長的隨機效應 (不均一性)，又顯得十分不妥當。 圖 72.6: Growth profiles of boys and girls in the Asian growth data 72.2 依賴性的來源在哪裏 上述例子中的數據，均提示我們數據與數據之間獨立性的假設，常常會遇到尷尬的局面。因爲數據與數據之間本身就不可能完全獨立。 同一個診所或者醫院的患者，他們之間可能有着某些相似的因素從而導致他們的血壓相比其他醫院的人彼此更加接近。這個原因可能是有同一家醫院的患者可能有類似的疾病。 同一患者身上反復抽取樣本，也就是說一個對象貢獻了多個數據的時候，這些來自同一對象的數據當然具有相對不同對象數據更高的均質性。 同一所學校的學生的成績或內部的相關性，很可能大於不同學校兩個學生之間成績的相關性。因爲同一學校的孩子可能共享某些共同的特徵，比如說相似的家庭經濟背景，或者是同樣的教學內容教學老師等環境因素。這樣，來自同一所學校的孩子的成績很可能就會更加相似。 至於說家庭數據就更加典型了。來自同一家庭的兄弟姐妹，有着極強的相關性，因爲他們共享着遺傳因素，或者是相似的家庭教育/飲食/生活習慣等環境因素。 同一個體身上的縱向 (時間) 隨訪數據很顯然會比不同患者有更強的內部相關性。 目前位置介紹的這些常見實例中，可以發現它們有一個共通點。就是這些數據其實內部是有分層結構的 (hierarchy)。這些數據中，都有一個最底層單元 (elementary units/level 1)，還有一個聚合單元 (aggregate units/level 2)，聚合單元常被命名爲層級 (cluster)。 表 72.1: Hierarchy in the data (5 examples in Chapter 1) Level Aggregate Elementary hospitals patients individuals PEFR measures schools pupils mothers children children visits 正如表格 72.1 總結的那樣，這些數據中存在這層級結構，這種數據被稱爲分層數據 (hierarchical)，或者叫嵌套式數據 (nested data)。根據你所在的知識領域，它可能還被命名爲多層結構數據 (multilevel and clustered data)。在一些研究中，你可能會遇見從實驗設計階段就存在分層結構的數據，比如使用分層抽樣 (multistage sampling) 的設計的實驗等。這樣的實驗設計最常在人口學，社會學的研究中看到。在大多數醫學研究中，每個數據點 (observation point, level 1)，所屬的層 (cluster) 本身可能是我們感興趣的研究點 (例如同屬於一個家庭，相同母親的後代)，又或者是同一個人/患者的隨着時間推移的隨訪健康狀態 (如生長曲線，體重變化，疾病康復情況)。 如果用前面用過的 圖 72.6 的生長曲線做例子，那麼每個被調查的兒童，就是該數據的第二級層，每個隨訪時刻測量的體重數據，則是觀察的數據點。這個數據還有一個特點是，觀察數據點是有前後的 (時間) 順序的，這是一個典型的縱向研究數據 (longitudinal data)。 72.3 數據有依賴性導致的結果 如果你手頭的數據，結構上是一種嵌套式結構數據，那麼任何無視了這一點作出的統計學推斷都是有瑕疵的。相互之間互不獨立這一特質，需要通過一種新的手段，把嵌套式的數據結構考慮進統計學模型裏來。 在一些情況下，數據的嵌套式結構可能可以被忽略掉，但是其結果是導致統計學的估計變得十分低效 (inefficient procedure)。你可能會聽說過一般化估計公式 (generalized estimating equations)，是其中一種備擇手段，因爲在這一公式中，你需要人爲地指定數據與數據之間可能的依賴關系是怎樣的。 其實，即使有人真的在分析過程中忽略了數據本身的嵌套式結構，他會發現最終在描述分析結果的時候，還是無法避免這一嚴重的問題。另外一些統計學家可能記得在穩健統計學法中，三明治標準誤估計法也是可以供選擇的一種處理相關數據的手段。 72.4 邊際模型和條件模型 marginal and conditional models 邊際模型和條件模型的概念其實不是分層模型特有的，卻在分析分層數據模型時十分有用。假如，對於某個結果變量 \\(Y\\) 有它如下的回歸模型，其中我們把某個單一的共變量 \\(Z\\) 從模型中分離出來，加以特別關注: \\[ g\\{ \\text{E}(Y|\\textbf{X},Z) \\} = \\beta\\textbf{X} +\\gamma Z \\] 這是一個典型的條件模型，它描述了結果變量 \\(Y\\) 的期望是以怎樣的條件和解釋變量 \\(\\textbf{X},Z\\) 之間建立關系的。每個解釋變量的回歸系數，其含義都是以其他同一模型中的共變量不變的條件下，和結果變量之間的關系。經過這樣的解讀，你會知道，其實本統計學教程目前爲止遇見過的所有的回歸模型都是條件模型。如果此時我們反過來思考，把上述模型中單獨分離出來的單一共變量 \\(Z\\) 對於結果變量 \\(Y\\) 均值的影響合並起來 (對共變量 \\(Z\\) 積分即可)，此時我們得到的就是共變量 \\(\\textbf{X}\\) 和結果變量 \\(Y\\) 之間，關於 \\(Z\\) 的邊際模型 (Marginal model): \\[ \\text{E}_Z\\{ \\text{E}(Y|\\textbf{X}, Z) \\} = \\text{E}_Z\\{ g^{-1}(\\beta\\textbf{X} + \\gamma Z) \\} \\\\ \\text{Where } \\text{E}(Z) = 0 \\] 用線性回歸來舉例: \\[ \\text{E}(Y| \\textbf{X}, Z) = \\beta\\textbf{X} + \\gamma Z \\] 那麼此時共變量 \\(\\textbf{X}\\) 的邊際模型回歸系數 \\(\\beta\\) 的含義，和條件模型時的回歸系數其實是相同的含義: \\[ \\text{E}_Z\\{\\text{E}(Y|\\textbf{X},Z)\\} = \\text{E}_Z(\\beta\\textbf{X} + \\gamma Z) = \\beta\\textbf{X} + \\gamma\\text{E}(Z) = \\beta\\textbf{X} \\] 爲什麼這裏的邊際模型對於分層數據來說很重要呢？答案在於，嵌套式數據中，我們常常關心那第二個階層 (重復測量某個指標的患者，學生成績數據中的學校層級，等) 在它所在的那個階層中和結果變量之間的平均關系。(In models for hierarchical data we often use level effects to represent what is common among observations from one “cluster” or “group”. We may then want marginal conclusions: we need to average over these effects). 72.4.1 標記法 notation \\(Y_{ij}\\) 標記第 \\(j\\) 層的第 \\(i\\) 個個體; \\(i = 1, \\cdots, n_j\\) 表示第 \\(j\\) 層中共有 \\(n_j\\) 個個體 (elements); \\(j = 1, \\cdots, J\\) 表示數據共有 \\(J\\) 個第二階層 (clusters); \\(N = \\sum_{j=1}^J n_j\\) 表示總體樣本量等於各個階層樣本量之和; 特殊情況: 如果每個階層的個體數相同 \\(n\\)，\\(N=nJ\\)，這樣的數據被叫做均衡數據 (balanced data)。 72.4.2 合並每個階層 過去常見的總結嵌套式數據的手段只是把每層數據取平均值，這樣的方法簡單粗暴但是偶爾是可以接受的，只要你能夠接受如此處理數據可能帶來的如下後果: 各層數據均值，其可靠程度 (方差) 隨着各層的樣本量不同而不同 (depends on the number of elementary units per cluster); 變量的含義發生改變。如果是使用層水平 (cluster level) 的數據，本來測量給個體的那些變量，就變成了層的變量，從此作出的任何統計學推斷，只能限制在層水平 (ecological fallacy, as correlations at the macro level cannot be used to make assertions at the micro level); 由於無視了層內個體數據，導致大量信息損失。 此處我們借用 (Snijders and Bosker 1999) 書中第 28 頁的人造數據，如下表 Artificial data Cluster \\((j)\\) id \\((i)\\) \\(X\\) \\(Y\\) \\(\\bar{X}\\) \\(\\bar{Y}\\) 1 1 1 5 2 6 1 2 3 7 2 6 2 1 2 4 3 5 2 2 4 6 3 5 3 1 3 3 4 4 3 2 5 5 4 4 4 1 4 2 5 3 4 2 6 4 5 3 5 1 5 1 6 2 5 2 7 3 6 2 這個表中的人造數據，其結構是一目了然的，它的第二層級數量是 5，每層的個體數量是 2。這是一個平衡數據。由於這是個我們人爲模擬的數據，圖 72.7 也顯示它沒有隨機誤差，所有數據都在各自的直線上。 dt &lt;- read.csv(&quot;../backupfiles/hierexample.csv&quot;, header = T) names(dt) &lt;- c(&quot;Cluster&quot;, &quot;id&quot;, &quot;X&quot;, &quot;Y&quot;, &quot;Xbar&quot;, &quot;Ybar&quot;) dt$Cluster &lt;- as.factor(dt$Cluster) ggthemr(&#39;fresh&#39;) ggplot(dt, aes(x = X, y = Y, shape = Cluster, colour = Cluster)) + geom_point(size =5) + theme(axis.text = element_text(size = 15), axis.text.x = element_text(size = 15), axis.text.y = element_text(size = 15)) + labs(x = &quot;X&quot;, y = &quot;Y&quot;) + theme(axis.title = element_text(size = 17), axis.text = element_text(size = 8)) + theme(legend.position = &quot;bottom&quot;, legend.direction = &quot;horizontal&quot;) + theme(legend.text = element_text(size = 19), legend.title = element_text(size = 19)) 圖 72.7: Artificial data: scatter of clustered data 如果我們無視其分層數據的嵌套式結構，把每個數據都看作是獨立的樣本，擬合一個整體回歸 (total regression) 圖 72.8: \\[ \\hat Y_{ij} = 5.33 - 0.33 X_{ij} \\] ggthemr(&#39;fresh&#39;) ggplot(dt, aes(x = X, y = Y)) + geom_point(size = 5, shape = 23) + geom_smooth(method = &quot;lm&quot;, se = FALSE, linetype = 2) + theme(axis.text = element_text(size = 15), axis.text.x = element_text(size = 15), axis.text.y = element_text(size = 15)) + labs(x = &quot;X&quot;, y = &quot;Y&quot;) + theme(axis.title = element_text(size = 17), axis.text = element_text(size = 8)) + theme(legend.position = &quot;bottom&quot;, legend.direction = &quot;horizontal&quot;) + theme(legend.text = element_text(size = 19), legend.title = element_text(size = 19)) 圖 72.8: Artificial data: Total regression 如果我們只保留層級數據本身，求了變量 \\(X,Y\\) 在每層的均值的話，就得到了層間回歸 (between regression) 圖 72.9 – 變量 \\(X,Y\\) 之間的回歸直線的斜率變得更大了: \\[ \\hat{\\bar{Y}}_j = 8.0 - 1.0 \\bar{X}_j \\] ggthemr(&#39;fresh&#39;) ggplot(dt, aes(x = X, y = Y)) + geom_point(size =5, shape=23) + geom_smooth(method = &quot;lm&quot;, se = FALSE, linetype = 2) + geom_abline(intercept = 8, slope = -1) + geom_point(aes(x = Xbar, y=Ybar, size = 5)) + theme(axis.text = element_text(size = 15), axis.text.x = element_text(size = 15), axis.text.y = element_text(size = 15)) + labs(x = &quot;X&quot;, y = &quot;Y&quot;) + theme(axis.title = element_text(size = 17), axis.text = element_text(size = 8)) + theme(legend.position=&quot;none&quot;) 圖 72.9: Artificial data: scatter of clustered data 72.4.3 生物學悖論 ecological fallacy 生物學悖論常見於我們認爲某分層數據中層級變量之間的關系，同樣適用與層級中的個體之間: 例如比較 A 國 和 B 國之間心血管疾病的發病率，發現 A 國國民食鹽平均攝入量高於 B 國，很多人可能就會下結論說食鹽攝入量高的個體，心血管疾病發病的危險度較高。然而，這樣的推論很多時候是錯誤的。 曾經在 (W. S. Robinson 1950) 論文中舉過的著名例子: 該研究調查美國每個州的移民比例，和該州相應的識字率之間的關系。研究者發現，移民比例較高的州，其識字率也較高 (相關系數 0.53)。由此就有人下結論說移民越多，那個州的教育水平會比較高。但是實際情況是，把每個個體的受教育水平和該個體本身是不是移民做了相關系數分析之後發現，這個關系其實是負相關 (-0.11)。所以說在州的水平作出的統計學推斷-移民多的州受教育水平高-是不正確的。之所以在州水平發現移民比例和受教育水平之間的正關系，是因爲移民傾向於居住在教育水平本來就比較高的本土出生美國人的州。 72.4.4 分解層級數據 如果是分析最初層級數據 (level 1) 的話，我們還需要考慮下列一些問題: 當心數據被多次利用 如果我們關心的變量其實是在第二層級的 (level 2/cluster level)，但是你卻把它當作是第一層級的數據，就會引起數據很多的錯覺，因爲同一層的個體他們的層屬變量都是一樣的，你擁有的數據其實並沒有你想的那麼多。 前文中用過的 GCSE 數據其實是一個很好的例子，下表中歸納了調查的學校類型 (男校，女校或者混合校)，以及按照每個學生個人所屬學校類型的總結，可以看出，當你嘗試使用個人 (elementary level) 水平的數據分析實際上是第二層級數據的特性時，你會被誤導。因爲個人數據告訴你， 34% 的學生在女校學習，然而正確的分析法應該是，學校中有 31% 的學校是女校。 Aggregated and disaggregated School type Cluster Level Elementary Level N % N % mixed 35 54 2169 53 boys only 10 15 513 13 girls only 20 31 1377 34 Total 65 100 4059 100 分層數據分析法 有人會說，既然如此，那麼我們就把數據放在每層當中分析就好了 (stratified analyses)。還是用前文中用過的人造 5 層數據來說明這樣做的弊端。前面用了兩種方法 (total regression, between regression) 來總結這個 5 層的人造數據 72.9。最後一種分析此數據的方法是，把 5 層數據分開分別做回歸線如圖 72.10。等同於我們的對數據擬合五次下面的回歸方程: \\[ \\hat Y_{ij} - \\bar{Y}_j = \\beta(X_{ij} - \\bar{X}_j) \\] 這種模型被叫做層內回歸 (within regression)。這 5 個線性回歸的斜率都是 1，是五條不同截距的平行直線。因爲我們自己編造的數據的緣故，現實數據不太可能恰好所有層內回歸的斜率都是完全相同的。這其實也是曾內回歸法的一個默認前提 – 每層數據中解釋變量和結果變量之間的關系是相同的。 圖 72.10: Artificial data: within cluster regressions 72.4.5 固定效應模型 fixed effect model 無論數據中的分層結構是否有現實意義 (如果說是五種不同的民族，那就有顯著的現實意義)，在回歸模型中都有必要考慮這個分層結構對數據的變異的貢獻 (the contribution of the clusters to the data variation)。 線性回歸章節中我們使用的是五個啞變量來代表不同組別加以分析: \\[ Y_{ij} = \\alpha_1 I_{i, j = 1} + \\alpha_2 I_{i, j=2} + \\cdots + \\alpha_5 I_{i, j=5} + \\beta_1X_{ij} + \\varepsilon_{ij} \\] 其中 \\(j\\) 是所屬層級編號。該模型中的 \\(\\varepsilon_{ij}\\) 被認爲服從均值爲零，方差爲 \\(\\sigma_{\\varepsilon}^2\\) 的正態分布。該模型也可以簡寫爲: \\[ Y_{ij} = \\alpha_j + \\beta_1X_{ij} + \\epsilon_{ij} \\] 一樣一預案 這樣的模型在等級線性回歸模型中被認爲是固定效應模型 fixed effect model。它其實是默認給五個層級五個不同的截距，每層內部 \\(X,Y\\) 之間的關系 (斜率) 則被認爲是完全相同的 (namely the within cluster models are the same)。 本課剛開始的例子中有個數據是來自 6 所不同醫院 72 名患者的收縮期血壓的數據。我們現在來分析這些人中血壓和年齡之間的關系。下面的散點圖重現了六所醫院的72名患者的血壓和年齡。 圖 72.11: SBP versus age: different symbols identify the six hospitals 下面在 R 裏擬合這個固定效應模型: Bp &lt;- read_dta(&quot;../backupfiles/bp.dta&quot;) Bp$hosp &lt;- as.factor(Bp$hosp) Bp &lt;- Bp %&gt;% mutate(c_age = age - mean(age)) # 通過指定截距爲零，獲取每個醫院的回歸線的截距 Model0 &lt;- lm(bp ~ 0 + c_age + hosp, data = Bp) summary(Model0) ## ## Call: ## lm(formula = bp ~ 0 + c_age + hosp, data = Bp) ## ## Residuals: ## Min 1Q Median 3Q Max ## -34.7803 -9.8106 -0.5285 7.4000 55.5287 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## c_age 1.00223 0.43766 2.290 0.02528 * ## hosp1 139.15421 5.73015 24.285 &lt; 2e-16 *** ## hosp2 130.21017 5.86957 22.184 &lt; 2e-16 *** ## hosp3 129.58146 5.66881 22.859 &lt; 2e-16 *** ## hosp4 124.00188 5.70326 21.742 &lt; 2e-16 *** ## hosp5 114.58859 5.70289 20.093 &lt; 2e-16 *** ## hosp6 115.79702 5.85632 19.773 &lt; 2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 19.136 on 65 degrees of freedom ## Multiple R-squared: 0.97954, Adjusted R-squared: 0.97733 ## F-statistic: 444.46 on 7 and 65 DF, p-value: &lt; 2.22e-16 # 先生成一個新的醫院變量 hops1 = 1。然後使用偏 F 檢驗法 # 檢驗控制了患者的年齡以後，這六所醫院的截距是否各自不相同。 Bp$hosp1 &lt;- Bp$hosp[1] mod2 &lt;- lm(bp ~ 0 + c_age + as.numeric(hosp1), data = Bp) anova(Model0, mod2) ## Analysis of Variance Table ## ## Model 1: bp ~ 0 + c_age + hosp ## Model 2: bp ~ 0 + c_age + as.numeric(hosp1) ## Res.Df RSS Df Sum of Sq F Pr(&gt;F) ## 1 65 23801.9 ## 2 70 27751.6 -5 -3949.73 2.15725 0.069638 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 偏 F 檢驗法給出的結果 \\(F(5, 65) = 2.16, P = 0.07\\)，所以說，數據其實告訴我們，調整了年齡之後，這六所醫院患者中年齡和血壓之間關系的回歸線有不同的截距。 72.5 簡單線性迴歸複習 滾回線性回歸章節 27。 72.6 Practical Hierarchical 01 72.6.1 數據 High-School-and-Beyond 數據 本數據來自1982年美國國家教育統計中心 (National Center for Education Statistics, NCES) 對美國公立學校和天主教會學校的一項普查。曾經在 Hierarchical Linear Model (Raudenbush and Bryk 2002) 一書中作爲範例使用。其數據的變量名和各自含義如下： minority indicatory of student ethinicity (1 = minority, 0 = other) female pupil&#39;s gender ses standardized socio-economic status score mathach measure of mathematics achievement size school&#39;s total number of pupils sector school&#39;s sector: 1 = catholic, 0 = not catholic schoolid school identifier PEFR 數據 數據本身是 17 名研究對象用兩種不同的測量方法測量兩次每個人的最大呼氣流速 (peak-expiratory-flow rate, PEFR)。最早在1986年的柳葉刀雜誌發表 (Bland and Altman 1986)。兩種測量法的名稱分別是 “Standard Wright” 和 “Mini Wright” peak flow meter。變量名和個字含義如下： id participant identifier wp1 standard wright measure at 1st occasion wp2 standard wright measure at 2nd occasion wm1 mini wright measure at 1st occasion wm2 mini wright measure at 2nd occasion 72.6.2 問題 72.6.3 將 High-School-and-Beyond 數據導入 R 中，熟悉數據結構及內容，特別要注意觀察每個學校的學生特徵。 hsb_selected &lt;- read_dta(&quot;../backupfiles/hsb_selected.dta&quot;) length(unique(hsb_selected$schoolid)) ## number of school = 160 ## [1] 160 ## create a subset data with only the first observation of each school hsb &lt;- hsb_selected[!duplicated(hsb_selected$schoolid), ] ## about 44 % of the schools are Catholic schools with(hsb, tab1(sector, graph = FALSE, decimal = 2)) ## sector : ## Frequency Percent Cum. percent ## 0 90 56.25 56.25 ## 1 70 43.75 100.00 ## Total 160 100.00 100.00 ## among all the pupils, about 53% are females with(hsb_selected, tab1(female, graph = FALSE, decimal = 2)) ## female : ## Frequency Percent Cum. percent ## 0 3390 47.18 47.18 ## 1 3795 52.82 100.00 ## Total 7185 100.00 100.00 ## among all the pupils, about 27.5% are from ethnic minorities with(hsb_selected, tab1(minority, graph = FALSE, decimal = 2)) ## minority : ## Frequency Percent Cum. percent ## 0 5211 72.53 72.53 ## 1 1974 27.47 100.00 ## Total 7185 100.00 100.00 72.6.4 爲了簡便起見，接下來的分析只節選數據中前五所學校 188 名學生的數學成績，和 SES。分別計算每所學校的數學成績,及 SES 的平均值。 hsb5 &lt;- subset(hsb_selected, schoolid &lt; 1320) Mean_ses_math &lt;- ddply(hsb5,~schoolid,summarise,mean_ses=mean(ses),mean_math=mean(mathach)) ## the mean SES score ranges from -0.4255 to +0.5280 ## the mean Maths score ranges from 7.636 to 16.255 Mean_ses_math ## schoolid mean_ses mean_math ## 1 1224 -0.43438298 9.7154468 ## 2 1288 0.12159999 13.5108000 ## 3 1296 -0.42550000 7.6359583 ## 4 1308 0.52800000 16.2554999 ## 5 1317 0.34533333 13.1776875 72.6.5 先無視掉學校這一分層變量，把所有學生看作是相互獨立的，擬合總體的 SES 和數學成績的線性迴歸 (Total regression model)。把該總體模型的預測值提取並存儲在數據庫中。 ## plot the scatter of mathach and ses among these 5 schools ggplot(hsb5, aes(x = ses, y = mathach)) + geom_point() + theme_bw() + theme(axis.text = element_text(size = 15), axis.text.x = element_text(size = 15), axis.text.y = element_text(size = 15)) + labs(x = &quot;SES&quot;, y = &quot;Math achievement&quot;) + xlim(-2.05, 2.05)+ ylim(-10, 30) + theme(axis.title = element_text(size = 17), axis.text = element_text(size = 8)) 圖 72.12: Scatter plot of SES and math achievements among all pupils from first 5 schools, assuming that they are all independent Total_reg &lt;- lm(mathach ~ ses, data = hsb5) ## the total regression model gives an estimated regression coefficient for the SES ## of each pupil equal to 3.31 (SE=0.66) summary(Total_reg) ## ## Call: ## lm(formula = mathach ~ ses, data = hsb5) ## ## Residuals: ## Min 1Q Median 3Q Max ## -15.23022 -5.08316 -0.68614 5.11170 14.68513 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 11.45652 0.47342 24.1997 &lt; 2.2e-16 *** ## ses 3.30696 0.66021 5.0089 1.267e-06 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 6.4708 on 186 degrees of freedom ## Multiple R-squared: 0.11886, Adjusted R-squared: 0.11412 ## F-statistic: 25.09 on 1 and 186 DF, p-value: 1.2667e-06 hsb5$Pred_T &lt;- Total_reg$fitted.values # save the fitted values to the dataset 72.6.6 用各個學校 SES 和數學成績的均值擬合一個學校間的線性迴歸模型 (between regression model)。 Btw_reg &lt;- lm(mean_math ~ mean_ses, data = Mean_ses_math) ## the regression model for the school level variables (between model) gives ## an estimated regression coefficient of 7.29 (SE=1.41) summary(Btw_reg) ## ## Call: ## lm(formula = mean_math ~ mean_ses, data = Mean_ses_math) ## ## Residuals: ## 1 2 3 4 5 ## 1.02010 0.76212 -1.12415 0.54401 -1.20209 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 11.86216 0.55664 21.3102 0.0002261 *** ## mean_ses 7.29039 1.40703 5.1814 0.0139557 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.2418 on 3 degrees of freedom ## Multiple R-squared: 0.89949, Adjusted R-squared: 0.86598 ## F-statistic: 26.847 on 1 and 3 DF, p-value: 0.013956 Mean_ses_math$Pred_B &lt;- Btw_reg$fitted.values # save the fitted values to the dataset 72.6.7 分別對每個學校內的學生進行 SES 和數學成績擬合線性迴歸模型。 Within_schl1 &lt;- lm(mathach ~ ses, data = hsb5[hsb5$schoolid == 1224,]) Within_schl2 &lt;- lm(mathach ~ ses, data = hsb5[hsb5$schoolid == 1288,]) Within_schl3 &lt;- lm(mathach ~ ses, data = hsb5[hsb5$schoolid == 1296,]) Within_schl4 &lt;- lm(mathach ~ ses, data = hsb5[hsb5$schoolid == 1308,]) Within_schl5 &lt;- lm(mathach ~ ses, data = hsb5[hsb5$schoolid == 1317,]) # the within school regressions gives estimated slopes which have a mean of 1.65 # and which ranges between 0.126 and 3.255 summary(c(Within_schl1$coefficients[2], Within_schl2$coefficients[2], Within_schl3$coefficients[2], Within_schl4$coefficients[2], Within_schl5$coefficients[2])) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.12602 1.07596 1.27391 1.64799 2.50858 3.25545 # the SEs ranging between 1.21 and 3.00 summary(c(summary(Within_schl1)$coefficients[4], summary(Within_schl2)$coefficients[4], summary(Within_schl3)$coefficients[4], summary(Within_schl4)$coefficients[4], summary(Within_schl5)$coefficients[4])) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 1.2090 1.4359 1.7652 1.8987 2.0797 3.0034 hsb5$Pred_W &lt;- c(Within_schl1$fitted.values, Within_schl2$fitted.values, Within_schl3$fitted.values, Within_schl4$fitted.values, Within_schl5$fitted.values) ## save the predicted value into the dataset 72.6.8 比較三種模型計算的數學成績的擬合值，他們一致？還是有所不同？爲什麼會有不同？ 總體模型 (Total regression model) 實際上無視了學生的性別，種族等可能帶來的混雜效果； 學校間模型 (Between model) 估計的實際上是SES均值每增加一個單位，與之對應的數學平均成績的改變量，這個模型絕對不可用與評估個人的 SES 與數學成績之間的關係； 學校內模型 (Within model) 擬合的 SES 與數學成績之間的關係變得十分地不精確 (SEs are fairly large)，變化幅度也很大。 72.6.9 把三種模型的數學成績擬合值散點圖繪製在同一張圖內。 Mean &lt;- Mean_ses_math[, 1:3] names(Mean) &lt;- c(&quot;schoolid&quot;, &quot;ses&quot;, &quot;Pred_W&quot;) ggplot(hsb5, aes(x = ses, y = Pred_W, group = schoolid)) + geom_line(linetype = 2, size = 1) + geom_abline(intercept = Total_reg$coefficients[1], slope = Total_reg$coefficients[2], colour = &quot;dark blue&quot;) + geom_abline(intercept = Btw_reg$coefficients[1], slope = Btw_reg$coefficients[2], colour = &quot;red&quot;) + geom_point(data = Mean, shape = 17, size = 4, colour = &quot;Red&quot;) + theme_bw() + theme(axis.text = element_text(size = 15), axis.text.x = element_text(size = 15), axis.text.y = element_text(size = 15)) + labs(x = &quot;SES&quot;, y = &quot;Fitted regression lines (Maths achievement)&quot;) + xlim(-2.05, 2.05)+ ylim(5, 20) + theme(axis.title = element_text(size = 17), axis.text = element_text(size = 8)) + theme(plot.caption = element_text(size = 12, hjust = 0)) + labs(caption = &quot;Black dash line: Within regression model; Blue solid line: Total regression model; Red solid line: Between regression model; Red triangle: School mean values&quot;) 圖 72.13: High-school-and-beyond data: Predicted values by Total, Between, and Within regression models 72.6.10 用這 5 個學校的數據擬合一個固定效應線性迴歸模型 Fixed_reg &lt;- lm(mathach ~ ses + factor(schoolid), data = hsb5) ## Fitting a fixed effect model to these data is equivalent to forcing ## a common slope onto the five within regression models. It gives an ## estimated slope of 1.789 (SE=0.76), close to their average of 1.64799. ## Note that controlling for female, minority, and sector but not for ## schoolid leads to roughly the same estimate (slope = 1.68, SE=0.75) summary(Fixed_reg) ## ## Call: ## lm(formula = mathach ~ ses + factor(schoolid), data = hsb5) ## ## Residuals: ## Min 1Q Median 3Q Max ## -13.97593 -4.19683 -0.75189 5.22088 16.38133 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 10.49254 0.96761 10.8438 &lt; 2.2e-16 *** ## ses 1.78896 0.75939 2.3558 0.019548 * ## factor(schoolid)1288 2.80072 1.60041 1.7500 0.081803 . ## factor(schoolid)1296 -2.09538 1.27973 -1.6374 0.103283 ## factor(schoolid)1308 4.81839 1.81826 2.6500 0.008758 ** ## factor(schoolid)1317 2.06736 1.41005 1.4662 0.144332 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 6.2362 on 182 degrees of freedom ## Multiple R-squared: 0.1992, Adjusted R-squared: 0.1772 ## F-statistic: 9.0544 on 5 and 182 DF, p-value: 1.0512e-07 summary(lm(mathach ~ ses + female + minority + sector, data = hsb5)) ## ## Call: ## lm(formula = mathach ~ ses + female + minority + sector, data = hsb5) ## ## Residuals: ## Min 1Q Median 3Q Max ## -13.09128 -4.17332 -0.46306 4.50807 15.33205 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 12.54543 0.86027 14.5831 &lt; 2.2e-16 *** ## ses 1.68055 0.74489 2.2561 0.0252480 * ## female -1.54861 0.94857 -1.6326 0.1042780 ## minority -3.19635 0.95450 -3.3487 0.0009857 *** ## sector 3.98121 1.11941 3.5565 0.0004785 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 6.1696 on 183 degrees of freedom ## Multiple R-squared: 0.2119, Adjusted R-squared: 0.19467 ## F-statistic: 12.301 on 4 and 183 DF, p-value: 7.0265e-09 72.6.11 讀入 PEFR 數據。 pefr &lt;- read_dta(&quot;../backupfiles/pefr.dta&quot;) # the data are in wide format pefr ## # A tibble: 17 × 5 ## id wp1 wp2 wm1 wm2 ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 494 490 512 525 ## 2 2 395 397 430 415 ## 3 3 516 512 520 508 ## 4 4 434 401 428 444 ## 5 5 476 470 500 500 ## 6 6 557 611 600 625 ## 7 7 413 415 364 460 ## 8 8 442 431 380 390 ## 9 9 650 638 658 642 ## 10 10 433 429 445 432 ## 11 11 417 420 432 420 ## 12 12 656 633 626 605 ## 13 13 267 275 260 227 ## 14 14 478 492 477 467 ## 15 15 178 165 259 268 ## 16 16 423 372 350 370 ## 17 17 427 421 451 443 # transform data into long format pefr_long &lt;- pefr %&gt;% gather(key, value, -id) %&gt;% separate(key, into = c(&quot;measurement&quot;, &quot;occasion&quot;), sep = 2) %&gt;% arrange(id, occasion) %&gt;% spread(measurement, value) pefr_long ## # A tibble: 34 × 4 ## id occasion wm wp ## &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 1 512 494 ## 2 1 2 525 490 ## 3 2 1 430 395 ## 4 2 2 415 397 ## 5 3 1 520 516 ## 6 3 2 508 512 ## 7 4 1 428 434 ## 8 4 2 444 401 ## 9 5 1 500 476 ## 10 5 2 500 470 ## # … with 24 more rows ## figure shows slightly closer agreement between the repeated measures of standard Wright, ## than between those of Mini Wright ggplot(pefr_long, aes(x = id, y = wp, fill = occasion)) + geom_point(size = 4, shape = 21) + geom_hline(yintercept = mean(pefr_long$wp), colour = &quot;red&quot;) + theme_bw() + scale_x_continuous(breaks = 1:17)+ theme(axis.text = element_text(size = 15), axis.text.x = element_text(size = 15), axis.text.y = element_text(size = 15)) + labs(x = &quot;Subject ID&quot;, y = &quot;W Measurements&quot;) + theme(axis.title = element_text(size = 17), axis.text = element_text(size = 8))+ theme(legend.text = element_text(size = 19), legend.title = element_text(size = 19)) 圖 72.14: Two recordings of PEFR taken with the standard Wright meter 72.6.12 求每個患者的 wp 兩次測量平均值 # the means range from 171.5 to 644.5 pefr_long %&gt;% group_by(id) %&gt;% summarise(mean_wp = mean(wp)) ## # A tibble: 17 × 2 ## id mean_wp ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1 492 ## 2 2 396 ## 3 3 514 ## 4 4 418. ## 5 5 473 ## 6 6 584 ## 7 7 414 ## 8 8 436. ## 9 9 644 ## 10 10 431 ## 11 11 418. ## 12 12 644. ## 13 13 271 ## 14 14 485 ## 15 15 172. ## 16 16 398. ## 17 17 424 72.6.13 在 R 裏先用 ANOVA 分析個人的 wp 變異。再用 lme4::lmer 擬合用 id 作隨機效應的混合效應模型。確認後者報告的 Std.Dev for id effect 其實可以用 ANOVA 結果的 \\(\\sqrt{\\frac{\\text{MMS-MSE}}{n}}\\) (n 是每個個體重複測量值的個數)。 with(pefr_long, anova(lm(wp~factor(id)))) ## Analysis of Variance Table ## ## Response: wp ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## factor(id) 16 441599 27599.91 117.8 3.145e-14 *** ## Residuals 17 3983 234.29 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #library(lme4) ( fit &lt;- lmer(wp ~ (1|id), data=pefr_long) ) ## Linear mixed model fit by REML [&#39;lmerModLmerTest&#39;] ## Formula: wp ~ (1 | id) ## Data: pefr_long ## REML criterion at convergence: 353.5472 ## Random effects: ## Groups Name Std.Dev. ## id (Intercept) 116.974 ## Residual 15.307 ## Number of obs: 34, groups: id, 17 ## Fixed Effects: ## (Intercept) ## 447.88 sqrt((27600 - 234)/2) ## [1] 116.97436 72.6.14 擬合結果變量爲 wp，解釋變量爲 id 的簡單線性迴歸模型。用數學表達式描述這個模型。 Reg &lt;- lm(wp ~ factor(id), data = pefr_long) # The fixed effect regression model leads to the same ANOVA # table. To the same estimate of the residual SD = (15.307) # However, it does not give an estimate of the &quot;SD of id effect&quot; # Instead it gives estimates of mean PEFR for participant number 1 # = 492 and estimates of the difference in means from him/her # for all the other 16 pariticipants anova(Reg) ## Analysis of Variance Table ## ## Response: wp ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## factor(id) 16 441599 27599.91 117.8 3.145e-14 *** ## Residuals 17 3983 234.29 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 summary(Reg) ## ## Call: ## lm(formula = wp ~ factor(id), data = pefr_long) ## ## Residuals: ## Min 1Q Median 3Q Max ## -27.00 -3.75 0.00 3.75 27.00 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 492.000 10.823 45.4569 &lt; 2.2e-16 *** ## factor(id)2 -96.000 15.307 -6.2718 8.435e-06 *** ## factor(id)3 22.000 15.307 1.4373 0.1687894 ## factor(id)4 -74.500 15.307 -4.8672 0.0001448 *** ## factor(id)5 -19.000 15.307 -1.2413 0.2313547 ## factor(id)6 92.000 15.307 6.0105 1.405e-05 *** ## factor(id)7 -78.000 15.307 -5.0958 8.972e-05 *** ## factor(id)8 -55.500 15.307 -3.6259 0.0020883 ** ## factor(id)9 152.000 15.307 9.9303 1.715e-08 *** ## factor(id)10 -61.000 15.307 -3.9852 0.0009574 *** ## factor(id)11 -73.500 15.307 -4.8018 0.0001662 *** ## factor(id)12 152.500 15.307 9.9630 1.635e-08 *** ## factor(id)13 -221.000 15.307 -14.4382 5.665e-11 *** ## factor(id)14 -7.000 15.307 -0.4573 0.6532334 ## factor(id)15 -320.500 15.307 -20.9386 1.413e-13 *** ## factor(id)16 -94.500 15.307 -6.1738 1.020e-05 *** ## factor(id)17 -68.000 15.307 -4.4425 0.0003571 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 15.307 on 17 degrees of freedom ## Multiple R-squared: 0.99106, Adjusted R-squared: 0.98265 ## F-statistic: 117.8 on 16 and 17 DF, p-value: 3.145e-14 上面的模型用數學表達式來描述就是： \\[ \\begin{aligned} Y_{ij} &amp; = \\alpha_1 + \\delta_i + \\varepsilon_{ij} \\\\ \\text{Where } \\delta_j &amp; = \\alpha_j - \\alpha_1 \\\\ \\text{and } \\delta_1 &amp; = 0 \\end{aligned} \\] 72.6.15 將 wp 中心化之後，重新擬合相同的模型，把截距去除掉。寫下這個模型的數學表達式。 Reg1 &lt;- lm((wp - mean(wp)) ~ 0 + factor(id), data = pefr_long) # it leads to the same ANOVA table again, same residual SD anova(Reg1) ## Analysis of Variance Table ## ## Response: (wp - mean(wp)) ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## factor(id) 17 441599 25976.38 110.871 4.5349e-14 *** ## Residuals 17 3983 234.29 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 summary(Reg1) ## ## Call: ## lm(formula = (wp - mean(wp)) ~ 0 + factor(id), data = pefr_long) ## ## Residuals: ## Min 1Q Median 3Q Max ## -27.00 -3.75 0.00 3.75 27.00 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## factor(id)1 44.118 10.823 4.0761 0.0007863 *** ## factor(id)2 -51.882 10.823 -4.7935 0.0001692 *** ## factor(id)3 66.118 10.823 6.1087 1.158e-05 *** ## factor(id)4 -30.382 10.823 -2.8071 0.0121232 * ## factor(id)5 25.118 10.823 2.3207 0.0329951 * ## factor(id)6 136.118 10.823 12.5762 4.894e-10 *** ## factor(id)7 -33.882 10.823 -3.1305 0.0060933 ** ## factor(id)8 -11.382 10.823 -1.0516 0.3076854 ## factor(id)9 196.118 10.823 18.1197 1.493e-12 *** ## factor(id)10 -16.882 10.823 -1.5598 0.1372300 ## factor(id)11 -29.382 10.823 -2.7147 0.0147164 * ## factor(id)12 196.618 10.823 18.1659 1.432e-12 *** ## factor(id)13 -176.882 10.823 -16.3425 7.887e-12 *** ## factor(id)14 37.118 10.823 3.4294 0.0031978 ** ## factor(id)15 -276.382 10.823 -25.5355 5.342e-15 *** ## factor(id)16 -50.382 10.823 -4.6549 0.0002269 *** ## factor(id)17 -23.882 10.823 -2.2065 0.0413886 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 15.307 on 17 degrees of freedom ## Multiple R-squared: 0.99106, Adjusted R-squared: 0.98212 ## F-statistic: 110.87 on 17 and 17 DF, p-value: 4.5349e-14 上面的模型用數學表達式來描述就是： \\[ \\begin{aligned} Y_{ij} - \\mu &amp; = \\gamma_j + \\varepsilon_{ij} \\\\ Y_{ij} &amp; = \\mu + \\gamma_j + \\varepsilon_{ij} \\\\ \\text{Where } \\mu &amp; \\text{ is the overall mean} \\\\ \\text{and } \\sum_{j=1}^J\\gamma_j &amp; = 0\\\\ \\end{aligned} \\] 72.6.16 計算這些迴歸係數 (其實是不同羣之間的隨機截距) 的均值和標準差。 # the individual level intercepts have mean zero and SD = 117.47, larger than the estimated # Std.Dev for id effect. Reg1$coefficients ## factor(id)1 factor(id)2 factor(id)3 factor(id)4 factor(id)5 factor(id)6 factor(id)7 ## 44.117647 -51.882353 66.117647 -30.382353 25.117647 136.117647 -33.882353 ## factor(id)8 factor(id)9 factor(id)10 factor(id)11 factor(id)12 factor(id)13 factor(id)14 ## -11.382353 196.117647 -16.882353 -29.382353 196.617647 -176.882353 37.117647 ## factor(id)15 factor(id)16 factor(id)17 ## -276.382353 -50.382353 -23.882353 mean(Reg1$coefficients) ## [1] 1.4628821e-14 sd(Reg1$coefficients) ## [1] 117.47321 References "],["random-intercept.html", "第 73 章 隨機截距模型 random intercept model 73.1 隨機截距模型的定義 73.2 隨機截距模型的參數估計 73.3 如何在 R 中進行隨機截距模型的擬合 73.4 隨機截距模型中的統計推斷 73.5 Practical Hierarchical 02", " 第 73 章 隨機截距模型 random intercept model 最簡單的隨機效應模型 – 隨機截距模型 random intercept model。 73.1 隨機截距模型的定義 有時，我們對每個分層各自的截距大小並不那麼感興趣，且如果只有固定效應的話，其實我們從某種程度上忽略掉了數據層與層之間變異的方差 (between cluster variation)。於是，在模型中考慮這些問題的解決方案就是 – 我們讓各層的截距呈現隨機效應 (treat the variation in cluster intercepts not as fixed)，把這些截距視爲來自與某種分布的隨機呈現 (randomly draws from some distribution)。於是原先的只有固定效應部分的模型，就增加了隨機截距部分: \\[ \\begin{aligned} Y_{ij} &amp; = \\mu + u_j + \\varepsilon_{ij} \\\\ \\text{where } u_j &amp; \\stackrel{N.I.D}{\\sim} N(0, \\sigma_u^2) \\\\ \\varepsilon_{ij} &amp; \\stackrel{N.I.D}{\\sim} N(0, \\sigma_\\varepsilon^2) \\\\ u_j &amp; \\text{ are independent from } \\varepsilon_{ij} \\\\ \\end{aligned} \\tag{73.1} \\] 這個混合效應模型中， \\(\\mu\\) 是總體均值; \\(u_j\\) 是一個服從均值 0, 方差 (the population between cluster variance) 爲 \\(\\sigma_u^2\\) 的正態分布的隨機變量; \\(\\varepsilon_{ij}\\) 是隨機誤差，它也被認爲服從均值爲 0, 方差爲 \\(\\sigma_\\varepsilon^2\\) 的正太分布，且這兩個隨機效應部分之間也是相互獨立的。 從該模型估算的結果變量 \\(Y_{ij}\\) 的方差是 \\(\\sigma_u^2 + \\sigma_\\varepsilon^2\\)。 隨機截距模型又被叫做是 方差成分模型 (variance-component model)，或者是單向隨機效應方差模型 (one-way random effects ANOVA model)。 這個模型和僅有固定效應的模型，有顯著的不同: \\[ Y_{ij} = \\mu + \\gamma_j + \\varepsilon_{ij} \\] 固定效應模型裏， \\(\\mu\\) 也是總體均值; \\(\\sum_{j=1}^J \\gamma_j = 0\\) 是將各組不同截距之和強制爲零的過程; 所以隨機截距模型打破了這個限制，使得隨機的截距 \\(\\mu_j\\) 成爲一個服從均值爲 0，方差爲 \\(\\sigma_u^2\\) 的 隨機變量。 隨機效應部分 \\(u_j\\) 和隨機誤差 \\(\\varepsilon_{ij}\\) 之間相互獨立的前提，意味着兩個裏屬於不同層級的觀察之間是相互獨立的，但是反過來，同屬於一個層級的個體之間就變成了有相關性的了 (within cluster correlation): \\[ \\begin{aligned} \\because Y_{1j} &amp; = \\mu + u_j + \\varepsilon_{1j} \\\\ Y_{2j} &amp; = \\mu + u_j + \\varepsilon_{2j} \\\\ \\therefore \\text{Cov}(Y_{1j}, Y_{2j}) &amp; = \\text{Cov}(u_j, u_j) + \\text{Cov}(u_j, \\varepsilon_{2j}) + \\text{Cov}(\\varepsilon_{1j}, u_j) + \\text{Cov}(\\varepsilon_{1j}, \\varepsilon_{2j}) \\\\ &amp; = \\text{Cov}(u_j, u_j) = V(u_j, u_j)\\\\ &amp; = \\sigma_u^2 \\end{aligned} \\] 由於 \\(\\text{Var}(Y_{1j}) = \\text{Var}(Y_{2j}) = \\sigma_u^2 + \\sigma_\\varepsilon^2\\)，所以，同屬一層的兩個個體之間的層內相關系數 (intra-class correlation): \\[ \\lambda = \\frac{\\text{Cov}(Y_{1j}, Y_{2j})}{\\text{SD}(Y_{1j})\\text{SD}(Y_{2j})} = \\frac{\\sigma_u^2}{\\sigma_\\varepsilon^2 + \\sigma_u^2} \\] 從層內相關系數的公式也可看出，該相關系數可以同時被理解爲結果變量 \\(Y_{ij}\\) 的方差中歸咎與層(cluster)結構的部分的百分比。 This is the within-cluster or intra-class correlation, that we will denote \\(\\lambda\\). Note that it is also the proportion of total variance that is accounted for by the cluster. 73.2 隨機截距模型的參數估計 如此，我們就知道在隨機截距模型裏，有三個需要被估計的參數 \\(\\mu, \\sigma_u^2, \\sigma^2_\\varepsilon\\)。我們可以利用熟悉的極大似然估計法估計這些參數 (Maximum Likelihood, ML)。當且進當嵌套式結構數據是平衡數據 (balanced)時 (即，每層中的個體數量相同)，這三個參數的 \\(\\text{MLE}\\) 分別是: \\[ \\begin{aligned} \\hat\\mu &amp; = \\bar{Y} \\\\ \\hat\\sigma_\\varepsilon^2 &amp; = \\text{Mean square error, MSE} \\\\ \\hat\\sigma_u^2 &amp; = \\frac{\\text{Model Sum of Squares, MSS}}{Jn} - \\frac{\\hat\\sigma^2_\\varepsilon}{n} \\end{aligned} \\tag{73.2} \\] 只要模型指定正確無誤，前兩個極大似然估計是他們各自的無偏估計。但第三個，也就是層內方差的估計量確實際上是低估了的 (downward biased)。這裏常用的另一種對層內方差參數的估計法被叫做矩估計量 (moment estimator, or ANOVA estimator): \\[ \\begin{aligned} \\widetilde{\\sigma}_u^2 &amp; = \\frac{\\text{MSS}}{(J-1)n}- \\frac{\\hat\\sigma_\\varepsilon^2}{n} \\\\ &amp; = \\frac{\\text{MSS} - \\text{MSE}(J-1)}{(J-1)n} \\\\ &amp; = \\frac{\\text{MMS}(J-1) - \\text{MSE}(J-1)}{(J-1)n} \\\\ &amp; = \\frac{\\text{MMS} - \\text{MSE}}{n} \\end{aligned} \\] 對於平衡數據 (balanced data)，這個矩估計量又被叫做限制性極大似然 (Restricted Maximum Likelihood, REML)。限制性極大似然法，是一個真極大似然過程 (genuine maximum likelihood procedure)，但是它每次進行估計的時候，會先”去除掉”固定效應部分，所以每次用於估計參數的數據其實是對數據的線性轉換後 \\(Y_{ij} - \\mu = u_j + \\varepsilon_{ij}\\)，它使用的數據是這個等式右半部分的轉換後數據。在 REML 過程中，先估計層內方差 \\(\\sigma_u^2\\) 再對固定效應部分的總體均值估計，所以是個兩步走的過程。另外除了這裏討論的 ML, REML這兩種對層內方差進行參數估計的方法之外，在計量經濟學 (econometrics) 中常用的是 (本課不深入探討) 廣義最小二乘法 (Generalized Least Squares, GLS)。GLS 使用的是一種加權的最小二乘法 (OLS)，該加權法根據層與隨機誤差的方差成分 (variance components) 不同而給不同的層以不同的截距權重。當數據本身是平衡數據時，GLS給出的估計結果等同於 REML法。當數據不是平衡數據的時候，ML/REML 其實背後使用的原理也是 GLS。 73.3 如何在 R 中進行隨機截距模型的擬合 在 R 或 STATA 中擬合隨機截距模型，需要數據爲“長 (long)” 數據，下面的代碼可以在 R 裏面把 “寬 (wide)” 的數據調整成爲 長 數據: pefr &lt;- read_dta(&quot;../backupfiles/pefr.dta&quot;) # the data are in wide format head(pefr) ## # A tibble: 6 × 5 ## id wp1 wp2 wm1 wm2 ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 494 490 512 525 ## 2 2 395 397 430 415 ## 3 3 516 512 520 508 ## 4 4 434 401 428 444 ## 5 5 476 470 500 500 ## 6 6 557 611 600 625 # transform data into long format pefr_long &lt;- pefr %&gt;% gather(key, value, -id) %&gt;% separate(key, into = c(&quot;measurement&quot;, &quot;occasion&quot;), sep = 2) %&gt;% arrange(id, occasion) %&gt;% spread(measurement, value) pefr_long ## # A tibble: 34 × 4 ## id occasion wm wp ## &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 1 512 494 ## 2 1 2 525 490 ## 3 2 1 430 395 ## 4 2 2 415 397 ## 5 3 1 520 516 ## 6 3 2 508 512 ## 7 4 1 428 434 ## 8 4 2 444 401 ## 9 5 1 500 476 ## 10 5 2 500 470 ## # … with 24 more rows 在 R 裏面，有兩個包 (lme4::lmer 或 nlme::lme) 的各自兩種代碼以供選用: M0 &lt;- lme(fixed = wm ~ 1, random = ~ 1 | id, data = pefr_long, method = &quot;REML&quot;) summary(M0) ## Linear mixed-effects model fit by REML ## Data: pefr_long ## AIC BIC logLik ## 366.75843 371.24795 -180.37921 ## ## Random effects: ## Formula: ~1 | id ## (Intercept) Residual ## StdDev: 110.39701 19.910835 ## ## Fixed effects: wm ~ 1 ## Value Std.Error DF t-value p-value ## (Intercept) 453.91176 26.992068 17 16.816487 0 ## ## Standardized Within-Group Residuals: ## Min Q1 Med Q3 Max ## -2.444435579 -0.335076940 0.037044891 0.350983659 2.377059741 ## ## Number of Observations: 34 ## Number of Groups: 17 M1 &lt;- lmer(wm ~ (1|id), data = pefr_long, REML = TRUE) summary(M1) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: wm ~ (1 | id) ## Data: pefr_long ## ## REML criterion at convergence: 360.8 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -2.444436 -0.335077 0.037045 0.350984 2.377060 ## ## Random effects: ## Groups Name Variance Std.Dev. ## id (Intercept) 12187.51 110.397 ## Residual 396.44 19.911 ## Number of obs: 34, groups: id, 17 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 453.912 26.992 16.000 16.817 1.36e-11 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 不知道爲什麼在 R 裏有這兩種完全不同的方式來擬合混合效應模型。還好他們的結果基本完全一致。在這個極爲簡單的例子裏，我們可以利用模型擬合的結果中 Random effects 的部分來計算層內相關系數 (intra-class correlation): \\[ \\hat\\lambda = \\frac{\\hat\\sigma_u^2}{(\\hat\\sigma_u^2 + \\hat\\sigma_\\varepsilon^2)} = \\frac{110.40^2}{110.40^2 + 19.91^2} = 0.97 \\] 這是對 Mini Wright meter 測量方法可靠性的一個評價指標。其中 \\(\\sigma_u^2\\) 是患者最大呼吸速率 (PEFR) 測量值的方差，\\(\\sigma_\\varepsilon^2\\) 是測量的隨機誤差，所以這裏的測量方法的可靠度是 97%，是可信度十分高的測量準確度。 73.4 隨機截距模型中的統計推斷 73.4.1 固定效應部分的推斷 當數據是平衡數據時，固定效應的 \\(\\mu\\) 的 \\(\\text{MLE}\\) 是總體的均值 (overall mean)。它的估計標準誤是: \\[ \\hat{\\text{SE}}(\\hat\\mu) = \\sqrt{\\frac{n\\hat\\sigma_u^2 + \\hat\\sigma_\\varepsilon^2}{Jn}} \\] 記得線性回歸中(固定效應模型中)，\\(\\mu\\) 的 \\(\\text{MLE}\\) 也還是總體的均值 (overall mean)。它的估計標準誤卻是: \\[ \\hat{\\text{SE}}(\\hat\\mu^F) = \\sqrt{\\frac{\\hat\\sigma_\\varepsilon^2}{Jn}} \\] 所以，僅有固定效應模型時的總體均值的標準誤總是要比混合效應模型下估計的總體均值標準誤要小 \\[ \\hat{\\text{SE}}(\\hat\\mu^F) &lt; \\hat{\\text{SE}}(\\hat\\mu) \\] 如果數據不是平衡數據，那麼隨機截距模型中 \\(\\mu\\) 的 \\(\\text{MLE}\\) 是每層均值的加權均值 (a weighted mean of the cluster specific means): \\[ \\begin{aligned} \\hat\\mu &amp; = \\frac{\\sum_jw_j\\bar{Y}_{\\cdot j}}{\\sum_j w_j} \\\\ \\text{Where } w_j &amp; = \\frac{1}{\\sigma_u^2 + \\sigma_\\varepsilon^2/n_j} \\end{aligned} \\] 從加權的方式來看，如果樣本量少的層級數據本身的誤差方差 \\(\\sigma_\\varepsilon^2\\) 也較小，那麼層樣本量較小的層也會和層樣本量較大的層獲得相似的均值權重。 零假設是 \\(\\mu = 0\\) 的檢驗，就計算 \\(z\\) 檢驗統計量就可以 (或者 \\(z^2\\) 的 Wald 檢驗): \\[ z = \\frac{\\hat\\mu}{\\hat{\\text{SE}}(\\hat\\mu)} \\] 總體均值的 95% 信賴區間的計算式就是: \\[ \\hat\\mu \\pm z_{0.975}\\hat{\\text{SE}}(\\hat\\mu) \\] 73.4.2 隨機效應部分的推斷 總體均值的假設檢驗搞定了之後，我們肯定還想對隨機截距模型擬合的隨機效應方差作出是否有意義的假設檢驗。也就是我們希望能檢驗零假設 \\(\\sigma_u^2 = 0\\)，和替代假設 \\(\\sigma_u^2 &gt; 0\\)。一般情況下大家肯定會想到對含有隨機效應的模型和只有固定效應的模型使用 LRT (似然比檢驗)，然後把檢驗統計量拿去和自由度爲 1 的卡方分布做比較。但是其實方差本身永遠都是大於等於零的，所以傳統的 LRT 在這個零假設時並不適用。 在零假設條件下 \\(\\sigma_u^2 = 0\\)，也就是說層內相關在一半的數據中是正相關，另一半數據中是正好相反的負相關，以此相互抵消，方差爲零。所以其實這裏的 LRT 檢驗統計量應該服從的不是自由度爲 1 的卡方分布那麼簡單，而是一種混合卡方分布 (自由度 1 和 自由度爲 0 的混合卡方分布 \\(\\chi_{0,1}^2\\))。所以應該把模型比較之後計算獲得的 \\(p\\) 值除以2，以獲得準確的對 \\(\\sigma_u^2 = 0\\) 檢驗的 \\(p\\) 值。 M0 &lt;- lme(fixed = wm ~ 1, random = ~ 1 | id, data = pefr_long, method = &quot;REML&quot;) M0_fixed&lt;- lm(wm ~ 1, data = pefr_long) anova(M0, M0_fixed) ## Model df AIC BIC logLik Test L.Ratio p-value ## M0 1 3 366.75843 371.24795 -180.37921 ## M0_fixed 2 2 411.71916 414.71217 -203.85958 1 vs 2 46.960731 &lt;.0001 回到本例中的混合效應模型和固定效應模型的比較來看，LRT本身的 P 值已經 \\(&lt;0.0001\\)，所以除不除以二對推斷結果都沒有太大影響。也就是本例中的隨即截距模型是比固定效應的簡單線性回歸模型更加適合該數據的模型。 其他注意點: 在坑爹的 STATA 裏面混合效應模型居然還會輸出隨機效應方差的 “標準誤”，該數字請你無視之。 當樣本擁有足夠多的樣本量 (其實是第二階層的層數)，極大似然法 (ML) 和限制性極大似然法 (REML) 給出的結果會相當接近。 當你比較兩個不是互爲嵌套 (nested) 的模型時，可以使用 AIC/BIC 指標。 73.5 Practical Hierarchical 02 73.5.1 數據 GHQ 數據 該數據包含 12 名學生前後兩次回答 General Health Questionnaire (GHQ) 問卷獲得的數據。該問卷用於測量學生的心理壓力，其變量名和含義如下： id Student identifier GHQ1 General Health Questionnaire score- 1st occasion GHQ2 General Health Questionnaire score- 2nd occasion Siblings 數據 該數據是來自一項對 3978 名媽媽關於她們 8604 名孩子的出生體重及健康狀況的問卷調查。該數據的變量名和含義如下： momid Mother identifier idx Baby identifier mage Maternal age (years) meduc Maternal education gestat gestational age (weeks) birwt Birth weight (g) smoke Maternal smoking (0 = no, 1 = yes) male Baby boy (0 = no, 1 = yes) year Year of birth married Maternal marital status (0 = no, 1 = yes) hsgrad Maternal high school education (0 = no, 1 = yes) black Maternal race (1 = black, 0 = other) 73.5.2 讀入 GHQ 數據，探索其內容，該數據是否是平衡數據 (balanced)？計算每名學生的兩次問卷成績平均分。 ghq &lt;- read_dta(&quot;../backupfiles/ghq.dta&quot;) ghq ## # A tibble: 12 × 3 ## id GHQ1 GHQ2 ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 12 12 ## 2 2 8 7 ## 3 3 22 24 ## 4 4 10 14 ## 5 5 10 8 ## 6 6 6 4 ## 7 7 8 5 ## 8 8 4 6 ## 9 9 14 14 ## 10 10 6 5 ## 11 11 2 5 ## 12 12 22 16 ghq &lt;- ghq %&gt;% mutate(mean = (GHQ1 + GHQ2)/2) # each student has 2 observations (i.e. n_j = n = 2) # and therefore the data are balanced. # the overall mean is 10.167 and its SD is 6.073 ghq %&gt;% summarise(OverallMean = mean(mean), SD = sd(mean)) ## # A tibble: 1 × 2 ## OverallMean SD ## &lt;dbl&gt; &lt;dbl&gt; ## 1 10.2 6.07 73.5.3 把數據從寬 (wide) 改變成長 (long) 的形式 # transform data into long format ghq_long &lt;- ghq %&gt;% gather(key, value, -id, -mean) %&gt;% separate(key, into = c(&quot;measurement&quot;, &quot;occasion&quot;), sep = 3) %&gt;% arrange(id, occasion) %&gt;% spread(measurement, value) ghq_long ## # A tibble: 24 × 4 ## id mean occasion GHQ ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 1 12 1 12 ## 2 1 12 2 12 ## 3 2 7.5 1 8 ## 4 2 7.5 2 7 ## 5 3 23 1 22 ## 6 3 23 2 24 ## 7 4 12 1 10 ## 8 4 12 2 14 ## 9 5 9 1 10 ## 10 5 9 2 8 ## # … with 14 more rows # after reshaping there are 24 records. the summary statistics are # overall mean sd and min max ghq_long %&gt;% summarise(OverallMean = mean(GHQ), SD = sd(GHQ), Min = min(GHQ), Max = max(GHQ)) ## # A tibble: 1 × 4 ## OverallMean SD Min Max ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 10.2 6.10 2 24 # between groups mean sd and min ghq_long %&gt;% distinct(id, .keep_all= TRUE) %&gt;% summarise(Bet_mean = mean(mean), Bet_sd = sd(mean), Bet_min = min(mean), Bet_max = max(mean)) ## # A tibble: 1 × 4 ## Bet_mean Bet_sd Bet_min Bet_max ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 10.2 6.07 3.5 23 # within groups mean sd and min (came from the difference between # the overall mean and the within difference) observations for # each group = 2 ghq_long &lt;- ghq_long %&gt;% mutate(dif_GHQ = mean(GHQ) - (GHQ - mean)) ghq_long %&gt;% summarise(N = n(), Wit_mean = mean(dif_GHQ), Wit_sd = sd(dif_GHQ), Wit_min = min(dif_GHQ), Wit_max = max(dif_GHQ)) ## # A tibble: 1 × 5 ## N Wit_mean Wit_sd Wit_min Wit_max ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 24 10.2 1.38 7.17 13.2 GHQ 的分佈並不左右對稱。 圖 73.1: Histogram of GHQ by occasion 73.5.4 對數據按照 id 分層進行 ANOVA with(ghq_long, anova(lm(GHQ~factor(id)))) ## Analysis of Variance Table ## ## Response: GHQ ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## factor(id) 11 811.333 73.7576 20.1157 4.7782e-06 *** ## Residuals 12 44.000 3.6667 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #library(lme4) ( fit &lt;- lmer(GHQ ~ (1|id), data=ghq_long) ) ## Linear mixed model fit by REML [&#39;lmerModLmerTest&#39;] ## Formula: GHQ ~ (1 | id) ## Data: ghq_long ## REML criterion at convergence: 131.3492 ## Random effects: ## Groups Name Std.Dev. ## id (Intercept) 5.9199 ## Residual 1.9149 ## Number of obs: 24, groups: id, 12 ## Fixed Effects: ## (Intercept) ## 10.167 \\(\\sigma_u, \\sigma_e\\) 的估計值分別是 5.92 (between)， 1.91 (within)。可以計算層間相關係數 (intra-class correlation) \\(\\hat\\lambda = \\frac{\\sigma^2_u}{\\sigma^2_u + \\sigma^2_e} = 0.905\\)。且 \\(\\hat\\sigma_u = \\sqrt{\\frac{73.8 - 3.7}{2}} = 5.92\\)，和前一次練習一樣地，這個隨機效應的方差，可以通過方差分析表格來直接手動計算 (當且僅當分層數據是平衡狀態的)。和前面計算的樣本數據比較，樣本層間標準差是高估了的 (sample between variance = 6.073 &gt; 5.92)，相反樣本層內標準差 (within sd) 則是低估了的 (sample within sd = 1.383 &lt; 1.91)。兩個層內標準差的關係是： \\[ \\sqrt{1.383^2\\times\\frac{23}{12}} = 1.91 \\] 73.5.5 用 R 裏的 nlme 包，使用限制性極大似然法 (restricted maximum likelihood, REML) 擬合截距混合效應模型，比較其結果和前文中隨機效應 ANOVA 的結果 summary(nlme::lme(fixed = GHQ ~ 1, random = ~ 1 | id, data = ghq_long, method = &quot;REML&quot;)) ## Linear mixed-effects model fit by REML ## Data: ghq_long ## AIC BIC logLik ## 137.34924 140.75573 -65.674622 ## ## Random effects: ## Formula: ~1 | id ## (Intercept) Residual ## StdDev: 5.9199181 1.9148548 ## ## Fixed effects: GHQ ~ 1 ## Value Std.Error DF t-value p-value ## (Intercept) 10.166667 1.7530632 12 5.7993727 0.0001 ## ## Standardized Within-Group Residuals: ## Min Q1 Med Q3 Max ## -1.337372043 -0.578482697 0.073557531 0.414059981 1.796024881 ## ## Number of Observations: 24 ## Number of Groups: 12 截距混合效應模型的參數估計和隨機效應 ANOVA 的參數估計是一樣的。 73.5.6 用極大似然法 (maximum likelihood, ML) method = \"ML\" 重新擬合前面的混合效應模型，比較結果有什麼不同。 #( fit &lt;- lmer(GHQ ~ (1|id), data=ghq_long, REML = FALSE) ) # same but from `lme4` package summary(lme(fixed = GHQ ~ 1, random = ~ 1 | id, data = ghq_long, method = &quot;ML&quot;)) ## Linear mixed-effects model fit by maximum likelihood ## Data: ghq_long ## AIC BIC logLik ## 140.26571 143.79987 -67.132857 ## ## Random effects: ## Formula: ~1 | id ## (Intercept) Residual ## StdDev: 5.6543976 1.9148545 ## ## Fixed effects: GHQ ~ 1 ## Value Std.Error DF t-value p-value ## (Intercept) 10.166667 1.7145299 12 5.929711 0.0001 ## ## Standardized Within-Group Residuals: ## Min Q1 Med Q3 Max ## -1.31652454 -0.58359637 0.08024454 0.40422622 1.81687284 ## ## Number of Observations: 24 ## Number of Groups: 12 用極大似然法估計的隨機殘差標準差 \\(\\sigma_e\\) 和 REML/ANOVA 法估計的相同，但是隨機效應標準差 \\(\\sigma_u\\) 略小 5.65 &lt; 5.92。 73.5.7 用簡單線性迴歸擬合一個固定效應模型 Fixed_reg &lt;- lm(GHQ-mean(GHQ) ~ 0 + factor(id), data = ghq_long) summary(Fixed_reg) ## ## Call: ## lm(formula = GHQ - mean(GHQ) ~ 0 + factor(id), data = ghq_long) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3 -1 0 1 3 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## factor(id)1 1.8333 1.3540 1.3540 0.2006847 ## factor(id)2 -2.6667 1.3540 -1.9695 0.0724256 . ## factor(id)3 12.8333 1.3540 9.4780 6.371e-07 *** ## factor(id)4 1.8333 1.3540 1.3540 0.2006847 ## factor(id)5 -1.1667 1.3540 -0.8616 0.4057744 ## factor(id)6 -5.1667 1.3540 -3.8158 0.0024580 ** ## factor(id)7 -3.6667 1.3540 -2.7080 0.0190252 * ## factor(id)8 -5.1667 1.3540 -3.8158 0.0024580 ** ## factor(id)9 3.8333 1.3540 2.8311 0.0151447 * ## factor(id)10 -4.6667 1.3540 -3.4466 0.0048356 ** ## factor(id)11 -6.6667 1.3540 -4.9237 0.0003516 *** ## factor(id)12 8.8333 1.3540 6.5238 2.836e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.9149 on 12 degrees of freedom ## Multiple R-squared: 0.94856, Adjusted R-squared: 0.89712 ## F-statistic: 18.439 on 12 and 12 DF, p-value: 6.8362e-06 可以看到輸出報告最底段部分 Residual standard error: 1.91 on 12 degrees of freedom 就是前文三種不同模型擬合的隨機殘差效應的標準差。在 STATA 裏被叫做 Root MSE。 73.5.8 計算這些隨機截距的均值和標準差 mean(Fixed_reg$coefficients) ## [1] 5.9211895e-16 sd(Fixed_reg$coefficients) ## [1] 6.0727908 這裏僅僅用固定效應模型時，不同羣截距的均值雖然和用混合效應模型估計的一樣爲零，但是其估計的標準差要大於無論是 REML (5.92) 或者是 ML (5.65) 估計值的大小，其實這裏簡單線性迴歸給出的截距均值，就是本練習一開始讓你計算的樣本均值的標準差 (between group sd)。這是因爲簡單線性迴歸 (固定效應模型) 忽視了這些不同組的均值的不確定性。 73.5.9 忽略掉所有的分層和解釋變量擬合 GHQ 的簡單線性迴歸 Fixed_simple &lt;- lm(GHQ ~ 1, data = ghq_long) summary(Fixed_simple) ## ## Call: ## lm(formula = GHQ ~ 1, data = ghq_long) ## ## Residuals: ## Min 1Q Median 3Q Max ## -8.1667 -4.4167 -2.1667 3.8333 13.8333 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 10.1667 1.2448 8.1673 3.001e-08 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 6.0982 on 23 degrees of freedom 此時的模型估計的 Residual standard error: 6.09 on 23 degrees of freedom 其實就是一開始讓你計算的樣本整體的標準差 (overall sd) 73.5.10 用分層的穩健法 (三明治標準誤法) 計算簡單線性迴歸時，截距的標準誤差，和簡單線性迴歸時的結果作比較 # sandwich robust method with cluster id robustReg &lt;- clubSandwich::coef_test(Fixed_simple, vcov = &quot;CR1&quot;, cluster = ghq_long$id) rob.std.err &lt;- robustReg$SE naive.std.err&lt;-summary(Fixed_simple)$coefficients[,2] better.table &lt;- cbind(&quot;Estimate&quot; = coef(Fixed_simple), &quot;Naive SE&quot; = naive.std.err, &quot;Pr(&gt;|z|)&quot; = 2 * pt(abs(coef(Fixed_simple)/naive.std.err), df=nrow(ghq_long)-2, lower.tail = FALSE), &quot;LL&quot; = coef(Fixed_simple) - 1.96 * naive.std.err, &quot;UL&quot; = coef(Fixed_simple) + 1.96 * naive.std.err, &quot;Robust SE&quot; = rob.std.err, &quot;Pr(&gt;|z|)&quot; = 2 * pt(abs(coef(Fixed_simple)/rob.std.err), df=nrow(ghq_long)-2, lower.tail = FALSE), &quot;LL&quot; = coef(Fixed_simple) - qt(df=robustReg$df, 0.975) * rob.std.err, &quot;UL&quot; = coef(Fixed_simple) + qt(df=robustReg$df, 0.975) * rob.std.err) rownames(better.table)&lt;-c(&quot;Constant&quot;) better.table ## Estimate Naive SE Pr(&gt;|z|) LL UL Robust SE Pr(&gt;|z|) LL ## Constant 10.166667 1.2447959 4.1792464e-08 7.7268666 12.606467 1.7530637 7.7968698e-06 6.3081995 ## UL ## Constant 14.025134 73.5.11 讀入 siblings 數據。先總結嬰兒的出生體重，思考這個數據中嬰兒出生體重之間是否可能存在關聯性？它的來源是哪裏。用這個數據擬合兩個混合效應模型 (ML, REML)，不加入任何解釋變量。 siblings &lt;- read_dta(&quot;../backupfiles/siblings.dta&quot;) Fixed_ml &lt;- lme(fixed = birwt ~ 1, random = ~ 1 | momid, data = siblings, method = &quot;ML&quot;) summary(Fixed_ml) ## Linear mixed-effects model fit by maximum likelihood ## Data: siblings ## AIC BIC logLik ## 130956.97 130978.15 -65475.486 ## ## Random effects: ## Formula: ~1 | momid ## (Intercept) Residual ## StdDev: 368.28657 377.65778 ## ## Fixed effects: birwt ~ 1 ## Value Std.Error DF t-value p-value ## (Intercept) 3467.969 7.1380684 4626 485.84138 0 ## ## Standardized Within-Group Residuals: ## Min Q1 Med Q3 Max ## -6.2745852674 -0.4860398569 0.0036050019 0.5054348620 4.0506129265 ## ## Number of Observations: 8604 ## Number of Groups: 3978 Fixed_reml &lt;- lme(fixed = birwt ~ 1, random = ~ 1 | momid, data = siblings, method = &quot;REML&quot;) summary(Fixed_reml) ## Linear mixed-effects model fit by REML ## Data: siblings ## AIC BIC logLik ## 130951.2 130972.38 -65472.601 ## ## Random effects: ## Formula: ~1 | momid ## (Intercept) Residual ## StdDev: 368.35597 377.65768 ## ## Fixed effects: birwt ~ 1 ## Value Std.Error DF t-value p-value ## (Intercept) 3467.9688 7.1385551 4626 485.80822 0 ## ## Standardized Within-Group Residuals: ## Min Q1 Med Q3 Max ## -6.2743063896 -0.4860193974 0.0035299789 0.5053550371 4.0503923656 ## ## Number of Observations: 8604 ## Number of Groups: 3978 由於該數據樣本量足夠大 (混合效應模型中等同於說數據的層數足夠多)，你可以看到其實 ML 法和 REML 法估計的參數結果十分地接近。 "],["random-inter-cov.html", "第 74 章 隨機截距模型中加入共變量 random intercept model with covariates 74.1 多元線性回歸模型的延伸 74.2 siblings 數據中新生兒體重的實例 74.3 賦值予隨機效應成分 74.4 混合效應模型的診斷 74.5 第二層級 (cluster level/level 2) 的協方差 74.6 層內層間效應估計 74.7 到底選擇固定還是混合模型？ 74.8 Practical Hierarchical 03", " 第 74 章 隨機截距模型中加入共變量 random intercept model with covariates 這一章我們來把隨機截距模型加以擴展，在固定效應部分增加想要調整的共變量。 74.1 多元線性回歸模型的延伸 如果有一個含有兩個預測變量的多元線性回歸模型: \\[ \\begin{equation} Y_{ij} = \\beta_0 + \\beta_1 X_{1ij} + \\beta_2 X_{2ij} + \\epsilon_{ij} \\end{equation} \\tag{74.1} \\] 如果觀測數據內部具有嵌套式結構，也就是有些對象之間有相關性，有些對象之間沒有，那麼上面這個多元線性回歸模型的誤差項 \\(\\epsilon_{ij}\\) 其實是不能被認爲相互獨立的，因爲數據中處以同一層的個體之間互相有關聯性 (屬於同一所學校的學生之間，同一所醫院的病人之間)。但是於此同時，我們不妨把最後的誤差項分成兩個部分 \\[ \\epsilon_{ij} = u_j + e_{ij} \\] 其中， \\(u_j\\)，是在隨機截距模型中用到的隨機截距部分，\\(u_j \\sim N(0, \\sigma_u^2)\\)，它允許不同層的數據有自己的截距; \\(e_{ij}\\)，是剝離掉層內相關 (等同於層間相異，intra-class correlation = between-class heterogeneity) 之後，剩餘的隨機殘差; 之後把式子 (74.1) 重新整理，就遇到了我們似曾相識的隨機截距模型: \\[ \\begin{equation} Y_{ij} = (\\beta_0 + u_j) + \\beta_1 X_{1ij} + \\beta_2 X_{2ij} + e_{ij} \\end{equation} \\tag{74.2} \\] 這就是一個混合效應線性回歸模型 (linear mixed model)。其中， 固定效應部分的參數有 fixed effect parameters: \\(\\beta_0, \\beta_1, \\beta_2\\); 隨機效應部分的參數有 random effect parameters: \\(u_j, e_{ij}\\)。 但是和之前的隨機截距模型不同的是，這裏我們在固定效應部分增加了兩個共變量 \\(X_1, X_2\\)，所以從該模型作出的所有統計推斷，都是建立在以這兩個共變量爲條件的基礎之上的 (conditionally on \\(\\mathbf{X} = \\{ X_1, X_2\\}\\))。所以對於 \\(u_j, e_{ij}\\)，他們的前提條件就變成了: \\(\\text{E}(u_j|\\mathbf{X} = \\{ X_1, X_2\\}) = 0\\); \\(\\text{E}(e_{ij}|\\mathbf{X} = \\{ X_1, X_2, u_j\\}) = 0\\)。 根據這兩個條件，我們可以繼續得到: \\(\\text{E}(e_{ij} | \\mathbf{X} = \\{ X_1, X_2\\}) = 0\\); \\(\\text{E}(Y_{ij} | \\mathbf{X} = \\{ X_1, X_2\\}) = \\beta_0 + \\beta_1X_{1ij} + \\beta_2X_{2ij}\\) 也就是說，這個包含了 \\(u_j, e_{ij}\\) 的多元線性回歸模型，其邊際模型 (marginal regression over \\(u_j, e_{ij}\\)) 還是一個線性回歸。 注意 模型的固定效應部分加入了多個共變量 \\(\\mathbf{X} = \\{ X_1, X_2\\}\\) 之後，模型所估計的層內相關系數 (intra-class correlation, \\(\\lambda\\)) 也成了以這些共變量爲條件的層內相關系數。 \\(u_j\\) 這個層別隨機截距 (cluster-specific random intercept) 此時會囊括已知/未知的層水平的特徵 (class-level characteristics, i.e. unmeasured heterogeneity between clusters)。它會隨着你在模型中加入層水平的解釋變量而逐漸變小 (Its size will decrease as more explanatory variables for the cluster difference are included in the model)。 74.2 siblings 數據中新生兒體重的實例 在數據 silblings 中，研究者收集了來自 3978 名母親，8604 名新生兒出生體重 (g) 的數據。此外，該數據中還收集了這些新生兒的胎齡 (week)，新生兒的性別，母親孕期的吸煙狀況，以及懷孕時母親的年齡。在這個數據裏，每個母親是該數據的第二階層 (level 2)，每個母親的相關信息，就是屬於第二階層的層水平數據。每個新生兒的體重和相關數據，就是第一階層 (level 1) 數據，一個母親可能生 1-3 個嬰兒，這些來自同一個母親的新生兒之間很顯然不能視之爲相互獨立。研究者關心一個固定效應部分不包含其他共變量的隨機截距模型 (the Null Model)，和固定效應部分增加了其他共變量的隨機截距模型 (the Full Model) 哪個更能解釋這個數據或者更好的擬合這個數據 (better fitting the data)。 下面就先把數據讀入 R，然後建立一個零模型 (the Null Model): siblings &lt;- read_dta(&quot;../backupfiles/siblings.dta&quot;) M0 &lt;- lme(fixed = birwt ~ 1, random = ~ 1 | momid, data = siblings, method = &quot;REML&quot;) summary(M0) ## Linear mixed-effects model fit by REML ## Data: siblings ## AIC BIC logLik ## 130951.2 130972.38 -65472.601 ## ## Random effects: ## Formula: ~1 | momid ## (Intercept) Residual ## StdDev: 368.35597 377.65768 ## ## Fixed effects: birwt ~ 1 ## Value Std.Error DF t-value p-value ## (Intercept) 3467.9688 7.1385551 4626 485.80822 0 ## ## Standardized Within-Group Residuals: ## Min Q1 Med Q3 Max ## -6.2743063896 -0.4860193974 0.0035299789 0.5053550371 4.0503923656 ## ## Number of Observations: 8604 ## Number of Groups: 3978 M0_fixed &lt;- lm(birwt ~ 1, data = siblings) anova(M0, M0_fixed) ## Model df AIC BIC logLik Test L.Ratio p-value ## M0 1 3 130951.20 130972.38 -65472.601 ## M0_fixed 2 2 132265.32 132279.44 -66130.660 1 vs 2 1316.1174 &lt;.0001 下一步，我們來對該數據擬合一個全模型 (the Full Model)，我們可以先對兩個連續型變量 (胎齡，gestational age 和母親懷孕時年齡，maternal age) 進行適當的轉換，比方說把胎齡標準化成 38 周，懷孕時年齡標準化成 30 歲: siblings &lt;- siblings %&gt;% mutate(c_gestat = gestat - 38, # centering gestational age to 38 weeks c_mage = mage - 30, # centering maternal age to 30 years old male = factor(male, labels = c(&quot;female&quot;, &quot;male&quot;)), smoke = factor(smoke, labels = c(&quot;Nonsmoker&quot;, &quot;Smoker&quot;))) #M_full &lt;- lme(fixed = birwt ~ c_gestat + male + smoke + c_mage, random = ~ 1 | momid, data = siblings, method = &quot;REML&quot;) M_full &lt;- lmer(birwt ~ c_gestat + male + smoke + c_mage + (1 | momid), data = siblings, REML = TRUE) library(lmerTest) summary(M_full) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: birwt ~ c_gestat + male + smoke + c_mage + (1 | momid) ## Data: siblings ## ## REML criterion at convergence: 128984.9 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -4.14590 -0.52884 -0.00868 0.53594 3.63288 ## ## Random effects: ## Groups Name Variance Std.Dev. ## momid (Intercept) 99784 315.89 ## Residual 118012 343.53 ## Number of obs: 8604, groups: momid, 3978 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 3341.0957 8.6642 7084.5208 385.620 &lt; 2.2e-16 *** ## c_gestat 85.4241 2.1607 7868.3663 39.535 &lt; 2.2e-16 *** ## malemale 133.9476 8.8694 7121.4202 15.102 &lt; 2.2e-16 *** ## smokeSmoker -239.9993 15.9794 7543.5486 -15.019 &lt; 2.2e-16 *** ## c_mage 13.1579 1.0903 5400.3042 12.068 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) c_gstt maleml smkSmk ## c_gestat -0.347 ## malemale -0.535 0.038 ## smokeSmoker -0.244 0.017 0.006 ## c_mage 0.137 0.020 -0.001 0.145 從全模型的結果報告中可以看出，固定效應部分加入的所有解釋變量都是有意義的。他們的含義如下: c_gestat 85.42: 當模型中的其他變量保持不變時 (當模型中其他的變量被調整時)，胎齡每增加一周，無論是同一個媽媽還是不同媽媽 (either from the same or another mother, i.e. in any cluster) 生下的新生兒的出生體重增加的期待值是 85.42 g。 male 133.95: 新生兒的性別如果是男孩，無論是同一個媽媽還是不同媽媽生下的新生兒，他的出生體重會比女孩增加 133.95 g。 再看這兩個模型的隨機效應部分，無論是第二層級水平的層標準差 (cluster-level) 還是第一層級 (elementary-level) 的標準差都隨着固定效應部分加入新的解釋變量而變小。我們同樣可以用極大似然法 (ML) 擬合這兩個模型，其方差大小總結成下面的表格: 表 60.1: Summary of estimates of the variation of the random effects of the null and full model using REML or ML REML ML Random Effect Null Model Full Model Null Model Full Model \\(\\hat\\sigma_u\\) 368.3558 315.8853 368.2864 315.7320 \\(\\hat\\sigma_e\\) 377.6577 343.5296 377.6579 343.4581 表格的右半部分總結的是使用極大似然法 (會偏小估計隨機效應方差)，其實它們和 REML 法估計的結果相差不大。值得強調的是，由於 REML 法每次估計的數據是去除掉固定效應部分以後的隨機誤差部分的數據，所以當兩個用 REML 法估計的混合效應模型其固定效應部分不一致的時候，這兩個模型實際擬合了不同的數據，是不能使用 LRT 來比較兩個模型哪個更好的。 74.3 賦值予隨機效應成分 值得建議地，擬合了任何一個混合效應模型以後，需要盡量避免直接跳入結論陳述階段，而應當先對模型是否符合其假定的前提條件進行模型診斷。而且，對模型的擬合後截距及其層級隨機效應 (cluster random effect) 進行視覺化展現變得十分有用。 總體來說，有兩種方法可以用於估計並提取這些擬合值 – ML 和 Empirical Bayes (EB)。 74.3.1 簡單預測 simple prediction 和簡單線性回歸模型一樣，我們可以計_算模型的預測值和觀測值之間的差，獲得一個包含了兩個隨機效應成分的量: \\[ \\begin{aligned} Y_{ij} &amp; = \\beta_0 + \\beta_1X_{1ij} + u_j + e_{ij} \\\\ \\Rightarrow Y_{ij} &amp; = \\beta_0 + \\beta_1X_{1ij} + \\epsilon_{ij} \\\\ \\Rightarrow \\hat\\epsilon_{ij} &amp; = Y_{ij} - (\\hat\\beta_0 + \\beta_1X_{1ij}) \\end{aligned} \\] 那麼最簡單的方法就是計算了這個隨機效應成分的混合體之後，對其取平均值，作爲 \\(u_j\\) 的簡單估計: M_full &lt;- lme(fixed = birwt ~ c_gestat + male + smoke + c_mage, random = ~ 1 | momid, data = siblings, method = &quot;REML&quot;) siblings$yhat &lt;- M_full$fitted[,1] siblings &lt;- siblings %&gt;% mutate(res = birwt- yhat) Mean_siblings &lt;- ddply(siblings, ~momid, summarise, uhat = mean(res)) Mean_siblings[Mean_siblings$momid == 14,] ## momid uhat ## 1 14 105.124 siblings[siblings$momid == 14,c(1,5,6,15,16)] ## # A tibble: 3 × 5 ## momid gestat birwt yhat res ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 14 24 2790 1961. 829. ## 2 14 42 2693 3512. -819. ## 3 14 39 3600 3295. 305. 找到編號 14 號的母親，她有三個孩子被研究者記錄到，他們中有的孩子使用該模型計算的擬合值 (fitted value = yhat) 並不準確。在調整了胎齡，嬰兒性別，母親的吸煙狀況，和母親懷孕時年齡後，該母親生的孩子，和該隊列的總體平均值 (overall mean) 相比較，其偏差達到了 105.12 g。 我們可以對每個母親的擬合偏差做總結歸納: Mean_siblings %&gt;% summarise(Mean_uhat = mean(uhat), sd_uhat = sd(uhat), min_uhat = min(uhat), max_uhat = max(uhat)) ## Mean_uhat sd_uhat min_uhat max_uhat ## 1 -0.5115952 395.0677 -1386.9365 1772.7215 可見這 3978 名母親總體的擬合偏差的均值爲 -0.511，接近零。且它的標準差接近 400。這樣一種直接利用觀測值和擬合值之差做曾內平均的方法被叫做極大似然法 ML，這樣計算獲得的平均偏差被標記爲 \\(\\hat u_j^{\\text{ML}}\\) 74.3.2 EB 預測值 EB 法 (經驗貝葉斯法) 也一樣要利用擬合模型後的 \\(\\beta\\) 來計算獲得層殘差 (cluster level residuals)。但是用 EB 法時我們還再使用層殘差的一個前提條件: \\(u_j \\sim N(0, \\sigma_u^2)\\)。在線性隨機截距模型中，EB 法計算的層級殘差和簡單法計算的層殘差之間有如下的簡單轉換關系: \\[ \\hat u_j^{\\text{EB}} = \\hat R_j\\hat u_j^{\\text{ML}} \\] 其中 \\(\\hat R_j\\) 被定義爲 ML 法計算層級殘差的可靠性 (reliability of \\(\\hat u_j^{\\text{ML}}\\))，它是一個包含了層級方差和個人水平方差的方程: \\[ \\hat R_j = \\frac{\\hat\\sigma_u^2}{\\hat\\sigma_u^2 + \\sigma_e^2/n_j} = \\hat w_j \\hat \\sigma_u^2 \\] 其中 \\(\\hat w_j\\) 是之前在章節 73.4.1 定義的權重。這個 \\(\\hat R_j\\) 又被叫做是收縮因子 (shrinkage factor)，因爲它取值是在 0 到 1 之間，所以它會把 ML 法計算獲得的層級誤差按照收縮銀子比例收縮變小。當 \\(\\sigma_u\\) 本身比較小，或者個體的隨機誤差大 \\(\\sigma_e\\)，或者層內樣本量小 \\(n_j\\) 時收縮因子的作用更大。 此時，預測誤差 \\((\\hat u_j^{\\text{EB}} - u_j)\\) 才是我們能夠從觀測數據以及模型中獲得的均值爲零方差又最小的殘差。所以 \\(\\hat u_j^{\\text{EB}}\\) 又被稱爲 \\(\\text{Best linear unbiased predictors, BLUP}\\)。 第二層級殘差的方差是: \\[ R_j\\hat \\sigma_u^2 \\] 74.4 混合效應模型的診斷 辛苦計算了 BLUP 之後，就可以拿它，和模型的標準化殘差來對模型作出一定的診斷。由於計算獲得的 BLUP 方差不齊，要先對其標準化之後再作正態圖: # the standardized n_child &lt;- siblings %&gt;% count(momid, sort = TRUE) Mean_siblings &lt;- merge(Mean_siblings, n_child, by = &quot;momid&quot;) Mean_siblings &lt;- Mean_siblings %&gt;% mutate(# extract the random effect (EB) residuals at level 2 uhat_eb = ranef(M_full)$`(Intercept)`, # shrinkage factor R = 315.7338^2/(315.7338^2 + (343.4572^2)/n), # Empirical Bayes prediction of variance of uhat var_eb = R*(315.7338^2), # standardize the EB uhat uhat_st = uhat_eb/sqrt(var_eb) ) # 計算每個個體的標準化殘差 siblings$ehat &lt;- residuals(M_full, level = 1, type = &quot;normalized&quot;) 圖 74.1: Histogram and Q-Q plot of cluster (mother) level unstandardized residuals for the intercept 圖 74.2: Histogram and Q-Q plot of cluster (mother) level standardized residuals for the intercept 圖 74.3: Histogram and Q-Q plot of individual (pupil) level standardized residuals for the intercept 這些正態圖，主要用於輔助尋找看哪裏有異常值 (outliers)。 74.5 第二層級 (cluster level/level 2) 的協方差 還是這個 siblings 數據中，關於母親的數據在該母親生的孩子中是保持不變的，比如有人種 (black)，母親受教育情況 (hsgrad)，和母親的婚姻狀況 (married)。因爲這些變量屬於解釋第二層級 (level 2) 的變量，加入這些變量在固定效應部分只能解釋層間的方差 (between clusters variance): siblings &lt;- siblings %&gt;% mutate(black = factor(black, labels = c(&quot;No&quot;, &quot;Yes&quot;)), hsgrad = factor(hsgrad, labels = c(&quot;No&quot;, &quot;Yes&quot;)), married = factor(married, labels = c(&quot;No&quot;, &quot;yes&quot;))) M_full1 &lt;- lmer(birwt ~ c_gestat + male + smoke + c_mage + black + married + hsgrad + (1 | momid), data = siblings, REML = TRUE) summary(M_full1) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: birwt ~ c_gestat + male + smoke + c_mage + black + married + hsgrad + (1 | momid) ## Data: siblings ## ## REML criterion at convergence: 128884.7 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -4.19306 -0.53217 -0.01244 0.54116 3.65296 ## ## Random effects: ## Groups Name Variance Std.Dev. ## momid (Intercept) 96846 311.20 ## Residual 118053 343.59 ## Number of obs: 8604, groups: momid, 3978 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 3297.4611 23.3036 4601.1760 141.4998 &lt; 2.2e-16 *** ## c_gestat 84.4555 2.1584 7887.4033 39.1281 &lt; 2.2e-16 *** ## malemale 133.7891 8.8514 7160.4073 15.1150 &lt; 2.2e-16 *** ## smokeSmoker -227.9418 16.3323 7674.0013 -13.9565 &lt; 2.2e-16 *** ## c_mage 11.0375 1.1412 5488.4090 9.6716 &lt; 2.2e-16 *** ## blackYes -177.8954 25.9709 3912.4116 -6.8498 8.554e-12 *** ## marriedyes 61.1716 22.2791 4164.2316 2.7457 0.006064 ** ## hsgradYes -4.2118 13.9792 3949.6037 -0.3013 0.763211 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) c_gstt maleml smkSmk c_mage blckYs mrrdys ## c_gestat -0.111 ## malemale -0.204 0.038 ## smokeSmoker -0.287 0.009 0.008 ## c_mage 0.222 0.034 -0.004 0.071 ## blackYes -0.377 0.041 0.007 0.064 0.036 ## marriedyes -0.914 -0.025 0.007 0.227 -0.230 0.348 ## hsgradYes -0.165 0.011 -0.012 -0.044 0.172 -0.046 0.016 加入了第二層級協變量之後， \\(\\sigma^2_u = 96845.79\\)，相比沒加之前的小了一些 \\((\\sigma^2_{u} = 99784)\\)。但是 \\(\\sigma^2_e\\) 幾乎保持不變。 74.6 層內層間效應估計 如有某個想加入模型的變量是屬於第一層級的，例如 siblings 數據中的胎齡，即使是同一個媽媽生的嬰兒，其出生時的胎齡也是各不相同。但是這樣在模型輸出的報告中，胎齡這一變量的估計量其實是其他變量保持不變時，每增加一周胎兒對不論是同一個母親還是不同母親生的嬰兒的出生體重的影響，怎樣才能把同一母親不同胎齡的影響 (within effect) 和不同母親不同胎齡的影響 (between effect) 給區分出來呢？ 其實很簡單，我們來把胎齡這個變量做個分解: \\[ Y_{ij} = \\beta_0 + \\beta_{1B} \\bar{X}_{\\cdot j} + \\beta_{1W} (X_{ij} - \\bar{X}_{\\cdot j}) + u_j + e_{ij} \\] 把胎齡這個變量分解成 \\(\\bar{X}_{\\cdot j}\\) (每個母親生的嬰兒的平均胎齡)，和 \\(X_{ij} - \\bar{X}_{\\cdot j}\\) (每個母親內，每個胎兒的胎齡和平均胎齡之差) 兩個部分，就解決了區分層間效應 \\((\\beta_{1B})\\) 和層內效應 \\((\\beta_{1W})\\)。 的方法。下面的模型在固定效應部分只使用了胎齡一個變量 (爲了這裏輸出報告簡潔明了): M_gestat &lt;- lmer(birwt ~ c_gestat + (1 | momid), data = siblings, REML = TRUE) summary(M_gestat) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: birwt ~ c_gestat + (1 | momid) ## Data: siblings ## ## REML criterion at convergence: 129638.4 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.95662 -0.52950 0.00662 0.52638 3.98718 ## ## Random effects: ## Groups Name Variance Std.Dev. ## momid (Intercept) 113073 336.26 ## Residual 124282 352.54 ## Number of obs: 8604, groups: momid, 3978 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 3358.5435 7.1841 4956.3637 467.497 &lt; 2.2e-16 *** ## c_gestat 83.7325 2.2314 7785.2519 37.525 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ## c_gestat -0.406 當把胎齡作爲一個變量放進模型的固定效應部分時，不論是不是同一個母親生下的胎兒，只要胎齡每增加一周，出生體重就增加 83.7 g。下一個模型中，我們來把胎齡這個變量分解成層間變量和層內變量: Mean_gestat &lt;- ddply(siblings, ~ momid, summarise, mean_gestat = mean(gestat)) # 把每個母親的胎兒胎齡均值 (level 2 mean) 賦予原有的數據中 avegest &lt;- NULL for (i in 1:3978){ avegest &lt;- c(avegest, rep(Mean_gestat$mean_gestat[i], with(siblings, table(momid))[i])) } siblings$avegest &lt;- avegest rm(avegest) # 計算層內胎兒胎齡與其層均值的差異 siblings &lt;- siblings %&gt;% mutate(c_avegest = avegest - 38, difgest = gestat - avegest) siblings[siblings$momid == 14,c(1,2,5,6,18:20)] ## # A tibble: 3 × 7 ## momid idx gestat birwt avegest c_avegest difgest ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 14 1 24 2790 35 -3 -11 ## 2 14 2 42 2693 35 -3 7 ## 3 14 3 39 3600 35 -3 4 # 下面用 c_avegest 和 difgest 代替 gestat 放入同樣模型的固定效應部分 M_gestat_sep &lt;- lmer(birwt ~ c_avegest + difgest + (1 | momid), data = siblings, REML = TRUE) summary(M_gestat_sep) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: birwt ~ c_avegest + difgest + (1 | momid) ## Data: siblings ## ## REML criterion at convergence: 129557.3 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -4.02183 -0.52451 0.00937 0.52315 3.98953 ## ## Random effects: ## Groups Name Variance Std.Dev. ## momid (Intercept) 111117 333.34 ## Residual 123670 351.67 ## Number of obs: 8604, groups: momid, 3978 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 3320.0084 8.3833 3974.3076 396.026 &lt; 2.2e-16 *** ## c_avegest 113.2183 4.0294 3996.5078 28.098 &lt; 2.2e-16 *** ## difgest 70.9350 2.6655 4626.8919 26.613 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) c_vgst ## c_avegest -0.628 ## difgest 0.000 0.000 把胎齡分解了以後，從模型的輸出結果可以看出，層間效應 113 g (不同的母親)，要大於層內效應 70.9 g (同一母親不同胎兒)。 比較分解胎齡以後的模型 M_gestat_sep 和把胎齡作爲一個變量的模型 M_gestat 哪個更優，可以有兩種檢驗法: # 1. 用 ML 法重新擬合兩個模型後進行 LRT 檢驗比較 R 可以自動幫你 anova(M_gestat_sep, M_gestat) ## Data: siblings ## Models: ## M_gestat: birwt ~ c_gestat + (1 | momid) ## M_gestat_sep: birwt ~ c_avegest + difgest + (1 | momid) ## npar AIC BIC logLik deviance Chisq Df Pr(&gt;Chisq) ## M_gestat 4 129656 129684 -64823.7 129648 ## M_gestat_sep 5 129581 129617 -64785.6 129571 76.219 1 &lt; 2.22e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # 2. 用 Wald 檢驗比較 Beta_1W 和 Beta_1B 是不是不同 linearHypothesis(M_gestat_sep, &quot;c_avegest = difgest&quot;) ## Linear hypothesis test ## ## Hypothesis: ## c_avegest - difgest = 0 ## ## Model 1: restricted model ## Model 2: birwt ~ c_avegest + difgest + (1 | momid) ## ## Df Chisq Pr(&gt;Chisq) ## 1 ## 2 1 76.5998 &lt; 2.22e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 無論是哪種檢驗，都告訴我們把胎齡分解了的模型更好。了解更多層內層間回歸模型，參照 (Mann, De Stavola, and Leon 2004)。 74.7 到底選擇固定還是混合模型？ 目前爲止我們討論了嵌套式數據可以使用固定效應模型分析，也可以使用混合效應模型來擬合，那麼到底你該選擇哪個來解釋你的數據呢？ 選擇模型永遠是一個很難回答的問題。哪種模型更加恰當 (appropriate) 其實要取決於你的數據結構，分層的數據的話層的數量是不是足夠多？以及最重要的，你的**分析目的*。 如果模型中想分析的層/羣組，可以被視爲唯一的實體 (uniqe entity，例如不同的種族)，而且我們希望從模型來獲得對不同種羣或者不同個體中每一個個體的估計，那麼固定效應模型是合適的。 如果層/羣組其實是人羣中的樣本 (samples from a real population，如例題中的母親層級，人羣衆可以有許許多多的母親)，我們打算從這個模型的結果去推論整個人羣，那麼隨機效應模型才是最合適的。 如果說層級本身的樣本量 (n of clusters) 太小，那麼強行使用混合效應模型的話會導致隨機效應的估計結果十分地低效，甚至沒有意義; 當然如果你的混合效應模型關心的是固定效應部分，那麼增加一些層級隨機效應應該也能達到提升統計估計效率的目的。 如果我們關心的是層級協變量的效應，那麼隨機效應模型是唯一的選擇。 74.8 Practical Hierarchical 03 74.8.1 把 High-school-and-Beyond 數據讀入 R 中。 hsb_selected &lt;- read_dta(&quot;../backupfiles/hsb_selected.dta&quot;) length(unique(hsb_selected$schoolid)) ## number of school = 160 ## [1] 160 ## create a subset data with only the first observation of each school hsb &lt;- hsb_selected[!duplicated(hsb_selected$schoolid), ] ## about 44 % of the schools are Catholic schools with(hsb, tab1(sector, graph = FALSE, decimal = 2)) ## sector : ## Frequency Percent Cum. percent ## 0 90 56.25 56.25 ## 1 70 43.75 100.00 ## Total 160 100.00 100.00 ## among all the schools, average school size is 1098 hsb %&gt;% summarise(N = n(), Mean = mean(size), sd_size = sd(size), min_size = min(size), max_size = max(size)) ## # A tibble: 1 × 5 ## N Mean sd_size min_size max_size ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 160 1098. 630. 100 2713 ## among all the pupils, about 53% are females with(hsb_selected, tab1(female, graph = FALSE, decimal = 2)) ## female : ## Frequency Percent Cum. percent ## 0 3390 47.18 47.18 ## 1 3795 52.82 100.00 ## Total 7185 100.00 100.00 ## among all the pupils, about 27.5% are from ethnic minorities with(hsb_selected, tab1(minority, graph = FALSE, decimal = 2)) ## minority : ## Frequency Percent Cum. percent ## 0 5211 72.53 72.53 ## 1 1974 27.47 100.00 ## Total 7185 100.00 100.00 74.8.2 擬合兩個隨機截距模型 (ML, REML)，結果變量用 mathach，解釋變量用 ses。觀察結果是否不同。 Fixed_reml &lt;- lmer(mathach ~ ses + (1 | schoolid), data = hsb_selected, REML = TRUE) summary(Fixed_reml) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: mathach ~ ses + (1 | schoolid) ## Data: hsb_selected ## ## REML criterion at convergence: 46645.2 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.126073 -0.727203 0.021883 0.757717 2.919116 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schoolid (Intercept) 4.7682 2.1836 ## Residual 37.0344 6.0856 ## Number of obs: 7185, groups: schoolid, 160 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 12.65748 0.18799 148.30225 67.332 &lt; 2.2e-16 *** ## ses 2.39020 0.10572 6838.07757 22.609 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ## ses 0.003 Fixed_ml &lt;- lmer(mathach ~ ses + (1 | schoolid), data = hsb_selected, REML = FALSE) summary(Fixed_ml) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s method [lmerModLmerTest] ## Formula: mathach ~ ses + (1 | schoolid) ## Data: hsb_selected ## ## AIC BIC logLik deviance df.resid ## 46649.0 46676.5 -23320.5 46641.0 7181 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.12631 -0.72766 0.02200 0.75781 2.91860 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schoolid (Intercept) 4.7285 2.1745 ## Residual 37.0298 6.0852 ## Number of obs: 7185, groups: schoolid, 160 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 12.65762 0.18732 149.17601 67.572 &lt; 2.2e-16 *** ## ses 2.39150 0.10569 6837.30522 22.627 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ## ses 0.003 其實由於樣本量 (層數) 足夠多，兩個隨機截距模型給出的參數估計十分接近。 74.8.3 觀察學校類型是否爲天主教學校 sector 的分佈，把它加入剛擬合的兩個隨機截距模型，它們估計的隨機效應標準差 \\(\\hat\\sigma_u\\)，和隨機誤差標準差 \\(\\hat\\sigma_e\\)，和之前有什麼不同？ “ML，REML” 的選用對結果有影響嗎？ Fixed_reml &lt;- lmer(mathach ~ ses + factor(sector) + (1 | schoolid), data = hsb_selected, REML = TRUE) summary(Fixed_reml) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: mathach ~ ses + factor(sector) + (1 | schoolid) ## Data: hsb_selected ## ## REML criterion at convergence: 46611.2 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.148567 -0.731004 0.019288 0.753657 2.926345 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schoolid (Intercept) 3.685 1.9196 ## Residual 37.037 6.0858 ## Number of obs: 7185, groups: schoolid, 160 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 11.71891 0.22806 153.58417 51.3855 &lt; 2.2e-16 *** ## ses 2.37471 0.10549 6738.85825 22.5110 &lt; 2.2e-16 *** ## factor(sector)1 2.10084 0.34112 147.35739 6.1586 6.638e-09 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ses ## ses 0.063 ## fctr(sctr)1 -0.672 -0.091 Fixed_ml &lt;- lmer(mathach ~ ses + factor(sector) + (1 | schoolid), data = hsb_selected, REML = FALSE) summary(Fixed_ml) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s method [lmerModLmerTest] ## Formula: mathach ~ ses + factor(sector) + (1 | schoolid) ## Data: hsb_selected ## ## AIC BIC logLik deviance df.resid ## 46616.4 46650.8 -23303.2 46606.4 7180 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.149152 -0.730912 0.019585 0.754184 2.925231 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schoolid (Intercept) 3.6219 1.9031 ## Residual 37.0328 6.0855 ## Number of obs: 7185, groups: schoolid, 160 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 11.71927 0.22651 155.49785 51.7396 &lt; 2.2e-16 *** ## ses 2.37710 0.10544 6735.02962 22.5440 &lt; 2.2e-16 *** ## factor(sector)1 2.10005 0.33875 149.11328 6.1994 5.285e-09 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ses ## ses 0.064 ## fctr(sctr)1 -0.672 -0.092 可以看出，sector 變量在學校層面上都是沒有變化的，所以加它進入混合效應的固定部分，只會對隨機效應標準差 (within level/cluster/group error) \\(\\hat\\sigma_u\\) 的估計造成影響，隨機誤差標準差 \\(\\hat\\sigma_e\\) 則幾乎不受影響。同樣的 “ML, REML” 兩種方法對結果的影響微乎其微。 74.8.4 現在把學校規模 size 這一變量加入混合效應模型的固定效應部分，記得先把該變量中心化，並除以 100，會有助於對結果的解釋 (比平均值每增加100名學生)。仔細觀察模型結果中隨機效應標準差和隨機誤差標準殘差的變化。 hsb_selected &lt;- hsb_selected %&gt;% mutate(c_size = (size - with(hsb, mean(size)))/100) Fixed_reml &lt;- lmer(mathach ~ ses + factor(sector) + c_size + (1 | schoolid), data = hsb_selected, REML = TRUE) summary(Fixed_reml) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: mathach ~ ses + factor(sector) + c_size + (1 | schoolid) ## Data: hsb_selected ## ## REML criterion at convergence: 46613.2 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.142084 -0.732778 0.018257 0.755374 2.922664 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schoolid (Intercept) 3.6367 1.9070 ## Residual 37.0345 6.0856 ## Number of obs: 7185, groups: schoolid, 160 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 11.588378 0.238560 151.299116 48.5764 &lt; 2.2e-16 *** ## ses 2.374876 0.105459 6721.908754 22.5194 &lt; 2.2e-16 *** ## factor(sector)1 2.401175 0.379378 145.265475 6.3292 2.885e-09 *** ## c_size 0.053553 0.030198 148.968765 1.7734 0.07821 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ses fct()1 ## ses 0.063 ## fctr(sctr)1 -0.710 -0.086 ## c_size -0.309 -0.009 0.447 Fixed_ml &lt;- lmer(mathach ~ ses + factor(sector) + c_size + (1 | schoolid), data = hsb_selected, REML = FALSE) summary(Fixed_ml) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s method [lmerModLmerTest] ## Formula: mathach ~ ses + factor(sector) + c_size + (1 | schoolid) ## Data: hsb_selected ## ## AIC BIC logLik deviance df.resid ## 46615.3 46656.5 -23301.6 46603.3 7179 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.142725 -0.733277 0.018426 0.756191 2.920849 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schoolid (Intercept) 3.5444 1.8827 ## Residual 37.0307 6.0853 ## Number of obs: 7185, groups: schoolid, 160 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 11.589234 0.236144 154.101375 49.0769 &lt; 2.2e-16 *** ## ses 2.378431 0.105389 6715.629474 22.5680 &lt; 2.2e-16 *** ## factor(sector)1 2.399344 0.375458 147.837153 6.3904 2.035e-09 *** ## c_size 0.053456 0.029890 151.673273 1.7884 0.0757 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ses fct()1 ## ses 0.064 ## fctr(sctr)1 -0.710 -0.087 ## c_size -0.309 -0.009 0.447 增加了 size 進入混合效應模型的固定效應部分，對兩種參數估計方法輸出的結果 \\((\\hat\\sigma_u, \\hat\\sigma_e)\\) 並沒有太大的影響。 74.8.5 在模型的固定效應部分增加 size*sector 的交互作用項。觀察輸出結果中該交互作用項是否有意義。用什麼檢驗方法判斷這個交互作用項能否幫助模型更加擬合數據？ Fixed_reml &lt;- lmer(mathach ~ ses + factor(sector)*c_size + (1 | schoolid), data = hsb_selected, REML = TRUE) summary(Fixed_reml) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: mathach ~ ses + factor(sector) * c_size + (1 | schoolid) ## Data: hsb_selected ## ## REML criterion at convergence: 46613.5 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.130458 -0.730487 0.018183 0.753342 2.922402 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schoolid (Intercept) 3.5594 1.8866 ## Residual 37.0370 6.0858 ## Number of obs: 7185, groups: schoolid, 160 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 11.665327 0.240290 149.376494 48.5469 &lt; 2.2e-16 *** ## ses 2.377719 0.105409 6689.156861 22.5572 &lt; 2.2e-16 *** ## factor(sector)1 2.618912 0.395270 140.853919 6.6256 6.788e-10 *** ## c_size 0.022185 0.034603 151.266432 0.6411 0.52241 ## factor(sector)1:c_size 0.124462 0.069016 139.397370 1.8034 0.07349 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ses fct()1 c_size ## ses 0.063 ## fctr(sctr)1 -0.611 -0.083 ## c_size -0.351 -0.007 0.214 ## fctr(sc)1:_ 0.176 -0.001 0.308 -0.501 Fixed_ml &lt;- lmer(mathach ~ ses + factor(sector)*c_size + (1 | schoolid), data = hsb_selected, REML = FALSE) summary(Fixed_ml) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s method [lmerModLmerTest] ## Formula: mathach ~ ses + factor(sector) * c_size + (1 | schoolid) ## Data: hsb_selected ## ## AIC BIC logLik deviance df.resid ## 46614.0 46662.1 -23300.0 46600.0 7178 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.130886 -0.730494 0.017706 0.753635 2.919879 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schoolid (Intercept) 3.4378 1.8541 ## Residual 37.0338 6.0855 ## Number of obs: 7185, groups: schoolid, 160 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 11.666606 0.237019 153.063389 49.2222 &lt; 2.2e-16 *** ## ses 2.382601 0.105316 6679.214135 22.6234 &lt; 2.2e-16 *** ## factor(sector)1 2.616394 0.389730 144.122856 6.7134 4.063e-10 *** ## c_size 0.021983 0.034135 155.039559 0.6440 0.52052 ## factor(sector)1:c_size 0.124598 0.068044 142.600213 1.8311 0.06917 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ses fct()1 c_size ## ses 0.064 ## fctr(sctr)1 -0.611 -0.084 ## c_size -0.351 -0.007 0.214 ## fctr(sc)1:_ 0.176 -0.001 0.307 -0.502 在兩個估計方法的報告中，交互作用項均不具有統計學意義。 74.8.6 把上面八個模型估計的隨機效應標準差，和隨機誤差標準差總結成表格，它們之間有什麼規律嗎？ Random effect sd and random residual sd from previous 8 mixed effect models REML ML Model with \\(\\sigma_u\\) \\(\\sigma_e\\) \\(\\sigma_u\\) \\(\\sigma_e\\) ses 2.184 6.085 2.175 6.085 ses &amp; sector 1.920 6.086 1.903 6.086 ses, size &amp; sector 1.907 6.086 1.883 6.085 ses, size &amp; sector &amp; size*sector 1.887 6.086 1.854 6.086 \\(\\hat\\sigma_e\\) 幾乎在所有模型的估計中都保持不變。因爲我們在固定效應中增加的共變量在學校層面 (level 2) 都是一樣的。也就是說對於同一學校的學生，新增的共變量是一模一樣沒有變化的，所以在個人水平 (level 1) 的隨機效應幾乎不會發生變化。且注意到 “ML” 極大似然法估計的隨機效應標準差比 “REML” 限制性極大似然估計法給出的結果略小 1% 左右。 74.8.7 在混合效應模型的固定效應部分增加學生性別 female，和學生是否是少數族裔 minority 兩個變量。再觀察 \\(\\hat\\sigma_u, \\hat\\sigma_e\\) 是否發生變化？ Fixed_reml &lt;- lmer(mathach ~ ses + factor(sector) + c_size + factor(female) + factor(minority) + (1 | schoolid), data = hsb_selected, REML = TRUE) summary(Fixed_reml) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: mathach ~ ses + factor(sector) + c_size + factor(female) + factor(minority) + ## (1 | schoolid) ## Data: hsb_selected ## ## REML criterion at convergence: 46336.4 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.28599 -0.71963 0.03760 0.75553 2.88323 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schoolid (Intercept) 2.1692 1.4728 ## Residual 35.9184 5.9932 ## Number of obs: 7185, groups: schoolid, 160 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 12.944772 0.217832 217.526187 59.4254 &lt; 2.2e-16 *** ## ses 2.059675 0.105073 6543.507287 19.6024 &lt; 2.2e-16 *** ## factor(sector)1 2.731292 0.310817 143.786918 8.7875 4.206e-15 *** ## c_size 0.076372 0.024802 148.489663 3.0793 0.002472 ** ## factor(female)1 -1.252053 0.160241 5716.966427 -7.8135 6.572e-15 *** ## factor(minority)1 -3.098421 0.200627 3527.351887 -15.4437 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ses fctr(s)1 c_size fctr(f)1 ## ses 0.000 ## fctr(sctr)1 -0.624 -0.116 ## c_size -0.265 -0.025 0.448 ## factr(fml)1 -0.390 0.060 0.005 0.018 ## fctr(mnrt)1 -0.206 0.212 -0.080 -0.074 0.011 Fixed_ml &lt;- lmer(mathach ~ ses + factor(sector) + c_size + factor(female) + factor(minority) + (1 | schoolid), data = hsb_selected, REML = FALSE) summary(Fixed_ml) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s method [lmerModLmerTest] ## Formula: mathach ~ ses + factor(sector) + c_size + factor(female) + factor(minority) + ## (1 | schoolid) ## Data: hsb_selected ## ## AIC BIC logLik deviance df.resid ## 46338 46393 -23161 46322 7177 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.28718 -0.71993 0.03838 0.75632 2.88308 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schoolid (Intercept) 2.1013 1.4496 ## Residual 35.9062 5.9922 ## Number of obs: 7185, groups: schoolid, 160 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 12.947113 0.215801 222.800979 59.9956 &lt; 2.2e-16 *** ## ses 2.062690 0.104976 6533.709344 19.6491 &lt; 2.2e-16 *** ## factor(sector)1 2.729839 0.307263 146.376478 8.8844 2.149e-15 *** ## c_size 0.076268 0.024522 151.247817 3.1102 0.002235 ** ## factor(female)1 -1.253783 0.160045 5688.833342 -7.8339 5.602e-15 *** ## factor(minority)1 -3.101155 0.200217 3493.548746 -15.4890 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ses fctr(s)1 c_size fctr(f)1 ## ses 0.000 ## fctr(sctr)1 -0.623 -0.117 ## c_size -0.264 -0.025 0.448 ## factr(fml)1 -0.393 0.060 0.005 0.018 ## fctr(mnrt)1 -0.208 0.213 -0.080 -0.075 0.011 混合效應模型的固定效應部分增加了學生性別，以及是否是少數族裔以後，“ML/REML” 估計的 \\(\\hat\\sigma_u, \\hat\\sigma_e\\) 均發生了顯著變化。因爲它們在個人水平都不一樣 (level 1, within group random residuals)。 74.8.8 檢查學生性別和族裔是否和學校是否是天主教會學校有關係，先作分類型數據的分佈表格，然後把它們各自與 sector 的交互作用項加入混合效應模型中的固定效應部分，記錄下此時的 \\(\\hat\\sigma_u, \\hat\\sigma_e\\) # Only minority is associated with sector. There are more pupils from # ethnic minorities attending catholic schools with(hsb_selected, tabpct( sector, minority, graph = FALSE)) ## ## Original table ## minority ## sector 0 1 Total ## 0 2721 921 3642 ## 1 2490 1053 3543 ## Total 5211 1974 7185 ## ## Row percent ## minority ## sector 0 1 Total ## 0 2721 921 3642 ## (74.7) (25.3) (100) ## 1 2490 1053 3543 ## (70.3) (29.7) (100) ## ## Column percent ## minority ## sector 0 % 1 % ## 0 2721 (52.2) 921 (46.7) ## 1 2490 (47.8) 1053 (53.3) ## Total 5211 (100) 1974 (100) with(hsb_selected, tabpct( sector, female, graph = FALSE)) ## ## Original table ## female ## sector 0 1 Total ## 0 1730 1912 3642 ## 1 1660 1883 3543 ## Total 3390 3795 7185 ## ## Row percent ## female ## sector 0 1 Total ## 0 1730 1912 3642 ## (47.5) (52.5) (100) ## 1 1660 1883 3543 ## (46.9) (53.1) (100) ## ## Column percent ## female ## sector 0 % 1 % ## 0 1730 (51) 1912 (50.4) ## 1 1660 (49) 1883 (49.6) ## Total 3390 (100) 3795 (100) ## there was no significant interaction between female sex and sector so ## this is deleted from the final model Fixed_reml &lt;- lmer(mathach ~ ses + factor(sector)*factor(female) + c_size + factor(minority) + (1 | schoolid), data = hsb_selected, REML = TRUE) summary(Fixed_reml) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: mathach ~ ses + factor(sector) * factor(female) + c_size + factor(minority) + ## (1 | schoolid) ## Data: hsb_selected ## ## REML criterion at convergence: 46336.6 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.27886 -0.72057 0.03699 0.75622 2.87920 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schoolid (Intercept) 2.1834 1.4776 ## Residual 35.9191 5.9933 ## Number of obs: 7185, groups: schoolid, 160 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 12.966256 0.226778 258.535057 57.1761 &lt; 2.2e-16 *** ## ses 2.058832 0.105092 6543.813325 19.5908 &lt; 2.2e-16 *** ## factor(sector)1 2.671501 0.354202 219.966838 7.5423 1.203e-12 *** ## factor(female)1 -1.294931 0.200965 7102.454637 -6.4436 1.243e-10 *** ## c_size 0.076686 0.024873 147.469390 3.0831 0.002446 ** ## factor(minority)1 -3.097826 0.200706 3526.876211 -15.4347 &lt; 2.2e-16 *** ## factor(sector)1:factor(female)1 0.118573 0.332499 3731.140002 0.3566 0.721402 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ses fctr(s)1 fctr(f)1 c_size fctr(m)1 ## ses -0.001 ## fctr(sctr)1 -0.658 -0.099 ## factr(fml)1 -0.463 0.051 0.291 ## c_size -0.246 -0.025 0.378 -0.006 ## fctr(mnrt)1 -0.198 0.212 -0.070 0.009 -0.074 ## fctr()1:()1 0.272 -0.006 -0.476 -0.603 0.033 0.000 ## There is an interaction between minority and sector Fixed_reml &lt;- lmer(mathach ~ ses + factor(sector)*factor(minority) + c_size + factor(female) + (1 | schoolid), data = hsb_selected, REML = TRUE) summary(Fixed_reml) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: mathach ~ ses + factor(sector) * factor(minority) + c_size + ## factor(female) + (1 | schoolid) ## Data: hsb_selected ## ## REML criterion at convergence: 46306.4 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.25845 -0.71873 0.03640 0.76239 2.93045 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schoolid (Intercept) 2.1745 1.4746 ## Residual 35.7700 5.9808 ## Number of obs: 7185, groups: schoolid, 160 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 13.183015 0.222112 230.832589 59.3529 &lt; 2.2e-16 *** ## ses 2.006866 0.105303 6576.742334 19.0580 &lt; 2.2e-16 *** ## factor(sector)1 2.249566 0.323107 163.059561 6.9623 7.782e-11 *** ## factor(minority)1 -4.226834 0.287298 3674.763012 -14.7123 &lt; 2.2e-16 *** ## c_size 0.094335 0.025023 153.264958 3.7699 0.0002326 *** ## factor(female)1 -1.250756 0.159945 5731.205527 -7.8199 6.248e-15 *** ## factor(sector)1:factor(minority)1 2.167447 0.395431 3399.174558 5.4812 4.532e-08 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ses fctr(s)1 fctr(m)1 c_size fctr(f)1 ## ses -0.017 ## fctr(sctr)1 -0.642 -0.086 ## fctr(mnrt)1 -0.281 0.212 0.142 ## c_size -0.232 -0.036 0.392 -0.145 ## factr(fml)1 -0.382 0.059 0.005 0.007 0.018 ## fctr()1:()1 0.196 -0.090 -0.272 -0.717 0.131 0.001 數據顯示，少數族裔更多地選擇天主教會學校學習。學生性別則與是否是天主教會學校之間沒有顯著的關係。少數族裔和教會學校之間的交互作用同時也被發現具有統計學意義。 74.8.9 對上面最後一個模型進行殘差分析和模型的診斷。 #fit &lt;- lmer(mathach ~ ses + factor(sector)*factor(minority) + c_size + # factor(female) + (1| schoolid), data=hsb_selected) #summary(fit) Fixed_reml &lt;- lme(fixed = mathach ~ ses + factor(sector)*factor(minority) + c_size + factor(female), random = ~ 1 | schoolid, data = hsb_selected, method = &quot;REML&quot;) summary(Fixed_reml) ## Linear mixed-effects model fit by REML ## Data: hsb_selected ## AIC BIC logLik ## 46324.414 46386.323 -23153.207 ## ## Random effects: ## Formula: ~1 | schoolid ## (Intercept) Residual ## StdDev: 1.4746055 5.9807998 ## ## Fixed effects: mathach ~ ses + factor(sector) * factor(minority) + c_size + factor(female) ## Value Std.Error DF t-value p-value ## (Intercept) 13.1830150 0.22211246 7021 59.352884 0.0000 ## ses 2.0068664 0.10530291 7021 19.058033 0.0000 ## factor(sector)1 2.2495661 0.32310709 157 6.962293 0.0000 ## factor(minority)1 -4.2268343 0.28729849 7021 -14.712344 0.0000 ## c_size 0.0943352 0.02502303 157 3.769937 0.0002 ## factor(female)1 -1.2507559 0.15994509 7021 -7.819908 0.0000 ## factor(sector)1:factor(minority)1 2.1674475 0.39543102 7021 5.481228 0.0000 ## Correlation: ## (Intr) ses fctr(s)1 fctr(m)1 c_size fctr(f)1 ## ses -0.017 ## factor(sector)1 -0.642 -0.086 ## factor(minority)1 -0.281 0.212 0.142 ## c_size -0.232 -0.036 0.392 -0.145 ## factor(female)1 -0.382 0.059 0.005 0.007 0.018 ## factor(sector)1:factor(minority)1 0.196 -0.090 -0.272 -0.717 0.131 0.001 ## ## Standardized Within-Group Residuals: ## Min Q1 Med Q3 Max ## -3.258450948 -0.718733897 0.036399219 0.762392656 2.930454863 ## ## Number of Observations: 7185 ## Number of Groups: 160 # number of students in each school n_pupil &lt;- hsb_selected %&gt;% count(schoolid, sort = TRUE) hsb &lt;- merge(hsb, n_pupil, by = &quot;schoolid&quot;) hsb &lt;- hsb %&gt;% mutate(# extract the random effect (EB) residuals (at school level) uhat_eb = ranef(Fixed_reml)$`(Intercept)`, # number of students in each school # npupil = count(hsb_selected$schoolid)[2]$freq, # shrinkage factor = sigma_u^2/(sigma_u^2+sigma_e^2/n_j) R = 1.474^2/(1.474^2 + (5.981^2)/n), # Empirical Bayes prediction of variance of uhat var_eb = R*1.474^2, # standardize the uhat uhat_st = uhat_eb/sqrt(var_eb)) # extract the standardized random residuals (at pupil level) hsb_selected$ehat &lt;- residuals(Fixed_reml, level = 1, type = &quot;normalized&quot;) par(mfrow=c(1,2)) hist(hsb$uhat_st, freq = FALSE, breaks = 12, col=&#39;lightblue&#39;) qqnorm(hsb$uhat_st, ylab = &quot;Standardized level 2 (school) residuals&quot;); qqline(hsb$uhat_st, col=2) 圖 74.4: Histogram and Q-Q plot of cluster (school) level standardized residuals for the intercept par(mfrow=c(1,2)) hist(hsb_selected$ehat, freq = FALSE, breaks = 38, col=&#39;lightblue&#39;) qqnorm(hsb_selected$ehat, ylab = &quot;Standardized level 1 (pupil) residuals&quot;); qqline(hsb_selected$ehat, col=2) 圖 74.5: Histogram and Q-Q plot of individual (pupil) level standardized residuals for the intercept 74.8.10 通過剛剛所求的隨機效應方差的殘差，確認哪個學校存在相對極端的值。 # summ(hsb$uhat_st, graph = FALSE) hsb %&gt;% summarise(n = n(), mean_uhatst = mean(uhat_st), sd_uhatst = sd(uhat_st), min_uhatst = min(uhat_st), max_uhatst = max(uhat_st)) ## n mean_uhatst sd_uhatst min_uhatst max_uhatst ## 1 160 -0.00078526873 1.0066282 -3.1071846 2.7097312 hsb[with(hsb, which(uhat_st &gt; 2.5)), c(7, 5, 6, 12)] ## sector mathach size uhat_st ## 48 1 13.874 687 2.7097312 hsb[with(hsb, which(uhat_st &lt; -2.5)), c(7, 5, 6, 12)] ## sector mathach size uhat_st ## 135 0 15.9359999 153 -3.0189027 ## 143 0 -2.0810001 745 -3.1071846 所以，此處可以看出，隨機效應殘差下提示的隨機效應標準差可能比較極端的有上面這三所規模較小的學校。其中一所是天主教會學校，另外兩所是非天主教會學校。 74.8.11 計算學校水平的 SES 平均值，以及每個學生自己和所在學校均值之間的差值大小。分別擬合兩個不同的混合效應模型，一個只用 SES，另一個換做使用新計算的組均值和組內均差。 Mean_ses_math &lt;- ddply(hsb_selected,~schoolid,summarise,mean_ses=mean(ses),mean_math=mean(mathach)) hsb_selected$dif_ses &lt;- NA for (i in Mean_ses_math$schoolid) { hsb_selected$dif_ses[which(hsb_selected$schoolid == i)] &lt;- hsb_selected$ses[which(hsb_selected$schoolid == i)] - Mean_ses_math$mean_ses[which(Mean_ses_math$schoolid == i)] } hsb_selected &lt;- hsb_selected %&gt;% mutate(mean_ses = ses - dif_ses) ## total simple model with ses only Simple_reml &lt;- lmer(mathach ~ ses + (1 | schoolid), data = hsb_selected, REML = TRUE) summary(Simple_reml) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: mathach ~ ses + (1 | schoolid) ## Data: hsb_selected ## ## REML criterion at convergence: 46645.2 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.126073 -0.727203 0.021883 0.757717 2.919116 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schoolid (Intercept) 4.7682 2.1836 ## Residual 37.0344 6.0856 ## Number of obs: 7185, groups: schoolid, 160 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 12.65748 0.18799 148.30225 67.332 &lt; 2.2e-16 *** ## ses 2.39020 0.10572 6838.07757 22.609 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ## ses 0.003 ## fit the extended model within and between effect separated Extend_reml &lt;- lmer(mathach ~ dif_ses + mean_ses + (1 | schoolid), data = hsb_selected, REML = TRUE) ## the between schools effect (5.87) seems much larger than the within school effect (2.19) summary(Extend_reml) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: mathach ~ dif_ses + mean_ses + (1 | schoolid) ## Data: hsb_selected ## ## REML criterion at convergence: 46568.6 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.16665 -0.72543 0.01744 0.75578 2.94540 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schoolid (Intercept) 2.6925 1.6409 ## Residual 37.0191 6.0843 ## Number of obs: 7185, groups: schoolid, 160 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 12.68331 0.14938 153.65182 84.906 &lt; 2.2e-16 *** ## dif_ses 2.19117 0.10867 7021.50918 20.164 &lt; 2.2e-16 *** ## mean_ses 5.86617 0.36170 153.36659 16.218 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) dif_ss ## dif_ses 0.000 ## mean_ses 0.010 0.000 ## We find strong evidence to support that the second model gives a better fit to the data mod2&lt;- update(Extend_reml, . ~ . - dif_ses - mean_ses) anova(Extend_reml, mod2) ## refitting model(s) with ML (instead of REML) ## Data: hsb_selected ## Models: ## mod2: mathach ~ (1 | schoolid) ## Extend_reml: mathach ~ dif_ses + mean_ses + (1 | schoolid) ## npar AIC BIC logLik deviance Chisq Df Pr(&gt;Chisq) ## mod2 3 47121.8 47142.4 -23557.9 47115.8 ## Extend_reml 5 46573.8 46608.2 -23281.9 46563.8 552.001 2 &lt; 2.22e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 References "],["random-coefficient.html", "第 75 章 隨機回歸系數模型 random coefficient model 75.1 GCSE scores 實例 75.2 隨機回歸系數的實質 75.3 繼續 GCSE scores 實例 75.4 使用模型結果推斷 75.5 隨機效應的方差 75.6 模型效果評估 75.7 Practical Hierarchical 04", " 第 75 章 隨機回歸系數模型 random coefficient model 這一章節我們把隨機截距模型進一步擴展，在隨機效應部分增加隨機斜率成分 (random slope)。這樣的模型又稱隨機系數模型 (random coefficient model) 或 隨機斜率模型 (random slope model)。 75.1 GCSE scores 實例 第一章介紹過的 65 所中學學生在入學前的閱讀水平成績和畢業時的考試成績的 GCSE 數據，用來作爲本章介紹概念的實例。我們先對其中學校編號爲 1 的學生做兩個成績的線性回歸: gcse_selected &lt;- read_dta(&quot;../backupfiles/gcse_selected.dta&quot;) M_sch1 &lt;- lm(gcse ~ lrt, data = gcse_selected[gcse_selected$school == 1, ]) summary(M_sch1) ## ## Call: ## lm(formula = gcse ~ lrt, data = gcse_selected[gcse_selected$school == ## 1, ]) ## ## Residuals: ## Min 1Q Median 3Q Max ## -22.4876 -5.4427 -1.0177 6.1932 15.4687 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 3.833302 0.982238 3.9026 0.0002141 *** ## lrt 0.709341 0.092006 7.7097 5.771e-11 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 8.29 on 71 degrees of freedom ## Multiple R-squared: 0.45569, Adjusted R-squared: 0.44802 ## F-statistic: 59.44 on 1 and 71 DF, p-value: 5.7708e-11 圖 75.1: GCSE versus LRT in school 1 當我們重復同樣的實驗，給 65 所學校 (48號學校除外，它只有兩個學生) 一一繪制回歸直線的時候，你得到的一簇直線是這樣紙的: 圖 75.2: Predicted regression lines of GCSE versus LRT scores: separate estimates from each school 實際上這麼多學校學生的成績前後回歸線，其截距和斜率各不相同 (圖75.2)。這些斜率和截距的總結歸納如下: summ.data.frame(Coefs[-48,]) ## ## No. of observations = 64 ## ## Var. name obs. mean median s.d. min. max. ## 1 (Intercept) 64 -0.18 -0.33 3.29 -8.52 6.84 ## 2 lrt 64 0.54 0.54 0.18 0.04 1.08 圖 75.3: School specific slopes and intercepts 圖 75.3 展示的是這些回歸直線各自的截距 (x 軸) 和斜率 (y 軸) 的散點圖。縱橫添加的兩條直線分別是截距和斜率的均值的位置。很明顯，截距和斜率之間本身是呈現正相關的 (相關系數 0.36): 如果一個學校學生入學時成績一般，但是畢業時 GCSE 成績較高，說明那所學校本身對學生成績的提升作用明顯。 經過擬合64個線性回歸模型，獲得 \\(64\\times3\\) 個不同的回歸線的參數 (截距，斜率，和殘差方差)。所以我們可以提出的關於 “學校” 這個個體，它們各自的入學前後成績作出的回歸線獲得的三個參數，在它的 “人羣 (可以是英國國內的中學，全歐洲的中學，或者是全世界的中學)” 中是隨機分布在一些 “均值” 附近的。 75.2 隨機回歸系數的實質 在隨機截距模型中，截距可以隨機分布在某個均值周圍，但是每條回歸直線我們默認其解釋變量和結果變量之間的關系是一樣的 (相同斜率的一簇直線)。現在，我們來把這個模型擴展，放寬它對斜率的限制，允許不同的層與層之間不僅僅可以有不同的截距，還可以有不同的斜率: \\[ \\begin{equation} Y_{ij} = (\\beta_0 + u_{0j}) + (\\beta_1 + u_{1j})X_{1ij} + e_{ij} \\end{equation} \\tag{75.1} \\] 其中: \\(u_{0j}:\\) 是隨機截距成分 (第 \\(j\\) 層數據和總體均值 \\(\\beta_0\\) 之間的差異) \\(u_{1j}:\\) 是隨機斜率成分 (第 \\(j\\) 層數據和總體寫率 \\(\\beta_1\\) 之間的差異) \\(\\text{E}(u_{0j}|X_{1ij}) = 0\\) \\(\\text{E}(u_{1j}|X_{1ij}) = 0\\) \\(\\text{E}(e_{ij}|X_{1ij},u_{0j}, u_{1j}) = 0\\) \\(u_0, u_1 \\perp X_{1ij}\\) (兩個隨機部分和解釋變量之間獨立不相關) \\(u_0, u_1 \\perp e_{ij}\\) (兩個隨機部分和總體的隨機誤差獨立不相關) 另外，\\(\\mathbf{u}_j = \\{u_0, u_1\\}\\) 服從分布: \\[ \\mathbf{u}_j | X_{1ij} \\sim N(\\mathbf{0}, \\mathbf{\\sum}_{\\mathbf{u}}) \\] 其中的 \\(\\mathbf{\\sum}_{\\mathbf{u}}\\) 是一個 \\(2\\times2\\) 的方差協方差矩陣: \\[ \\begin{aligned} \\text{Where } \\mathbf{u}_j &amp; = (u_{0j}, u_{1j})^T \\\\ \\mathbf{0} &amp; = (0, 0)^T \\\\ \\mathbf{\\sum}_{\\mathbf{u}} &amp; =\\left( \\begin{array}{cc} \\sigma^2_{u_{00}} &amp; \\sigma_{u_{01}} \\\\ \\sigma_{u_{01}} &amp; \\sigma^2_{u_{11}} \\\\ \\end{array} \\right) \\end{aligned} \\] \\(e_{ij}\\) 則服從下列分布: \\[ e_{ij} | X_{1ij}, u_{0j}, u_{1j} \\sim N(0, \\sigma^2_e) \\] 75.3 繼續 GCSE scores 實例 繼續用 GCSE 數據，去除掉 48 號學校以後，擬合一個固定效應模型 (相同斜率，但是不同的固定截距): FIX_inter &lt;- lm(gcse ~ 0 + lrt + factor(school), data = gcse_selected[gcse_selected$school != 48, ]) summary(FIX_inter) Call: lm(formula = gcse ~ 0 + lrt + factor(school), data = gcse_selected[gcse_selected$school != 48, ]) Residuals: Min 1Q Median 3Q Max -28.32 -4.77 0.22 5.08 24.41 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) lrt 0.5595 0.0125 44.63 &lt; 2e-16 *** factor(school)1 4.0823 0.8806 4.64 3.7e-06 *** factor(school)2 5.6202 1.0154 5.53 3.3e-08 *** ................... ............ ................... &lt;Output ommited&gt; ............ ................... ............ factor(school)62 -0.5566 0.8929 -0.62 0.53306 factor(school)63 6.4827 1.3734 4.72 2.4e-06 *** factor(school)64 1.0089 0.9808 1.03 0.30368 factor(school)65 -1.7701 0.8415 -2.10 0.03547 * --- Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 Residual standard error: 7.52 on 3992 degrees of freedom Multiple R-squared: 0.442, Adjusted R-squared: 0.433 F-statistic: 48.7 on 65 and 3992 DF, p-value: &lt;2e-16 該固定效應模型 (簡單線性回歸模型) 估計的共同斜率是 0.56 (se = 0.01)，和 64 個不同的固定斜率。這些固定斜率的範圍是 -9,63 到 7.91，均值是 0.03，標準差是 3.38。估計的殘差標準差是 Residual standard error: 7.52。 如果用相同的數據，我們允許截距發生隨機變動的話 (隨機截距模型): MIX_inter &lt;- lmer(gcse ~ lrt + (1 | school), data = gcse_selected[gcse_selected$school != 48, ], REML = TRUE) summary(MIX_inter) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: gcse ~ lrt + (1 | school) ## Data: gcse_selected[gcse_selected$school != 48, ] ## ## REML criterion at convergence: 28044.1 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.71619 -0.63094 0.02920 0.68478 3.26661 ## ## Random effects: ## Groups Name Variance Std.Dev. ## school (Intercept) 9.4273 3.0704 ## Residual 56.6047 7.5236 ## Number of obs: 4057, groups: school, 64 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 0.031006 0.405263 59.922917 0.0765 0.9393 ## lrt 0.563268 0.012471 4048.045047 45.1676 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ## lrt 0.007 隨機截距模型估計的共同斜率還是不變 (0.56, se = 0.01)，總體平均截距是 0.03 (無統計學意義)。截距的 (正態) 分布的標準差是 3.07。殘差標準差，和剛才簡單現行回歸計算的殘差標準差是一樣的 (=7.52)。幾乎所有我們關心的參數估計，都接近簡單線性回歸的結果，但是隨機截距模型使用的參數個數只有 4 個，固定效應模型則用到了 66 個 (很顯然隨機截距模型更加高效)。 接下來，我們進一步擬合本章的重點模型 – 隨機參數模型: MIX_coef &lt;- lmer(gcse ~ lrt + (lrt | school), data = gcse_selected[gcse_selected$school != 48, ], REML = TRUE) summary(MIX_coef) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: gcse ~ lrt + (lrt | school) ## Data: gcse_selected[gcse_selected$school != 48, ] ## ## REML criterion at convergence: 28003 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.83178 -0.63196 0.03375 0.68334 3.45515 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## school (Intercept) 9.249786 3.04135 ## lrt 0.014955 0.12229 0.494 ## Residual 55.382877 7.44197 ## Number of obs: 4057, groups: school, 64 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) -0.109203 0.402635 59.913502 -0.2712 0.7872 ## lrt 0.556603 0.020112 56.329985 27.6754 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ## lrt 0.365 ## optimizer (nloptwrap) convergence code: 0 (OK) ## Model failed to converge with max|grad| = 0.00420817 (tol = 0.002, component 1) 這個模型，不僅允許了隨機的截距，還允許每個直線的斜率成爲隨機的斜率。此時的總體平均截距被估計爲 -0.11 (依然沒有統計學意義)，標準差略微變小 (3.07 變成了 3.04)。總體平均斜率是 0.56，現在也被允許有變動，其標準差是 0.12。此時這些許許多多的估計回歸方程中，斜率和截距的相關系數是 0.49，這十分接近我們在一開始的簡單回歸64次計算獲得的斜率和截距的相關系數 (0.36)。此隨機系數模型的殘差標準差變成了 7.44，略微小於之前的 7.52。這三個模型的結果總結如下表: 表 61.1: Comparison of fixed, random intercept, and random coefficient models: school data Model Fixed effect Random intercept Random coeff. Parameter est se est se est se \\(Fixed\\; part\\) \\(\\beta_0\\) -0.03 0.031 0.405 -0.109 0.403 \\(\\beta_1\\) 0.56 0.013 0.563 0.013 0.557 0.020 \\(Random\\; part\\) \\(\\sigma_{u_{00}}\\) 3.38 3.07 0.312 3.041 0.311 \\(\\sigma_{u_{11}}\\) 0.122 0.019 \\(\\text{Corr}(0,1)\\) 0.494 0.149 \\(\\sigma_e\\) 7.522 7.524 0.084 7.442 0.084 75.4 使用模型結果推斷 接下來，我們討論如何比較隨機系數模型，隨機截距模型，也就是如何選擇一個更優的模型。如果只是比較相同數據下，隨機系數模型和隨機截距模型的優劣，那麼只需要同時檢驗 \\(u_{1j} = 0; \\text{Cov}(u_{0j}, u_{1j}) = 0\\)。 就用剛剛擬合好的 MIX_inter 和 MIX_coef 來比較: MIX_coef &lt;- lme(fixed = gcse ~ lrt, random = ~ lrt | school, data = gcse_selected[gcse_selected$school != 48, ], method = &quot;REML&quot;) MIX_inter &lt;- lme(fixed = gcse ~ lrt, random = ~ 1 | school, data = gcse_selected[gcse_selected$school != 48, ], method = &quot;REML&quot;) anova(MIX_inter, MIX_coef) ## Model df AIC BIC logLik Test L.Ratio p-value ## MIX_inter 1 4 28052.050 28077.281 -14022.025 ## MIX_coef 2 6 28014.963 28052.809 -14001.482 1 vs 2 41.087068 &lt;.0001 值得注意的是，這裏計算的 似然比的檢驗統計量服從的是一個 自由度爲 2 的卡方分布和一個 自由度爲 1 的卡方分布的混合分布。所以報告中給出的 p 值是一個保守估計，正確的 p 值可以這樣計算: likelihood &lt;- as.numeric(-2*(logLik(MIX_inter) - logLik(MIX_coef))) 0.5*(1-pchisq(as.numeric(likelihood), df = 1)) + 0.5*(1-pchisq(as.numeric(likelihood), df = 2)) ## [1] 6.7124639e-10 另一個重要的問題是該如何去真正理解這裏隨機系數模型給出的結果呢？ 該模型的結果說，“人羣”中的總體均值是 -0.11，總體斜率是 0.56 (se = 0.02, 95%CI: 0.52, 0.60)。這裏的”人羣”指的是全英國/或者全世界這樣的學校。學校水平的截距和斜率服從以這兩個數字爲均值，標準差分別是 3.04 和 0.12 的正態分布。且截距和斜率之間的相關系數接近 0.50。第一層級 (學生的) 個體隨機誤差的標準差爲 7.44。這些結果可以拿來估計”學校人羣”的 95% 截距/斜率: \\(-0.11 \\pm 1.96 \\times3.04\\) 和 \\(0.56 \\pm 1.96\\times0.12\\)，所以人羣的截距的 95% 信賴區間是: \\(-6.07, 5.85\\)，斜率的 95% 信賴區間是: \\(0.33, 0.80\\)。與此形成對比的是，我們開頭給 64 所學校建立的 64 個模型的 截距和斜率拿來估計的 95% 截距信賴區間是 \\(-0.18 \\pm 1.96\\times3.29: -6.63, 6.27\\)，95% 斜率信賴區間是 \\(0.54 \\pm 1.96 \\times 0.18: 0.19, 0.89\\)。所以，隨機系數模型對截距和斜率的人羣估計及推斷更加精準。 75.5 隨機效應的方差 在解釋混合效應模型的隨機效應部分的時候，有幾點需要注意。首先，隨機截距的方差，和隨機斜率的方差，是具有不同單位的。隨機截距的方差的單位是結果變量 \\(Y\\) 的單位的平方。隨機斜率的方差，是結果變量和解釋變量的單位的商的平方。 另一個要注意的點是，\\(Y_{ij}\\) 在 \\(X_{1ij}\\) 的條件下的殘差的標準差，不是恆定不變的 (隨着 \\(X_1\\) 的變化而變化): \\[ \\begin{aligned} Y_{ij} &amp; = (\\beta_0 + u_{0j}) + (\\beta_1 + u_{1j}) X_{1ij} + e_{ij} \\\\ &amp; = (\\beta_0 + \\beta_1X_{1ij}) + (u_{0j} + u_{1j}X_{1ij} + e_{ij}) \\\\ &amp; = (\\beta_0 + \\beta_1X_{1ij}) + \\epsilon_{ij} \\end{aligned} \\] 所以從上面的式子可看出，隨機參數模型的總體殘差 (total residuals)，\\(\\epsilon_{ij} = u_{0j} + u_{1j}X_{1ij} + e_{ij}\\)，是隨着你想給斜率隨機性的那個解釋變量的變化而變化的。也正因爲如此，總體殘差的方差，也是隨着解釋變量變化而變化的 (和解釋變量成二次方程關系，如果繪制總體慘差的方差和解釋變量之間的關系會是一個拋物線): \\[ \\begin{aligned} \\text{Var}(Y_{ij} | X_{1ij}) &amp; = \\text{Var}( u_{0j} + u_{1j}X_{1ij} + e_{ij}) \\\\ &amp; = \\sigma^2_{u_{00}} + X_{1ij}^2\\sigma^2_{u_{11}} + 2X_{1ij}\\sigma_{u_{01}} + \\sigma^2_e \\end{aligned} \\tag{75.2} \\] 75.6 模型效果評估 擬合模型的評估中，另一個重要的事是分析第一階層殘差和第二階層殘差是不是符合其前提條件 (正態分布)。記得第二階層殘差獲取之後需要被標準化。 MIX_coef &lt;- lmer(gcse ~ lrt + (lrt | school), data = gcse_selected[gcse_selected$school != 48, ], REML = TRUE) ## Warning in checkConv(attr(opt, &quot;derivs&quot;), opt$par, ctrl = control$checkConv, : Model failed to ## converge with max|grad| = 0.00420817 (tol = 0.002, component 1) School_res0 &lt;- HLMdiag::hlm_resid(MIX_coef, level = &quot;school&quot;, type = &quot;EB&quot;, standardize = FALSE) summ.data.frame(School_res0) ## ## No. of observations = 64 ## ## Var. name obs. mean median s.d. min. max. ## 1 school ## 2 .ranef.intercept 64 0 -0.11 2.87 -7.19 6.45 ## 3 .ranef.lrt 64 0 0 0.1 -0.19 0.35 ## 4 .ls.intercept 64 0 -0.14 3.29 -8.34 7.02 ## 5 .ls.lrt 64 0 0 0.18 -0.5 0.54 School_res1 &lt;- HLMdiag::hlm_resid(MIX_coef, level = &quot;school&quot;, type = &quot;EB&quot;, standardize = TRUE) summ.data.frame(School_res1) ## ## No. of observations = 64 ## ## Var. name obs. mean median s.d. min. max. ## 1 school ## 2 .std.ranef.intercept 64 0.04 -0.14 3 -6.74 7.53 ## 3 .std.ranef.lrt 64 0.04 -0.04 1.31 -2.35 5.07 ## 4 .std.ls.intercept 64 0 -0.04 1 -2.53 2.13 ## 5 .std.ls.lrt 64 0 0 1 -2.84 3.05 圖 75.4: Q-Q plots of school level intercept and slope residuals (unstandardized) 圖 75.5: Q-Q plots of school level intercept and slope residuals (standardized) ## obs. mean median s.d. min. max. ## 4057 0 0.034 0.989 -3.832 3.455 圖 75.6: Histogram and Q-Q plots of elementary level (pupil) standardized residuals 75.7 Practical Hierarchical 04 GCSE data: 數據來自65所中學的學生畢業成績 “the Graduate Certificate of Secondary Education (GCSE) score”，和這些學生在剛剛入學時接受閱讀能力水平測試 (LRT score) 的成績。其變量和各自含義爲： school school identifier student student identifier gcse GCSE score (multiplied by 10) lrt LRT score (multiplied by 10) girl Student female gender (1 = yes, 0 = no) schgend type of school (1: mixed gender; 2: boys only; 3: girls only) ### 將數據導入軟件裏， gcse_selected &lt;- read_dta(&quot;../backupfiles/gcse_selected.dta&quot;) length(unique(gcse_selected$school)) ## number of school = 65 ## [1] 65 gcse_selected &lt;- gcse_selected %&gt;% mutate(schgend = factor(schgend, labels = c(&quot;mixed geder&quot;, &quot;boys only&quot;, &quot;girls only&quot;))) ## create a subset data with only the first observation of each school gcse &lt;- gcse_selected[!duplicated(gcse_selected$school), ] # 一共有 65 所學校，54% 是混合校，15% 是男校，31% 是女校 with(gcse, tab1(schgend, graph = FALSE)) ## schgend : ## Frequency Percent Cum. percent ## mixed geder 35 53.8 53.8 ## boys only 10 15.4 69.2 ## girls only 20 30.8 100.0 ## Total 65 100.0 100.0 # 計算每所學校兩種成績的平均分，計算一個包含每所學校的平均女生人數的變量 Mean_gcse_lrt &lt;- ddply(gcse_selected,~school,summarise,mean_gcse=mean(gcse),mean_lrt=mean(lrt), mean_girl=mean(girl)) # 整體來說，GCSE 分數的分布比起入學前 LRT 分數的分布更加寬泛，標準差更大。 # 意味着入學時學生閱讀成績的差異，比起畢業時成績的差異要小。 # 或者反過來說，畢業時成績差異，比起入學時閱讀成績的差異要大。 epiDisplay::summ(Mean_gcse_lrt[,2:4]) ## ## No. of observations = 65 ## ## Var. name obs. mean median s.d. min. max. ## 1 mean_gcse 65 -0.23 -0.34 4.39 -10.49 10.04 ## 2 mean_lrt 65 -0.31 -0.41 3.44 -7.56 6.38 ## 3 mean_girl 65 0.57 0.5 0.36 0 1 75.7.1 先忽略學校編號爲 48 的學校，擬合一個只有固定效應 (簡單線性回歸模型)，結果變量是 GCSE，解釋變量是 LRT 和學校。 Fix &lt;- lm(gcse ~ lrt + factor(school), data = gcse_selected[gcse_selected$school !=48, ]) anova(Fix) ## Analysis of Variance Table ## ## Response: gcse ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## lrt 1 141723.2 141723.2 2505.000 &lt; 2.22e-16 *** ## factor(school) 63 37314.7 592.3 10.469 &lt; 2.22e-16 *** ## Residuals 3992 225851.9 56.6 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 summary(Fix) # 輸出結果太長，中間被省略掉 LRT 的回歸系數 (直線斜率 = 0.56, se = 0.01)，殘差的標準差 \\(\\hat\\sigma_e =\\) 7.52。 Call: lm(formula = gcse ~ lrt + factor(school), data = gcse_selected[gcse_selected$school != 48, ]) Residuals: Min 1Q Median 3Q Max -28.32 -4.77 0.22 5.08 24.41 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 4.08232 0.88060 4.64 3.7e-06 *** lrt 0.55948 0.01253 44.63 &lt; 2e-16 *** factor(school)2 1.53785 1.34332 1.14 0.25235 ... ...&lt;OMITTED OUTPUT&gt; ... ... factor(school)65 -5.85245 1.21850 -4.80 1.6e-06 *** --- Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 Residual standard error: 7.52 on 3992 degrees of freedom Multiple R-squared: 0.442, Adjusted R-squared: 0.433 F-statistic: 49.4 on 64 and 3992 DF, p-value: &lt;2e-16 75.7.2 僅有固定效應模型的學校變量變更爲學校類型 (男校女校或混合校)，從這個新模型的結果來看，你是否認爲學校類型，和學校編號本身相比能夠解釋相同的學校層面的方差？ lrt 的估計回歸參數發生了怎樣的變化？ Fix1 &lt;- lm(gcse ~ lrt + schgend, data = gcse_selected[gcse_selected$school !=48, ]) anova(Fix1) ## Analysis of Variance Table ## ## Response: gcse ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## lrt 1 141723.2 141723.2 2222.6017 &lt; 2.22e-16 *** ## schgend 2 4728.9 2364.4 37.0807 &lt; 2.22e-16 *** ## Residuals 4053 258437.7 63.8 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 summary(Fix1) ## ## Call: ## lm(formula = gcse ~ lrt + schgend, data = gcse_selected[gcse_selected$school != ## 48, ]) ## ## Residuals: ## Min 1Q Median 3Q Max ## -26.17545 -5.12410 0.19171 5.35399 28.32233 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -0.960872 0.171460 -5.6041 2.233e-08 *** ## lrt 0.594272 0.012622 47.0836 &lt; 2.2e-16 *** ## schgendboys only 1.177713 0.392041 3.0041 0.00268 ** ## schgendgirls only 2.362920 0.275274 8.5839 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 7.9853 on 4053 degrees of freedom ## Multiple R-squared: 0.36171, Adjusted R-squared: 0.36124 ## F-statistic: 765.59 on 3 and 4053 DF, p-value: &lt; 2.22e-16 新的模型 Fix1 參數明顯減少很多，殘差標準差估計 \\(\\hat\\sigma_u =\\) 7.99。LRT 的回歸系數估計僅發生了不太明顯的變化 0.59 (0.01) 75.7.3 使用限制性極大似然法擬合一個隨機截距模型。記錄此時的限制性對數似然的大小 (log-likelihood)。用 lmerTest::rand 命令對隨機效應部分的方差是否爲零做檢驗，指明該檢驗的零假設是什麼，並解釋其結果的含義。 library(lmerTest) Fixed_reml &lt;- lmer(gcse ~ lrt + (1 | school), data = gcse_selected[gcse_selected$school !=48, ], REML = TRUE) summary(Fixed_reml) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: gcse ~ lrt + (1 | school) ## Data: gcse_selected[gcse_selected$school != 48, ] ## ## REML criterion at convergence: 28044.1 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.71619 -0.63094 0.02920 0.68478 3.26661 ## ## Random effects: ## Groups Name Variance Std.Dev. ## school (Intercept) 9.4273 3.0704 ## Residual 56.6047 7.5236 ## Number of obs: 4057, groups: school, 64 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 0.031006 0.405263 59.922917 0.0765 0.9393 ## lrt 0.563268 0.012471 4048.045047 45.1676 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ## lrt 0.007 ranova(Fixed_reml) ## random effect test ## ANOVA-like table for random-effects: Single term deletions ## ## Model: ## gcse ~ lrt + (1 | school) ## npar logLik AIC LRT Df Pr(&gt;Chisq) ## &lt;none&gt; 4 -14022.0 28052.0 ## (1 | school) 3 -14224.8 28455.7 405.601 1 &lt; 2.22e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 隨機截距模型的輸出結果可以看出，這裏的混合模型估計的 LRT 的回歸系數跟僅有固定效應的簡單線性回歸模型估計的值完全一樣 (0.56, se=0.01)。隨機效應部分 \\(\\hat\\sigma_e = 7.524, \\hat\\sigma_u = 3.07\\)，此時的限制性似然 (restricted log-likelihood) 是 -14022。最晚部分的隨機效應檢驗的零假設是 \\(\\sigma_u = 0\\)，且值得注意的是，由於方差本身不可能小於零，故本次檢驗只用到自由度爲 1 的卡方分布的右半側(單側)。也就是說，其替代假設有且只有 \\(\\sigma_u &gt; 0\\) 的單側假設。這裏的檢驗結果提示高度有意義 (highly significant)。 75.7.4 在前一題的隨機截距模型中加入 schgend 變量，作爲解釋隨機截距的一個自變量，觀察輸出結果，解釋其是否有意義。記錄這個模型的限制性似然。 Fixed_reml1 &lt;- lmer(gcse ~ lrt + schgend + (1 | school), data = gcse_selected[gcse_selected$school !=48, ], REML = TRUE) #Fixed_reml1 &lt;- lme(fixed = gcse ~ lrt + schgend , random = ~ 1 | school, data = gcse_selected[gcse_selected$school !=48, ], method = &quot;REML&quot;) summary(Fixed_reml1) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: gcse ~ lrt + schgend + (1 | school) ## Data: gcse_selected[gcse_selected$school != 48, ] ## ## REML criterion at convergence: 28032.6 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.71222 -0.63023 0.02647 0.68064 3.24445 ## ## Random effects: ## Groups Name Variance Std.Dev. ## school (Intercept) 8.4961 2.9148 ## Residual 56.6045 7.5236 ## Number of obs: 4057, groups: school, 64 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) -0.872660 0.524979 58.504248 -1.6623 0.101807 ## lrt 0.563512 0.012465 4049.316274 45.2087 &lt; 2.2e-16 *** ## schgendboys only 0.968683 1.118170 59.752787 0.8663 0.389785 ## schgendgirls only 2.497825 0.876614 56.676553 2.8494 0.006096 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) lrt schgndbo ## lrt 0.006 ## schgndbyson -0.469 0.006 ## schgndgrlso -0.599 -0.004 0.281 ## 檢驗新增的學校種類 schgend 是否對應該加入模型。 mod2&lt;- update(Fixed_reml1, . ~ . - schgend) anova(Fixed_reml1, mod2) ## Data: gcse_selected[gcse_selected$school != 48, ] ## Models: ## mod2: gcse ~ lrt + (1 | school) ## Fixed_reml1: gcse ~ lrt + schgend + (1 | school) ## npar AIC BIC logLik deviance Chisq Df Pr(&gt;Chisq) ## mod2 4 28045.1 28070.4 -14018.6 28037.1 ## Fixed_reml1 6 28041.1 28079.0 -14014.6 28029.1 8.01852 2 0.018147 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## 求 Fixed_reml1 的似然 logLik(Fixed_reml1) ## &#39;log Lik.&#39; -14016.32 (df=6) 增加了學校類型在固定效應部分時，隨機效應的標準差從錢一個模型的 3.07 降低到這裏的 2.92。這個變量本身，從最後的模型比較也能看出，對模型的貢獻是有意義的 (p=0.018)。當然從隨機截距模型的輸出結果可以看出，學校類型的這一變量中，可能只有”女校”這一細分部分提供了足夠的效應。這裏的隨機截距模型的REML似然是 (restricted log-likelihood = -14016) 75.7.5 擬合隨機截距隨機斜率模型，固定效應部分的 lrt 也加入進隨機效應部分。 Fixed_reml2 &lt;- lmer(gcse ~ lrt + schgend + (lrt | school), data = gcse_selected[gcse_selected$school !=48, ], REML = TRUE) ## Warning in checkConv(attr(opt, &quot;derivs&quot;), opt$par, ctrl = control$checkConv, : Model failed to ## converge with max|grad| = 0.0350846 (tol = 0.002, component 1) summary(Fixed_reml2) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: gcse ~ lrt + schgend + (lrt | school) ## Data: gcse_selected[gcse_selected$school != 48, ] ## ## REML criterion at convergence: 27988.8 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.83030 -0.63006 0.03247 0.68532 3.41673 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## school (Intercept) 8.225497 2.86801 ## lrt 0.014907 0.12209 0.582 ## Residual 55.399136 7.44306 ## Number of obs: 4057, groups: school, 64 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) -1.09738 0.49633 63.43058 -2.2110 0.030648 * ## lrt 0.55823 0.02006 56.33412 27.8279 &lt; 2.2e-16 *** ## schgendboys only 1.04115 0.99660 57.45922 1.0447 0.300536 ## schgendgirls only 2.71117 0.78166 54.10008 3.4685 0.001035 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) lrt schgndbo ## lrt 0.320 ## schgndbyson -0.443 0.011 ## schgndgrlso -0.566 0.011 0.284 ## optimizer (nloptwrap) convergence code: 0 (OK) ## Model failed to converge with max|grad| = 0.0350846 (tol = 0.002, component 1) logLik(Fixed_reml2) ## &#39;log Lik.&#39; -13994.393 (df=8) 當截距 (不同學校之間， gcse 的起點)，斜率 (不同學校之間 lrt 和 gcse 之間的關系的斜率) 均可以有隨機性以後，lrt 的斜率雖然仍然保持不變 \\(=0.56\\)，但是它的隨機效應標準差變成了 \\(=0.12\\)，隨機截距的標準差也保持不變 \\(=2.88\\)，這二者之間的相關系數是 \\(=0.58\\)。第一階層隨機殘差標準也有了微妙的變化 \\(7.52 \\rightarrow 7.44\\)，此模型的限制性對數似然 (restricted log-likelihood) 是 -13994.393 (df=8)。 75.7.6 通過上面幾個模型計算獲得的似然，嘗試檢驗隨機斜率標準差，以及該標準差和隨機截距標準差的協相關是否有意義。 ranova(Fixed_reml2) ## ANOVA-like table for random-effects: Single term deletions ## ## Model: ## gcse ~ lrt + schgend + (lrt | school) ## npar logLik AIC LRT Df Pr(&gt;Chisq) ## &lt;none&gt; 8 -13994.4 28004.8 ## lrt in (lrt | school) 6 -14016.3 28044.6 43.8541 2 3.0006e-10 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # 手算的方法是這樣的 likelihood &lt;- as.numeric(-2*(logLik(Fixed_reml1) - logLik(Fixed_reml2))) 0.5*(1-pchisq(as.numeric(likelihood), df = 1)) + 0.5*(1-pchisq(as.numeric(likelihood), df = 2)) ## [1] 1.6771939e-10 似然比檢驗的統計量是 43.8，不用檢驗也知道肯定是有意義的。手算也是可以達到相同的效果。值得注意的是，R計算給出的基於自由度爲 2 的卡方分布，其實是偏保守的。注意看手算部分，其實用到了自由度爲 1 自由度爲 2 兩個卡方分布換算獲得的 p 值。 75.7.7 模型中的 schgend 改成 mean_girl 會給出怎樣的結果呢？ ## 把女生平均值放回整體數據中去 Mean_girl &lt;- NULL for (i in 1:65) { Mean_girl &lt;- c(Mean_girl, rep(Mean_gcse_lrt$mean_girl[i], with(gcse_selected, table(school))[i])) } gcse_selected$mean_girl &lt;- Mean_girl rm(Mean_girl) Fixed_reml3 &lt;- lmer(gcse ~ lrt + mean_girl + (lrt | school), data = gcse_selected[gcse_selected$school !=48, ], REML = TRUE) ## Warning in checkConv(attr(opt, &quot;derivs&quot;), opt$par, ctrl = control$checkConv, : Model failed to ## converge with max|grad| = 0.0133558 (tol = 0.002, component 1) summary(Fixed_reml3) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: gcse ~ lrt + mean_girl + (lrt | school) ## Data: gcse_selected[gcse_selected$school != 48, ] ## ## REML criterion at convergence: 27997.1 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.81956 -0.63168 0.02994 0.68439 3.43510 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## school (Intercept) 8.910673 2.98507 ## lrt 0.014913 0.12212 0.524 ## Residual 55.388586 7.44235 ## Number of obs: 4057, groups: school, 64 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) -1.280011 0.705469 63.122736 -1.8144 0.07437 . ## lrt 0.556711 0.020084 56.134042 27.7190 &lt; 2e-16 *** ## mean_girl 2.066161 1.031544 56.694088 2.0030 0.04997 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) lrt ## lrt 0.220 ## mean_girl -0.828 -0.004 ## optimizer (nloptwrap) convergence code: 0 (OK) ## Model failed to converge with max|grad| = 0.0133558 (tol = 0.002, component 1) 由於 mean_girl 其實是和 schgend 非常相似的表示學校層面的男女生性別比例的變量，所以這個模型的結果其實和前一個給出的隨機效應標準差的估計都很接近。 75.7.8 現在我們把注意力改爲關心學校編號爲 48 的學校的情況。用且禁用它一所學校的數據，擬合一個簡單線性回歸，結果變量是 gcse，解釋變量是 lrt。 gcse_selected[gcse_selected$school ==48, ] ## # A tibble: 2 × 7 ## school student gcse lrt girl schgend mean_girl ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 48 1 -7.00 -3.73 1 girls only 1 ## 2 48 2 -1.29 -4.55 1 girls only 1 school48lm &lt;- lm(gcse ~ lrt, data = gcse_selected[gcse_selected$school ==48, ]) summary(school48lm) ## ## Call: ## lm(formula = gcse ~ lrt, data = gcse_selected[gcse_selected$school == ## 48, ]) ## ## Residuals: ## ALL 2 residuals are 0: no residual degrees of freedom! ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -32.7221 NaN NaN NaN ## lrt -6.9018 NaN NaN NaN ## ## Residual standard error: NaN on 0 degrees of freedom ## Multiple R-squared: 1, Adjusted R-squared: NaN ## F-statistic: NaN on 1 and 0 DF, p-value: NA 由於 48 號學校只有兩個數據點，所以強行進行簡單線性回歸的結果，就是擬合了一條通過這兩個點的直線，截距是-32.7，斜率是 -6.9，且沒有任何估計的誤差。 75.7.9 這次不排除 48 號學校，擬合所有學校的數據進入 Fixed_reml2 模型中去，結果有發生顯著的變化嗎？ Fixed_reml2 &lt;- lmer(gcse ~ lrt + schgend + (lrt | school), data = gcse_selected, REML = TRUE) ## Warning in checkConv(attr(opt, &quot;derivs&quot;), opt$par, ctrl = control$checkConv, : Model failed to ## converge with max|grad| = 0.00818526 (tol = 0.002, component 1) summary(Fixed_reml2) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: gcse ~ lrt + schgend + (lrt | school) ## Data: gcse_selected ## ## REML criterion at convergence: 28001.4 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.83122 -0.63095 0.03275 0.68533 3.41855 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## school (Intercept) 8.248852 2.87208 ## lrt 0.014968 0.12234 0.581 ## Residual 55.376790 7.44156 ## Number of obs: 4059, groups: school, 65 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) -1.099128 0.496903 63.306279 -2.2120 0.030586 * ## lrt 0.558013 0.020081 56.230705 27.7876 &lt; 2.2e-16 *** ## schgendboys only 1.041048 0.997647 57.338661 1.0435 0.301095 ## schgendgirls only 2.672800 0.779708 54.625666 3.4280 0.001163 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) lrt schgndbo ## lrt 0.321 ## schgndbyson -0.443 0.011 ## schgndgrlso -0.569 0.010 0.285 ## optimizer (nloptwrap) convergence code: 0 (OK) ## Model failed to converge with max|grad| = 0.00818526 (tol = 0.002, component 1) 可以看到，即使我們加入這個數據量極少的一個學校的數據，對結果也沒有太大的影響。 75.7.10 計算這個模型的第二階級(level 2, school level)的殘差。 School_res &lt;- HLMdiag::hlm_resid(Fixed_reml2, level = &quot;school&quot;, include.ls = FALSE) epiDisplay::summ(School_res) ## ## No. of observations = 65 ## ## Var. name obs. mean median s.d. min. max. ## 1 school ## 2 .ranef.intercept 65 0 0.11 2.65 -6.25 5.83 ## 3 .ranef.lrt 65 0 0 0.1 -0.19 0.33 School_res[48, ] ## # A tibble: 1 × 3 ## school .ranef.intercept .ranef.lrt ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 48 -0.739 -0.0147 隨機截距的殘差估計範圍在 -6.25 和 5.83 之間，隨機斜率殘差估計範圍在 -0.19 和 0.33 之間。其中 48 號學校的擬合後截距和斜率分別是 -0.74 和 -0.02。48 號學校在這個模型中估計的截距和斜率，與我們單獨對它一所學校擬合模型時的結果大相徑庭。這是因爲在總體的混合效應模型中，該學校的數據被拉近與總體的平均水平。 圖 75.7: Q-Q plots of school level intercept and slope (unstandardized) residuals 圖 75.7 顯示標準化前的隨機效應部分的殘差表現尚可接受。 75.7.11 計算這個模型的第一階級(level 1, student)殘差，分析其分布，查看第48所學校的殘差表現如何。 Fixed_reml2 &lt;- lme(fixed = gcse ~ lrt + schgend, random = ~ lrt | school, data = gcse_selected, method=&quot;REML&quot;) # for extracting standardized level 2 error gcse_selected$ehat &lt;- residuals(Fixed_reml2, level = 1, type = &quot;normalized&quot;) with(gcse_selected, epiDisplay::summ(ehat, graph = FALSE)) ## obs. mean median s.d. min. max. ## 4059 0 0.033 0.989 -3.831 3.419 # 48 號學校的標準化殘差並不顯得異常 gcse_selected$ehat[gcse_selected$school == 48] ## 48 48 ## -0.780061286 0.046827767 圖 75.8: Histogram and Q-Q plots of elementary level (pupil) standardized residuals "],["longitudinal1.html", "第 76 章 縱向研究數據 longitudinal data 1 76.1 固定測量時刻 fixed occasions 76.2 不固定測量時刻 variable occasions 76.3 預測軌跡 predicting trajectories 76.4 Practical 05-Hier", " 第 76 章 縱向研究數據 longitudinal data 1 本章我們來把目前爲止了解的混合效應 (截距/斜率) 模型應用到一種特殊形態的數據 – 縱向研究數據 – 中去。 縱向數據，是一種前瞻性收集的來的數據，它隨着時間的推移，在不同的時間點對相同的觀察對象進行數據的採集。每個研究對象被收集數據時的時間點，可以是相同的，也可以是不同的。在很多臨牀實驗中，患者被觀察隨訪，並且常常在同樣的時間點收集數據，所以在臨牀實驗的特殊形態下，每個患者收集數據的時間點可以做到統一，這樣的縱向研究數據是屬於固定測量時刻的類型 (fixed occasions)。但是在流行病學等觀察性研究中獲得的數據，就沒有這麼幸運，他們通常測量收集數據的時間點就不太可能保持一致，收集時間點不一致的縱向數據屬於不固定測量時刻的類型 (variable occasions)。 縱向數據英文名是 longitudinal data，它的常見別的名稱是 重復測量數據 (repeated measures data)，計量經濟學中叫做面板型數據 (panel data)，或者是時間序列橫斷面研究數據 (cross sectional time series data)。所以在縱向數據這種特殊形態的的嵌套式數據結構中，第二層級結構就是一個個的個體，第一層級結構，就是每個個體在不同的時間點獲得的測量值。除了和前面幾章討論過的嵌套式數據結構相似可以應用混合效應模型，縱向數據還有一些自己獨特的性質需要加以考量: 層內數據的相關性結構是有測量時間的先後順序的; 之前討論的嵌套式結構數據在層內的觀察值則沒有嚴格的時間或者大小的排序 (例如同一所學校的不同學生); 換句話說，層內相關系數 (intra-class correlation) 很難被認爲是相似或者相同的。 76.1 固定測量時刻 fixed occasions 對於臨牀試驗中固定時刻隨訪收集到的病人數據，理想狀態下應該是一種平衡數據 (balanced data)。也就是在不同時間 \\(t_i , i = 1, \\cdots, n\\) 我們成功收集到所有患者的所有數據，所以每層 (名患者) 擁有的時間序列數據的樣本量是相同的 \\(n_j = n, \\forall j\\)。 如同分析其他類型的數據一樣，分析縱向數據也要從描述數據開始。如果是平衡數據，描述性分析就很容易，當有缺失值時，分析就變得有些棘手。例如，我們可以計算每個時間點的平均值作爲所有患者的 “平均特質 average profiles”。或者也可以用每個人的時間序列數據對時間做簡單線性回歸模型，從而獲取每個個體的截距和斜率。 76.1.1 缺失值 Missing data 當縱向數據中存在一些缺失值，即使你在計算一些簡單的歸納性分析，也要特別特別特別地小心。如果不是所有人都有全部測量時間點的數據的話，總體的平均特徵數據分析了也沒有太大的卵用，因爲缺失值導致這樣計算獲得的並不是真實的平均值 (也因爲不同的患者，貢獻了不同時間點的數據，沒辦法平均)。 如果存在缺失值，那麼當且僅當這些缺失值和觀測值 \\(Y\\) 之間沒有關系時，才能認爲這些簡單計算和簡單模型的建立是不帶有偏倚的。如果說，有些缺失值確實是根據觀測數據有選擇性地缺失 (the mechanism driving the selection depends on measured data)，隨機效應模型的建立可以自動化校正這樣的缺失，從而保證估計無偏。 根據觀測數據選擇性地出現缺失值的機制被叫做隨機缺失 (Missing at random, MAR)。 76.1.1.1 隨機截距模型 random intercept model 復合對稱模型 compound symmetry model， 是常見的一種用於重復測量數據的模型，它是基於隨機截距模型的一種擴展模型。 當模型中沒有解釋變量時， \\[ \\begin{equation} Y_{ij} = \\mu_i + u_{0j} + e_{ij} \\end{equation} \\tag{76.1} \\] 其中， \\(i\\) 是測量時刻; \\(j\\) 是實驗的個體; \\(\\mu_i\\) 是測量時刻 \\(i\\) 時的平均截距 – 這是一個固定效應。 爲了擬合這個模型，我們需要先生成一系列的啞變量用來表示不同的測量時刻: \\[ Y_{ij} = \\sum_{h=1}^n\\beta_{0h} I_{i = h,j} + u_{0j} + e_{ij} \\] 其中， \\(I_{i = h,j}\\) 是用於表示第 \\(j\\) 名患者的 \\(i\\) 次觀測值，在第 \\(h\\) 次測量時是否被測量到的啞變量。 該模型暗示同一個患者收集到的不同時刻的觀察數據是可以互換的，有相同的協方差 \\[ \\begin{aligned} \\text{Cov}(Y_{1j} , Y_{2j}) &amp; = \\text{Cov}(u_{0j} + e_{1j}, u_{0j} + e_{2j}) \\\\ &amp; = \\sigma^2_{u_{00}} \\end{aligned} \\] 該模型還有另一個暗示是，不同患者之間任意時間點的兩個觀察數據之間是相互獨立的 \\[ \\begin{aligned} \\text{Cov}(Y_{1j}, Y_{2j*}) &amp; = \\text{Cov}(u_{0j} + e_{1j}, u_{0j*} + e_{2j*}) \\\\ &amp; = 0 \\end{aligned} \\] 所以當沒有缺失值時，數據是固定測量時刻 (fixed occation) 的數據也是是平衡數據，那麼每一個患者 (第二層級數據) 的觀察值可以寫作是一個向量 \\(\\{ \\mathbf{Y}_{ij} \\}\\)，每名患者的觀察值向量的長度都是相同的 \\(n\\)。所以，它們的 \\(n\\times n\\) 協方差矩陣就是: \\[ \\Omega_y = \\left( \\begin{array}{cccc} \\sigma^2_{u_{00}} + \\sigma^2_e &amp; \\sigma^2_{u_{00}} &amp; \\cdots &amp; \\sigma^2_{u_{00}} \\\\ \\sigma_{u_{00}} &amp; \\sigma^2_{u_{00}} + \\sigma^2_e &amp; \\cdots &amp; \\sigma^2_{u_{00}} \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots \\\\ \\sigma^2_{u_{00}} &amp; \\sigma^2_{u_{00}} &amp; \\cdots &amp; \\sigma^2_{u_{00}} + \\sigma^2_e\\\\ \\end{array} \\right) \\] 也正是由於觀測值的協方差矩陣是如此地對稱，該模型被命名爲復合對稱模型 compound symmetric model。 Adult height measures 數據 有(閒人)花了數十年時間追蹤隨訪了近2000名女性在 26 歲，36歲，43歲，53歲時的身高。忽略掉可能存在的測量誤差，研究者想知道是否隨着年齡增加，女性的身高會縮水。這些女性在這些年齡時的身高數據總結如下: height &lt;- read_dta(&quot;../backupfiles/height.dta&quot;) epiDisplay::summ(height[, 2:5]) ## ## No. of observations = 2187 ## ## Var. name obs. mean median s.d. min. max. ## 1 ht26 1758 162.33 162.6 6.36 142.2 180.3 ## 2 ht36 1610 162.26 162.2 6.05 135.2 180 ## 3 ht43 1567 162.28 162.1 5.96 140 180 ## 4 ht53 1462 161.56 161.5 5.96 134.3 179.6 原則上每個女性在所有的時間應該都有身高測量值才對，我們暫且認爲擁有缺失測量值的時間點是完全隨機的。先計算樣本中數據完整部分的女性身高在四個時間點時的方差協方差矩陣: var(height[, 2:5], use = &quot;complete.obs&quot;) ## ht26 ht36 ht43 ht53 ## ht26 39.813400 34.758457 34.478981 34.128167 ## ht36 34.758457 34.455060 33.360413 33.086680 ## ht43 34.478981 33.360413 34.331501 32.948850 ## ht53 34.128167 33.086680 32.948850 34.215187 要給這個數據擬合混合對稱模型 (compound symmetry model)，需要先把數據從寬變長，之後爲每個測量身高的時間點生成一個啞變量，然後擬合無截距式的隨機截距模型: # 把數據格式從寬變長 hei_long &lt;- height %&gt;% gather(key, value, -id, -bw, -mht) %&gt;% separate(key, into = c(&quot;Height&quot;, &quot;H_Age&quot;), sep = 2) %&gt;% arrange(id, H_Age, bw, mht) %&gt;% spread(Height, value) # 生成四個年齡時間點數據的啞變量 hei_long &lt;- hei_long %&gt;% mutate(Age_1 = ifelse(H_Age == 26, 1, 0), Age_2 = ifelse(H_Age == 36, 1, 0), Age_3 = ifelse(H_Age == 43, 1, 0), Age_4 = ifelse(H_Age == 53, 1, 0)) M_hei &lt;- lmer(ht ~ 0 + Age_1 + Age_2 + Age_3 + Age_4 + (1 | id), data = hei_long, REML = TRUE) summary(M_hei) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] ## Formula: ht ~ 0 + Age_1 + Age_2 + Age_3 + Age_4 + (1 | id) ## Data: hei_long ## ## REML criterion at convergence: 30475.2 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -4.69990 -0.46089 -0.00475 0.45917 8.26749 ## ## Random effects: ## Groups Name Variance Std.Dev. ## id (Intercept) 35.9056 5.9921 ## Residual 1.9862 1.4093 ## Number of obs: 6397, groups: id, 1980 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## Age_1 162.34141 0.13903 2151.19110 1167.7 &lt; 2.2e-16 *** ## Age_2 162.31738 0.13977 2195.10604 1161.3 &lt; 2.2e-16 *** ## Age_3 162.19431 0.13997 2207.43546 1158.8 &lt; 2.2e-16 *** ## Age_4 161.45320 0.14041 2234.23200 1149.9 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## Age_1 Age_2 Age_3 ## Age_2 0.933 ## Age_3 0.931 0.933 ## Age_4 0.928 0.930 0.931 # 檢驗三個年齡點的身高均值是否相同用下面的方法: linearHypothesis(M_hei, c(&quot;Age_1 - Age_2 = 0&quot;, &quot;Age_1 - Age_3 = 0&quot;, &quot;Age_1 - Age_4 = 0&quot;)) ## Linear hypothesis test ## ## Hypothesis: ## Age_1 - Age_2 = 0 ## Age_1 - Age_3 = 0 ## Age_1 - Age_4 = 0 ## ## Model 1: restricted model ## Model 2: ht ~ 0 + Age_1 + Age_2 + Age_3 + Age_4 + (1 | id) ## ## Df Chisq Pr(&gt;Chisq) ## 1 ## 2 3 374.564 &lt; 2.22e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 所以，用這個模型 (符合對稱模型 compound symmetry model)，其實我是在告訴 R 軟件說，我認爲，這個數據中的女性四次測量的身高之間的方差協方差矩陣是這樣紙的 (因爲 \\(5.992^2 = 35.91; 1.409^2 = 1.99\\)): \\[ \\Omega_y = \\left( \\begin{array}{cccc} 37.90 &amp; 35.91 &amp; 35.91 &amp; 35.91 \\\\ 35.91 &amp; 37.90 &amp; 35.91 &amp; 35.91 \\\\ 35.91 &amp; 35.91 &amp; 37.90 &amp; 35.91 \\\\ 35.91 &amp; 35.91 &amp; 35.91 &amp; 37.90\\\\ \\end{array} \\right) \\] 分析這個模型第二層階級殘差，和第一層階級殘差可以計算並做圖 76.1 76.2 如下: # refit the model with lme M_hei &lt;- lme(fixed = ht ~ 0 + Age_1 + Age_2 + Age_3 + Age_4, random = ~ 1 | id, data = hei_long, method = &quot;REML&quot;, na.action=na.omit) # individual level standardized residuals ehat_st &lt;- residuals(M_hei, type = &quot;normalized&quot;, level = 1) # extract the EB uhat (level 2 EB residual) uhat_eb &lt;- ranef(M_hei)$`(Intercept)` # standardized level 2 residuals ### count number of measures for each women Nmeas &lt;- 4 ### shrinkage factor R = 5.992^2/(5.992^2 + 1.409^2/Nmeas) ### use shrinkage factor calculate variance of uhat_eb var_eb &lt;- R * 5.992^2 ### standardize uhat uhat_st &lt;- uhat_eb/sqrt(var_eb) 圖 76.1: Standardized cluster level residuals (intercept) from the compound symmetry model 圖 76.2: Standardized elementary level residuals from the compound symmetry model 混合對稱模型的前提假設實在是太強了 (它假定個體內的方差保持不變，且個體間的協方差也保持不變)。你我都清楚，當考慮了時間以後，同一個體在時間上比較接近的點測量之間會更相似，也更相關。 76.1.1.2 隨機參數模型 random intercept and slope model 實際上有多種方法可以放鬆混合對稱模型對方差和協方差的約束性前提，其中之一是在隨機截距模型中允許有隨機斜率成分。 使用隨機參數模型擬合縱向數據時的簡單模型如下: \\[ Y_{ij} = (\\beta_0 + u_{0j}) + (\\beta_1 + u_{1j})t_i +e_{ij} \\] 前一章討論過 (滾回 75.5)，這裏隨機參數模型的解釋變量是時間 \\(t_i\\)，導致的結果之一是觀測值的方差其實是隨着時間變化而變化的 (拋物線關系): \\[ \\begin{aligned} \\text{Var}(Y_{ij}) &amp; = \\text{Cov}(u_{0j} + u_{ij}t_i + e_{ij}, u_{0j} + u_{ij}t_i + e_{ij}) \\\\ &amp; = \\sigma^2_{u_{00}} + \\sigma^2_{u_{11}}t_i^2 + 2t_i\\sigma_{u_{01}} + \\sigma^2_e \\end{aligned} \\] 同時，同一患者不同時間測量的觀測值之間的協方差是: \\[ \\begin{aligned} \\text{Cov}(Y_{1j}, Y_{2j}) &amp; = \\text{Cov}(u_{0j} + u_{1j}t_1 + e_{1j}, u_{0j} + u_{2j}t_2 + e_{2j}) \\\\ &amp; = \\sigma^2_{u_{00}} + \\sigma^2_{u_{11}}t_1t_2 + \\sigma_{u_{01}}(t_1 + t_2) \\end{aligned} \\] 不同患者任意測量時刻之間的協方差是: \\[ \\begin{aligned} \\text{Cov}(Y_{1j}, Y_{2j*}) &amp; = \\text{Cov}(u_{0j} + u_{1j}t_1 + e_{1j}, u_{0j*} + u_{2j*}t_2 + e_{2j*}) \\\\ &amp; = 0 \\end{aligned} \\] Adult height measures 數據 利用上面的理論，來對身高數據擬合另一個混合效應模型: # 對年齡中心化到以 26 歲爲起點 hei_long &lt;- hei_long %&gt;% mutate(age = as.numeric(H_Age) - 26) M_hei_ran &lt;- lme(fixed = ht ~ age, random = ~ age | id, data = hei_long, method = &quot;REML&quot;, na.action = na.omit) #M_hei_ran &lt;- lmer(ht ~ age + (age | id), data = hei_long, REML = TRUE) summary(M_hei_ran) ## Linear mixed-effects model fit by REML ## Data: hei_long ## AIC BIC logLik ## 30382.427 30423.006 -15185.213 ## ## Random effects: ## Formula: ~age | id ## Structure: General positive-definite, Log-Cholesky parametrization ## StdDev Corr ## (Intercept) 6.158844461 (Intr) ## age 0.059929577 -0.281 ## Residual 1.259210715 ## ## Fixed effects: ht ~ age ## Value Std.Error DF t-value p-value ## (Intercept) 162.49616 0.141129788 4416 1151.39521 0 ## age -0.03158 0.002273653 4416 -13.88951 0 ## Correlation: ## (Intr) ## age -0.279 ## ## Standardized Within-Group Residuals: ## Min Q1 Med Q3 Max ## -3.9386997037 -0.4542383377 -0.0066047395 0.4297466693 5.5051619208 ## ## Number of Observations: 6397 ## Number of Groups: 1980 這個混合效應模型同時包含了隨機截距和隨機斜率兩個部分。你可以用 LRT 比較它和一個只有隨機截距的模型哪個更好，但是我們沒有辦法比較它和混合對稱模型哪個更優於擬合這個數據 (因爲他們的固定效應部分不同，在 REML 方法下實際二者擬合的數據是不同的)。這個隨機系數模型和前一個混合對稱模型都給出了身高隨着年齡增加而減少的相同結論。不同的是，隨機系數模型把同一對象內不同時間觀測值之間的等協方差的約束條件給放開了，因爲用腳趾頭想也知道同一個人不同時間測量的數據之間的協方差會隨着時間跨度不同而發生改變。 根據隨機系數模型給出的報告，計算模型估計的觀測值 (身高的4個時間點) 的方差協方差矩陣: \\[ \\begin{aligned} \\hat{\\text{Cov}}(Y_{1j}, Y_{2j}) &amp; = \\sigma^2_{u_{00}} + \\sigma^2_{u_{11}}t_1t_2 +\\sigma_{u_{01}} (t_1 + t_2) \\\\ &amp; = 6.1588^2 + 0.0599^2t_1t_2 + (-0.28)\\times6.1588\\times0.0599 (t_1 + t_2)\\\\ &amp; = 37.93 + 0.004\\times t_2 \\times t_2 - 0.104 \\times(t_1 + t_2) \\\\ \\hat{\\text{Var}} (Y_1j) &amp; = \\sigma^2_{u_{00}} + \\sigma^2_{u_{11}}t_1^2 - 2\\sigma_{u_{01}}t_1 + \\sigma_e^2 \\\\ &amp; = 37.93 + 0.004 \\times t_1^2 - 0.104\\times2\\times t_1 + 1.59 \\end{aligned} \\] 所以，當 \\(t_1 = 0, t_2 = 10, t_3 = 17, t_4 = 27\\) 時， \\[ \\mathbf{\\hat{\\Sigma}_u} = \\left( \\begin{array}{cccc} 39.52 &amp; 36.90 &amp; 36.17 &amp; 35.14 \\\\ 36.90 &amp; 37.81 &amp; 35.75 &amp; 35.07 \\\\ 36.17 &amp; 35.75 &amp; 37.03 &amp; 35.03 \\\\ 35.14 &amp; 35.07 &amp; 35.03 &amp; 36.54 \\\\ \\end{array} \\right) \\] 圖 76.3: UN-Standardized cluster level residuals (intercept and slope) from the random intercept and slope model 圖 76.4: Standardized elementary level residuals from the random intercept and slope model 76.2 不固定測量時刻 variable occasions 當重復收集的數據不是平衡數據時，意味着不同的人數據的收集時間點不一樣，我們就無法像前面那樣用協方差矩陣的方式來描述不同人不同時間點之間測量值可能存在的相關性，也沒有辦法給每個時間點所有人的數據做平均值作爲全部人的平均特質。 但是我們可以把不固定測量時刻的不平衡數據看作是受缺失值數據影響的平衡數據 (unbalanced data can be thought of as balanced data affected by missingness)。所以需要特別小心謹慎，因爲用線性混合效應模型擬合這樣的數據，其實是在含蓄地假設那些應該出現但是沒有出現的測量值的缺失是隨機的。 Asian growth data 實例 在本部分開頭的章節介紹過，這是一個收集了亞洲兒童在 6 周，8 個月，12 個月，和 27 個月大時的體重數據。 圖 76.5: Growth profiles of boys and girls in the Asian growth data 如圖 76.5 所示，觀察男孩女孩的體重隨着時間的變化，似乎暗示男孩子體重增加的速度較高，且男孩中體重增加的差異 (方差) 似乎也較女孩子的體重增加曲線來得大。另外，體重和年齡的關系並不是線性的，而且，這些數據中有缺失值。 隨機截距模型 第一個想到的合適模型應該包括一個隨機截距，一個固定效應的線性和拋物線性的年齡項，還有最後一個啞變量用以區分男孩和女孩: \\[ Y_{ij} = (\\beta_0 + u_{0j}) + \\beta_1t_{ij} + \\beta_2 t_{ij}^2 + \\beta_3 \\text{girl}_j + e_{ij} \\] 在 R 裏擬合這個模型: growth &lt;- growth %&gt;% mutate(age2 = age^2) M_growth &lt;- lme(fixed = weight ~ age + age2 + gender, random = ~ 1 | id, data = growth, method = &quot;REML&quot;, na.action = na.omit) summary(M_growth) ## Linear mixed-effects model fit by REML ## Data: growth ## AIC BIC logLik ## 565.93442 585.54157 -276.96721 ## ## Random effects: ## Formula: ~1 | id ## (Intercept) Residual ## StdDev: 0.85945071 0.73940625 ## ## Fixed effects: weight ~ age + age2 + gender ## Value Std.Error DF t-value p-value ## (Intercept) 3.7992533 0.21210411 128 17.9122095 0.0000 ## age 7.8173952 0.29051698 128 26.9085652 0.0000 ## age2 -1.7054785 0.10891077 128 -15.6594104 0.0000 ## genderGirls -0.7341374 0.23590992 66 -3.1119397 0.0027 ## Correlation: ## (Intr) age age2 ## age -0.579 ## age2 0.509 -0.970 ## genderGirls -0.549 -0.009 0.008 ## ## Standardized Within-Group Residuals: ## Min Q1 Med Q3 Max ## -2.320321237 -0.444855166 0.024075779 0.446113187 3.991809168 ## ## Number of Observations: 198 ## Number of Groups: 68 ## 由於樣本量較小，這裏如果使用極大似然法估計 ML，結果就和 REML 估計的隨機效應的方差部分不太相同 M_growthml &lt;- lme(fixed = weight ~ age + age2 + gender, random = ~ 1 | id, data = growth, method = &quot;ML&quot;, na.action = na.omit) summary(M_growthml) ## Linear mixed-effects model fit by maximum likelihood ## Data: growth ## AIC BIC logLik ## 556.32603 576.05563 -272.16301 ## ## Random effects: ## Formula: ~1 | id ## (Intercept) Residual ## StdDev: 0.84433851 0.73390172 ## ## Fixed effects: weight ~ age + age2 + gender ## Value Std.Error DF t-value p-value ## (Intercept) 3.7997442 0.21160249 128 17.9569922 0.0000 ## age 7.8161949 0.29116479 128 26.8445748 0.0000 ## age2 -1.7050759 0.10915202 128 -15.6211122 0.0000 ## genderGirls -0.7340920 0.23465616 66 -3.1283729 0.0026 ## Correlation: ## (Intr) age age2 ## age -0.582 ## age2 0.511 -0.970 ## genderGirls -0.548 -0.009 0.008 ## ## Standardized Within-Group Residuals: ## Min Q1 Med Q3 Max ## -2.340993892 -0.446771161 0.028578899 0.450565995 4.026706851 ## ## Number of Observations: 198 ## Number of Groups: 68 隨機截距和斜率模型 此時我們再來用相同的數據擬合混合效應模型，現在允許線性年齡的斜率有隨機變化: M_growth_mix &lt;- lme(fixed = weight ~ age + age2 + gender, random = ~ age | id, data = growth, method = &quot;REML&quot;, na.action = na.omit) summary(M_growth_mix) ## Linear mixed-effects model fit by REML ## Data: growth ## AIC BIC logLik ## 533.95003 560.0929 -258.97502 ## ## Random effects: ## Formula: ~age | id ## Structure: General positive-definite, Log-Cholesky parametrization ## StdDev Corr ## (Intercept) 0.61487746 (Intr) ## age 0.51776876 0.135 ## Residual 0.57411964 ## ## Fixed effects: weight ~ age + age2 + gender ## Value Std.Error DF t-value p-value ## (Intercept) 3.7954977 0.168145159 128 22.572744 0.0000 ## age 7.6984361 0.239853328 128 32.096433 0.0000 ## age2 -1.6577339 0.088594498 128 -18.711477 0.0000 ## genderGirls -0.5983844 0.199974732 66 -2.992300 0.0039 ## Correlation: ## (Intr) age age2 ## age -0.543 ## age2 0.502 -0.929 ## genderGirls -0.588 -0.008 0.007 ## ## Standardized Within-Group Residuals: ## Min Q1 Med Q3 Max ## -2.041884359 -0.442600626 -0.032412585 0.419399401 2.669681983 ## ## Number of Observations: 198 ## Number of Groups: 68 這裏可以看到隨機殘差 (residuals) 的標準差 (StdDev) 部分在後者(混合系數模型)中明顯變小了 \\((0.74\\rightarrow 0.54)\\)。另外，第二層級殘差和第一層級殘差 (未標準化) 如圖 76.6 和 76.7: 圖 76.6: UN-Standardized cluster level residuals (intercept and slope) from the random intercept and slope model 圖 76.7: Standardized elementary level residuals from the random intercept and slope model 76.3 預測軌跡 predicting trajectories 比較只有隨機截距模型，和隨機系數模型給出的擬合曲線是否有差異 如圖76.8，其實差異十分微小。可以用下面的 R 代碼: growth$traj2 &lt;- fitted(M_growth_mix) growth$traj1 &lt;- fitted(M_growth) G &lt;- ggplot(growth[growth$id %in% c(258,1141,3148,287),], aes(x = age, y = weight)) + geom_point(shape = 19, size = 4) + # geom_line(aes(y = traj1)) + # geom_line(aes(y = traj2), linetype = 2) + stat_smooth(method = &quot;lm&quot;, aes(y = traj1), formula = y ~ x + I(x^2), se = F, linetype = 2) + stat_smooth(method = &quot;lm&quot;, aes(y = traj2), formula = y ~ x + I(x^2), se = F) + theme(axis.text = element_text(size = 15), axis.text.x = element_text(size = 15), axis.text.y = element_text(size = 15)) + theme(axis.title = element_text(size = 17), axis.text = element_text(size = 8)) G + facet_wrap( ~ id, ncol = 2) + theme(strip.text = element_text(face = &quot;bold&quot;, size = rel(1.5))) 圖 76.8: Observed weight and predicted growth profiles of four babies in the Asian growth data 76.4 Practical 05-Hier "],["longitudinal2.html", "第 77 章 縱向研究數據 longitudinal data 2 77.1 邊際結構 marginal structures 77.2 矩陣記法 77.3 混合效應模型的一般化公式 77.4 其他可選擇的方差協方差矩陣特徵 77.5 其他要點評論 77.6 不平衡數據 77.7 Practical 06-Hier", " 第 77 章 縱向研究數據 longitudinal data 2 本章沒有代碼，學會如何用矩陣標記法寫下你的多元混合效應模型。 77.1 邊際結構 marginal structures 至此，我們接觸過的各種混合效應模型其實代表的是數據不同的邊際結構關系 (marginal relations)。 77.1.1 隨機截距模型 縱向數據中，數據可能是平衡或不平衡數據，簡單的隨機截距模型可以標記如下: \\[ Y_{ij} = (\\beta_0 + u_{0j}) + \\beta_1 t_{ij} + e_{ij} \\] 這個模型隱含着如下的條件關系 (conditional relation): \\[ \\begin{aligned} Y_{ij} | t_{ij}, u_{0j} &amp; \\sim N(\\beta_0 + \\beta_1t_{ij} + u_{0j}, \\sigma^2_e)\\\\ u_{0j}|t_{ij} &amp; \\sim N(0, \\sigma^2_u) \\\\ \\text{Var}(Y_{ij} | t_{ij}, u_{0j}) &amp; = \\sigma^2_e \\end{aligned} \\] 也就是說，觀測值 \\(Y_{ij}\\) 以時間 \\(t\\)，和隨機截距 \\(u_0\\) 爲條件的方差，只取決於 \\(\\sigma^2_e\\)。所以，屬於同一層 (同一患者不同測量時間) 的測量值，以該層 (患者) 的截距爲條件 (conditional on \\(u_j\\)) 的協方差是 \\(\\text{Cov} (Y_{ij}, Y_{i*j}|t_{ij}, t_{i*j}, u_j) = 0\\)。 \\(Y_{ij}\\) 針對 \\(u_j\\) 的邊際期望 (marginal espectation with respect to \\(u_j\\)): \\[ E(Y_{ij}|t_{ij}) = \\beta_0 + \\beta_1 t_{ij} \\] 其方差爲 \\(\\text{Var}(Y_{ij}|t_{ij}) = \\sigma^2_u + \\sigma^2_e\\)，同一層 (同一患者) 的兩個不同時刻測量值之間的邊際協方差就是 \\(\\text{Cov}(Y_{ij}, Y_{i*j}|t_{ij},t_{i*j}) = \\sigma^2_u\\)。 77.1.2 隨機系數模型 模型的數學標記是 \\[ Y_{ij} = (\\beta_0 + u_{0j}) + (\\beta_1 + u_{1j})t_{ij} + e_{ij} \\] 等同於 \\[ Y_{ij} = (\\beta_0 + \\beta_1t_{ij}) + (u_{0j} + u_{1j}t_{ij}) + e_{ij} \\] 其條件關系是 \\[ Y_{ij}|t_{ij},u_{0j},u_{1j} \\sim N( \\beta_0 + \\beta_1t_{ij} + u_{0j} + u_{1j}t_{ij}, \\sigma^2_e) \\] 其中， \\(\\mathbf{u}_j|t_{ij} \\sim N(0, \\mathbf{\\Sigma}_u)\\)，且 \\[ \\mathbf{\\sum}_{\\mathbf{u}} =\\left( \\begin{array}{cc} \\sigma^2_{u_{00}} &amp; \\sigma_{u_{01}} \\\\ \\sigma_{u_{01}} &amp; \\sigma^2_{u_{11}} \\\\ \\end{array} \\right) \\\\ \\text{Cov} (Y_{ij}, Y_{i*j}|t_{ij}, t_{i*j}, u_{oj}, u_{1j}) = 0 \\] 其所指的\\(Y_{ij}\\)的邊際分布: \\[ \\begin{aligned} E(Y_{ij}|t_{ij}) &amp; = \\beta_0 + \\beta_1t_{ij} \\\\ \\text{Var}(Y_{ij}) &amp; = \\sigma^2_{u_{00}} +2\\sigma_{u_{01}}t_{ij} + \\sigma^2_{u_{11}}t_{ij}^2 + \\sigma^2_e \\\\ \\text{Cov}(Y_{ij}, Y_{i*j}) &amp; = \\text{Cov}(u_{0j} + u_{1j}t_{ij} + e_{ij}, u_{0j} + u_{1j}t_{i*j} + e_{i*j}) \\\\ &amp; = \\sigma^2_{u_{00}} + \\sigma_{u_{01}}(t_{ij} + t_{i*j}) + \\sigma^2_{u_{11}}t_{ij}t_{i*j} \\text{ (for } i \\neq i*) \\\\ \\text{Cov}(Y_{ij}, Y_{i*j*}) &amp; = \\text{Cov}(u_{0j} + u_{1j}t_{ij} + e_{ij}, u_{0j*} + u_{1j*}t_{i*j*} + e_{i*j*}) \\\\ &amp; = 0 \\text{ (for } j \\neq j*) \\end{aligned} \\] 也就是說同一層 (同一患者) 的不同測量值之間的協方差不爲零，是時間的函數。 77.2 矩陣記法 如果數據本身是平衡數據，可以用如下的矩陣標記混合效應模型， \\(j\\) 是每個患者 (第二層級)，\\(\\mathbf{Y}_j, \\mathbf{e}_j\\) 向量被定義爲: \\[ \\begin{aligned} \\mathbf{Y}_j &amp; = \\left( \\begin{array}{c} Y_{1j} \\\\ Y_{2j} \\\\ \\cdots \\\\ \\cdots \\\\ Y_{nj} \\end{array} \\right) \\\\ \\mathbf{e}_j &amp; = \\left( \\begin{array}{c} e_{1j} \\\\ e_{2j} \\\\ \\cdots \\\\ \\cdots \\\\ e_{nj} \\end{array} \\right) \\\\ \\end{aligned} \\] 用三次測量時間 \\(t_1, t_2, t_3\\) (以簡便標記) 來繼續接下來的推導，定義矩陣 \\(\\mathbf{T}, \\mathbf{\\beta}, \\mathbf{u}_j\\): \\[ \\mathbf{T} = \\left(\\begin{array}{c} 1 &amp; t_1 \\\\ 1 &amp; t_2 \\\\ 1 &amp; t_3 \\end{array} \\right) \\\\ \\mathbf{\\beta} = \\left( \\begin{array}{c} \\beta_0 \\\\ \\beta_1 \\end{array} \\right) \\\\ \\mathbf{u}_j = \\left(\\begin{array}{c} u_{0j} \\\\ u_{1j} \\end{array} \\right) \\] 如此經過利用定義好的向量，我們就可以把模型用矩陣標記來記錄，從無窮無盡的下標中解放出來: \\[ \\mathbf{Y = T\\beta + Tu + e} \\\\ \\text{Where } \\mathbf{u} \\sim N(0, \\mathbf{\\Sigma}_u) \\\\ \\mathbf{e} \\sim N(0, \\sigma^2_e\\mathbf{I}) \\] 那麼 \\[ \\text{Var}(\\mathbf{Y}) = \\mathbf{T\\Sigma}_u\\mathbf{T}^T + \\sigma^2_e \\mathbf{I} \\] 77.3 混合效應模型的一般化公式 前面的例子用的雖然是時間做解釋變量 (縱向數據)，但是也可以推廣到一般的混合效應模型: \\[ \\mathbf{Y = T\\beta + Zu + e} \\] 其中 \\(\\mathbf{Z}\\) 是類似 \\(\\mathbf{T}\\) 的共變量矩陣。類似地，\\(\\mathbf{Y}\\) 的方差是: \\[ \\text{Var}(\\mathbf{Y}) = \\mathbf{Z\\Sigma}_u\\mathbf{Z}^T + \\mathbf{\\Sigma}_e \\\\ \\mathbf{Y} \\sim N(\\mathbf{T\\beta}, \\mathbf{Z\\Sigma}_u\\mathbf{Z}^T + \\mathbf{\\Sigma}_e ) \\] 這就是一個多元線性混合效應回歸模型，大多數情況下，\\(\\mathbf{\\Sigma}_e = \\sigma^2_e\\mathbf{I}\\)。 77.4 其他可選擇的方差協方差矩陣特徵 學會了上面的矩陣標記以後，就應該了解在這樣的多元混合效應模型中，對於層內方差，協方差矩陣的 \\(\\mathbf{\\Sigma_u}\\) 結構初步假設是相當重要的。目前爲止我們接觸過的模型的方差協方差矩陣結構列舉如下 (爲了簡便標記都用\\(3\\times3\\) 的矩陣來表示): 復合對稱結構 (compound symmetry structure - compound symmetry model) 又名爲可交換結構 (exchangeable structure) \\[ \\mathbf{\\sum}_{\\mathbf{u}} =\\left( \\begin{array}{cc} \\sigma^2_{u} + \\sigma^2_e &amp; \\sigma^2_{u} &amp; \\sigma^2_{u} \\\\ \\sigma^2_{u} &amp; \\sigma^2_{u} + \\sigma^2_e&amp; \\sigma^2_{u} \\\\ \\sigma^2_{u} &amp; \\sigma^2_{u} &amp; \\sigma^2_{u} + \\sigma^2_e \\\\ \\end{array} \\right) \\] 隨機系數結構 random coefficient (RC) structure \\[ \\mathbf{\\sum}_{\\mathbf{u}} =\\left( \\begin{array}{cc} \\sigma^2_{u_{00}} + \\sigma^2_e &amp; \\sigma^2_{u_{00}} + \\sigma_{u_{01}} &amp; \\sigma^2_{u_{00}} + 2\\sigma_{u_{01}} \\\\ \\sigma^2_{u_{00}} + \\sigma_{u_{01}} &amp; \\sigma^2_{u_{00}} + 2\\sigma_{u_{01}} + \\sigma^2_{u_{11}} + \\sigma^2_e&amp; \\sigma^2_{u_{00}} + 3\\sigma_{u_{01}} + 2\\sigma^2_{u_{11}} \\\\ \\sigma^2_{u_{00}} + 2\\sigma_{u_{01}} &amp; \\sigma^2_{u_{00}} + 3\\sigma_{u_{01}} + 2\\sigma^2_{u_{11}} &amp; \\sigma^2_{u_{00}} + 4\\sigma_{u_{01}} + 4\\sigma^2_{u_{11}}+\\sigma^2_e \\\\ \\end{array} \\right) \\] 除了這兩個結構以外其他常見方差寫方差結構還有: 自回歸結構 (autoregressive structure): \\[ \\frac{\\phi}{1-\\alpha^2} \\left(\\begin{array}{ccc} 1 &amp; \\alpha &amp; \\alpha^2 \\\\ \\alpha &amp; 1 &amp; \\alpha \\\\ \\alpha^2 &amp; \\alpha &amp; 1 \\end{array} \\right) \\] 無固定結構 (unstructure): \\[ \\left(\\begin{array}{ccc} \\sigma_{11} &amp; \\sigma_{12} &amp;\\sigma_{13} \\\\ \\sigma_{21} &amp; \\sigma_{22} &amp;\\sigma_{23} \\\\ \\sigma_{31} &amp; \\sigma_{32} &amp;\\sigma_{33} \\end{array} \\right) \\] 最後不要忘記了還有完全獨立結構 (不需要任何復雜模型或校正其數據間的依賴性): \\[ \\sigma^2\\left(\\begin{array}{ccc} 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\end{array} \\right) \\] 77.5 其他要點評論 各種結構模型之間的相互比較 似然比檢驗法 the likelihood ratio test (LRT) 前提是模型的固定結構不發生改變，兩個嵌套式模型之間的比較是可以使用死然比檢驗的。缺點是統計學效能可能不太理想 (low power) 模型的比較指標 information criteria 就算是同一個數據，如果不同的協方差結構矩陣模型的固定效應部分也不同，似然比檢驗也不使用，這時候應該求助於赤池信息量 (Akaike’s Information Criterion, AIC)，或者貝葉斯信息量 (Bayesian Criterion, BIC) 的比較。這兩個信息量都是使用的模型的似然減去相應模型的參數數量作爲評判標準。差別是 BIC 對參數的調整更加大些。但是，沒人可以保證這些信息會永遠相互認證，他們可能出現互相矛盾，也沒人可以保證使用這些信息的比較可以證明你的模型是”最佳”模型。 77.6 不平衡數據 有缺失值的數據，我們無法使用已知的協方差結構矩陣; 隨機效應模型，隨機系數模型可以用於不平衡數據，所以即使有缺失值，我們可以從混合效應模型的結果來推測數據暗示我們數據中存在着怎樣的協方差結構; 77.7 Practical 06-Hier "],["longitudinal3.html", "第 78 章 縱向研究數據 longitudinal data 3 78.1 第一層級的異質性 level 1 heterogeneity 78.2 第二層級異質性 level 2 heterogeneity 78.3 分析策略 78.4 Practical 07-Hier", " 第 78 章 縱向研究數據 longitudinal data 3 78.1 第一層級的異質性 level 1 heterogeneity 目前爲止，我們使用討論過的模型，其實還默認另一個前提條件: 第一層級和第二層級的隨機誤差的方差是固定不變的 (level 1 and level 2 error variance are constant)。但是實際上我們可以把這個條件放寬，讓模型允許第一層級隨機誤差的方差根據某個解釋變量而不同，使得模型更加接近數據，這種模型被命名爲 復雜第一層級方差模型 (complex level 1 variation)。下面繼續使用 Asian growth data 來做說明。該數據測量了幾百名亞洲兒童在0-3歲之間幾個時間點的體重。現在我們來允許其第一層級 (每一個兒童在不同時間點測量的體重) 誤差方差隨着性別的不同而變化: \\(\\sigma_e = f(\\text{gender})\\)。這裏的方程爲了防止標準差變成負的而使用對數函數: \\[ \\text{log} (\\sigma_e) = \\delta_1I_{\\text{gender = boy}} + \\delta_2I_{\\text{gender=girl}} \\] 這個加入了第一層級方差隨機性的模型在 R 裏可以這樣擬合: M_growth_l1 &lt;- lme(fixed = weight ~ age + age2 + gender, random = ~ age | id, weights = varIdent(form=~1|gender), data = growth, method = &quot;REML&quot;, na.action = na.omit) summary(M_growth_l1) ## Linear mixed-effects model fit by REML ## Data: growth ## AIC BIC logLik ## 533.06033 562.47105 -257.53016 ## ## Random effects: ## Formula: ~age | id ## Structure: General positive-definite, Log-Cholesky parametrization ## StdDev Corr ## (Intercept) 0.64492213 (Intr) ## age 0.49336370 0.129 ## Residual 0.64221192 ## ## Variance function: ## Structure: Different standard deviations per stratum ## Formula: ~1 | gender ## Parameter estimates: ## Boys Girls ## 1.00000000 0.77212888 ## Fixed effects: weight ~ age + age2 + gender ## Value Std.Error DF t-value p-value ## (Intercept) 3.8294124 0.175581116 128 21.809933 0.0000 ## age 7.6297282 0.234375571 128 32.553428 0.0000 ## age2 -1.6350689 0.086535227 128 -18.894836 0.0000 ## genderGirls -0.6043803 0.204516525 66 -2.955166 0.0043 ## Correlation: ## (Intr) age age2 ## age -0.523 ## age2 0.471 -0.930 ## genderGirls -0.630 0.011 0.008 ## ## Standardized Within-Group Residuals: ## Min Q1 Med Q3 Max ## -1.972410872 -0.451503892 -0.063191949 0.468696888 2.959946354 ## ## Number of Observations: 198 ## Number of Groups: 68 # 和之間默認男女兒童的誤差方差相等時的模型做比較 # 沒有顯著差異 (p = 0.09) anova(M_growth_l1, M_growth_mix) ## Model df AIC BIC logLik Test L.Ratio p-value ## M_growth_l1 1 9 533.06033 562.47105 -257.53017 ## M_growth_mix 2 8 533.95003 560.09290 -258.97501 1 vs 2 2.8897013 0.0891 78.2 第二層級異質性 level 2 heterogeneity 我們還可以在模型中允許第二層級的結構不一樣，這等同於認爲這是一個三個層級的模型，其中第二層級分裂成男孩和女孩。 M_growth_l2 &lt;- lme(fixed = weight ~ age + age2 + gender, random = ~ age*gender | id, data = growth, method = &quot;REML&quot;, na.action = na.omit) summary(M_growth_l2) ## Linear mixed-effects model fit by REML ## Data: growth ## AIC BIC logLik ## 539.92465 588.94252 -254.96233 ## ## Random effects: ## Formula: ~age * gender | id ## Structure: General positive-definite, Log-Cholesky parametrization ## StdDev Corr ## (Intercept) 0.55670445 (Intr) age gndrGr ## age 0.69451371 0.037 ## genderGirls 0.85253918 -0.550 -0.002 ## age:genderGirls 0.72521221 -0.095 -0.948 0.130 ## Residual 0.56947521 ## ## Fixed effects: weight ~ age + age2 + gender ## Value Std.Error DF t-value p-value ## (Intercept) 3.8204365 0.160115142 128 23.860557 0.0000 ## age 7.6149746 0.235176590 128 32.379815 0.0000 ## age2 -1.6464243 0.087451598 128 -18.826692 0.0000 ## genderGirls -0.6088239 0.203186644 66 -2.996377 0.0038 ## Correlation: ## (Intr) age age2 ## age -0.543 ## age2 0.520 -0.945 ## genderGirls -0.531 -0.048 0.011 ## ## Standardized Within-Group Residuals: ## Min Q1 Med Q3 Max ## -2.0240470178 -0.4399958485 -0.0095446614 0.4564976943 2.7439570489 ## ## Number of Observations: 198 ## Number of Groups: 68 growth &lt;- growth %&gt;% mutate(boy = as.numeric(gender == &quot;Boys&quot;), girl = as.numeric(gender == &quot;Girls&quot;)) %&gt;% mutate(age_boy = age*boy, age_girl = age*girl) #M &lt;- lmer(weight ~ age + age2 + girl + (age_boy |id) + (age_girl| id), data = growth, REML = TRUE) #growth &lt;- growth %&gt;% # mutate(boy = ifelse(gender == &quot;Boys&quot;, 1, 0), # girl = ifelse(gender == &quot;Girls&quot;, 1, 0), # age_boy = age*boy, # age_girl = age*girl) #M_growth_l22 &lt;- lme(fixed = weight ~ age + age2 + girl, # random = list( ~ girl + age_girl | id, # ~ boy + age_boy | id), # data = growth, method = &quot;REML&quot;, na.action = na.omit) #summary(M_growth_l22) M_growth &lt;- lme(fixed = weight ~ age + age2 + gender, random = ~ age|id, data = growth, method = &quot;REML&quot;,na.action = na.omit) anova(M_growth_l2, M_growth) ## Model df AIC BIC logLik Test L.Ratio p-value ## M_growth_l2 1 15 539.92465 588.94252 -254.96233 ## M_growth 2 8 533.95003 560.09290 -258.97501 1 vs 2 8.0253784 0.3304 78.3 分析策略 進行統計建模之前，請思考你想從數據中探尋什麼問題的答案? 是想了解某一個共變量在層內 (同一個體不同時間，或者統一學校不同學生之間) 的條件效應 (conditional effect)? 是想探索層內和層間數據的變化程度? 是想了解一個共變量的邊際效應 (marginal effect) 嗎? 如果是 1 或 2 兩個問題的話，請使用混合效應模型。如果是 1，但是那個共變量卻不是定義於層水平的，那就只好放棄回到簡單的固定效應模型。如果是 3，需要考慮使用 GEE。 78.3.1 模型選擇和建模步驟 詳細請參考 (Verbeke 1997)。 當擬合一個混合效應模型時，意味着均值的結構和協方差的結構可以被確定 (an appropriate mean structure as well as covariance structure is specified)。協方差結構，解釋了均值結構無法解釋的數據隨機變化，所以二者之間彼此高度互相依賴。另外，適當的協方差模型對於用數據進行人羣參數的有效統計推斷過程是必不可少的。 第一步: 由於固定效應部分不能完美解釋數據的變異，所以協方差結構就是用來輔助解釋這部分數據變異的輔助工具。建模的起點就應該是，先建立一個飽和 (甚至是過飽和 overelaborated) 的模型給均值結構 (固定效應部分)，從而確保之後要增加的隨機效應部分不受固定效應部分的擬合錯誤影響。所以，開始建模時，要先把所有可能考慮到的固定效應全部加入模型中去 (包括連續變量的二次方形式/或其他非線性關系，包括所有變量之間的交互作用)。這樣做其實是使用過度飽和的參數使得均值結構在模型中盡量在後面加入隨機效應之前保持不變。在可選的那些數據結構中，我們也應當考慮到數據中不同層級結構可能存在的異質性。要注意的是，隨機效應部分，不能也不應該在沒有把所有可能的一次方程結構都考慮進去之後 (a random effect for the linear effect of time)，就上馬二次方程/或更高次方程的隨機效應(a random effect for the quadratic effect of time)。 然後我們把飽和模型的殘差 (residuals)，異常值 (outliers)，擬合值 (fitted values)，和可能的 (potential) 隨機效應模型作出的這些殘差，異常值，擬合值之間進行比較。 第二步: 一旦你在飽和模型的條件下，確認好了隨機效應應該有的形式，接下來就是逐步精簡模型固定效應部分的過程: 用 Wald 檢驗 (當使用 REML 時)，或者 LRT (使用 ML 時) 來精簡化固定效應部分。 反復檢查殘差，異常值，以及擬合值跟觀測值 使用模型的預測軌跡和觀測值的點做視覺比較 用人話把你的模型解釋給老奶奶聽懂 78.4 Practical 07-Hier References "],["廣義估計方程式-generalized-estimating-equation.html", "第 79 章 廣義估計方程式 Generalized Estimating Equation 79.1 Practical 08-Hier", " 第 79 章 廣義估計方程式 Generalized Estimating Equation 79.1 Practical 08-Hier "],["cluster-ana.html", "第 80 章 聚類分析 Cluster analysis/unsupervised learning 80.1 聚類分析過程", " 第 80 章 聚類分析 Cluster analysis/unsupervised learning 目前爲止，在等級回歸模型部分中，我們接觸到的回歸模型和可能存在相互依賴性的數據，都是建立在我們能夠觀察到或者實驗設計上已知的數據層級結構的前提下的。這樣的層級可以是空間上的，或者時間上的。處在相同層級的研究對象之間存在相關性，換句話說就是：層級內部的對象之間，比起層級之間的對象具有更多的相似性。 但是，在許多情況下，我們其實是無法事先知道數據的內部層級（聚類）結構的。而且我們可能需要儘可能多的獲取數據，並且從測量的數據中學習。學習數據變量與變量之間的相關性(correlation)，變量與變量之間的協方差(covariance)，個體與個體之間的相似性，從而根據獲取的數據來判斷數據內部是否存在不同的層級結構。這樣的一種對數據結構進行探索的過程，在機器學習(maching learning)中也是常常使用的，它又被叫做非監督學習 (unsupervised learning)。 之所以把這類尋找數據分類分層結構的過程叫做非監督學習，其實，是爲了和現在越來越豐富，多到令人髮指的那些被歸類於監督學習(supervised learning)的方法作爲相互對照。在監督學習中，數據內部的分層，聚類結構是事先知道的，也就是事先能夠測量或者被定義好的。事先被定義好了的數據層級結構中，我們可以使用多元變量分析，來對某些個體的特徵加以分類，也就是給數據中的未知成員分配已知的分組的過程。 在醫學中常見的非監督學習過程實例之一是，對於一個（全部相同疾病的）隊列研究中的受試者進行了大量的生物標幟物(biomarker)的測量與收集，可以是血液樣本的 biomarker 的測量，也可以是每名受試者的全部DNA信息。研究者希望通過這些患者的信息對他們進行同一疾病不同等級（類別，或者進程）的分類。那麼研究者需要利用這些收集來的患者信息，建立一套儘可能完善的分類的系統。 另外一個例子是，我們收集了前列腺癌患者的前列腺組織，利用基因轉錄組學 (transcriptomics) 的方法測量了每名患者成千上萬的組織內基因表達。研究者希望通過這些數據來分析，提取，並且分辨這些前列腺癌患者中可能存在的分類，或者亞型。研究者也希望知道這些分析獲得的亞型，是否會和某些已知的癌症的亞型相似或者相重合。 在商業領域中，聚類分析也是不罕見的。例如你爲某商業公司工作，那麼食品供應商可能會上門來要求你把購買食物的顧客進行類別區分，從而提供給食物供應商們一些線索，讓他們能夠更加精準的定位廣告投放人羣。 在統計學，和機器學習領域中，有許多不同的手法，可以用來輔助建立這種分類的規則，它們通常又被叫做判別分析法(discriminant analysis methods)。我們這一章和下一章着重討論 聚類分析法 (cluster analysis) 主成分分析法 (principal component analysis) 80.1 聚類分析過程 聚類分析法是一種分析不同統計測量值之間相似/差異程度的描述性分析過程。 爲什麼我們總是想對具有相似性質的事物進行歸類？其實，對事物進行區分和歸類，或者打上一些標籤，是人類文明在學習並且理解周圍的世界，從而促進科學發展的核心問題之一。在原始社會，對相似事物進行歸類有時候甚至事關生死。例如人類最初需要判定某些食物的共同特徵，區分哪些是含有毒性的，哪類動物可能是兇猛殘忍的。我們從嬰兒時期開始學習語言，學習事物/事件/人物的名稱，這其實也是一個學習對周圍的世界進行區分的學習過程。古代希臘文明的先賢哲學家亞里士多德曾經主張，人類的本能之一，就是不停地想對這個我們生活的世界發生的事情看到的事物進行類別的區分，尋找相似的特徵，區別不一樣的性質。在生物學中，甚至有由亞里士多德的學生泰奧夫拉斯托斯(Theophrastos)創立的專門對生物進行分類的學科，生物分類學 (taxonomy)，後被瑞典人生物學家卡爾林納斯 (Carl Linnaeus)進一步發揚光大。18世紀末，Michel Adanson又爲人類引入了多元分析(polythetic)的分類系統概念，取代了之前使用單一因素(monothetic)對事物進行簡單分類的思想。很顯然，生物分類學在人類文明史中扮演了重要的角色。你應該很容易能想到達爾文提出的進化論，就是建立在前人對動植物進行了事無鉅細的分類和整理的基礎之上建立起來的重大理論突破。俄國科學家門捷列夫發現化學元素週期性，並且製作出了世界上第一章元素週期表，也爲人類理解原子世界奠定了基石。 在對事物進行分類這個任務上，聚類分析(cluster analysis)，和判別分析是相同的。有時候在已知對象的分類情況時我們仍然傾向於使用聚類分析的方法，用它來描述數據的一些特徵。同時也能有助於判定之後可能進行的判別分析是否準確。 簡單歸納，對分類描述過程進行量化的主要步驟有以下幾個： 對於採集來的樣本數據 (statistical sample)，我們儘可能多的對它們的特徵變量進行測量。 根據第一步獲得的變量信息，定義一個能夠幫助我們判定對象與對象之間相似點或者不同程度的測量指標。 對這個測量指標制定一個區分的規則，或者叫做歸類的標準。 對樣本進行分類。 採集更多的樣本，對分類規則進行調整和完善。 80.1.1 連續型變量 continuous variables in cluster analysis 我們想象手裏的數據是一個矩陣 \\(X\\)，它的維度是 \\(n \\times p\\)，用 \\(x_{ik}\\)，來表示第 \\(i\\) 名觀察對象 \\((i = 1, \\dots, n)\\) 的第 \\(k\\) 個變量 \\((k = 1, \\dots, p)\\) 的值。如果這些被測量的變量全部都是連續型變量的話，每個變量可以被使用幾何學的形式表達的 \\(p\\) 個維度的其中一個平面上。當然，當維度超過3時，人類的無知大腦常常就無法進行有效的想象和推理，我們這裏使用簡單的三個變量，也就是三維空間來表示三個測量獲得的連續型變量： 例如我們測量了三名學生的身高，體重，以及前臂長。數據分別是：Angelo (190, 75, 30)；Dimitris (170, 75, 25)；Soren (170, 65, 30)。 圖 80.1: A physical 3D space showing measurements of three variables. 在這個三維立體空間，我們需要定義一個變量用於丈量點與點之間的距離。其中最自然的就是歐幾里德(Euclidean)幾何距離: \\[ d_{ij} = \\{\\sum_{k = 1}^p(x_{ik} - x_{jk})^2\\}^{\\frac{1}{2}} \\] 歐幾里德幾何距離又被稱爲 L2 度量衡 (L2 metric)。按照這個距離的定義，那麼 Angelo 和 Dimitris 之間的歐幾里德幾何距離就是： \\[ \\begin{aligned} &amp; \\{(190 - 175)^2 + (75 - 75)^2 + (30 - 25)^2 \\}^{\\frac{1}{2}} \\\\ = &amp; \\sqrt{15^2 + 0^2 + 5^2} \\\\ = &amp; \\sqrt{240} = 15.5 \\end{aligned} \\] 曼哈頓距離 (Manhattan distance)：別名城市區塊度量衡 (cityblock metric)，或者L1 度量衡 \\[ d_{ij} = \\sum_{k = 1}^p |x_{ik} - x_{jk}| \\] 按照曼哈頓距離來定義的話，Angelo 和 Dimitris 之間的距離就是： \\[ |190 - 175| + |75 - 75| + |30 - 25| = 15 + 0 + 5 = 20 \\] 後來人們發現上面提到的這兩種幾何學距離其實是閔科夫斯基度量衡 (Minkowski metric) 在 L=1 和 L=2 時的特殊情況。 閔科夫斯基度量衡的一般形式表達爲: \\[ d_{ij} = \\{ \\sum_{k = 1}^p |x_{ik} - x_{jk}|^\\ell \\}^\\frac{1}{\\ell} \\] 閔科夫斯基度量衡試圖給差距較大的測量值之間增加權重用於區分彼此。不論是使用那種距離定義，這些測量距離的度量衡都具有如下的數學性質 (mathematical properties)： 兩點之間的距離大於等於零, positivity \\(d_{ij} \\geqslant 0\\)，如果 \\(d_{ij} = 0\\)，那麼對於任何一個 \\(k = 1, \\dots, p\\)，它們都是相等的 \\(x_{ik} = x_{jk}\\)。 對稱性, symmetry \\(d_{ij} = d_{ji}\\) 三角形不等性, triangle inequality \\(d_{ij} \\leqslant d_{ih} + d_{hj}\\) 80.1.2 二分類或者分類型變量之間的距離 distances for binary/categorical variables 假如變量本身並不是連續型的，那麼閔科夫斯基度量衡並不適用，因爲二分量只能取0或者1。如下表所表示的，我們把 i,j 兩名對象的所有二分類變量進行下面的歸納總結： i/j 1 0 1 a b 0 c d 其中， a 表示 i, j 兩名研究對象的二分類變量中，同時取 1 的變量的個數， b 表示 i, j 兩名研究對象的二分類變量中，i 取 1 但是 j 取 0 的變量的個數， c 表示 i, j 兩名研究對象的二分類變量中，j 取 1 但是 i 取 0 的變量的個數， d 表示 i, j 兩名研究對象的二分類變量中，同時取 0 的變量的個數。 根據這個總結表格，常用的表示兩個對象之間距離的數學度量是： 簡單匹配係數 (simple matching coefficient, SMC)，單純地計算所有的變量之中互相不一致的變量所佔的百分比： \\[d_{ij} = \\frac{b + c}{a+b+c+d}\\] 亞卡爾距離係數 (Jaccard coefficient)，則是把簡單匹配係數的分母中，d 的部分拿掉：\\[d_{ij} = \\frac{b + c}{a + b + c}\\] 其中亞卡爾距離係數更適合用於測量一些表達某些特質存在/不存在時兩名對象之間的距離測量 (see the “Difference with the simple matching coefficient (SMC)” session in the Wikipedia)。 另外值得注意的是，在測量二分類變量距離的時候，三角形不等性的特質不一定會得到滿足。 (Please note that in general for dichotomous variables, the triangle inequality does not hold.) 用來計算測量對象之間距離的方法，和度量衡其實層出不窮，這裏只是簡單介紹了幾種。其餘的還有比如說由 (Gower 1971) 提出的 Gower Index，該指標可以同時把測量有連續型變量和分類型變量，二分類變量等都包含進來。值得提醒的是，如果是討論非連續型測量值的對象距離，我們常常用它們之間的相似性(similarities) \\(s_{ij}\\)，而不太關注異質性 (dissimilarities) \\(d_{ij}\\)，但其是它們之間的簡單轉換關係就是 \\(d_{ij} = 1 - s_{ij}\\)。 80.1.3 定義分類方法 確定了用於衡量異質性 (dissimilarity) 距離的指標之後，我們就需要來定義分類的方法。首先把這個事先定下來的距離指標應用到我們的多元變量數據矩陣 (multivariate data matrix \\(\\mathbf{X}\\)) (dimension: \\(n\\times p\\), where n indicates number of people, p indicates number of observed variables). 獲得一個形狀爲 \\(n\\times n\\) 的距離矩陣 \\(\\mathbf{D}\\) (對應上面三條數學性質中的第二條，對稱性 \\(d_{ij} = d_{ji}\\))。獲得觀察對象的距離矩陣 \\(\\mathbf{D}\\) 之後需要決定的就是如何給對象進行分組的策略。該分組策略需要能使觀察對象被分組後，組內的對象相對組外對象更加相似，或者組外對象相對組內對象更加不同 (a sensible strategy would be to look for sets of units such that all units in that set are relatively similar to each other but relatively different from all units outside that set)。所以，用於分組策略的算法要有一定的可行性，它還要能夠量化對象之間的相對相似性 (relative similarity) 從而能夠完成以下任務： 決定哪些人/對象被聚類到同一組中 (which pairs of units to join together into a cluster) 每次聚類過程完成以後，重複相同的策略和算法，也就是重新計算新組成的聚類和剩餘的對象之間的距離。 循環往復前兩個步驟直至全部的對象/個體都被分到各自的聚類 (cluster)。 事實上重複上述步驟，最終會把每個個體都分配到一個單獨的聚類中，也就是每個個體本身，那其實就跟沒有做聚類分析沒有區別，也沒有意義了。於是我們需要把聚類分析的過程通過圖形的方式展示出來。這樣的圖形被叫做樹狀圖 (dendrogram)，可以在視覺上輔助我們做出要給對象分成多少個聚類的決定。在希臘語中(Greek)，dendron 是樹的意思，樹狀圖的形狀常見的如下圖 (80.2) 所示，座標軸之一是所有的觀測對象的編號，另一個座標軸則是度量每個聚類或者觀測對象個體之間的距離。 圖 80.2: Example of dendrogram vertically oriented, with 50 statistical units (average linkage method and Euclidean distance measure). 那麼回到之前如何決定聚類數量的問題上來，我們有兩種手段來輔助： 層級法 (hierarchical methods)：聚合法，agglomerative； 或者分裂法， divisive。 分區算法 (partitioning methods)。 層級法中的聚合法 (agglomerative)是指，從聚類分析的開始階段，每個獨立的對象自成一個聚類 (cluster)，所以起步於 n 個統計單位 (n statistical units)，之後的每一步聚類過程則是將度量距離相近的對象合併成爲一個聚類，直至最終所有個體歸爲唯一一個聚類。所以可以想象爲從各個枝葉彙總到一個樹幹走向各個枝葉的過程。 層級法中的分裂法 (divisive)則是和聚合法的聚類方向反過來，它起始於將所有觀察對象視爲唯一一個聚類，之後每一步聚類過程是將和大部分對象不太相似的個體從聚類中分裂出去，直至最終每個獨立的對象自成一個聚類。所以可以想象成從一個樹幹走向枝葉的過程。 分裂法其實十分消耗計算機的運算能力，因爲當樣本量較大時，一個 \\(k\\) 種聚類的步驟就需要比較 \\(2^{k-1} -1\\) 種不同的分區之間的距離。 References "],["PCA.html", "第 81 章 主成分分析 Principal Component Analysis 81.1 數據有相關性時產生的問題 81.2 最大化方差等價於最大化數據點到新座標軸“投影(projection)”的長度 81.3 數學推導 81.4 主成分分析數據實例 81.5 在PCA圖形中加入補充變量和補充個體 (supplementary elements) 81.6 Cluster analysis/PCA practical", " 第 81 章 主成分分析 Principal Component Analysis A big computer, a complex algorithm and a long time does not equal science. Robert Gentleman PCA lecture was taught by Professor Luigi Palla. 81.1 數據有相關性時產生的問題 假設我們有 \\(n\\) 個研究對象作爲樣本，我們從這些對象身上採集儘可能多的數據，假設我們一共收集了 \\(p\\) 個不同的變量。那麼這個數據的維度 (dimension) 是 \\(n \\times p\\)。 如果說，我們在這個樣本中獲取到的 \\(p\\) 個變量中，有一些是相互有依存性的，或者說相關的 (correlated)。我們有沒有辦法描述並展示這些具有相關性的變量在這個數據中扮演的角色，並且保留整個數據本身的變化特徵 (variability)？ Edgeworth (1891) 最早試圖用下面的方程來歸納一組從男性樣本身上測量獲得的存在相關性的變量：身高(H)，前臂長(F)，腿長(L)： \\[ \\begin{aligned} Y_1 &amp; = 0.16H + 0.51F + 0.39L \\\\ Y_2 &amp; = -0.17H + 0.69F + 0.09L \\\\ Y_3 &amp; = -0.15H + 0.25F + 0.52L \\end{aligned} \\] 這恐怕是最早嘗試將一組有相關性的身體測量數據整理成”不相關”的三個新變量，作爲男性身體測量指標，用於描述樣本個體的身體結構的過程。 下圖 81.1 中展示的兩個變量，\\(x_1\\) 和 \\(x_2\\) 分別是身高和體重。 圖 81.1: Standardised data of height and weight 變量經過標準化處理之後，均值 \\(\\mu = 0\\)，方差 \\(\\sigma^2 =1\\)。如果此時已知身高和體重之間的協方差 (covariance, 概念參考 Section 8.1) 是 \\(0.3\\)。 那麼，可以推導證明的是，他們的相關係數 (correlation, 概念參考 Section 8.2) 是： \\[ \\begin{aligned} Corr(X_1,X_2) &amp; = \\frac{Cov(X_1,X_2)}{SD(X_1)SD(X_2)} \\\\ &amp; =\\frac{Cov(X_1,X_2)}{\\sqrt{Var(X_1)Var(X_2)}}\\\\ &amp; = Cov(X_1,X_2) \\\\ &amp; = 0.3 \\end{aligned} \\] 以 \\(x_2\\) (體重) 爲結果變量，\\(X_1\\) (身高) 爲單一解釋變量的線性回歸模型的回歸係數 (regression coefficient \\(\\hat\\beta\\), 概念參考 Section 28.2) 是： \\[ \\begin{aligned} \\hat\\beta &amp; = \\frac{S_{x_1x_2}}{SS_{x_1x_2}} \\\\ &amp; = \\frac{CV_{x_1x_2}}{SD_{x_1}^2} \\\\ &amp; = 0.3 \\end{aligned} \\] 如果我們有另外一個座標系如下圖 81.2，從原先的座標系進行了一定角度的旋轉獲得 \\(y_1, y_2\\)。你會認爲哪個座標系更適合這個標準化之後身高體重的數據呢？ 圖 81.2: Standardised data of height and weight, with a new reference system (y_1, y_2) 其實原先 \\(x_1, x_2\\) 座標系之間存在一定的相關性，我們希望經過旋轉之後的新座標系 \\(y_1, y_2\\) 之間是垂直的 (orthogonal)，這一數學上的概念被翻譯成爲統計學的語言就是，希望旋轉之後的新座標(變量)之間沒有相關性 (uncorrelated)。爲了消滅變量之間的相關性，我們要尋找到一個旋轉的角度 \\(\\theta\\)，使得所有數據的點 \\(P_j\\) 到新的座標軸 \\(y_1\\) 之間的垂直距離(perpendicualr) \\(P_jP_j^\\prime\\) 之和最小 (minimise the distances between points and the reference axes)。如圖 81.3 顯示的那樣，從原點到每個數據點 \\(P_j\\) 之間的距離 \\(OP_j\\) 其實是固定不變的。我們希望找到新的座標使得 \\(P_jP_j^\\prime\\) 的距離最短。其中 \\(OP_j^\\prime\\) 就是數據點在新座標軸上投影的長度。 圖 81.3: Minimise the distance between the points and the reference axes. 根據勾股定理 (Pythagorean theorem)。圖 81.3 中直角三角形的三邊的長度關係可以描述爲： \\[ (OP_j)^2 = (P_jP_j^\\prime)^2 + (OP_j^\\prime)^2 \\] 把勾股定理應用到全部的數據點上的話，我們會得到一個關於所有數據點到新的座標軸距離，以及原點之間距離的方程： \\[ \\begin{equation} \\sum_j (OP_j)^2 = \\sum_j(P_jP_j^\\prime)^2 + \\sum_j(OP_j^\\prime)^2 \\end{equation} \\tag{81.1} \\] 81.2 最大化方差等價於最大化數據點到新座標軸“投影(projection)”的長度 把等式 (81.1) 兩邊同時除以數據樣本量，我們獲得等式 (81.2)： \\[ \\begin{equation} \\sum_j (OP_j)^2/n = \\sum_j(P_jP_j^\\prime)^2/n + \\sum_j(OP_j^\\prime)^2/n \\end{equation} \\tag{81.2} \\] 其中值得注意的是，等式 (81.2) 左邊的部分 \\(\\sum_j (OP_j)^2/n\\) 對於一個樣本來說是固定不變的 (constant)。於是，等式右邊的部分，當我們的目標是最小化 \\(\\sum_j(P_jP_j^\\prime)^2/n\\) 垂線 (perpendicular) 長度之和時，就等價於把數據點在新座標軸上的投影之和 \\(\\sum_j(OP_j^\\prime)^2/n\\) 最大化。說白了，數據點在新座標軸上的投影，就是新座標軸上的變量大小。所以，旋轉座標軸之後，我們希望產生的新變量 \\(y_1,y_2\\) 的方差取最大值(maximising the variance of the new data \\(\\sum_j(OP_j^\\prime)^2/n\\))。利用三角函數(假設座標軸的旋轉角度是\\(\\theta\\))，你很容易就能得到新座標軸上新變量的值： \\[ \\begin{equation} \\begin{aligned} y_1 &amp; = x_1\\cos\\theta + x_2\\sin\\theta \\\\ y_2 &amp; = -x_1\\sin\\theta + x_2\\cos\\theta \\end{aligned} \\end{equation} \\tag{81.3} \\] 證明 如圖 81.4 所示，設座標軸 \\(X_1,X_2\\) 逆時針旋轉角度爲 \\(\\theta\\)，設新座標爲 \\((y_1, y_2)\\)，且原點於點 \\(P_j (x_1, x_2)\\) 之間的連線 \\(OP_j\\) 長度爲 \\(r\\)，\\(OP_j\\) 和新座標軸 \\(y_1\\) 之間的角度爲 \\(\\alpha\\)。 圖 81.4: Rotation of the coordinates, and the new variables calculation. \\[ \\begin{aligned} (OP_j)^2 &amp; = x_1^2 + x_2^2 = y_1^2 + y_2^2 \\\\ &amp; = r^2 \\\\ \\because x_1 &amp; = r\\times\\cos(\\alpha +\\theta) \\\\ x_2 &amp; = r\\times\\sin(\\alpha + \\theta) \\\\ y_1 &amp; = r\\times\\cos(\\alpha) \\\\ y_2 &amp; = r\\times\\sin(\\alpha) \\\\ \\therefore x_1 &amp; = r[\\cos\\alpha\\cos\\theta - \\sin\\alpha\\sin\\theta] \\\\ &amp; = y_1\\cos\\theta - y_2\\sin\\theta \\\\ x_2 &amp; = r[\\sin\\alpha\\cos\\theta + \\cos\\alpha\\sin\\theta] \\\\ &amp; = y_2\\cos\\theta+y_1\\sin\\theta \\\\ \\Rightarrow x_1\\cos\\theta &amp; = y_1\\cos^2\\theta -y_2 \\sin\\theta\\cos\\theta \\\\ x_2\\sin\\theta &amp; = y_2\\cos\\theta\\sin\\theta + y_1\\sin^2\\theta \\\\ \\textbf{Sum the}&amp; \\textbf{ above two equations} \\\\ \\Rightarrow y_1 &amp; = \\frac{x_1\\cos\\theta + x_2 \\sin\\theta}{(\\cos^2\\theta + \\sin^2\\theta)} \\\\ y_1 &amp; = x_1\\cos\\theta + x_2 \\sin\\theta \\\\ \\textbf{Similarly}&amp; \\\\ \\Rightarrow x_1\\sin\\theta &amp; = y_1\\cos\\theta\\sin\\theta -y_2 \\sin^2\\theta \\\\ x_2\\cos\\theta &amp; = y_2\\cos^2\\theta + y_1\\sin\\theta\\cos\\theta \\\\ \\textbf{Take substraction}&amp; \\textbf{ between the above two equations} \\\\ \\Rightarrow y_2 &amp; = \\frac{-x_1\\sin\\theta + x_2\\cos\\theta}{(\\cos^2\\theta + \\sin^2\\theta)} \\\\ y_2 &amp; = -x_1\\sin\\theta + x_2\\cos\\theta \\end{aligned} \\] \\(y_1, y_2\\)就是旋轉後新的座標軸的變量。在這個簡單實例中，我們從原始數據 \\(x_1, x_2\\) 經過旋轉，獲得新的數據 \\(y_1, y_2\\)，他們二者之間其實只是經過了線性轉換 (linear transformation)。一般地，我們如果要給原始數據矩陣 (維度 \\(n\\times p\\))進行座標軸的數據轉換，只需要給原始數據矩陣乘以一個正方形的投影矩陣 \\(\\mathbf{P}\\) (projection matrix) (維度 \\(p\\times p\\)) (\\(p\\) 是變量的個數)即可。 當變量只有兩個 \\((p =2)\\) 時，我們很容易使用一個平面圖來理解這個轉換過程其實就是對座標軸進行幾何旋轉的過程，這時候的投影矩陣是： \\[ \\left[ \\begin{array} \\cos\\cos\\theta &amp; \\sin\\theta \\\\ -\\sin\\theta &amp; \\cos\\theta \\end{array} \\right] \\tag{81.4} \\] 經過旋轉之後獲得的新變量 \\(y_1, y_2\\) 被叫做主成分 (principal components)。主成分有什麼特徵呢？如圖 81.5 所表示的那樣，當兩個原始變量 \\(x_1, x_2\\) 之間相關係數很高，由於已知方差總和不變 \\(\\text{Var}(x_1)+\\text{Var}(x_2) = \\text{Var}(y_1) + \\text{Var}(y_2)\\)，座標旋轉之後的第一個主成分 \\(y_1\\)，將會擁有原始數據 \\(x_1, x_2\\) 的方差 (variance) 中的絕大部分。那麼理論上，我們就完成了保留數據本身的整體方差，但是把大部分方差歸納到第一個主成分中去的過程。所以，當對樣本測量了很多很多的變量的時候，我們會發現很多變量之間存在內部相關性，於是我們可以通過主成分分析來留下幾個能解釋整體數據的最主要的成分，並且保留數據的整體信息，也就是整體的方差，這是一個把數據降維 (dimension reduction) 的過程，去除掉那些冗餘的不需要的變量 (redundancy removed)。 圖 81.5: Variance of the new axis/prin 所以，PCA的過程可以描述如下： 數據如果有 \\(p\\) 個存在內部相關性的連續型變量 \\(x_1, x_2, \\dots, x_p\\)，那麼一定存在 \\(p\\) 個相互獨立的變量 (principal components)，滿足下面的條件： \\(p\\) 個相互獨立的變量分別都是原始變量 \\(x_1, x_2, \\dots, x_p\\) 的線性轉換： \\[ \\begin{aligned} y_1 &amp; = a_{11}x_1 + a_{12}x_2 + \\cdots + a_{1p}x_p \\\\ y_2 &amp; = a_{21}x_1 + a_{22}x_2 + \\cdots + a_{2p}x_p \\\\ \\vdots &amp; \\\\ y_p &amp; = a_{p1}x_1 + a_{p2}x_2 + \\cdots + a_{pp}x_p \\\\ \\end{aligned} \\] 這 \\(p\\) 個相互獨立的變量通過最大化它們對數據整體方差的貢獻獲得。 這 \\(p\\) 個相互獨立的變量被叫做這個數據的主成分變量。 這些主成分變量之間相互獨立 (uncorrelated)，並且按照他們各自對數據總體方差的貢獻度從大到小排列 (the principal components are uncorrelated and are ordered by the amount of the total system variability that they explain)： \\[ \\text{Cov}(y_j, y_k) = 0 \\text{ for any } j, k \\in [1, p] \\\\ \\text{Var}(y_1) \\geqslant \\text{Var}(y_2) \\geqslant \\text{Var}(y_3) \\geqslant \\dots \\geqslant \\text{Var}(y_p) \\] 81.3 數學推導 如果， \\(\\textbf{S}\\) 是數據的方差協方差矩陣 (variance, covriance matrix)； \\(\\textbf{P}\\) 是直角投影矩陣 (orthogonal projection matrix)，該矩陣的每一列，是旋轉之後的新變量的座標，也就是主成分變量，它們又被叫做特徵向量 (eigenvectors)； \\(\\bf{\\Lambda}\\) 是一個對角矩陣 (diagonal matrix)，它的對角線上是每個主成分變量的方差，它們又被叫做特徵值 (eigenvalues)。特徵值常常又被叫做慣性 (inertia)，特徵值從對角線左上角起往右下角是從大到小排列，每一個特徵值是每個特徵向量的方差，也就是數據整體方差投射在這個主成分變量上的慣性，可以理解爲該主成分能夠解釋多少整個數據的方差 (explained variance)。 Theorem 81.1 (Spectral decomposition) 根據譜定理 Spectral decomposition：如果矩陣 \\(\\textbf{S}\\) 是對稱的，它總是可以被分解爲： \\[ \\textbf{S} = \\textbf{P}\\bf{\\Lambda}\\textbf{P}^t \\] 值得注意的是，首先，分解方差協方差矩陣的時候，並沒有任何統計學或者概率論上的前提條件；其次，這樣的矩陣分解不一定只用於方差協方差矩陣，你可以對任何對稱矩陣 (symmetrix matrix) 進行分解，它被叫做矩陣縮放 (matrix scaling)；最後，其實數據矩陣本身不一定非要是連續型變量，也不一定要有相似的刻度/取值範圍 (same scale)，如果你願意，對二分類變量或者是計數型變量，均可以進行主成分分析。但是，當變量之間的刻度相差巨大時，可能會產生一些意想不到的假象。所以，在實施主成分分析之前，通常的建議是對原始數據的變量進行標準化，或者直接用其相關係數矩陣 (correlation matrix)。 81.3.1 超越對稱矩陣：奇異值分解 (singular value decomposition, SVD) 主成分分析使用的矩陣分解方法，只能應用在方差協方差矩陣或者相關係數矩陣這樣的對稱的正方形矩陣。假如矩陣並非對稱，另一種矩陣分解方法叫做奇異值分解法 (singular value decomposition, SVD)。此時就可以直接應用在原始數據矩陣 \\(\\mathbf{X}_{n\\times p}\\) 本身，而不需要侷限於數據的方差協方差矩陣/相關係數矩陣： \\[ \\mathbf{X}_{n\\times p} = \\mathbf{U}_{n\\times n}\\bf{\\Sigma}_{n \\times p} \\mathbf{W}_{p\\times p}^t \\] 其中， \\(\\mathbf{U}_{n\\times n}\\) 是含有左奇異向量 (left singular vectors) 的矩陣； \\(\\Sigma_{n \\times p}\\) 是含有奇異值 (singular values)的矩陣； \\(\\mathbf{W}_{p\\times p}\\) 則是含有右奇異向量 (right singular vectors) 的矩陣。 所以你看到任意的形狀都可以被分解，此時分解出來的 \\(\\mathbf{U}_{n\\times n}\\) 和 \\(\\mathbf{W}_{p\\times p}\\) 是形狀維度不同的正方形矩陣。 另外，根據這樣的分解我們可以推導： \\[ \\begin{aligned} \\mathbf{X}^t \\mathbf{X} &amp; = \\mathbf{W}\\bf{\\Sigma}\\mathbf{U}^t\\times\\mathbf{U}\\bf{\\Sigma}\\mathbf{W}^t \\\\ &amp; = \\mathbf{W}\\bf{\\Sigma}^2\\mathbf{W}^t \\\\ \\Rightarrow \\bf{\\Sigma}^2 &amp; = \\bf{\\Lambda} \\end{aligned} \\] 所以，\\(\\bf{\\Sigma}^2 = \\bf{\\Lambda}\\) ，也就是說在奇異值分解中獲得的中間矩陣 \\(\\bf{\\Sigma}_{n \\times p}\\)，它對角線上的數值的平方，就是每個原始變量的方差，或者說它們本身是原始數據的標準差。奇異值分解矩陣的方法最常見被用於實施對應分析 (Correspondence Analysis)。 81.4 主成分分析數據實例 橙汁數據，是邀請美食家對產自世界各地的六種品牌的橙汁進行一個一個的味道/品質描述，並給每個項目打分後彙總獲得的評價數據。你可以用下面的代碼下載這個數據並觀察每個描述的變量，且很容易觀察的到的是，這些變量之間並不完全獨立，有些變量可能和另一些變量相關： Odour.intensity Odour.typicality Pulpiness Intensity.of.taste Acidity Bitterness Sweetness Pampryl amb. 2.82 2.53 1.66 3.46 3.15 2.97 2.60 Tropicana amb. 2.76 2.82 1.91 3.23 2.55 2.08 3.32 Fruvita fr. 2.83 2.88 4.00 3.45 2.42 1.76 3.38 Joker amb. 2.76 2.59 1.66 3.37 3.05 2.56 2.80 Tropicana fr. 3.20 3.02 3.69 3.12 2.33 1.97 3.34 Pampryl fr. 3.07 2.73 3.34 3.54 3.31 2.63 2.90 進行主成分分析在Stata只需要這樣一行代碼： insheet using &quot;http://factominer.free.fr/bookV2/orange.csv&quot; , delimiter(&quot;;&quot;) clear pca odour* pulp* intens* acid* bitter* sweetness, cor 你就會獲得十分直觀的結果： Principal components/correlation Number of obs = 6 Number of comp. = 5 Trace = 7 Rotation: (unrotated = principal) Rho = 1.0000 -------------------------------------------------------------------------- Component | Eigenvalue Difference Proportion Cumulative -------------+------------------------------------------------------------ Comp1 | 4.74369 3.4104 0.6777 0.6777 Comp2 | 1.33329 .513448 0.1905 0.8681 Comp3 | .819842 .735818 0.1171 0.9853 Comp4 | .0840232 .0648702 0.0120 0.9973 Comp5 | .019153 .019153 0.0027 1.0000 Comp6 | 0 0 0.0000 1.0000 Comp7 | 0 . 0.0000 1.0000 -------------------------------------------------------------------------- Principal components (eigenvectors) ------------------------------------------------------------------------------ Variable | Comp1 Comp2 Comp3 Comp4 Comp5 | Unexplained -------------+--------------------------------------------------+------------- odourinten~y | 0.2110 0.6534 -0.5174 0.0286 0.0310 | 0 odourtypic~y | 0.4524 0.1162 -0.0646 0.2668 0.2952 | 0 pulpiness | 0.3313 0.5340 0.3290 -0.3327 -0.2250 | 0 intensityo~e | -0.2984 0.3714 0.6910 0.0189 0.3456 | 0 acidity | -0.4191 0.3017 -0.0237 0.7065 -0.4106 | 0 bitterness | -0.4292 0.1628 -0.3152 -0.0974 0.6712 | 0 sweetness | 0.4384 -0.1374 0.2061 0.5553 0.3503 | 0 ------------------------------------------------------------------------------ 根據方差協方差矩陣進行的主成分分析結果，我們發現主成分 6 和 7 可以忽略不計。相同的計算結果可以在R裏面通過方便的計算包 FactoMineR 來計算並用 factoextra 來實現其分析圖形的美觀展示： # library(FactoMineR) org.pca &lt;- PCA(orange[, 1:7], ncp = 7, graph = FALSE) # library(factoextra) eig.val &lt;- get_eigenvalue(org.pca) eig.val # eigenvalue (variances of each principal components) ## eigenvalue variance.percent cumulative.variance.percent ## Dim.1 4.743692688 67.76703840 67.767038 ## Dim.2 1.333289855 19.04699793 86.814036 ## Dim.3 0.819841150 11.71201643 98.526053 ## Dim.4 0.084023297 1.20033282 99.726386 ## Dim.5 0.019153009 0.27361442 100.000000 # eigen vectors: org.pca$svd$V ## [,1] [,2] [,3] [,4] [,5] ## [1,] 0.21100074 0.65340689 -0.517409852 0.028573070 0.030958154 ## [2,] 0.45241413 0.11618305 -0.064606287 0.266760192 0.295222955 ## [3,] 0.33132165 0.53403262 0.329025446 -0.332685134 -0.225026986 ## [4,] -0.29836065 0.37144476 0.690990232 0.018942515 0.345597119 ## [5,] -0.41905731 0.30166462 -0.023688451 0.706533003 -0.410644925 ## [6,] -0.42917948 0.16282112 -0.315220908 -0.097425116 0.671196644 ## [7,] 0.43840960 -0.13742859 0.206064224 0.555251136 0.350251763 於是根據計算獲得的特徵值向量，我們可以寫下這5個主成分變量和原始變量之間的轉換關係方程： \\[ \\begin{aligned} y_1 &amp; = 0.2110x_1 + 0.4524x_2 + 0.3313x_3 - 0.2984x_4 - 0.4191x_5 - 0.4292x_6 + 0.4384x_7 \\\\ y_2 &amp; = 0.6534x_1 + 0.1162x_2 + 0.5340x_3 + 0.3714x_4 + 0.3017x_5 + 0.1628x_6 - 0.1374x_7 \\\\ y_3 &amp; =-0.5174x_1 - 0.0646x_2 + 0.3290x_3 + 0.6910x_4 - 0.0237x_5 - 0.3152x_6 + 0.2061x_7 \\\\ y_4 &amp; = 0.0286x_1 + 0.2668x_2 - 0.3327x_3 + 0.0189x_4 + 0.7065x_5 - 0.0974x_6 + 0.5553x_7 \\\\ y_5 &amp; = 0.0310x_1 + 0.2952x_2 - 0.2250x_3 + 0.3456x_4 - 0.4106x_5 + 0.6712x_6 + 0.3503x_7 \\\\ \\end{aligned} \\] 於是，解釋完了如何從原始數據變量根據計算獲得的特徵值向量轉換成爲新的變量之後，要面對的問題是，我們要保留多少主成分？ 我們通常會使用圖 81.6 那樣的碎石圖 (Scree plot) 來輔助判斷。碎石圖通常縱軸是每個主成分能夠解釋的數據總體方差的百分比，然後橫軸是主成分的個數。所以我們會期待出現一個像手肘一樣的形狀提示應該在第幾個主成分的地方停下。通常在統計分析中，我們默認的準則是，至少保留的主成分個數要能夠解釋總體方差的 70%/80% 以上才較爲理想。Kaiser 準則 建議的是，最好保留下特徵值大於等於1(也就是標準化數據之後獲得的主成分變量方差大於等於1)的主成分變量。在我們的橙汁數據實例中，顯然保留前兩個主成分就已經能夠解釋 86.81% 的總體方差，我們認爲這是理想的主成分個數。 圖 81.6: Orange data: eigenvalues among all variances (varaince explained) by each dimension (principle component) provided by PCA 另外一種輔助的圖形是叫做分數圖 (score plot)，又名個人圖 (graph of individuals)，如果個體的變量特徵相近，他們會在圖中聚在較爲靠近的地方： fviz_pca_ind(org.pca, pointsize = &quot;cos2&quot;, pointshape = 21, fill = &quot;#E7B800&quot;, repel = TRUE, labelsize = 2) 圖 81.7: Score plot/individual plot of the orange data. 細心觀察的話，你會發現圖 81.7 中各個橙汁 (個體,individual) 的座標其實是來自於PCA分析結果中第一和第二主成分變量的結果，展示在第一和第二主成分變量構成的平面。該平面解釋了總體數據慣性 (inertia) 的 86.82% (= 67.77% + 19.05%)。其中第一個主成分 Dim.1 把 Tropicana fr. 和 Pampryl amb. 兩種橙汁分別歸類在最右邊和最左邊。這是因爲原始數據中 Tropicana fr. 是 Odour.typicality 得分最高 Bitternes 得分倒數第二低，同時 Pampryl amb. 則是在這兩個項目上得分分別是最低和最高。也就是說這兩種橙汁在這兩個項目上得分分別是左右兩種極端，所以首先在第一主成分中把這兩中橙汁分離開來。接下來，第二主成分變量 Dim.2 則是將第一主成分成功分離開的兩個個體(橙汁)從數據中拿掉以後，剩下的四種橙汁的分類。可以看到第二個主成分軸，把 Pampryl fr. 和 Tropicana amb. 兩種橙汁放在了該軸的兩個極端，這是因爲 Pampryl fr. 在 Intensity.of.taste 項目上得分最高，而 Tropicana amb. 在拿掉了第一主成分分離的兩種橙汁之後，在 Odour.intensity 項目上得分最低。 回到 R 幫忙分析的主成分結果報告來： summary(org.pca) ## ## Call: ## PCA(X = orange[, 1:7], ncp = 7, graph = FALSE) ## ## ## Eigenvalues ## Dim.1 Dim.2 Dim.3 Dim.4 Dim.5 ## Variance 4.744 1.333 0.820 0.084 0.019 ## % of var. 67.767 19.047 11.712 1.200 0.274 ## Cumulative % of var. 67.767 86.814 98.526 99.726 100.000 ## ## Individuals ## Dist Dim.1 ctr cos2 Dim.2 ctr cos2 Dim.3 ctr cos2 ## Pampryl amb. | 3.029 | -2.984 31.288 0.970 | -0.082 0.085 0.001 | -0.333 2.254 0.012 | ## Tropicana amb. | 1.976 | 0.886 2.761 0.201 | -1.715 36.771 0.753 | -0.087 0.154 0.002 | ## Fruvita fr. | 2.595 | 1.937 13.182 0.557 | 0.040 0.020 0.000 | 1.710 59.450 0.434 | ## Joker amb. | 2.094 | -1.896 12.631 0.820 | -0.834 8.686 0.158 | -0.154 0.481 0.005 | ## Tropicana fr. | 3.512 | 3.186 35.660 0.823 | 0.589 4.335 0.028 | -1.345 36.774 0.147 | ## Pampryl fr. | 2.338 | -1.129 4.479 0.233 | 2.002 50.102 0.733 | 0.209 0.887 0.008 | ## ## Variables ## Dim.1 ctr cos2 Dim.2 ctr cos2 Dim.3 ctr cos2 ## Odour.intensity | 0.460 4.452 0.211 | 0.754 42.694 0.569 | -0.468 26.771 0.219 | ## Odour.typicality | 0.985 20.468 0.971 | 0.134 1.350 0.018 | -0.058 0.417 0.003 | ## Pulpiness | 0.722 10.977 0.521 | 0.617 28.519 0.380 | 0.298 10.826 0.089 | ## Intensity.of.taste | -0.650 8.902 0.422 | 0.429 13.797 0.184 | 0.626 47.747 0.391 | ## Acidity | -0.913 17.561 0.833 | 0.348 9.100 0.121 | -0.021 0.056 0.000 | ## Bitterness | -0.935 18.420 0.874 | 0.188 2.651 0.035 | -0.285 9.936 0.081 | ## Sweetness | 0.955 19.220 0.912 | -0.159 1.889 0.025 | 0.187 4.246 0.035 | 可以看到第一部分是特徵值(eigenvalue)的結果描述，第二部分是個人 (individual) 的分析報告： ...{omitted}... Individuals Dist Dim.1 ctr cos2 Dim.2 ctr cos2 Pampryl amb. | 3.029 | -2.984 31.288 0.970 | -0.082 0.085 0.001 Tropicana amb. | 1.976 | 0.886 2.761 0.201 | -1.715 36.771 0.753 Fruvita fr. | 2.595 | 1.937 13.182 0.557 | 0.040 0.020 0.000 Joker amb. | 2.094 | -1.896 12.631 0.820 | -0.834 8.686 0.158 Tropicana fr. | 3.512 | 3.186 35.660 0.823 | 0.589 4.335 0.028 Pampryl fr. | 2.338 | -1.129 4.479 0.233 | 2.002 50.102 0.733 ...{omitted}... 其中， Dist 是每個個體(行數據)，到座標軸原點 (平均重心位置) 的距離。此數據中距離原點最遠的兩種橙汁是 Pampryl amb. (最左邊) 和 Tropicana fr. (最右邊)。 Dim.1 是該個體，在第一個主成分變量座標軸上的座標。 ctr 是該個體在第一個主成分變量提取時貢獻的百分比。 cos2 是該個體在該主成分變量上投影的慣性除以該個體本身的慣性所佔的比例，又叫做該個體對相應主成分變量的代表性評價 (the quality of representation of an individual \\(i\\) on the principle component \\(s\\) is measured by the distance between the point within the space \\(u_s\\) and the projection on the component)。 \\[ \\text{quality of representation}_s(i) = \\frac{\\text{Projected inertia of }i \\text{ on } u_s}{\\text{Total inertia of }i} = \\cos^2\\theta_i^s \\] PCA報告的下半部分，是關於數據中變量與變量之間關係的分析結果。 Variables Dim.1 ctr cos2 Dim.2 ctr cos2 Dim.3 ctr cos2 Odour.intensity | 0.460 4.452 0.211 | 0.754 42.694 0.569 | -0.468 26.771 0.219 | Odour.typicality | 0.985 20.468 0.971 | 0.134 1.350 0.018 | -0.058 0.417 0.003 | Pulpiness | 0.722 10.977 0.521 | 0.617 28.519 0.380 | 0.298 10.826 0.089 | Intensity.of.taste | -0.650 8.902 0.422 | 0.429 13.797 0.184 | 0.626 47.747 0.391 | Acidity | -0.913 17.561 0.833 | 0.348 9.100 0.121 | -0.021 0.056 0.000 | Bitterness | -0.935 18.420 0.874 | 0.188 2.651 0.035 | -0.285 9.936 0.081 | Sweetness | 0.955 19.220 0.912 | -0.159 1.889 0.025 | 0.187 4.246 0.035 | 根據這個結果繪製的變量相關關係圖如下： fviz_pca_var(org.pca, repel = TRUE, labelsize = 2) 圖 81.8: Variable plot of the orange data. 在第一個主成分軸上 (Dim.1)，正相關的變量 Odour.intensity, Odour.typicality, Pulpiness, Sweetness 被歸類在右半球，而負相關的變量 Intensity.of.taste, Acidity, Bitterness 則被歸類在第一主成分軸的左半球。 相似地，在第二個主成分軸上 (Dim.2)，只有負相關的 Sweetness 被歸類在下半球。 每個變量從原點出發時的箭頭長度越長 cos2，代表它在該主成分軸上代表質量更好 (the quality of representation of the variable on the component) 如果你願意，且數據和變量不至於多到眼花繚亂，我們還可以把個體圖和變量圖結合起來觀察： fviz_pca_biplot(org.pca, repel = TRUE, pointsize = &quot;cos2&quot;, pointshape = 21, labelsize = 2) 圖 81.9: Biplot of the orange data. 81.5 在PCA圖形中加入補充變量和補充個體 (supplementary elements) 在橙汁數據中，除了有美食家給出的各個味道項目的評分之外，其實還有各個橙汁的物理化學特性數據。 Glucose Fructose Saccharose Sweetening.power pH Citric.acid Vitamin.C Way.of.preserving Origin Pampryl amb. 25.32 27.36 36.45 89.95 3.59 0.84 43.44 Ambient Other Tropicana amb. 17.33 20.00 44.15 82.55 3.89 0.67 32.70 Ambient Florida Fruvita fr. 23.65 25.65 52.12 102.22 3.85 0.69 37.00 Fresh Florida Joker amb. 32.42 34.54 22.92 90.71 3.60 0.95 36.60 Ambient Other Tropicana fr. 22.70 25.32 45.80 94.87 3.82 0.71 39.50 Fresh Florida Pampryl fr. 27.16 29.48 38.94 96.51 3.68 0.74 27.00 Fresh Other 我們可以把這些沒有用於計算主成分分析的變量 (active variables)，和其餘的輔助性變量 (supplementary variables) 同時繪製在變量相關係數圓盤圖中。此時我們只需要在進行PCA運算的時候告訴R這些變量是輔助性的連續/分類變量即可： org.pca &lt;- PCA(orange, quanti.sup = 8:14, quali.sup = 15:16, graph = FALSE) org.pca$quanti.sup ## $coord ## Dim.1 Dim.2 Dim.3 Dim.4 Dim.5 ## Glucose -0.572454497 0.31123036 0.0263849025 -0.208332016 -0.72892600 ## Fructose -0.561054870 0.31451133 -0.0084203081 -0.181973281 -0.74371694 ## Saccharose 0.750440168 0.14492075 0.3246761207 -0.075192796 0.55205886 ## Sweetening.power 0.300767457 0.67471255 0.4895557731 -0.389880490 -0.25026037 ## pH 0.879663611 -0.23629707 0.1935892274 0.245926101 0.26907097 ## Citric.acid -0.739370266 -0.12160048 -0.1957416737 -0.278669842 -0.56795532 ## Vitamin.C -0.044575912 -0.31698263 -0.2545161911 -0.905066399 0.11666756 ## ## $cor ## Dim.1 Dim.2 Dim.3 Dim.4 Dim.5 ## Glucose -0.572454497 0.31123036 0.0263849025 -0.208332016 -0.72892600 ## Fructose -0.561054870 0.31451133 -0.0084203081 -0.181973281 -0.74371694 ## Saccharose 0.750440168 0.14492075 0.3246761207 -0.075192796 0.55205886 ## Sweetening.power 0.300767457 0.67471255 0.4895557731 -0.389880490 -0.25026037 ## pH 0.879663611 -0.23629707 0.1935892274 0.245926101 0.26907097 ## Citric.acid -0.739370266 -0.12160048 -0.1957416737 -0.278669842 -0.56795532 ## Vitamin.C -0.044575912 -0.31698263 -0.2545161911 -0.905066399 0.11666756 ## ## $cos2 ## Dim.1 Dim.2 Dim.3 Dim.4 Dim.5 ## Glucose 0.3277041510 0.096864337 0.000696163079 0.0434022288 0.531333120 ## Fructose 0.3147825674 0.098917374 0.000070901589 0.0331142749 0.553114882 ## Saccharose 0.5631604458 0.021002025 0.105414583332 0.0056539566 0.304768989 ## Sweetening.power 0.0904610632 0.455237031 0.239664854983 0.1520067964 0.062630255 ## pH 0.7738080690 0.055836307 0.037476788962 0.0604796473 0.072399188 ## Citric.acid 0.5466683910 0.014786677 0.038314802810 0.0776568810 0.322573248 ## Vitamin.C 0.0019870119 0.100477991 0.064778491512 0.8191451868 0.013611319 然後用下面的代碼繪製包含了輔助性變量的變量相關圓盤圖： fviz_pca_var(org.pca, repel = TRUE) 圖 81.10: Orange juice data: representation of the active and supplementary variables (in blue). 如圖 81.10 所示，第一個主成分變量分離的左右半球的橙汁味道特徵，和他們的物理特性其實是相呼應的。例如，pH 值出現在了圓盤的右半邊，靠近 Sweetness 這一變量。因爲 pH 越高，酸度越低，那麼味道也就越甜，這是合理的。另外一個有趣的現象是，蔗糖 saccharose 含量高的橙汁，pH 越高，味道越甜。在圓盤的左邊，是蔗糖在酸環境下分解之後產生的果糖和葡萄糖，所以果糖葡萄糖反而和酸度 Acidity 相關性高，因爲橙汁中果糖葡萄糖含量高意味着蔗糖被酸分解。 由此可見，PCA是一個對數據進行初步描述和探索時十分有力的工具。所以，在回歸模型選擇變量之前，建議可以對數據先進行主成分分析，並且把預備考慮放在回歸模型的解釋變量部分的變量用於PCA主成分分析，把想要做預測的變量作爲輔助性變量投射到主成分分析的變量相關圖中，觀察解釋變量之間可能存在的相關性，有助於選取合適的解釋變量。 81.5.1 展示分類輔助性變量和個體的關係 根據不同的儲存方式，兩類的橙汁區別很清楚。 p &lt;- fviz_pca_ind(org.pca, habillage = 15, palette = &quot;jco&quot;, repel = TRUE) p 圖 81.11: Plane representation of the scatterplot of individuals with a supplementary categorical variable (way of preserving). 根據橙子的產地區分繪製的個人圖： p &lt;- fviz_pca_ind(org.pca, habillage = 16, palette = &quot;jco&quot;, repel = TRUE) p 圖 81.12: Plane representation of the scatterplot of individuals with a supplementary categorical variable (origin). 81.6 Cluster analysis/PCA practical 本次練習完成時，你將學會： 如何使用聚類分析，和主成分分析法來探索一組多變量數據之間的關係； 理解並懂得如何選取合適的距離測量尺度，和聚類分析方法； 繪製並能夠解釋由多層聚類分析算法 (hierarchical clustering algorithm) 獲得的樹狀圖； 使用主成分分析法對數據進行座標轉換，計算多個變量之間的方差，協方差矩陣，懂得如何判斷保留主成分的個數； 通過把數據繪製在較低維度的主成分座標軸上來判斷數據中可能存在的潛在分層/分組。 81.6.1 使用的數據和簡單背景知識 假設你是一名生物測量技術公司的統計師，現在有這樣一組數據，包含了對某植物測量的4種生物標幟物(biomarkers)。據報道，這四種成分或許能減少你公司生產的某藥物引起的副作用。爲了嘗試分析該植物的生物特性，從該植物的50個不同樣本中，測量了這4種生物標幟物的濃度。你的任務之一是對數據進行初步分析，彙報任何你找到的可能存在的顯著特徵差異。 在R裏讀入你的數據，看看這4種生物標幟物的簡單統計量和分佈，它們用的是相同的測量單位嗎？ plant &lt;- read_dta(&quot;../backupfiles/plant.dta&quot;) plant &lt;- plant[, 1:4] head(plant) ## # A tibble: 6 × 4 ## bm1 bm2 bm3 bm4 ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 17.4 78.6 101. 109. ## 2 87 30.1 79.1 6.60 ## 3 0.100 0.600 0.900 0.200 ## 4 106 10 44.6 57.6 ## 5 141. 122 115. 123. ## 6 0.5 0.800 0.200 0.5 epiDisplay::summ(plant) ## ## No. of observations = 50 ## ## Var. name obs. mean median s.d. min. max. ## 1 bm1 50 56.6 47.55 48.05 0 143 ## 2 bm2 50 53.21 52.7 45.13 0 143.6 ## 3 bm3 50 61.43 55.25 51.47 0.2 147.9 ## 4 bm4 50 57.43 56.75 45.45 0.1 146.1 psych::describe(plant) ## vars n mean sd median trimmed mad min max range skew kurtosis se ## bm1 1 50 56.60 48.05 47.55 53.36 66.05 0.0 143.0 143.0 0.27 -1.38 6.80 ## bm2 2 50 53.21 45.13 52.70 49.62 59.45 0.0 143.6 143.6 0.43 -1.07 6.38 ## bm3 3 50 61.43 51.47 55.25 58.86 69.76 0.2 147.9 147.7 0.27 -1.47 7.28 ## bm4 4 50 57.43 45.45 56.75 54.71 52.41 0.1 146.1 146.0 0.32 -1.12 6.43 觀察這四個生物標幟物的簡單統計量，似乎可以認爲它們使用的應該是相似或者相同的測量單位。它們的均值在53至61之間，標準差分佈在45-51之間，而且最大值最小值之間的範圍也十分接近。 這些生物標幟物能否單獨提供關於該植物的某部分特徵信息呢？思考我們該如何回答這個問題（提示：計算這些指標直接的相關係數） 我們可以通過計算這四個生物標幟物濃度測量值之間的相關係數，來觀察它們之間是否具有相似性或者是否提供了部分相似的信息。 cor(plant) ## bm1 bm2 bm3 bm4 ## bm1 1.00000000 0.49826220 0.59414820 0.26769269 ## bm2 0.49826220 1.00000000 0.50574946 0.33347350 ## bm3 0.59414820 0.50574946 1.00000000 0.32094816 ## bm4 0.26769269 0.33347350 0.32094816 1.00000000 從相關係數矩陣的計算結果來看，平均地，這四個生物標幟物濃度之間具有一定程度的相關性。其中，生物標幟物1和3之間呈現了四者之間最高的樣本相關係數 \\((r_{13} = 0.5941)\\)，生物標幟物1和4之間的相關係數則最小 \\((r_{14} = 0.2677)\\)。 請描述前一步中我們計算的相關係數矩陣的維度(dimension)。 該相關係數矩陣的維度是 \\(4\\times4\\)，事實上，這個矩陣的維度是由我們想要觀察分析的樣本中測量變量的個數決定的（在這裏就是四個生物標幟物）。但是這個相關係數的矩陣並不適合用於做聚類分析 (cluster analysis)，因爲相關係數本身反映的是變量之間的關係 (between variables)，並非觀察對象 (between subjects) 之間的距離(即，不是我們關心的用來把50個樣本進行分組歸類的距離變量)。 再次思考問題1.的答案，思考並選擇合適的測量不同樣本個體之間距離 (distance) 的度量衡。嘗試使用簡單的聚類分析命令對樣本進行分類。 由於每個生物標記物在所有樣本中的數值基本在相似的比例或者刻度，每個標幟物在這個樣本中的標準差/方差數值也較爲相近。我們嘗試用連續變量最常見的均值測量距離指標: # prepare hierarchical cluster hc &lt;- hclust(dist(plant), &quot;ave&quot;) plot(hc, cex = 0.8, hang = -1, main = &quot;&quot;, ylab = &quot;L2 dissimilarity measure&quot;, xlab = &quot;No. of specimen&quot;) 圖 81.13: Dendrogram for L2_avlink cluster analysis 可以觀察到，樣本編號 31, 27, 17, 48, 8, 30, 3, 14, 6, 42 很快就聚合成爲一組。且這些樣本和其他樣本被聚類在不同組的過程一直維持到差異性達到100以上。我們還可以注意到，聚類過程中其他的分支呈現相對對稱的形狀。 從簡單的歐幾里得距離改成歐幾里得距離平方來測量樣本之間的距離的話，圖形會變成什麼樣？ hc &lt;- hclust(dist(plant)^2) plot(hc, cex = 0.8, hang = -1, main = &quot;&quot;, ylab = &quot;L2squared dissimilarity measure&quot;, xlab = &quot;No. of specimen&quot;, sub = &quot;&quot;) 圖 81.14: Dendrogram for L2sq_avlink cluster analysis 當使用歐幾里得距離的平方作爲樣本間隔的度量衡時，我們發現聚類的過程其實總體來說和使用歐幾里得距離本身並無本質上的區別。只是在差異性較低的地方聚類加速 (squeeze the dissimilarities at the lower end)，並且在較大的聚類區分之間變得更加明顯，視覺效果上更容易區分。 如果說，不用歐幾里得平方，而是使用簡單的曼哈頓距離 (L1 度量衡)，那麼圖形則又會呈現爲: plot(cluster::agnes(plant, metric = &quot;manhattan&quot;, stand = F), which.plots = 2, hang = -1, xlab = &quot;No. of specimen&quot;, main = &quot;&quot;, ylab = &quot;L1 dissimilarity measure&quot;, sub = &quot;&quot;, cex = 0.8) 圖 81.15: Dendrogram for L1_avlink cluster analysis 可以看出，當使用曼哈頓距離做度量衡時，聚類的過程和之前的沒有本質上的區別，但是圖形的樹狀分支上似乎不再左右對稱。 接下來使用歐幾里得距離做度量衡，與上面的嘗試不同，這裏我們嘗試用完全連接，和單連接 "],["缺失數據-missing-data-1.html", "第 82 章 缺失數據 Missing data 1 82.1 處理原則（建議）recommended principles 82.2 缺失數據機制 missingness mechanisms 82.3 臨時解決方案 ad-hoc approaches 82.4 單一變量的參數多重插補法 parametric multiple imputation of one variable 82.5 變量選擇，插補次數，模型檢查 82.6 總結 82.7 Practical 10-Hier", " 第 82 章 缺失數據 Missing data 1 82.1 處理原則（建議）recommended principles 82.2 缺失數據機制 missingness mechanisms 82.3 臨時解決方案 ad-hoc approaches 82.4 單一變量的參數多重插補法 parametric multiple imputation of one variable 82.5 變量選擇，插補次數，模型檢查 82.6 總結 82.7 Practical 10-Hier 82.7.1 數據缺失產生的影響，缺失機制，和多重插補法 目的： 練習完成後你應該明白 數據缺失對結果估計可能造成的影響，包括可能帶來的偏倚 Bias，和對參數估計精確度的影響。 如何分析一個變量的缺失模式。 對單一不完整的觀察變量進行簡單的多重插補。 82.7.2 二進制變量的缺失 “class size study” 第一個練習，我們使用的是 “class size” 數據。 classp3dta &lt;- read_dta(&quot;../backupfiles/classp3.dta&quot;) head(classp3dta) ## # A tibble: 6 × 5 ## uniqueid nmatpre nlitpost sen sen_m ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 706 -1.21 -1.31 1 1 ## 2 731 -1.70 -2.41 1 1 ## 3 7345 -1.70 -1.43 0 0 ## 4 1154 -0.980 -1.99 1 1 ## 5 9071 -0.258 -0.255 0 NA ## 6 4875 -0.980 -0.255 0 0 names(classp3dta) ## [1] &quot;uniqueid&quot; &quot;nmatpre&quot; &quot;nlitpost&quot; &quot;sen&quot; &quot;sen_m&quot; 每個變量的名字和含義羅列如下： Name Details uniqueid Unique pupil id nmatpre Pre-reception maths score nlitpost Post-reception literacy score sen Special educational needs (1 = yes, 0 = no) sen_m Special educational needs, with a number of missing values 其中，分數的變量 nmatpre, 和 nlitpost 都被標準化了 (normalised)。因爲不少學生成績分數相同，所以會看到一些標準化分數完全相同的數值。先來觀察一下 nmatpre, 和 nlitpost 這兩個變量之間調整 sen 之後的關係。我們先使用 sen 作爲調整變量，再使用 sen_m 作爲調整變量。之後我們會對 sen_m 中的缺失值做標記，最後再用多重插補法分析這個模型。 82.7.3 完整數據分析結果 classmissing &lt;- lm(nlitpost ~ nmatpre + sen, data = classp3dta) summary(classmissing) ## ## Call: ## lm(formula = nlitpost ~ nmatpre + sen, data = classp3dta) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3.00430 -0.52708 -0.01955 0.52983 3.35295 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.045178 0.012079 3.7403 0.0001859 *** ## nmatpre 0.584829 0.012402 47.1552 &lt; 2.2e-16 *** ## sen -0.432446 0.042855 -10.0910 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.80298 on 4870 degrees of freedom ## Multiple R-squared: 0.36147, Adjusted R-squared: 0.36121 ## F-statistic: 1378.4 on 2 and 4870 DF, p-value: &lt; 2.22e-16 jtools::summ(classmissing, digits = 6, confint = TRUE, exp = FALSE) Observations 4873 Dependent variable nlitpost Type OLS linear regression F(2,4870) 1378.449192 R² 0.361470 Adj. R² 0.361208 Est. 2.5% 97.5% t val. p (Intercept) 0.045178 0.021498 0.068857 3.740335 0.000186 nmatpre 0.584829 0.560515 0.609143 47.155211 0.000000 sen -0.432446 -0.516461 -0.348432 -10.091018 0.000000 Standard errors: OLS 完整數據用 Stata 分析的結果 ## ## . use &quot;../backupfiles/classp3.dta&quot;, clear ## ## . describe ## ## Contains data from ../backupfiles/classp3.dta ## obs: 4,873 ## vars: 5 31 Jan 2009 21:58 ## ------------------------------------------------------------------------------- ## storage display value ## variable name type format label variable label ## ------------------------------------------------------------------------------- ## uniqueid float %9.0g ## nmatpre float %9.0g ## nlitpost float %9.0g ## sen float %9.0g ## sen_m float %9.0g ## ------------------------------------------------------------------------------- ## Sorted by: ## ## . regress nlitpost nmatpre sen ## ## Source | SS df MS Number of obs = 4,873 ## -------------+---------------------------------- F(2, 4870) = 1378.45 ## Model | 1777.58785 2 888.793924 Prob &gt; F = 0.0000 ## Residual | 3140.0696 4,870 .644778153 R-squared = 0.3615 ## -------------+---------------------------------- Adj R-squared = 0.3612 ## Total | 4917.65745 4,872 1.0093714 Root MSE = .80298 ## ## ------------------------------------------------------------------------------ ## nlitpost | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## nmatpre | .584829 .0124022 47.16 0.000 .5605151 .609143 ## sen | -.4324465 .0428546 -10.09 0.000 -.5164608 -.3484321 ## _cons | .0451778 .0120786 3.74 0.000 .0214984 .0688573 ## ------------------------------------------------------------------------------ ## ## . 此時的結果我們總結在下表中 Variable Original Data analysis Coefficient. (SE) Complete Case analysis Coefficient. (SE) Multiple Imputation Coefficient. (SE) Pre-reception numeracy 0.58 (0.012) Special educational needs -0.432 (0.043) 82.7.4 去除了缺失值的分析結果 complete case analysis 接下來使用 sen_m 作爲調整變量，它是有大約一半缺失值數據的 sen： epiDisplay::tab1(classp3dta$sen, graph = FALSE) ## classp3dta$sen : ## Frequency Percent Cum. percent ## 0 4462 91.6 91.6 ## 1 411 8.4 100.0 ## Total 4873 100.0 100.0 epiDisplay::tab1(classp3dta$sen_m, graph = FALSE) ## classp3dta$sen_m : ## Frequency %(NA+) %(NA-) ## 0 2092 42.9 87 ## 1 313 6.4 13 ## &lt;NA&gt; 2468 50.6 0 ## Total 4873 100.0 100 classcompelet &lt;- lm(nlitpost ~ nmatpre + sen_m, data = classp3dta) summary(classcompelet) ## ## Call: ## lm(formula = nlitpost ~ nmatpre + sen_m, data = classp3dta) ## ## Residuals: ## Min 1Q Median 3Q Max ## -2.658912 -0.491275 -0.028356 0.496535 2.862229 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -0.259546 0.017990 -14.4269 &lt; 2.2e-16 *** ## nmatpre 0.434043 0.018684 23.2306 &lt; 2.2e-16 *** ## sen_m -0.362332 0.046773 -7.7466 1.381e-14 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.74601 on 2402 degrees of freedom ## (2468 observations deleted due to missingness) ## Multiple R-squared: 0.23565, Adjusted R-squared: 0.23501 ## F-statistic: 370.26 on 2 and 2402 DF, p-value: &lt; 2.22e-16 jtools::summ(classcompelet, digits = 6, confint = TRUE, exp = FALSE) Observations 2405 (2468 missing obs. deleted) Dependent variable nlitpost Type OLS linear regression F(2,2402) 370.260364 R² 0.235645 Adj. R² 0.235009 Est. 2.5% 97.5% t val. p (Intercept) -0.259546 -0.294824 -0.224267 -14.426855 0.000000 nmatpre 0.434043 0.397405 0.470682 23.230615 0.000000 sen_m -0.362332 -0.454052 -0.270612 -7.746606 0.000000 Standard errors: OLS 去除了缺失值的數據用 Stata 分析的結果 ## ## . use &quot;../backupfiles/classp3.dta&quot;, clear ## ## . regress nlitpost nmatpre sen_m ## ## Source | SS df MS Number of obs = 2,405 ## -------------+---------------------------------- F(2, 2402) = 370.26 ## Model | 412.119502 2 206.059751 Prob &gt; F = 0.0000 ## Residual | 1336.77695 2,402 .556526625 R-squared = 0.2356 ## -------------+---------------------------------- Adj R-squared = 0.2350 ## Total | 1748.89645 2,404 .727494366 Root MSE = .74601 ## ## ------------------------------------------------------------------------------ ## nlitpost | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## nmatpre | .4340432 .0186841 23.23 0.000 .3974046 .4706818 ## sen_m | -.362332 .046773 -7.75 0.000 -.4540516 -.2706124 ## _cons | -.2595457 .0179905 -14.43 0.000 -.2948241 -.2242672 ## ------------------------------------------------------------------------------ ## ## . 我們發現此時分析僅基於擁有完整數據的 2405 名對象，另外2468名對象因爲 sen_m 缺失而無法進入模型。可以看到模型中的兩個預測變量的回歸係數本身和對應的標準誤差也都發生了較大的偏差，精確度明顯下降。像這樣使用去除掉缺失值的數據分析獲得的結果，如果說 sen_m 的缺失值機制是條件（conditional on nmatpre 和 sen）獨立於結果變量 nlitpost 的話，可以被認爲是無偏估計，但是現實情況下如果你的數據中出現這樣大量的缺失值的話，我們無法判斷它是否獨立於我們希望分析的結果變量和預測變量。 此時的結果我們總結在下表中 Variable Original Data analysis Coefficient. (SE) Complete Case analysis Coefficient. (SE) Multiple Imputation Coefficient. (SE) Pre-reception numeracy 0.58 (0.012) 0.43 (0.019) Special educational needs -0.432 (0.043) -0.362 (0.047) 82.7.5 分析 sen_m 的缺失值機制 先生成一個關於 sen_m 是否是缺失值的指示變量 (indicator variable) r： classp3dta &lt;- classp3dta %&gt;% mutate(r = !is.na(sen_m)) epiDisplay::tab1(classp3dta$sen_m, graph = FALSE) ## classp3dta$sen_m : ## Frequency %(NA+) %(NA-) ## 0 2092 42.9 87 ## 1 313 6.4 13 ## &lt;NA&gt; 2468 50.6 0 ## Total 4873 100.0 100 epiDisplay::tab1(classp3dta$r, graph = FALSE) ## classp3dta$r : ## Frequency Percent Cum. percent ## FALSE 2468 50.6 50.6 ## TRUE 2405 49.4 100.0 ## Total 4873 100.0 100.0 然後我們一個邏輯回歸模型，把 r 作爲該模型的結果變量，把 nlitpost nmatpre 作爲預測變量： classglm &lt;- glm(r ~ nlitpost + nmatpre, data = classp3dta, family = binomial(link = logit)) summary(classglm) ## ## Call: ## glm(formula = r ~ nlitpost + nmatpre, family = binomial(link = logit), ## data = classp3dta) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.88467 -0.76311 -0.19894 0.76629 2.69335 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.019637 0.036027 0.5451 0.5857 ## nlitpost -1.039361 0.050322 -20.6540 &lt;2e-16 *** ## nmatpre -1.005978 0.051082 -19.6934 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 6754.60 on 4872 degrees of freedom ## Residual deviance: 4692.94 on 4870 degrees of freedom ## AIC: 4698.94 ## ## Number of Fisher Scoring iterations: 5 jtools::summ(classglm, digits = 6, confint = TRUE, exp = TRUE) Observations 4873 Dependent variable r Type Generalized linear model Family binomial Link logit 𝛘²(2) 2061.653687 Pseudo-R² (Cragg-Uhler) 0.459988 Pseudo-R² (McFadden) 0.305222 AIC 4698.944224 BIC 4718.418619 exp(Est.) 2.5% 97.5% z val. p (Intercept) 1.019831 0.950303 1.094446 0.545072 0.585704 nlitpost 0.353681 0.320462 0.390342 -20.654049 0.000000 nmatpre 0.365687 0.330848 0.404195 -19.693359 0.000000 Standard errors: MLE 同樣的過程在 Stata 可以這樣完成： ## ## . use &quot;../backupfiles/classp3.dta&quot;, clear ## ## . gen r=(sen_m!=.) ## ## . logistic r nlitpost nmatpre ## ## Logistic regression Number of obs = 4,873 ## LR chi2(2) = 2061.65 ## Prob &gt; chi2 = 0.0000 ## Log likelihood = -2346.4721 Pseudo R2 = 0.3052 ## ## ------------------------------------------------------------------------------ ## r | Odds Ratio Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## nlitpost | .3536805 .0177981 -20.65 0.000 .3204621 .3903423 ## nmatpre | .3656868 .0186801 -19.69 0.000 .3308477 .4041945 ## _cons | 1.019831 .0367414 0.55 0.586 .9503032 1.094446 ## ------------------------------------------------------------------------------ ## Note: _cons estimates baseline odds. ## ## . 你能看出 sen_m 的缺失值機制大致是怎樣的嗎？ 從上面邏輯回歸模型的結果可以看出， sen_m 本身是否出現缺失值，和 nlitpost nmatpre 兩個變量之間有着很強的關係。從獲得的OR值來看，這兩個分數越高的人，觀測到它 sen 數值的可能性越低（即較高可能性出現缺失值），也就是說，我們可以認爲該變量出現缺失值的機制不屬於完全隨機 (missing completely at random, MCAR)。 下面我們把該邏輯回歸模型中的預測變量增加一個 sen_m： classglm2 &lt;- glm(r ~ nlitpost + nmatpre + sen_m, data = classp3dta, family = binomial(link = logit)) ## Warning: glm.fit: algorithm did not converge summary(classglm2) ## ## Call: ## glm(formula = r ~ nlitpost + nmatpre + sen_m, family = binomial(link = logit), ## data = classp3dta) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## 2.4086e-06 2.4086e-06 2.4086e-06 2.4086e-06 2.4086e-06 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 2.6566e+01 8.9525e+03 0.003 0.9976 ## nlitpost -7.6455e-10 9.7403e+03 0.000 1.0000 ## nmatpre 7.2348e-10 9.8705e+03 0.000 1.0000 ## sen_m 4.8110e-06 2.2605e+04 0.000 1.0000 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 0.00000e+00 on 2404 degrees of freedom ## Residual deviance: 1.39528e-08 on 2401 degrees of freedom ## (2468 observations deleted due to missingness) ## AIC: 8 ## ## Number of Fisher Scoring iterations: 25 jtools::summ(classglm2, digits = 6, confint = TRUE, exp = TRUE) ## Warning: glm.fit: algorithm did not converge Observations 2405 (2468 missing obs. deleted) Dependent variable r Type Generalized linear model Family binomial Link logit 𝛘²(3) -0.000000 Pseudo-R² (Cragg-Uhler) 0.000000 Pseudo-R² (McFadden) 0.000000 AIC 8.000000 BIC 31.141221 exp(Est.) 2.5% 97.5% z val. p (Intercept) 344742703498.612000 0.000000 Inf 0.002967 0.997632 nlitpost 1.000000 0.000000 Inf -0.000000 1.000000 nmatpre 1.000000 0.000000 Inf 0.000000 1.000000 sen_m 1.000005 0.000000 Inf 0.000000 1.000000 Standard errors: MLE 你知道爲什麼這裏的模型中的參數無法被估計嗎？ 我們把 sen_m 替換成 sen classglm3 &lt;- glm(r ~ nlitpost + nmatpre + sen, data = classp3dta, family = binomial(link = logit)) summary(classglm3) ## ## Call: ## glm(formula = r ~ nlitpost + nmatpre + sen, family = binomial(link = logit), ## data = classp3dta) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.86373 -0.76374 -0.19817 0.76322 2.69585 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.025268 0.037471 0.6744 0.5001 ## nlitpost -1.043082 0.050798 -20.5339 &lt;2e-16 *** ## nmatpre -1.009251 0.051446 -19.6177 &lt;2e-16 *** ## sen -0.080734 0.146027 -0.5529 0.5804 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 6754.60 on 4872 degrees of freedom ## Residual deviance: 4692.64 on 4869 degrees of freedom ## AIC: 4700.64 ## ## Number of Fisher Scoring iterations: 5 jtools::summ(classglm3, digits = 6, confint = TRUE, exp = TRUE) Observations 4873 Dependent variable r Type Generalized linear model Family binomial Link logit 𝛘²(3) 2061.957742 Pseudo-R² (Cragg-Uhler) 0.460042 Pseudo-R² (McFadden) 0.305267 AIC 4700.640169 BIC 4726.606030 exp(Est.) 2.5% 97.5% z val. p (Intercept) 1.025590 0.952969 1.103746 0.674355 0.500086 nlitpost 0.352367 0.318975 0.389256 -20.533887 0.000000 nmatpre 0.364492 0.329532 0.403161 -19.617732 0.000000 sen 0.922439 0.692850 1.228106 -0.552873 0.580351 Standard errors: MLE 此時，我們看見 sen 和 sen_m 是否出現缺失值是無關的 (no evidence that missingness in sen_m is associated with sen)，即使調整了 nlitpost nmatpre。這滿足了我們對隨機缺失機制 (Missing at random, MAR) 的定義。所以我們可以認爲 sen_m 的缺失值機制在知道了 nlitpost nmatpre 的條件下是隨機缺失 (MAR)。但是值得注意的是，因爲這裏我們是故意把一個變量隨機刪除掉一半以後人爲地造成了一個不完整數據的變量，才能夠根據上述定義來證明這個變量發生缺失值的機制是 MAR，現實情況下，這樣的證明是沒有人可以做到的，因爲有缺失值的變量你是無法獲得它的完整數據的。而且我們也從上述分析中發現了使用去除缺失值之後的數據進行分析時模型中參數估計出現較大偏倚和標準誤差變大的原因 – 因爲 sen_m 是否出現缺失值同時和我們關心的結果變量 nlitpost，和預測變量 nmatpre 有關。 82.7.6 多重插補 multiple imputation 82.7.6.1 在 Stata 裏，重新讀入數據 首先我們需要告訴 Stata 我們要開始存儲一些多重插補過後的數據 mi set wide。 然後，再告訴 Stata，我們要對 sen_m 這個變量進行多重插補 mi register imputed sen_m 產生我們需要的多重插補之後的數據，這個過程（雖然都被計算機一步完成）可以描述爲： 對於二進制變量，我們需要使用 logit 命令來進行多重插補。 先使用去除了缺失值的數據來跑我們需要的模型，然後獲取對應的回歸模型的回歸係數(i.e. log odds ratios)及其標準誤差。 假設要進行 \\(m = 1, \\cdots, M\\) 次多重插補過程，那麼根據回歸係數 (logOR) 本身服從常態分佈的假設，每次多重插補我們需要從回歸係數服從的分佈中採樣一組回歸係數。 獲取了 \\(m\\) 組回歸係數之後，在每一個多重插補過程中，根據模型中的變量和採集的回歸係數，計算存在缺失值的 sen_m 取值是 1 的概率。 根據上步中計算獲得的每個有缺失值的 sen_m 取值可能是 1 的概率。這個概率被當作是一個 Bernoulli (binary) 分佈的概率參數，然後隨機採集 0/1 作爲該缺失值的插補值。 另外，實施多重插補過程的命令中 add(10) 是在告訴 Stata 我要進行十次插補，採集十次樣本，即 \\(m = 10\\) 最後一步是使用插補後的數據進行我們希望的回歸模型分析。它的過程簡單來說就是對插補後的十個樣本進行相同的模型估計，然後利用 “Rubin” 法則把十次結果總結成爲一個估計。它和之前的結果相比如何？ ## ## . use &quot;../backupfiles/classp3.dta&quot;, clear ## ## . mi set wide ## ## . mi register imputed sen_m ## ## . mi impute logit sen_m nlitpost nmatpre, add(10) rseed(4921) ## ## Univariate imputation Imputations = 10 ## Logistic regression added = 10 ## Imputed: m=1 through m=10 updated = 0 ## ## ------------------------------------------------------------------ ## | Observations per m ## |---------------------------------------------- ## Variable | Complete Incomplete Imputed | Total ## -------------------+-----------------------------------+---------- ## sen_m | 2405 2468 2468 | 4873 ## ------------------------------------------------------------------ ## (complete + incomplete = total; imputed is the minimum across m ## of the number of filled-in observations.) ## ## . mi estimate: regress nlitpost nmatpre sen_m ## ## Multiple-imputation estimates Imputations = 10 ## Linear regression Number of obs = 4,873 ## Average RVI = 0.1901 ## Largest FMI = 0.3735 ## Complete DF = 4870 ## DF adjustment: Small sample DF: min = 69.45 ## avg = 2,083.26 ## max = 3,626.87 ## Model F test: Equal FMI F( 2, 238.4) = 1071.23 ## Within VCE type: OLS Prob &gt; F = 0.0000 ## ## ------------------------------------------------------------------------------ ## nlitpost | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## nmatpre | .5864505 .0126874 46.22 0.000 .5615717 .6113292 ## sen_m | -.4044246 .053444 -7.57 0.000 -.5110302 -.2978191 ## _cons | .0428783 .0122477 3.50 0.000 .0188653 .0668913 ## ------------------------------------------------------------------------------ ## ## . Variable Original Data analysis Coefficient. (SE) Complete Case analysis Coefficient. (SE) Multiple Imputation Coefficient. (SE) Pre-reception numeracy 0.58 (0.012) 0.43 (0.019) 0.59 (0.012) Special educational needs -0.432 (0.043) -0.362 (0.047) -0.404 (0.053) 可以看到，使用多重插補之後，獲得的回歸係數的參數估計及其標準誤差都和原始數據模型結果十分接近，令人滿意。值得注意的是，因爲這裏的數據缺失是我們認爲通過 MAR 機制產生的，所以我們會看到這樣幾乎無偏的估計。然而在現實中，我們其實無法對缺失值的機制是否是 MAR 進行驗證。 "],["缺失數據-missing-data-2.html", "第 83 章 缺失數據 Missing data 2", " 第 83 章 缺失數據 Missing data 2 "],["further-issues.html", "第 84 章 Further issues", " 第 84 章 Further issues "],["surv-intro.html", "第 85 章 生存分析入門 85.1 本章概要 85.2 什麼是生存分析 What is survival analysis? 85.3 生存數據在哪裏 85.4 生存數據分析之前要理清楚的問題 85.5 生存數據的左右截尾 85.6 初步分析生存數據 85.7 初步描述生存數據 85.8 生存時間的參數分布 85.9 極大似然法估計 85.10 Practical Survival 01", " 第 85 章 生存分析入門 The best thing about being a statistician is that you get to play in everyone’s backyard. John Tukey The Survival Analysis lectures were orgainised and taught by Professor Ruth Keogh, and Professor Aurélien Belot. 85.1 本章概要 本章內容包括以下幾個部分 怎樣描述生存數據，刪失值的定義 如何定義風險度方程，生存方程，概率密度方程 描述生存數據各個方程之間的數學關係 定義指數分佈，Weibull 分佈，對數邏輯分佈，並懂得這些分佈適合哪些類型的生存數據 準確寫出這三個分佈下的生存數據的似然 使用R分析生存數據的初步設定 理解並解釋在R中分析獲得的生存模型的參數 85.2 什麼是生存分析 What is survival analysis? 生存分析，研究的是隨訪中研究對象發生我們關心的事件與否，以及比較發生該事件之前時間的長短 (生存時間) 的一種分析方法。生存數據的常見例子如下: 死亡 (all cause); 診斷/治療後直至死亡發生的時間; 孕婦的懷孕時間 (孕期長短); 對象以健康狀態進入研究時開始，直至其診斷爲患有某種疾病的時間。 生存分析中的常見術語: 生存時間 survival time = 失敗時間 failure time = 事件時間 event time。 生存分析本身常被叫做事件史分析 time-to-event analysis。 生存分析的結果，可以用來回答很多我們關心的問題: 研究特定人羣中，在某段時間內人口生存 (或死亡) 的模式 (平均壽命): 在英國，某年 (例如 1970 年) 出生的人，能夠生存到 5 歲，40 歲，100 歲的概率是多大？ (關心的是死亡在某人身上發生的概率) 比較兩組或多組人羣之間，不同的特徵導致的死亡時間的差異大小的估計: 某種新療法對於同時被診斷爲相同程度肺癌的患者，和標準療法相比是否能有效延長其生存時間？ 研究多種變量 (例如體重，年齡，性別，吸煙，飲食等) 和事件發生時間長短之間的關系: 例如收集健康對象，研究其體質指數 (BMI) 和最終發生二型糖尿病幾率之間的關系，同時要調整其他已知的混雜因素。 預測特定患者的存活幾率: 肝癌患者診斷後的 5 年生存率，10 年生存率的推算。 85.3 生存數據在哪裏 生存數據其實很常見，下面是幾個例子: 特定國家特定時間內對人口出生死亡的登記數據; 在隨機雙盲對照臨牀試驗中，治療組和安慰劑組相比，治療組的生存時間是否真的較長; 前瞻性隊列研究; 非醫學的例子也有很多，例如分析暴風雪降臨之前的時間，或者推測地震可能發生的幾率。 85.4 生存數據分析之前要理清楚的問題 對於結果/事件的定義; 研究的時間起點; 研究的時間單位是用的月份，周，還是年，是觀察時間，還是患者的實際年齡 (實際年齡就是實際生存時間); 事件發生時的時間，是否被精確定義了？ 85.5 生存數據的左右截尾 沒有哪個研究能保證觀察隨訪到所有的研究對象最終是否發生了事件 (死亡)，有些對象在研究中途就會退出實驗。所以這些沒有觀察到事件發生，但是在研究的過程中貢獻了生存時間數據的對象，被稱爲刪失數據 (censored)。刪失數據又根據其發生原因的不同被分爲下面幾種: 行政刪失 (administrative censoring): 如果最終事件，被定義爲死亡的話，研究者不大可能等到所有的觀察對象都死亡 (可能耗時幾十年) 之後再分析數據，而是認爲地定義某個時間點作爲研究結束，不再隨訪的時間。 隨訪失敗 (loss to follow-up): 無論是幹預型實驗，還是觀察性實驗，有些觀察對象中途無法聯系上，或者改變主義推出實驗的人並不少見。這些對象的出現都意味着研究者無法再對他們進行事件發生與否的觀察了。 死於其他原因 (death from other causes): 可能某些研究只關心患者吸煙習慣與死於肺癌的時間長短的關系，當某些觀察對象確實發生了死亡事件，但是死因並不是肺癌時 (肝癌，或者自殺，車禍等)，這些人也被認爲是刪失數據。 上述幾種可能發生的刪失數據，這幾種類型的刪失數據，被叫做右側刪失數據 (right censoring)，在分析中不能被刪除，因爲他們在未離開研究之前，我們確定他們是沒有發生事件的，他們的觀察時間也應當被放入統計模型中加以考慮。 85.5.1 左側截尾數據 left-truncation 左側截尾現象，又被叫做延時進入 (delayed entry): 由於觀察對象實際進入研究時的年齡各不相同，對所有人的觀察時間，都從出生日開始算起的研究，實施難度極大。此時，應當注意把進入研究之前的生存時間 (進入實驗時的年齡)，考慮進來，因爲這些人至少活到了進入研究的年齡。這也是一種生存偏倚現象，因爲人羣中被觀察到的人，只是一小部分樣本，所以把所有人都當作相同概率進入研究是不恰當的，有許多對象沒有活到進入研究的時間。 85.6 初步分析生存數據 生存數據，比較的是生存時間。由於時間本身是連續型變量，我們可能會想到利用處理連續型變量時的方法來進行初步的比較: 每個人生存時間的柱狀圖 (histogram); 計算生存時間的簡單統計量: 中位數 (median)。 即使是拿穩健統計學方法比較治療組和對照組的中位數是否不同，也無法解決刪失數據的問題。我們需要新的方法來處理生存數據。 85.7 初步描述生存數據 描述生存數據的統計學正式方案是: 生存方程 the survival function 風險度方程和累積風險度 the hazard function and the cumulative hazard 概率密度方程 the probability density function 85.7.1 生存方程 生存方程的定義是，觀測生存時間 \\(T\\)，大於某個時間 \\(t\\) 的概率: \\[ S(t) = \\text{Pr}(T &gt; t) \\] 累計概率方程是 \\[ F(t) = \\text{Pr}(T \\leqslant t) = 1 - S(t) \\] 85.7.2 風險度方程 風險度有時候就只叫做風險 (hazard)，時間 \\(t\\) 時的風險度爲 \\(h(t)\\)。風險度方程被定義爲: \\[ h(t) = \\lim_{\\delta\\rightarrow0}\\frac{1}{\\delta}\\text{Pr}(t\\leqslant T &lt; t + \\delta | T\\geqslant t) \\] 風險度利用的是數學中的極限理論，表示在時間 \\(t\\) 和時間 \\(t+\\delta\\) (其中\\(\\delta \\rightarrow 0\\)) 之間，觀察對象沒有發生事件的概率。風險度的概念明白了以後，風險度在時間軸上的積分，就被叫做累積風險度: \\[ H(t) = \\int_0^th(u)\\text{d}u \\] 85.7.3 概率密度方程 和其他的方程類似，常用 \\(f(t)\\) 標記生存時間的概率密度方程: \\[ f(t) = \\frac{\\text{d}}{\\text{d}t}F(t) = \\lim_{\\delta\\rightarrow0}\\frac{1}{\\delta}\\text{Pr}(t\\leqslant T &lt; t + \\delta) \\] 85.7.4 各方程之間的關系 \\[ \\begin{aligned} f(t) &amp; = \\frac{\\text{d}}{\\text{d}t}F(t) = \\frac{\\text{d}}{\\text{d}t}\\{ 1-S(t) \\} = - \\frac{\\text{d}}{\\text{d}t}S(t) \\\\ S(t) &amp; = 1 - F(t) = 1 - \\int_0^t f(u)\\text{d}u = \\int_t^\\infty f(u)\\text{d}u \\\\ h(t) &amp; = \\lim_{\\delta\\rightarrow0}\\frac{1}{\\delta}\\text{Pr}(t \\leqslant T &lt; t+ \\delta | T &gt; t) \\\\ &amp; = \\lim_{\\delta\\rightarrow0}\\frac{1}{\\delta}\\frac{\\text{Pr}(t \\leqslant T &lt; t+ \\delta, T &gt; t)}{\\text{Pr}(T &gt; t)} (\\text{Bayes&#39; Theroem}) \\\\ &amp; = \\lim_{\\delta\\rightarrow0}\\frac{1}{\\delta}\\frac{\\text{Pr}(t \\leqslant T &lt; t+ \\delta)}{\\text{Pr}(T &gt; t)} \\\\ &amp; = \\frac{f(t)}{S(t)} \\\\ h(t) &amp; = \\frac{f(t)}{S(t)} = \\frac{\\frac{\\text{d}}{\\text{d}t}F(t)}{S(t)} = \\frac{- \\frac{\\text{d}}{\\text{d}t}S(t)}{S(t)} = - \\frac{\\text{d}}{\\text{d}t}\\text{log}[S(t)] \\\\ \\end{aligned} \\] 推導 \\(S(t), H(t)\\) 之間的關系: \\[ \\begin{aligned} \\because h(t) &amp; = - \\frac{\\text{d}}{\\text{d}t}\\text{log}[S(t)] \\\\ \\text{intergrate both} &amp; \\text{ sides over the range from 0 to }t: \\\\ \\int_0^th(u)\\text{d}u &amp; = - \\int_0^t\\frac{\\text{d}}{\\text{d}u}\\text{log}[S(t)]\\text{d}u \\\\ &amp; = -[\\text{log } S(u)]_{u = 0}^{u = t} \\\\ &amp; = -[\\text{log } S(t) - \\text{log } S(0)] \\\\ &amp; = -\\text{log }S(t) \\\\ \\Rightarrow S(t) &amp; = \\exp\\{ - \\int_0^th(u)\\text{d}u\\} = \\exp\\{ -H(t) \\} \\end{aligned} \\] 85.8 生存時間的參數分布 85.8.1 指數分布 適用於生存時間最簡單的分布是指數分布 (exponentiential distribution)。指數分布默認風險率 (hazard rate，\\(\\lambda\\)) 不隨時間變化。在指數分布中，風險度方程，生存方程和概率密度方程分別是: \\[ \\begin{aligned} h(t) &amp; = \\lambda, \\\\ S(t) &amp; = e^{-\\lambda t} \\\\ f(t) &amp; = h(t)S(t) \\\\ &amp; = \\lambda e^{-\\lambda t} \\end{aligned} \\tag{85.1} \\] 圖 85.1: The hazard function, survivor function and probability density function under an exponential distribution for survival times 85.8.2 Weibull 分布 指數分布的前提 – 事件發生率相同的假設過於強硬，許多真實數據，都不能滿足這個前提條件。另一個比指數分布靈活的分布是 Weibull 分布。它包含兩個參數，其風險度方程，生存方程和概率密度方程分別是: \\[ \\begin{aligned} h(t) &amp; = \\kappa\\lambda t^{\\kappa - 1} \\\\ S(t) &amp; = \\exp(-\\lambda t^\\kappa) \\\\ f(t) &amp; = \\kappa \\lambda t^{\\kappa - 1} \\exp(-\\lambda t^\\kappa) \\end{aligned} \\tag{85.2} \\] 圖 85.2: Illustrations of the hazard function under a Weibull distribution with different shape (kappa) and scale (lambda). 圖 85.3: Illustrations of the survival function and probability function under a Weibull distribution with different shape (kappa) and scale parameter lambda = 0.2. 當 \\(\\kappa = 1\\) 時，Weibull 分布就降級爲簡單指數分布。從圖中也可以看出，Weibull 分布只允許風險度隨着時間單調遞增/遞減。 除了這兩個常見的生存時間分布，另外還有許多不同類型的分布。練習題中也會再探索 log-logistic 分布的應用。 85.9 極大似然法估計 假設，我們決定使用上面描述的簡單分布 - 指數分布來做爲生存時間的分布。接下來，就可以利用學習過的統計推斷的知識，對其做極大似然估計。 假設 \\(n\\) 名研究對象編號各自爲 \\(i = 1, \\cdots,n\\)，研究者對他們完成了從起點時間 (time origin) 起的隨訪。有些人發生了相關事件 (Event)，所以，他們的生存時間 \\(t_{E_i}\\)。有些人則由於各種原因變成了刪失值，他們的生存時間是 \\(t_{C_i}\\)。關於刪失對象我們確切知道在時間 \\(t_{C_i}\\) 之內，他們沒有發生相關事件，且他們退出研究之後是否發生了事件不得而知。我們再根據觀察對象是否發生相關事件，在模型中生成一個啞變量 \\(\\delta_i\\)，當 \\(\\delta_i = 1\\) 時，該對象的觀察生存時間是 \\(t_{E_i}\\)，當 \\(\\delta_i = 0\\) 時，該對象的觀察生存時間就是 \\(t_{C_i}\\): \\[ \\delta_{i}=\\left\\{ \\begin{array}{ll} 1 \\text{ if } t_{E_i} \\text{ observed} \\\\ 0 \\text{ if } t_{C_i} \\text{ observed}\\\\ \\end{array} \\right. t_{i}=\\left\\{ \\begin{array}{ll} t_{E_i} \\text{ if } \\delta_i = 1 \\\\ t_{C_i} \\text{ if } \\delta_i = 0 \\\\ \\end{array} \\right. \\] 表 71.1: Data on survival and censoring times for n individuals Individual Survival or censoring time Indicator of outcome or censoring \\(1\\) \\(t_1\\) \\(\\delta_1\\) \\(2\\) \\(t_2\\) \\(\\delta_2\\) \\(3\\) \\(t_3\\) \\(\\delta_3\\) . . . . . . . . . \\(n\\) \\(t_n\\) \\(\\delta_n\\) 對於那些觀察到事件的人，他們各自對似然的貢獻是 \\(f(t_{E_i})\\); 對於那些成爲刪失值的人，他們各自對似然的貢獻是 \\(S(t_{C_i})\\)，所以該數據的似然就是: \\[ \\begin{aligned} L &amp; = \\prod_{\\text{Events}}f(t_{E_i})\\prod_{\\text{Censorings}}S(t_{C_i}) \\\\ &amp; = \\prod_i f(t_i)^{\\delta_i} S(t_i)^{1-\\delta_i} \\\\ &amp; = \\prod_i \\{ h(t_i)S(t_i) \\}^{\\delta_i}S(t_i)^{1-\\delta_i} \\text{ because } h(t) = \\frac{f(t)}{S(t)} \\\\ &amp; = \\prod_i h(t_i)^{\\delta_i} S(t_i) \\end{aligned} \\] 極大似然法對各個參數的估計就可以用我們在統計推斷中使用的求對數極大似然的方法: \\[ \\begin{aligned} \\ell &amp; = \\sum_i[\\delta_i\\text{log}f(t_i) + (1-\\delta_i)\\text{log}S(t_i)] \\\\ &amp; = \\sum_i\\{\\delta_i\\text{log}(\\lambda e^{-\\lambda t_i}) + (1-\\delta_i)\\text{log}(e^{-\\lambda t_i}) \\} \\\\ &amp; = \\sum_i\\{ \\delta_i\\text{log}\\lambda - \\delta_i\\lambda t_i -\\lambda t_i + \\delta_i\\lambda t_i \\} \\\\ &amp; = \\sum_i[\\delta_i \\text{log}\\lambda - \\lambda t_i] \\\\ &amp; = \\sum_i\\delta_i\\text{log}\\lambda - \\lambda\\sum_it_i \\\\ \\Rightarrow \\ell^\\prime &amp; = \\frac{\\sum_i\\delta_i}{\\lambda} - \\sum_i t_i \\\\ \\text{let } \\ell^\\prime &amp; =0 \\Rightarrow \\hat\\lambda = \\frac{\\sum_i\\delta_i}{\\sum_i t_i}\\\\ \\text{Because }\\ell^{\\prime\\prime} &amp; = -\\frac{\\sum_i\\delta_i}{\\lambda^2} &lt; 0 \\\\ \\text{Therefore } \\hat\\lambda &amp; = \\frac{\\sum_i\\delta_i}{\\sum_it_i} \\\\ \\text{ is the MLE for} &amp; \\text{ survival time follows exponential distribution.} \\end{aligned} \\] 85.10 Practical Survival 01 85.10.1 生存分析的時間尺度 85.10.1.1 把 PBC 數據讀入 R 中，d, time, datein, dateout 是什麼含義？ pbcbase &lt;- read_dta(&quot;../backupfiles/pbcbase.dta&quot;) # d 是表示是否發生事件的變量 # d = 0 表示該觀察對象是刪失值 # d = 1 表示該觀察對象在研究隨訪中死亡 # datein 是該觀察對象進入臨牀試驗的日期 # dateout 是該觀察對象發生死亡事件/變成刪失值的日期 # time 是從進入臨牀試驗到發生死亡時間或者變成刪失值這段時間的長度，以年爲單位 head(pbcbase[,1:5]) ## # A tibble: 6 × 5 ## id datein dateout time d ## &lt;dbl&gt; &lt;date&gt; &lt;date&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 5 1980-02-19 1981-09-19 1.58 1 ## 2 22 1980-08-22 1980-08-22 0 0 ## 3 23 1980-07-22 1989-08-02 9.03 0 ## 4 40 1980-08-08 1982-11-21 2.29 1 ## 5 42 1980-09-06 1982-10-05 2.08 1 ## 6 45 1980-02-09 1985-06-02 5.31 1 85.10.1.2 你認爲該研究應該使用哪種時間尺度？ 這是一個比較兩種治療方案哪個更能延長患者生命時間的臨牀實驗，正確的時間尺度應該是從進入試驗開始，直至發生事件 (死亡) 或者離開試驗的這段時間 (隨訪時間 follow-up time)。 85.10.1.3 試驗中，多少患者發生了死亡事件，又有多少患者是刪失值？ # 患者中 96 人 (50.3%) 發生了死亡事件; 95 人是刪失值。 with(pbcbase, tab1(d, graph = FALSE)) ## d : ## Frequency Percent Cum. percent ## 0 95 49.7 49.7 ## 1 96 50.3 100.0 ## Total 191 100.0 100.0 # 第一例死亡發生在隨訪開始的 0.025 年，最後一例死亡發生在隨訪開始的 9.26 年; # 所有對象中隨訪時間最長達到 11.64 年。 # 死亡事件發生的病例中，隨訪時間的中位數是 2.85 年 # 刪失對象的病例中，隨訪時間的中位數是 4.62 年。 with(pbcbase, epiDisplay::summ(time[d==1], graph = FALSE)) ## obs. mean median s.d. min. max. ## 96 3.243 2.847 2.357 0.025 9.259 with(pbcbase, epiDisplay::summ(time[d==0], graph = FALSE)) ## obs. mean median s.d. min. max. ## 95 4.587 4.616 3.052 0 11.644 85.10.1.4 讀入另一個數據 whitehall.dta，使用是否發生冠心病 chd 變量作爲事件變量。仔細觀察其時間的格式，timein, timeout, timebth，各自是什麼含義？1987 年 1 月 30 日發生了什麼事件？ whitehall &lt;- read_dta(&quot;../backupfiles/whitehall.dta&quot;) # timebth 是每個患者的出生日期 # timein 是每個患者進入試驗的日期，且注意到許多患者的進入試驗日期是相同的 # timeout 是隨訪結束的日期，對於 chd = 1 的人，這個日期是其死於冠心病的日期， # 其餘的人則是刪失日期，且注意到許多刪失日期都是1987年1月30日，推測這是行政刪失日期。 whitehall[,c(1,3,12:14)] ## # A tibble: 1,677 × 5 ## id chd timein timeout timebth ## &lt;dbl&gt; &lt;dbl&gt; &lt;date&gt; &lt;date&gt; &lt;date&gt; ## 1 5001 0 1967-09-13 1987-01-30 1920-03-20 ## 2 5019 0 1967-09-13 1987-01-30 1911-08-06 ## 3 5038 0 1967-09-13 1987-01-30 1916-04-03 ## 4 5039 0 1967-09-13 1987-01-30 1916-08-02 ## 5 5042 0 1967-09-13 1983-04-12 1912-03-20 ## 6 5052 0 1967-09-13 1984-07-10 1913-04-07 ## 7 5064 0 1967-09-15 1984-05-13 1921-04-30 ## 8 5078 1 1967-09-15 1983-11-29 1919-12-25 ## 9 5089 0 1967-09-15 1987-01-30 1919-10-11 ## 10 5090 0 1967-09-15 1987-01-30 1908-03-31 ## # … with 1,667 more rows 85.10.1.5 應該使用哪種時間尺度作爲此研究的時間呢？ 很顯然，本實驗可以使用隨訪時間，作爲時間尺度。當然，考慮到不同的人進入實驗時的年齡不同，也可以用隨訪年齡作爲時間尺度。需要注意的是，如果使用年齡作爲時間尺度，不能使用 timeout - timebth 也就是隨訪結束減去出生日期作爲時間變量。因爲這樣的做法默認了所有人從出生時，就進入了實驗，這是無論如何也無法做到的。所以我們要用下面的第二個計算時間的代碼 M1，來考慮進入實驗時的年齡。因爲，進入實驗時，該觀察對象沒有發生事件，這已經是一個生存偏倚，需要告訴軟件加以考慮。注意比較三種方法計算的時間的最小值最大值的差別。 # 用隨訪時間做時間尺度 M0 &lt;- survfit(Surv(time = (timeout - timein)/365.25, event = chd)~1, data = whitehall) epiDisplay::summ(M0$time, graph = FALSE) ## obs. mean median s.d. min. max. ## 702 13.96 16.678 5.307 0.151 19.381 # 考慮了左側截尾的時間尺度 M1 &lt;- survfit(Surv(agein, agein + (timeout - timein)/365.25, event = chd) ~ 1, data = whitehall) epiDisplay::summ(M1$time, graph = FALSE) ## obs. mean median s.d. min. max. ## 1670 68.568 67.888 6.582 44.391 85.766 # 錯誤地認爲所有人都從出生日期開始進入試驗的時間尺度 M2 &lt;- survfit(Surv((timeout - timebth)/365.25, event = chd) ~ 1, data = whitehall) epiDisplay::summ(M2$time, graph = FALSE) ## obs. mean median s.d. min. max. ## 1563 68.638 67.986 6.651 44.391 85.766 85.10.2 擬合最簡單的指數分布生存數據 mydata &lt;- read_csv(&quot;../backupfiles/surv_data_practical1.csv&quot;) mydata ## # A tibble: 100 × 1 ## surv.times ## &lt;dbl&gt; ## 1 0.442 ## 2 2.01 ## 3 2.26 ## 4 1.64 ## 5 9.88 ## 6 1.19 ## 7 3.72 ## 8 7.14 ## 9 11.3 ## 10 6.69 ## # … with 90 more rows exp.model &lt;- survreg(Surv(surv.times) ~ 1, dist = &quot;exponential&quot;, data = mydata) # 值得注意的是，在 R 裏擬合指數分布的生存數據時，計算獲得的是 -log(lambda) summary(exp.model) ## ## Call: ## survreg(formula = Surv(surv.times) ~ 1, data = mydata, dist = &quot;exponential&quot;) ## Value Std. Error z p ## (Intercept) 1.527 0.100 15.27 &lt;2e-16 ## ## Scale fixed at 1 ## ## Exponential distribution ## Loglik(model)= -252.7 Loglik(intercept only)= -252.7 ## Number of Newton-Raphson Iterations: 5 ## n= 100 # 風險度比 HR exp(-exp.model$coefficients) ## (Intercept) ## 0.21727013 # HR 的 95% 信賴區間 exp(-exp.model$coefficients - 1.96*summary(exp.model)$table[2]) ## (Intercept) ## 0.1785987 exp(-exp.model$coefficients + 1.96*summary(exp.model)$table[2]) ## (Intercept) ## 0.26431495 85.10.3 探索服從 Weibull 分布時風險度方程的曲線 wei.haz &lt;- function(x, lambda, kappa) { kappa*lambda*x^(kappa - 1) } curve(wei.haz(x, 0.2, 0.5), ylim = c(0,0.8), xlab = &quot;Time&quot;, ylab = &quot;Hazard function&quot;) curve(wei.haz(x, 0.2, 1.5), add = TRUE, col = &quot;blue&quot;) curve(wei.haz(x, 0.2, 1), add = TRUE, lty = 2) curve(wei.haz(x, 0.2, 2), add = TRUE, col = &quot;red&quot;) curve(wei.haz(x, 0.2, 5), add = TRUE, col = &quot;green&quot;) 圖 85.4: Illustrations of the hazard function under a Weibull distribution with lambda = 0.2, and different shape (kappa) 在 Weibull 分布下，參數 \\(\\kappa\\) 決定了風險度曲線的形狀。 \\(\\kappa &lt; 1\\) 時，風險度隨着時間下降，\\(\\kappa &gt; 1\\) 時，風險度隨着時間上升。當 \\(\\kappa = 1\\) 時，Weibull 分布降級爲簡單的指數分布 (圖中點狀直線)。當 \\(\\kappa = 2\\) 時，風險度和時間成線性關系。 85.10.4 探索 對數邏輯 (log-logistic) 分布時，風險度方程曲線會有哪些特性？ \\[ h(t) = \\frac{e^\\theta \\kappa t^{\\kappa -1}}{1 + e^\\theta t^\\kappa} \\] loglog.haz &lt;- function(x, theta, kappa) { exp(theta)*kappa*x^(kappa - 1)/(1 + exp(theta)*x^kappa) } curve(loglog.haz(x, 1, 0.2), ylim=c(0,6), xlab = &quot;Time&quot;, ylab = &quot;Hazard function&quot;, col = &quot;red&quot;) curve(loglog.haz(x, 1, 2), add = T, col = &quot;black&quot;) curve(loglog.haz(x, 3, 2), add = T, col = &quot;blue&quot;) 圖 85.5: Illustrations of the hazard function under a log-logistic distribution with different theta, and different shape (kappa) 在 Weibull 分布下，風險度只能隨着時間單調遞增或者遞減。但是，在對數邏輯分布下，風險度就可以跟隨時間有增有減。 "],["nonparametric.html", "第 86 章 非參數法分析生存數據 86.1 本章概要 86.2 生存分析中的非參數分析法 86.3 Kaplan-Meier 法分析生存方程 86.4 Kaplan-Meier 數據的信賴區間的估計 86.5 另一種非參數法分析 – 生命表格估計 86.6 兩組之間生存概率的比較 86.7 計算累積風險度 cumulative hazard 86.8 關於非參數分析法的一些延伸 86.9 Practical Survival 02", " 第 86 章 非參數法分析生存數據 86.1 本章概要 本章內容包括 使用非參數方法（分別是Kaplan-Meier法，和生命表法）估計生存方程，累計風險度方程，同時考慮刪失值。 使用 Greenwood 表達式 (Greenwood’s) 計算非參數法獲得的參數估計的不確定性（即信賴區間）。 製作生存分析非參數法的繪圖。 非參數法比較不同組間（治療組對照組）的生存時間。 學會並理解如何實施 log rank test 比較兩組之間生存時間模式的不同 (pattern of survival times) 在R中實際操作非參數法分析生存數據，並理解其輸出結果的含義。 86.2 生存分析中的非參數分析法 非參數法分析生存數據其實是所有人在分析生存數據時應該着手做的第一件事。 非參數法可以對生存時間不必進行任何參數分布 (parametric assumption) 的假設，初步地估計生存方程和累積風險度方程; 使用非參數法可以用生存曲線圖的方式直觀地展示生存數據，包括刪失值在數據中的存在也可以通過圖表來表現出來; 非參數法可以初步地對不同組/羣之間生存曲線的變化進行比較; 通過非參數法對生存數據進行初步分析之後，可以對其後更加複雜的生存數據建模過程提供有參考價值的背景信息。 86.3 Kaplan-Meier 法分析生存方程 86.3.1 當數據中沒有刪失值 如果，研究對象裏的每個人都發生了事件，那麼研究對象裏的每個人身上都觀察到了生存時間，自然而然地特定時間 \\(t\\) 時的生存方程是: \\[ \\hat{S}(t) = \\frac{\\text{number of individuals with survival time} &gt; t}{\\text{total number of individuals}} \\] 在每個觀察到事件的時間點 \\(t_1 &lt; t_2 &lt; t_3 &lt; \\cdots &lt; t_K\\)，我們可以計算該時間點的生存方程，然後假定兩個事件的時間點之間的生存概率保持不變，就可以繪制出一個階梯形狀的生存曲線。也就是說，只有在觀察到事件的那些時間點上，生存方程得到定義。 Example 86.1 依舊是白血病患者數據，估計對照組的生存方程。在這個白血病患者數據中，對照組中並沒有刪失值，正好可以用來展示沒有刪失值時，生存方程的計算過程。對照組中有21名白血病患者，我們感興趣的事件是癌症是否緩解，此時的生存時間是，緩解前的時間（單位週）他們的數據被總結在下面的表格中，其中治療組的時間後面某些患者的星號 (*) 表示這些患者無緩解，是刪失值： .tg {border-collapse:collapse;border-spacing:0;} .tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px; overflow:hidden;padding:10px 5px;word-break:normal;} .tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px; font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;} .tg .tg-8hhd{border-color:inherit;font-size:18px;text-align:left;vertical-align:top} .tg .tg-fuxe{border-color:inherit;font-size:18px;text-align:left;vertical-align:top} Control group 1,1,2,2,3,4,4,5,5,8,8,8,8,11,11,12,12,15,17,22,23 Treatment group 6*,6,6,6,7,9*,10*,10,11*,13,16,17*,19*,20*,22,23,25*,32*,32*,34*,35* 對照組中患者的實際觀測數據計算獲得的生存方程總結在下面的表格中： \\(t_j\\) Number of events \\(d_j\\) \\(\\hat{S}(t_j)\\) 1 2 19/21 = 0.90 2 2 17/21 = 0.81 3 1 16/21 = 0.76 4 2 14/21 = 0.67 5 2 12/21 = 0.57 8 4 8/21 = 0.38 11 2 6/21 = 0.29 12 2 4/21 = 0.19 15 1 3/21 = 0.14 17 1 2/21 = 0.10 22 1 1/21 = 0.05 23 1 0 上面表格中估計的生存方程可以用下圖 86.1 來表示。可見這樣的生存方程繪製成的生存曲線其實是呈現階梯狀的。這也是爲什麼我們說在這樣的非參數過程中，生存方程在觀察到事件的兩個時間點之間默認生存方程是恆定不變的。 圖 86.1: Estimated survivor function corresponding to the leukaemia data in the control group. 86.3.2 當數據中有刪失值 前一小節提到的非參數法繪制生存時間曲線的方法，其實完全可以拓展到含有刪失值的生存數據中。同樣地，用 \\(t_1 &lt; t_2 &lt; t_3 &lt; \\cdots &lt; t_K\\) 表示發生事件的觀察對象的生存時間。我們可以用以下的步驟來拓展生存時間曲線的繪制思路: 首先定義 \\(h_j\\) 作爲時間 \\(t_j\\) 時期的風險率 (hazard rate)，那麼每個發生事件的對象的風險和生存時間就有了各自的關聯 \\(h_1, h_2, \\cdots, h_k\\); 在時間點 \\(t_1\\) 時，隊列中的全部對象中，沒有發生事件的概率是 \\(1-h_1\\); 在時間點 \\(t_2\\) 時，隊列中的全部對象中，在時間 \\(t_1, t_2\\) 時都沒有發生事件的概率是 \\((1-h_1)(1-h_2)\\); 所以，生存方程就是，任何一個人，在任何一個時間點，在隊列中，且不發生事件的概率 \\[S(t_j) = \\prod_{k=1}^j(1-h_k)\\] 此時，每個時間點風險度方程的無偏估計爲，該時間點中在隊列中發生事件的人數 \\(d_j\\) 除以當時在隊列中的人數 \\(n_j\\): \\[ \\hat h_j = \\frac{d_j}{n_j} \\] 用上面的這些初步結果，可以推導出在時間點 \\(t_j\\) 時，隊列中的生存方程是: \\[ \\hat S(t_j) = \\prod_{k=1}^j (1-\\hat h_k) = \\prod_{k=1}^j ( 1- \\frac{d_k}{n_k}) \\] 它的更加一般化形式就是我們常常念叨的那個生存方程的 Kaplan-Meier 估計量，它的別名是 “the product limit estimate”: \\[ \\begin{equation} \\hat S(t) = \\prod_{j|t_j \\leqslant t} (1 - \\frac{d_j}{n_j}) \\end{equation} \\tag{86.1} \\] Example 86.2 下表羅列了某個白血病患者治療組生存數據的 Kaplan-Meier 生存方程估計和他們的計算過程，其中值得注意的是，如果生存表格中某時間點 (年或月或日，取決於你的研究使用的時間刻度) 同時有事件 (event) 和刪失 (censoring)，習慣上是默認刪失發生在事件發生之前: 表 72.1: Time to remission for leukaemia patients in the treatment group: Kaplan-Meier estimates of the survivor function Survival time \\((t_j)\\) and censoring time Number at risk Number of events Number of censorings \\(\\hat{S}(t_j)\\) 6 21 3 1 (1-3/21) = 0.857 7 17 1 0 (1-3/21)(1-1/17) = 0.807 9 16 0 1 – 10 15 1 1 (1-3/21)(1-1/17)(1-1/15) = 0.753 11 13 0 1 – 13 12 1 0 0.69 16 11 1 0 0.627 17 10 0 1 – 19 9 0 1 – 20 8 0 1 – 22 7 1 0 0.538 23 6 1 0 0.448 25 5 0 1 – 32 4 0 2 – 34 2 0 1 – 35 1 0 1 – 下圖 86.2 則繪製了治療組處理了刪失值後的生存方程數據。 圖 86.2: Kaplan-Meier survival curve for leukaemia patients in the treatment group. 86.4 Kaplan-Meier 數據的信賴區間的估計 Greenwood’s 公式的推導: 如何推導獲得生存估計 \\(\\hat{S}(t_j)\\) 的方差呢？ 利用方程 (86.1) 的對數: \\[ \\begin{aligned} \\text{Var}\\{ \\text{log}\\hat{S}(t) \\} &amp; = \\text{Var}\\{ \\text{log}\\prod_{j|t_j \\leqslant t} (1 - \\hat{h}_j)\\} \\\\ &amp; = \\text{Var}\\{ \\sum_{j|t_j \\leqslant t} \\text{log}(1-\\hat{h}_j)\\} \\\\ &amp; = \\sum_{j|t_j \\leqslant t}\\text{Var}\\{ \\text{log}(1-\\hat{h}_j) \\} \\end{aligned} \\] 接下來利用線性近似原則 (linear approximation)，也就是英国数学家泰勒的一次近似泰勒展开法 (first order Taylor series approximation): \\[ \\begin{equation} \\text{log} (1-\\hat{h}_j) \\approx \\text{log}(1-h_j) + (\\hat{h}_j - h_j)/(1-h_j) \\end{equation} \\tag{86.2} \\] 這個近似公式可以讓我們得到其方差爲: \\[ \\text{Var}\\{ \\text{log}(1-\\hat{h}_j) \\} \\approx \\frac{\\text{Var}(\\hat{h}_j)}{(1-h_j)^2} \\] 这个就是大名鼎鼎的 Delta 法。 接下來需要推導風險 (hazard) \\(\\hat{h}_j\\) 的方差，注意，在時間 \\(t_j\\) 時， 事件發生次數 \\(d_j\\) 其實是服從如下的二項分布: \\[ d_j \\sim \\text{Binomial}(n_j, h_j) \\] 所以， \\[ \\text{Var}(\\hat{h}_j) = \\frac{\\text{Var}(d_j)}{n_j^2} \\] 根據伯努利分布 (Chapter 4) 和二項分布 (Chapter 5) 的性質: \\[ \\text{Var}(\\hat{h}_j) = \\frac{\\text{Var}(d_j)}{n_j^2} = \\frac{n_jh_j(1-h_j)}{n_j^2} = \\frac{h_j(1-h_j)}{n_j} \\] 綜上可得: \\[ \\text{Var}\\{ \\text{log}(\\hat{S}(t)) \\} = \\sum_{j|t_j \\leqslant t}\\frac{h_j}{n_j(1-h_j)} \\] 這裏再對 \\(\\log(\\hat{S}(t))\\) 用一次線性近似: \\[ \\log\\hat{S}(t) \\approx \\log S(t) + \\frac{\\hat{S}(t) - S(t)}{S(t)} \\] 所以其實 \\[ \\text{Var}\\{ \\log (\\hat{S}(t)) \\} = \\frac{\\text{Var}\\{ \\hat{S}(t) \\}}{S(t)^2} \\] 最終我們獲得 Greenwood’s 公式: \\[ \\begin{equation} \\text{Var}\\{ \\hat{S}(t) \\} = \\hat{S}(t)^2\\sum_{j|t_j \\leqslant t}\\frac{h_j}{n_j(1-h_j)} \\end{equation} \\tag{86.3} \\] 獲得生存方程的方差以後，接下來就是 95% 信賴區間的推導: \\[ \\hat{S}(t) \\pm 1.96 \\sqrt{\\text{Var}\\{ \\hat{S}(t) \\}} \\] 這裏獲得的 Kaplan-Meier 信賴區間是沒有錯的，但是在某些較爲極端的生存數據中 (時間接近 0, 或者時間接近追蹤結束)，這個公式可能導致計算獲得的信賴區間超過 \\((0,1)\\)。因爲這裏我們假定的是生存概率近似服從正態分布時，才能使用的信賴區間公式。另一個改良版本的區間公式可以避免出現不正常的信賴區間。它需要對生存數據進行數學轉換。常用的生存數據的數學轉換是 \\(\\log\\{-\\log \\hat{S}(t) \\}\\)。利用上面推導 Greenwood’s 公式 (86.3) 時相似的過程，我們可以獲得該轉換過後的方差是: \\[ \\begin{equation} \\text{Var}\\{ \\log\\{-\\log \\hat{S}(t)\\} \\} \\approx \\frac{\\text{Var}\\{\\log\\hat{S}(t) \\}}{\\{ \\log S(t) \\}^2} \\end{equation} \\tag{86.4} \\] 如果使用 \\(v^2(t)\\) 來標記上式 (86.4) 時，有 \\[ \\begin{aligned} \\log\\{- \\log \\hat{S}(t) \\} - 1.96v(t) &amp; &lt; \\log\\{-\\log S(t) \\} &lt; \\log\\{- \\log \\hat{S}(t) \\} + 1.96v(t) \\\\ \\text{Taking the exponential:} &amp; \\\\ \\{ -\\log \\hat{S}(t) \\} \\exp(-1.96v(t)) &amp; &lt; -\\log S(t) &lt; \\{ -\\log \\hat{S}(t) \\} \\exp(1.96v(t)) \\\\ \\text{Multiply everything by } &amp; -1: \\\\ \\{ \\log \\hat{S}(t) \\} \\exp(1.96v(t)) &amp; &lt; \\log S(t) &lt; \\{ \\log \\hat{S}(t) \\} \\exp(-1.96v(t)) \\\\ \\text{Take the exponential again:} &amp; \\\\ \\hat{S}(t)^{\\exp(1.96v(t))} &amp; &lt; S(t) &lt; \\hat{S}(t)^{\\exp(-1.96v(t))} \\end{aligned} \\] 所以，這個校正版本的生存方程信賴區間公式就是: \\[\\hat{S}(t)^{\\exp\\{ \\mp1.96 v(t)\\}}\\] 實際上在操作統計軟件的時候你並不需要特別精通上面的推導過程，但是要記得估計非參數法生存方程的 Kaplan-Meier 曲線時，它的95%信賴區間有兩種計算方式，如下圖 86.3 中我們給白血病患者數據中的治療組患者的生存曲線增加了95%信賴區間。 圖 86.3: Kaplan-Meier survival curve (solid line) and 95-percent confidence limits (dotted lines) for leukaemia patients in the treatment group. (a) using Greenwoods formula, (b) using the alternative confidence limits. 86.5 另一種非參數法分析 – 生命表格估計 Kaplan-Meier 估計的生存方程過程中，我們假定的是觀察到事件的時間點是間斷不連續的，也就是哪個事件發生在哪個時間點，是可以被精確觀察到的。然而，現實比較骨感的時候，你的數據可能只有生命表格，也就是常見的如一年內本市死亡人口多少多少人這樣，事件發生在某個時間區間內的類型數據。因爲此時無法特定每個死亡人口發生死亡時的確切時間日期。此時可以利用生命表格計算。 我們假定，某個隨訪時間可以被分爲許許多多的時間區間 \\(I_1, I_2, \\cdots, I_K\\)，且這些時間區間並不一定需要等間距。另外，用 \\(d_j\\) 表示在時間區間 \\(I_j\\) 中發生的事件次數，在該時間段的起始點的時刻，有 \\(n_j\\) 個觀察對象 (number of individuals at risk at the start of interval \\(I_j\\))，其中在下一段時間開始之前，有 \\(m_j\\) 個刪失值。用這些數學標記來表示時間段 \\(I_j\\) 中發生事件的概率 (前提是這 \\(n_j\\) 個觀察對象在時間段 \\(I_j\\) 開始前還沒有發生事件): \\[p_j = \\frac{d_j}{n_j - m_j/2}\\] 分母中使用了 \\(m_j/2\\) 是由於我們無法確定事件發生和刪失值發生的時間在這個時間段 \\(I_j\\) 中是如何分布的，所以我們只能假定/默認他們平均的分布在時間段 \\(I_j\\) 中點的兩側。如此，生命表法計算的生存方程公式就是: \\[ \\hat{S}(t) = \\prod_{k = 1}^j(1-p_k) \\text{ for } t_j \\leqslant t &lt; t_{j+1} \\] 你可以看出，生命表的推算生存方程，其實和 Kaplan-Meier 法很接近，你同樣可以使用 Greewood’s 的公式 (用 \\(n_j - m_j/2\\) 替換掉 \\(n_j\\) 即可) 獲取生命表生存方程的方差用於計算其信賴區間。 Example 86.3 心絞痛患者死亡追蹤: 生命表格的制作例子 (選自 (Belle et al. 2004))。本例子中，2418 名男性心絞痛患者被收入研究中並追蹤其死亡結果，記錄數據中包括患者死亡的日期和患者離開研究的時間。下面的表格是追蹤前十年的數據: 表 72.2: Men with angina: Numbers of deaths \\((d_j)\\), cencorings \\((m_j)\\), total numbers at risk \\((n_j)\\), and the life-table estimate of the survivor function by year. Year \\(n_j\\) \\(d_j\\) \\(m_j\\) \\(p_j\\) \\(1-p_j\\) \\(\\hat S(t)\\) 0-1 2418 456 0 456/2418 = 0.188 0.812 0.812 1-2 1962 226 39 226/(1962 - 39/2) = 0.116 0.884 0.718 2-3 1697 152 22 152/(1697 - 22/2) = 0.090 0.910 0.653 3-4 1523 171 23 171/(1523 - 23/2) = 0.113 0.887 0.579 4-5 1329 135 24 135/(1329 - 24/2) = 0.103 0.897 0.519 5-6 1170 125 107 125/(1170 - 107/2) = 0.112 0.888 0.461 6-7 938 83 133 83/(938 - 133/2) = 0.095 0.905 0.417 7-8 722 74 102 74/(722 - 102/2) = 0.110 0.890 0.371 8-9 546 51 68 51/(546 - 68/2) = 0.100 0.900 0.334 9-10 427 42 64 42/(427 - 64/2) = 0.106 0.894 0.299 圖 86.4: Men with angina data: Life table estimate of the survivor function. 看圖 86.4 和上面估計的生存概率估計表格，請回答: 患者的 5 年以上生存概率是多少？ (51.9% 表格第五行) 患者的 2.5 年以上生存概率是多少？ (71.8% 記住在 2-3 年這段時間內生存概率被假定是不變的) 86.6 兩組之間生存概率的比較 本章目前爲止介紹的非參數法可以用於初步地對生存數據中不同組之間生存概率的比較。我們當然可以給不同組的患者/研究對象估計各自的生存曲線 (和信賴區間) 繪圖比較。 Example 86.4 治療組和對照組白血病患者的生存曲線比較: (本例中，時間是從發病到症狀緩解的時間，所以時間越短，說明療法越好) 下圖繪制的是治療組21名患者和對照組21名患者的生存概率曲線和它們各自的信賴區間。治療組的症狀緩解時間明顯比對照組要長，暗示治療方案可能對患者有不太好的影響。且途中的兩條生存曲線的95%信賴區間也基本沒有重疊。 圖 86.5: Kaplain-Meier time-to-remission survival curves (solid lines) in leukemia patients in treatment and control groups, with corresponding 95% confidence limits(dotted lines) 看圖中的生存曲線，目測第十周時，治療組和對照組各自的生存率大概是多少，你的結論是怎樣的？ 從圖上看，在對照組，第十周時患者的生存概率在 40% 左右; 在治療組，第十周時患者的生存概率是 75% 左右。所以，治療組中的患者傾向於需要更多的時間才能達到症狀緩解。在第十周時，對照組患者有 60% 已經症狀緩解，然而治療組只有 25% 的患者症狀緩解，所以我們認爲數據提示治療方法可能對患者是有副作用的。 86.6.1 The log rank test 兩組 (或者更多組) 之間生存概率曲線其實是可以用統計學檢驗方法來檢驗的。用 \\(S_1(t),S_2(t)\\) 分別表示兩組研究對象的生存概率。那麼在時間點 \\(u\\) 時，兩組時間生存概率的比較可以用下面的檢驗統計量: \\[ \\begin{equation} \\frac{\\hat S_1(u) - \\hat S_2(u)}{\\sqrt{var \\hat S_1(u) + var \\hat S_2(u)}} \\end{equation} \\tag{86.5} \\] 然後把這個統計量拿去和標準正態分布做比較 (z-test)。 但是其實我們可以做得檢驗可以更多，比如比較兩組患者之間生存概率的分布，而不是只看某個時間點的生存概率之差。這種檢驗方法叫做 log rank test，或者 Mantel-Haenszel 檢驗。該檢驗的零假設是，兩組患者的生存曲線相同，它比較的是兩組患者的總體生存概率 (the whole survivor curves)。 接下來我們來推導這個檢驗方法。首先，先列出兩組患者在特定時間點時的數據: 表 72.2: Summary of numbers at risk and number of events at time \\(t_j\\) in two groups. Group Events at \\(t_j\\) Number of surviving beyond \\(t_j\\) Total number at risk at \\(t_j\\) 1 \\(d_{1j}\\) \\(n_{1j} - d_{1j}\\) \\(n_{1j}\\) 1 \\(d_{2j}\\) \\(n_{2j} - d_{2j}\\) \\(n_{2j}\\) Total \\(d_j\\) \\(n_j\\) dj \\(n_j\\) 在零假設 – 不同的組之間，在該時間點時事件發生次數沒有差別 – 的條件下，第一組患者中事件發生次數服從超幾何分布 (hypergeometric distribution) (章節: 5.2)。在超幾何分布下，組樣本量 \\(n_{1j}\\) 中發生事件次數 \\(d_{1j}\\) 在全體 (總樣本量 \\(n_j\\)，事件次數 \\(d_j\\)) 中的概率是: \\[ \\begin{equation} \\frac{\\binom{d_{j}}{d_{1j}}\\binom{n_j - d_j}{n_{1j} - d_{1j}}}{\\binom{n_j}{n_1j}} \\end{equation} \\] 對於第二組的患者，發生 \\(d_{2j}\\) 次事件的概率也可以用相同的公式。那麼在給定的時間點 \\(t_j\\)，在零假設 – 不同的組之間，在該時間點時事件發生次數沒有差別 – 的條件下， 第一組患者中發生事件次數的期望值 (expectation): \\[ \\begin{aligned} e_{1j} = \\frac{n_{1j}d_j}{n_j} \\end{aligned} \\tag{86.6} \\] 套用這個公式 (86.6)，我們可以計算每個時間點上事件發生次數的期望值和實際觀測值之間的差: \\(d_{1j}-e_{1j}\\) 然後把每個時間點上事件次數的觀測值和期望值之間的差求和: \\[ \\begin{equation} \\sum_j (d_{1j} - e_{1j}) \\end{equation} \\tag{86.7} \\] 如果零假設成立，統計量 (86.7) 應該等於零或者接近等於零。根據超幾何分布的方差， \\[ v_{1j}^2 = \\text{var}(d_{1j}) = \\frac{n_{1j}n_{2j}d_{j}(n_j - d_j)}{n_j^2 (n_j - 1)} \\] 所以，log-rank test 的檢驗統計量是 \\[ \\frac{\\{ \\sum_j(d_{1j} - e_{1j}) \\}^2}{\\sum_jv^2_{1j}} \\sim \\chi_1^2 \\] 因此，在零假設條件下，這裏是兩組對象生存曲線的比較，所以它服從的是自由度爲 1 的卡方分布，如果比較的是兩組以上 (n) 的生存概率曲線，那麼這個統計量將會服從自由度爲 (n-1) 的卡方分布 \\(\\chi^2_{n-1}\\)。 86.7 計算累積風險度 cumulative hazard 本章目前位置着重使用非參數方法估計生存方程。事實上，非參數方法也可以用於估計累積風險度(cumulative hazard)。累積風險度的定義爲: \\[ H(t) = \\int_0^t h(t)\\text{d}t \\] 它和生存概率方程之間的關系爲: \\[ H(t) = -\\log S(t) \\] 所以，非參數類型的累積風險度可以利用這個公式，套入 Kaplan-Meier 法估計的生存概率: \\[ \\hat H(t) = - \\log \\hat S(t) \\] 另一個科學家 Nelson-Aalen 發現另一個更簡單的公式: \\[ \\begin{equation} \\tilde{H}(t) = \\sum_{j|t_j \\leqslant t}\\hat h_j = \\sum_{j|t_j \\leqslant t} \\frac{d_j}{n_j} \\end{equation} \\tag{86.8} \\] 這個公式 (86.8) 的估算結果和 Kaplan-Meier 估計的累積生存曲線會非常接近，且可以被認爲漸進相同 (asymptotically equivalent)。 圖 86.6: Leukaemia patient data: comparing Kaplan-Meier and Nelson-Aalen estimates of the cumulative hazard in the treatment and control groups. 86.8 關於非參數分析法的一些延伸 目前本章節的例子主要關注了兩組之間的生存曲線的比較，但是很顯然它可以被擴展開去： 非參數法比較生存曲線也可以用於比較2組以上的生存曲線。 如果有一些我們希望能夠控制的變量恰好是分類型的變量（例如性別），那麼我們可以依據該非類型數據繪製每個分類的生存曲線進行視覺上的比較。 很顯然當你有許多個分類變量需要進行調整的時候，2. 的方法就顯得過於耗時耗力。 非參數法分析生存數據最明顯的缺陷是，使用非參數法我們只能進行粗略且無法定量的比較。也就是說當治療組與對照組存在生存曲線的差異時，我們沒辦法定量地描述其差異是多少。 另外，非參數法分析生存數據的另一個缺點是，這種手段對連續型的暴露變量其實是束手無策的。某些情況下可能可以把連續變量人爲地分割成一個分類型變量，但這顯然並不能令人滿意。 86.9 Practical Survival 02 86.9.1 Part 1: PBC 數據 在R裏讀入數據，熟悉數據的各個變量，哪個變量是用於表示事件發生與否的指示變量（failure indicator）?哪些變量又表示患者進入/離開研究的時間點？哪個變量表示了患者的治療組？總結（summary）兩個治療組的生存時間。 # summarize and explore the data library(haven) pbcbase &lt;- read_dta(&quot;../backupfiles/pbcbase.dta&quot;) head(pbcbase) ## # A tibble: 6 × 17 ## id datein dateout time d treat age logb0c alb0c logigm0c cenc0 cir0 gh0 asc0 ## &lt;dbl&gt; &lt;date&gt; &lt;date&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 5 1980-02-19 1981-09-19 1.58 1 1 46 1.04 -2.52 -8.80e-1 1 0 0 0 ## 2 22 1980-08-22 1980-08-22 0 0 2 68 0.400 6.68 7.90e-1 0 1 0 0 ## 3 23 1980-07-22 1989-08-02 9.03 0 2 65 0.0800 7.68 1.60e-1 0 0 0 0 ## 4 40 1980-08-08 1982-11-21 2.29 1 1 36 0.400 4.68 7.00e-2 0 1 0 0 ## 5 42 1980-09-06 1982-10-05 2.08 1 1 38 0.830 4.68 -1.19e-9 0 0 0 1 ## 6 45 1980-02-09 1985-06-02 5.31 1 1 48 -0.260 5.68 -8.40e-1 1 0 0 0 ## # … with 3 more variables: bil0 &lt;dbl&gt;, alb0 &lt;dbl&gt;, igm0 &lt;dbl&gt; with(pbcbase, tabpct(treat, d, graph = FALSE)) ## ## Original table ## d ## treat 0 1 Total ## 1 45 49 94 ## 2 50 47 97 ## Total 95 96 191 ## ## Row percent ## d ## treat 0 1 Total ## 1 45 49 94 ## (47.9) (52.1) (100) ## 2 50 47 97 ## (51.5) (48.5) (100) ## ## Column percent ## d ## treat 0 % 1 % ## 1 45 (47.4) 49 (51) ## 2 50 (52.6) 47 (49) ## Total 95 (100) 96 (100) #### median time Median_t &lt;- ddply(pbcbase,c(&quot;treat&quot;,&quot;d&quot;),summarise,Median=median(time)) Median_t ## treat d Median ## 1 1 0 3.7426419 ## 2 1 1 3.0006845 ## 3 2 0 5.4483230 ## 4 2 1 2.2012320 你能親手計算下面不完整表格中的？部分嗎？ .tg {border-collapse:collapse;border-color:#ccc;border-spacing:0;} .tg td{background-color:#fff;border-color:#ccc;border-style:solid;border-width:0px;color:#333; font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;} .tg th{background-color:#f0f0f0;border-color:#ccc;border-style:solid;border-width:0px;color:#333; font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;} .tg .tg-vmxo{font-size:16px;text-align:right;vertical-align:top} Time Beg. Total Fail Net Lost Survivor Function 0.104 26 1 0 0.9615 0.2628 25 1 0 0.9231 0.4572 24 1 0 0.8846 0.4846 23 1 0 0.8462 0.9172 22 0 1 0.8462 1.164 21 1 0 0.8059 1.369 20 1 0 0.7656 1.572 19 0 1 ？ 1.687 18 1 0 ？ 1.725 17 1 0 ？ 2.182 16 1 0 ？ 2.201 15 1 0 0.5954 2.634 14 0 1 ？ 2.667 13 1 0 ？ 3.047 12 0 1 0.5496 3.45 11 1 0 0.4997 … … … … … 8.89 2 0 1 0.1399 11.25 1 0 1 0.1399 正確答案在這裏，你算對了嗎？ Beg. Net Survivor Std. Time Total Fail Lost Function Error [95% Conf. Int.] ------------------------------------------------------------------------------- .104 26 1 0 0.9615 0.0377 0.7569 0.9945 .2628 25 1 0 0.9231 0.0523 0.7260 0.9802 .4572 24 1 0 0.8846 0.0627 0.6836 0.9613 .4846 23 1 0 0.8462 0.0708 0.6404 0.9393 .9172 22 0 1 0.8462 0.0708 0.6404 0.9393 1.164 21 1 0 0.8059 0.0780 0.5946 0.9143 1.369 20 1 0 0.7656 0.0839 0.5505 0.8873 1.572 19 0 1 0.7656 0.0839 0.5505 0.8873 1.687 18 1 0 0.7230 0.0894 0.5044 0.8576 1.725 17 1 0 0.6805 0.0937 0.4603 0.8262 2.182 16 1 0 0.6380 0.0970 0.4180 0.7933 2.201 15 1 0 0.5954 0.0994 0.3773 0.7590 2.634 14 0 1 0.5954 0.0994 0.3773 0.7590 2.667 13 1 0 0.5496 0.1018 0.3337 0.7215 3.047 12 0 1 0.5496 0.1018 0.3337 0.7215 3.45 11 1 0 0.4997 0.1041 0.2866 0.6803 3.472 10 1 0 0.4497 0.1050 0.2425 0.6371 3.855 9 1 0 0.3997 0.1045 0.2012 0.5920 4.249 8 1 0 0.3498 0.1027 0.1625 0.5448 5.47 7 0 1 0.3498 0.1027 0.1625 0.5448 5.541 6 0 1 0.3498 0.1027 0.1625 0.5448 6.762 5 1 0 0.2798 0.1033 0.1056 0.4859 6.905 4 1 0 0.2099 0.0983 0.0601 0.4202 8.019 3 1 0 0.1399 0.0869 0.0259 0.3469 8.89 2 0 1 0.1399 0.0869 0.0259 0.3469 11.25 1 0 1 0.1399 0.0869 0.0259 0.3469 ------------------------------------------------------------------------------- pbc.km &lt;- survfit(Surv(time, d) ~ treat, data = pbcbase) summary(pbc.km) ## Call: survfit(formula = Surv(time, d) ~ treat, data = pbcbase) ## ## treat=1 ## time n.risk n.event survival std.err lower 95% CI upper 95% CI ## 0.02464 90 1 0.9889 0.01105 0.96747 1.0000 ## 0.05202 89 1 0.9778 0.01554 0.94779 1.0000 ## 0.10404 88 1 0.9667 0.01892 0.93028 1.0000 ## 0.13142 87 1 0.9556 0.02172 0.91391 0.9991 ## 0.41068 86 1 0.9444 0.02415 0.89829 0.9930 ## 0.67077 84 1 0.9332 0.02635 0.88297 0.9863 ## 0.70089 83 1 0.9220 0.02833 0.86808 0.9792 ## 0.93361 81 1 0.9106 0.03018 0.85331 0.9717 ## 1.08145 79 1 0.8990 0.03192 0.83861 0.9638 ## 1.21287 77 1 0.8874 0.03357 0.82395 0.9557 ## 1.24846 76 1 0.8757 0.03510 0.80953 0.9473 ## 1.25120 75 1 0.8640 0.03653 0.79532 0.9387 ## 1.32512 74 1 0.8523 0.03785 0.78129 0.9299 ## 1.42916 73 1 0.8407 0.03909 0.76744 0.9209 ## 1.45927 72 1 0.8290 0.04026 0.75373 0.9118 ## 1.46475 71 1 0.8173 0.04135 0.74017 0.9025 ## 1.58248 70 1 0.8056 0.04237 0.72673 0.8931 ## 2.07803 66 1 0.7934 0.04345 0.71268 0.8833 ## 2.28611 64 1 0.7810 0.04451 0.69850 0.8733 ## 2.63655 63 1 0.7686 0.04550 0.68445 0.8632 ## 2.80082 61 1 0.7560 0.04646 0.67025 0.8528 ## 2.80356 60 1 0.7434 0.04737 0.65617 0.8423 ## 2.89117 58 1 0.7306 0.04825 0.64191 0.8316 ## 2.90212 57 1 0.7178 0.04908 0.62778 0.8207 ## 3.00068 56 1 0.7050 0.04985 0.61375 0.8098 ## 3.25530 51 1 0.6912 0.05075 0.59852 0.7981 ## 3.29090 50 1 0.6773 0.05158 0.58342 0.7864 ## 3.33196 49 1 0.6635 0.05235 0.56845 0.7745 ## 4.18344 43 1 0.6481 0.05336 0.55150 0.7616 ## 4.27105 42 1 0.6327 0.05427 0.53474 0.7485 ## 4.33676 41 1 0.6172 0.05510 0.51815 0.7352 ## 4.55852 40 1 0.6018 0.05584 0.50172 0.7218 ## 4.63518 38 1 0.5860 0.05657 0.48493 0.7080 ## 4.77481 36 1 0.5697 0.05730 0.46776 0.6938 ## 4.87611 34 1 0.5529 0.05801 0.45016 0.6792 ## 4.93635 33 1 0.5362 0.05862 0.43275 0.6643 ## 4.99658 31 1 0.5189 0.05923 0.41486 0.6490 ## 5.14990 30 1 0.5016 0.05972 0.39718 0.6334 ## 5.27584 28 1 0.4837 0.06022 0.37894 0.6173 ## 5.31143 27 1 0.4658 0.06059 0.36092 0.6010 ## 5.40726 26 1 0.4478 0.06085 0.34313 0.5845 ## 6.05613 19 1 0.4243 0.06205 0.31853 0.5651 ## 6.20671 18 1 0.4007 0.06292 0.29455 0.5451 ## 6.41478 16 1 0.3757 0.06378 0.26933 0.5240 ## 6.92950 12 1 0.3443 0.06570 0.23692 0.5005 ## 6.94593 11 1 0.3130 0.06677 0.20609 0.4755 ## 7.12663 8 1 0.2739 0.06894 0.16725 0.4486 ## 7.78371 6 1 0.2283 0.07097 0.12410 0.4199 ## 9.25941 2 1 0.1141 0.08816 0.02511 0.5187 ## ## treat=2 ## time n.risk n.event survival std.err lower 95% CI upper 95% CI ## 0.02464 93 1 0.9892 0.01069 0.9685 1.0000 ## 0.10404 92 1 0.9785 0.01504 0.9495 1.0000 ## 0.26283 91 1 0.9677 0.01832 0.9325 1.0000 ## 0.39425 90 1 0.9570 0.02104 0.9166 0.9991 ## 0.45722 89 1 0.9462 0.02339 0.9015 0.9932 ## 0.48460 88 1 0.9355 0.02547 0.8869 0.9868 ## 0.52841 86 1 0.9246 0.02740 0.8724 0.9799 ## 0.55031 85 1 0.9137 0.02916 0.8583 0.9727 ## 0.56674 84 1 0.9029 0.03077 0.8445 0.9652 ## 0.68720 83 1 0.8920 0.03227 0.8309 0.9575 ## 1.15264 79 1 0.8807 0.03378 0.8169 0.9494 ## 1.16359 78 1 0.8694 0.03518 0.8031 0.9412 ## 1.27036 77 1 0.8581 0.03649 0.7895 0.9327 ## 1.36893 75 1 0.8467 0.03776 0.7758 0.9240 ## 1.60438 72 1 0.8349 0.03902 0.7618 0.9150 ## 1.68652 71 1 0.8231 0.04020 0.7480 0.9058 ## 1.72485 70 1 0.8114 0.04131 0.7343 0.8965 ## 1.74127 69 1 0.7996 0.04235 0.7208 0.8871 ## 1.77139 68 1 0.7879 0.04333 0.7073 0.8775 ## 1.88364 66 1 0.7759 0.04429 0.6938 0.8678 ## 2.03422 65 1 0.7640 0.04519 0.6804 0.8579 ## 2.06434 64 1 0.7521 0.04603 0.6670 0.8479 ## 2.18207 62 1 0.7399 0.04686 0.6535 0.8377 ## 2.20123 60 1 0.7276 0.04768 0.6399 0.8273 ## 2.59274 56 1 0.7146 0.04856 0.6255 0.8164 ## 2.66667 54 1 0.7014 0.04943 0.6109 0.8053 ## 3.33744 52 1 0.6879 0.05029 0.5960 0.7939 ## 3.41410 51 1 0.6744 0.05108 0.5814 0.7823 ## 3.44969 50 1 0.6609 0.05181 0.5668 0.7707 ## 3.47159 49 1 0.6474 0.05248 0.5523 0.7589 ## 3.85489 47 1 0.6336 0.05314 0.5376 0.7468 ## 4.10404 45 1 0.6196 0.05379 0.5226 0.7345 ## 4.10678 44 1 0.6055 0.05438 0.5077 0.7220 ## 4.16701 43 1 0.5914 0.05491 0.4930 0.7094 ## 4.24914 42 1 0.5773 0.05538 0.4784 0.6967 ## 4.25462 41 1 0.5632 0.05579 0.4639 0.6839 ## 5.31691 37 1 0.5480 0.05632 0.4480 0.6703 ## 5.40726 36 1 0.5328 0.05677 0.4324 0.6565 ## 5.88090 28 1 0.5138 0.05785 0.4120 0.6406 ## 6.04791 27 1 0.4947 0.05875 0.3920 0.6244 ## 6.64203 21 1 0.4712 0.06049 0.3664 0.6060 ## 6.76249 19 1 0.4464 0.06218 0.3397 0.5865 ## 6.84463 17 1 0.4201 0.06383 0.3119 0.5658 ## 6.90486 16 1 0.3939 0.06502 0.2850 0.5443 ## 7.82204 13 1 0.3636 0.06670 0.2538 0.5209 ## 8.01917 12 1 0.3333 0.06768 0.2238 0.4962 ## 8.27926 11 1 0.3030 0.06797 0.1952 0.4703 plot(pbc.km, conf.int = F, col = c(&quot;red&quot;, &quot;black&quot;), mark.time = F, xlab = &quot;Time&quot;, ylab = &quot;Survivor function&quot;) 圖 86.7: Rplots of the Kaplan-Meier survivor functions plot(pbc.km, conf.int = T, col = c(&quot;red&quot;, &quot;black&quot;), mark.time = T, xlab = &quot;Time&quot;, ylab = &quot;Survivor function&quot;) 圖 86.8: Rplots of the Kaplan-Meier survivor functions with confidence intervals 在追蹤前兩年，兩組患者的生存方程沒有太大區別，兩年之後，到大約第五年之間，藥物治療組的生存概率曲線似乎要低於對照組，暗示藥物治療在這段時間內可能導致患者較高的死亡率。患者隨訪達到第五年之後，可以看到藥物治療組患者的生存概率曲線一直都處在對照組的上方，提示我們患者被隨訪達到五年之後，藥物治療組的患者死亡率開始低於對照組死亡率。但是，這兩條生存概率曲線的 95% 信賴區間彼此重疊部分很大，且在臨近隨訪達到12年的時候，信賴區間太寬，因爲此時已經沒有多少死亡病例。這兩組患者都有大約 50% 左右的患者的生存率超過五年。 pbc.km1 &lt;- survfit(Surv(time, d) ~ 1, data=subset(pbcbase, pbcbase$treat == 1)) pbc.km2 &lt;- survfit(Surv(time, d) ~ 1, data=subset(pbcbase, pbcbase$treat == 2)) cumhaz.1 &lt;- cumsum(pbc.km1$n.event/pbc.km1$n.risk) cumhaz.2 &lt;- cumsum(pbc.km2$n.event/pbc.km2$n.risk) plot(pbc.km1$time, cumhaz.1, type = &quot;s&quot;, col = &quot;red&quot;, xlab = &quot;Time&quot;, ylab = &quot;Cumulative hazard&quot;) lines(pbc.km2$time, cumhaz.2, type = &quot;s&quot;, col = &quot;black&quot;) 圖 86.9: Rplots of the Nelson-Aalen estimates of the cumulative hazard plot(pbc.km, conf.int= F, col=c(&quot;red&quot;, &quot;black&quot;), mark.time =F,xlab = &quot;Time&quot;, ylab = &quot;Cumulative hazard&quot;, fun = &quot;cumhaz&quot;) 圖 86.10: Rplots of the Kaplan-Meier estimates of the cumulative hazard 從兩個生存累積概率曲線來看，治療組的生存累計概率似乎隨着時間更加呈線性變化。在對照組，風險在5年以後的累計速率陡然升高了。 # the log rank test survdiff(Surv(time, d) ~ treat, data = pbcbase) ## Call: ## survdiff(formula = Surv(time, d) ~ treat, data = pbcbase) ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## treat=1 94 49 45.33 0.2966 0.5696 ## treat=2 97 47 50.67 0.2654 0.5696 ## ## Chisq= 0.6 on 1 degrees of freedom, p= 0.45 whitehall &lt;- read_dta(&quot;../backupfiles/whitehall.dta&quot;) whl.km &lt;- survfit(Surv(time=(timeout - timein)/365.25, event = chd) ~ 1, data = whitehall) plot(whl.km, conf.int = T, mark.time = F, xlab = &quot;Time&quot;, ylab = &quot;Survivor function&quot;, ylim=c(0.8,1)) 圖 86.11: Rplots of the Kaplan-Meier estimates of the survivor curve whl.km &lt;- survfit(Surv(time = (timeout - timein)/365.25, event = chd) ~ sbpgrp, data = whitehall) plot(whl.km, conf.int = F, mark.time = F, xlab = &quot;Time&quot;, ylab = &quot;Survivor function&quot;, ylim = c(0.75, 1), col = c(&quot;blue&quot;, &quot;red&quot;, &quot;green&quot;, &quot;orange&quot;)) legend(1, 0.85, c(&quot;Group 1&quot;, &quot;Group 2&quot;, &quot;Group 3&quot;, &quot;Group 4&quot;), col = c(&quot;blue&quot;, &quot;red&quot;, &quot;green&quot;, &quot;orange&quot;), lty = c(1,1)) 圖 86.12: Rplots of the Kaplan-Meier estimates of the survivor curve 所以，第四組患者的生存率最差， 第一組，第二組患者幾乎沒有差別。 survdiff(Surv(time = (timeout - timein)/365.25, event = chd) ~ sbpgrp, data = whitehall) ## Call: ## survdiff(formula = Surv(time = (timeout - timein)/365.25, event = chd) ~ ## sbpgrp, data = whitehall) ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## sbpgrp=1 383 28 36.81 2.1101 2.776 ## sbpgrp=2 664 44 62.90 5.6786 9.602 ## sbpgrp=3 417 43 37.09 0.9411 1.240 ## sbpgrp=4 213 39 17.20 27.6494 31.153 ## ## Chisq= 36.4 on 3 degrees of freedom, p= 6.1e-08 References "],["surv-reg.html", "第 87 章 生存數據中的回歸模型 87.1 本章概要 87.2 使用參數模型分析生存數據的目的 87.3 生存數據的似然方程 87.4 如何加入解釋變量 87.5 指數模型 exponential model 87.6 Weibull 分布 87.7 Weibull 和 指數模型的比較 87.8 拓展解釋變量（類型與個數）的參數模型 87.9 Practical Survival 03", " 第 87 章 生存數據中的回歸模型 87.1 本章概要 理解回歸模型對於生存數據的重要性 掌握如何定義不同生存分佈的回歸模型（包括指數分佈模型和 Weibull 分佈模型），並在模型中加入解釋變量。 理解這些不同生存分佈模型之間的異同。 能夠用數學表達式描述生存數據的參數模型（parametric models），包括在模型中加入解釋型變量，並考慮刪失值。 用極大似然法 (maximum likelihood estimation)估計生存數據參數模型中的各個參數。 掌握使用R來建立生存數據參數模型的方法，能看懂軟件報告的結果並作出正確的解釋。 87.2 使用參數模型分析生存數據的目的 非參數法章節 (Chapter 86) 討論的那些分析生存數據的基礎方法已經被廣泛接受並應用於比較兩組甚至是多組之間的生存函數（曲線），或風險度的異同。但是這些非參數方法的缺點也很明顯： 無法把連續型變量作爲暴露變量。唯一的解決方法是認爲地把連續型變量給轉換成分類型變量，然後比較落入不同區段內的對象和落入其他區段內對象之間的生存函數/風險度。 如果我們除了有需要比較的主要暴露還需要同時考慮混雜因子（或者互相調整），解決方法是把實驗對象人爲地分組，或者是把對象根據多個分類型暴露變量的組合進行組內的比較。這種方法最終導致劃分地越來越細的那些小組中可以用於分析的對象數據越來越少，最終不可能使分析獲得有意義的結果或解釋。 一般來說，我們希望同時在分析中把多個暴露變量都考慮進來，而且這些暴露變量可以同時包括連續型，二進制型，還有多分類型的變量。這樣的話使用非參數方法逐一分析變得不太有實際操作意義。 本章我們介紹用參數型回歸模型的方法來分析生存數據。這裏所說的回歸模型 (regression modelling) 其實相當類似我們學習過的簡單線性回歸模型，該模型是分析連續型結果變量和多個不同類型解釋變量；或也可以類比與廣義線性回歸中的邏輯回歸模型，即分析一個二進制結果變量和多個不同類型的解釋變量時所構建的回歸模型。之所以我們在這需要強調生存數據的參數模型 (parametric models)，是由於本章節討論的生存回歸模型都假定了生存時間會服從某一個特殊形狀的分佈，這些特殊形狀的生存時間分佈本身由一個或者多個不同的參數來定義。與此形成對比的是非參數分析法中，並沒有使用任何定義生存時間分佈的參數。 87.3 生存數據的似然方程 我們來回憶一下在生存分析第一章節 (Chapter 85) 就介紹過的生存數據似然的數學表達式。 \\[ L = \\prod_i f(t_i)^{\\delta_i}S(t_i)^{1-\\delta_i} \\] \\(i = 1, \\cdots, n\\) 是患者的編號 \\(t_i\\) 是 \\(i\\) 號患者的生存/刪失時間 \\(\\delta_i\\) 是表示 \\(i\\) 號患者的生存/刪失狀態的啞變量 (indicator/dummy variable) \\(f(t_i)\\) 是生存數據(死亡/事件發生患者的)的概率密度方程 probablity density function \\(S(t_i)\\) 是生存數據(生存/刪失患者的)生存概率方程 survivor function 87.4 如何加入解釋變量 讓我們先考慮簡單的情況，如果有且僅有一個二進制變量 (binary explanatory variable \\(X = 0 \\text{ or } 1\\)) 需要加入模型中去。這個唯一的二進制解釋/暴露變量最簡單的例子就是臨牀試驗中，治療組對照組這樣的二進制變量。在這樣的情況下最簡單的比較方法就是前一章節中我們接觸過的用 log-rank 檢驗法檢驗兩條生存曲線是否有模式上的不同（定性檢驗），但是我們也知道這樣的檢驗方法並不能定量地說明當兩組之間存在生存曲線的差異時，這個差異具體有多大。 其他的二進制暴露變量的例子： 觀察型職業隊列研究中的暴露變量，如是否存在職業上的輻射暴露 (occupational exposure to radiation) 觀察型人羣隊列研究中的暴露變量，如是否吸菸 (smoker or non-smoker) 對於一個簡單的二進制暴露變量，我們認爲其中一組 \\((X=1)\\) 患者在時間點 \\(t\\) 時的風險度 (hazard) \\(h_1(t)\\) 和另一個被看作是對照的基準組 (baseline group \\(X=0\\)) 的風險度 \\(h_0(t)\\) 之間的關系是成比例的，即可以用乘法表達式來說明兩組之間的風險度的關係: \\[ h_1(t) = \\psi h_0 (t) \\] 那麼這裏的 \\(\\psi\\) 就是我們關心的參數，需要通過獲得的數據來估計。注意這裏兩組患者的風險度，等式左右兩邊都必須是大於零的，因此 \\(\\psi\\) 的取值要被限制在 \\(&gt;0\\) 範圍。所以，我們常常直接利用指數函數的特性把它改寫成: \\[ h_1(t) = e^\\beta h_0(t) \\] 這樣一來，參數 \\(\\beta\\) 就沒有了取值（是正還是負）的限制。這就是大名鼎鼎的比例風險度模型 (proportional hazard model)。\\(e^\\beta\\) 就是風險度比 (Hazard ratio): \\[ \\frac{h_1(t)}{h_0(t)} = e^\\beta \\] \\(\\beta\\) 就是對數風險度比 (log-hazard ratio)，這個風險度比，不隨着時間推進而變化。所以在這種類型的生存分析的參數模型中，前提條件–比例風險度 (proportional hazard assumption)，是必須被滿足的假設，且無論追蹤時間有多久，我們都默認這個（對數）風險度比是保持不變的。假如有任何證據提示你治療組對照組之間的療效差 (treatment effect) 會隨着時間發生變化的話，這個比例風險度的前提條件就被違反了。 87.5 指數模型 exponential model 我們再回頭看之前介紹過的指數模型，它是最簡單的生存時間分析參數模型。它的幾個特徵方程再次描述如下 風險度方程 hazard function: \\[ h(t) = \\lim_{\\delta\\rightarrow0}\\frac{1}{\\delta}\\text{Pr}(t\\leqslant T &lt;t + \\delta | T&gt;t) = \\lambda \\] 生存概率方程 survivor function: \\[ S(t) = \\text{Pr}(T&gt;t) = \\exp\\{-\\lambda t\\} \\] 概率密度方程 probability density function: \\[ f(t) = \\lambda \\exp\\{ - \\lambda t\\} \\] 記得當生存數據服從指數分布時，風險度 (hazard) 本身 (而不僅僅是比例) 保持不變。這也意味着事件發生的率 (rate of the event) 不隨時間發生變化 (constant over time)。 在指數分布模型下加入解釋變量: \\[ \\left\\{ \\begin{array}{ll} h(t;0) = \\lambda &amp; X=0 \\\\ h(t;1) = \\lambda e^\\beta &amp; X=1 \\end{array} \\right. \\] 這個聯立方程等價於: \\[ h(t;x) = \\lambda e^{\\beta x} \\] 類似地，風險度方程已知了的話，概率密度方程和生存方程可以寫作: \\[ f(t;x) = \\lambda e^{\\beta x} \\exp({-\\lambda t^{\\beta x}}); \\\\ S(t;x) = \\exp(-\\lambda t^{\\beta x}) \\] 此時的似然方程就是 \\[ L = \\prod_{i = 1}^n\\{\\lambda e^{\\beta x} \\exp({-\\lambda t^{\\beta x}}) \\}^{\\delta_i}\\{ \\exp(-\\lambda t^{\\beta x})\\}^{1-\\delta_i} \\] 此時，似然方程中兩個參數 \\(\\lambda, \\beta\\) 可以利用極大似然函數的方法分別對其中一個求導數獲得 MLE，然後用 Fisher information matrix 計算各自的標準誤，從而計算 95% 信賴區間。這裏的 \\(\\beta\\) 回歸系數，可以做是否爲零 (等價於比較 \\(e^\\beta = 1\\)) 的 Wald 檢驗: \\[ \\frac{\\hat\\beta}{SE(\\hat\\beta)} \\sim N(0,1) \\] Example 87.1 推導\\(\\lambda,\\beta\\)的MLE: \\[ \\begin{aligned} L &amp; = \\prod_{i = 1}^n\\{\\lambda e^{\\beta x} \\exp({-\\lambda t^{\\beta x}}) \\}^{\\delta_i}\\{ \\exp(-\\lambda t^{\\beta x})\\}^{1-\\delta_i} \\\\ &amp; = \\prod_{i = 1}^n\\{\\lambda e^{\\beta x}\\}^{\\delta_i}\\exp(-\\lambda t^{\\beta x}) \\\\ \\Rightarrow \\ell &amp; = \\log(\\lambda)\\sum_{i=1}^n \\delta_i + \\beta \\sum_{i = 1}^n(x_i\\delta_i) - \\lambda\\sum_{i = 1}^n t_ie^{\\beta x_i} \\\\ \\text{Let} &amp; \\sum_{i = 1}^n = n_1 \\text{(numer of events)}; \\\\ &amp;\\sum_{i=1}^n(x_i\\delta_i) = n_{11} \\text{(number of events in } x=1); \\\\ &amp;\\sum_{x_i=1}^n t_i = T_1 \\text{(sum of survival/censors T in } x=1);\\\\ &amp;\\sum_{x_i=0}^n t_i = T_0 \\text{(sum of survival/censors T in } x=0);\\\\ \\Rightarrow \\ell &amp; =n_1 \\log(\\lambda) + n_{11}\\beta - \\lambda(T_0 + T_1e^\\beta) \\end{aligned} \\] 接下來求 MLE 就等同於解下面的聯立方程組: \\[ \\left\\{\\begin{array}{l} \\frac{\\text{d}\\ell}{\\text{d}\\lambda} = \\frac{n_1}{\\lambda} - (T_0 +T_1e^\\beta) =0 \\\\ \\frac{\\text{d}\\ell}{\\text{d}\\beta} = n_{11} = T_1\\lambda e^\\beta = 0 \\end{array} \\right. \\\\ \\hat\\lambda = \\frac{n_1 - n_{11}}{T_0} \\\\ \\hat\\beta = \\log\\frac{T_0n_{11}}{T_1(n_1 - n_{11})} \\] Example 87.2 白血病患者病情緩解數據：我們對該數據使用指數模型來分析，使用Stata 或者 R就可以獲取下面表格中的分析結果。 Parameter Estimate Standard error 95% confidence interval p-value \\(\\lambda\\) 0.12 0.03 (0.08, 0.18) \\(&lt;\\) 0.001 \\(\\beta\\) -1.53 0.40 (-2.31, -0.75) \\(&lt;\\) 0.001 \\(\\exp \\beta\\) 0.22 0.09 (0.10, 0.48) \\(&lt;\\) 0.001 可以看到指數模型給出的風險度比的估計是 Hazard ratio = 0.22，意味着治療組白血病患者從治療開始到症狀緩解的風險率 (hazard rate) 要低於對照組很多。而且這個風險度比明顯地在統計學上不同於 1（表示兩組之間患者無風險度差異）。改分析結果提供了極強的證據來證明：治療組患者獲得的治療藥物可能對患者的緩解沒有好處反而還有害，因此導致治療組患者的緩解，比起對照組慢很多。我們可以把模型估計的兩個暴露組的患者的生存函數曲線繪製如下圖 (87.1) 圖 87.1: Leukaemia patient data: estimated survivor curves under an exponential model. 實際在R裏的計算過程： gehan &lt;- read.table(&quot;https://data.princeton.edu/wws509/datasets/gehan.dat&quot;) names(gehan)[3] &lt;- &quot;remission&quot; exp.model &lt;- survreg(Surv(time = weeks, event = remission) ~ group, dist = &quot;exponential&quot;, data = gehan) summary(exp.model) ## ## Call: ## survreg(formula = Surv(time = weeks, event = remission) ~ group, ## data = gehan, dist = &quot;exponential&quot;) ## Value Std. Error z p ## (Intercept) 2.1595 0.2182 9.896 &lt; 2e-16 ## grouptreated 1.5266 0.3984 3.832 0.000127 ## ## Scale fixed at 1 ## ## Exponential distribution ## Loglik(model)= -108.5 Loglik(intercept only)= -116.8 ## Chisq= 16.49 on 1 degrees of freedom, p= 0.000049 ## Number of Newton-Raphson Iterations: 4 ## n= 42 風險度比的計算方法是: exp(-1.527) \\(\\approx\\) 0.22 風險度比的95%信賴區間計算方法是： exp(-1.527 - 1.96*0.398) \\(\\approx\\) 0.0995 exp(-1.527 + 1.96*0.398) \\(\\approx\\) 0.4738 基線風險的計算方法是: exp(-2.159) \\(\\approx\\) 0.12 對比一下 Stata 的模型和輸出結果，觀察其差異 ------------------------------------------------------------------------------ _t | Haz. Ratio Std. Err. z P&gt;|z| [95% Conf. Interval] ------------------------------------------------------------------------------ group| .2172702 .0865625 -3.83 0.000 .0995115 .4743806 _cons| .1153846 .025179 -9.90 0.000 .0752316 .1769682 ------------------------------------------------------------------------------ 87.6 Weibull 分布 指數分布的模型只能用於”不隨時間改變（恆定不變）的風險率(hazard rate)“的情況。Weibull 分布放鬆了這個假設前提，不再要求恆定不變的風險率，但是它本身的假設（前提條件）則是風險率隨時間的變化是單調的 (遞增或者遞減，二者只能選一)。且 Weibull 分布其實是指數分布的一般化形式，或者說指數分布是 Weibull 分布的特殊形式。 Weibull 分布的風險度方程: \\[ h(t) = \\kappa \\lambda t^{\\kappa - 1} \\] 生存概率方程 \\[ S(t;x) = \\exp\\{ -\\lambda t^\\kappa \\} \\] 概率密度方程 \\[ f(t) = \\kappa \\lambda t^{\\kappa - 1} \\exp\\{ -\\lambda t^\\kappa \\} \\] 那麼加入了一個二分類解釋變量 \\(x\\) 的 Weibull 比例風險度方程就是: \\[ h(t;x) = \\kappa \\lambda t^{\\kappa - 1}e^{\\beta x} \\] 其生存概率方程就是: \\[ S(t;x) = \\exp\\{ -\\lambda t^\\kappa e^{\\beta x}\\} \\] 概率密度方程是二者的乘積，那麼所有的生存數據的似然方程就是: \\[ L = \\prod_{i=1}^n \\{\\kappa \\lambda t^{\\kappa - 1}e^{\\beta x}\\exp\\{ -\\lambda t^\\kappa e^{\\beta x}\\} \\}^{\\delta_i}\\{ \\exp\\{ -\\lambda t^\\kappa e^{\\beta x}\\}\\}^{1-\\delta_i} \\] 但是，比較悲劇的是，在 Weibull 分布的生存模型中，沒有辦法簡單的獲得參數 \\(\\kappa, \\lambda. \\beta\\) 的MLE。只能使用迭代法 (iterative numerical methods are required)。 Example 87.3 白血病患者病情緩解數據：我們對該數據使用Weibull模型來分析，使用Stata 或者 R就可以獲取下面表格中的分析結果。 Parameter Estimate Standard error 95% confidence interval p-value \\(\\lambda\\) 0.05 0.03 (0.02, 0.14) &lt;0.001 \\(\\kappa\\) 1.37 - (1.02, 1.82) 0.034 \\(\\beta\\) -1.73 0.41 (-2.54, -0.92) &lt;0.001 \\(\\exp \\beta\\) 0.18 0.07 (0.08, 0.40) &lt;0.001 可以發現當我們使用 Weibull 模型來跑相同的白血病患者數據時，風險度比估計值是 0.18。（與之相對比，在使用簡單的指數分佈模型時，風險度比的估計值是 0.22） 同樣地，我們可以繪製相似的模型生存曲線圖 (87.2) 圖 87.2: Leukaemia patient data: estimated survivor curves under a Weibull model. 實際在R裏的計算過程： weibull.model &lt;- survreg(Surv(time = weeks, event = remission) ~ group, dist = &quot;weibull&quot;, data = gehan) summary(weibull.model) ## ## Call: ## survreg(formula = Surv(time = weeks, event = remission) ~ group, ## data = gehan, dist = &quot;weibull&quot;) ## Value Std. Error z p ## (Intercept) 2.2484 0.1660 13.547 &lt; 2e-16 ## grouptreated 1.2673 0.3106 4.080 0.0000451 ## Log(scale) -0.3117 0.1473 -2.116 0.0343 ## ## Scale= 0.7322 ## ## Weibull distribution ## Loglik(model)= -106.6 Loglik(intercept only)= -116.4 ## Chisq= 19.65 on 1 degrees of freedom, p= 9.3e-06 ## Number of Newton-Raphson Iterations: 5 ## n= 42 風險度比的計算方法是 exp(-1.267 * exp(0.312)) \\(\\approx\\) 0.18; 風險度比的95%信賴區間的計算方法是： exp((-1.267 - 1.96 \\(\\times\\) 0.311) \\(\\times\\) exp(0.312)) \\(\\approx\\) 0.08 exp((-1.267 + 1.96 \\(\\times\\) 0.311) \\(\\times\\) exp(0.312)) \\(\\approx\\) 0.40 基線風險度的計算方法是 exp(- 2.248 \\(\\times\\) exp(0.312)) \\(\\approx\\) 0.05 實際在Stata的計算過程是： streg group, distribution(weibull) ------------------------------------------------------------------------------ _t | Haz. Ratio Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- group| .1771299 .0731691 -4.19 0.000 .0788272 .3980227 _cons| .0463885 .025888 -5.50 0.000 .0155375 .138497 /ln_p| .3117092 .1472919 2.12 0.034 .0230224 .600396 p | 1.365757 .201165 1.02329 1.82284 1/p | .7321944 .1078463 .5485944 .9772406 -------------+---------------------------------------------------------------- 87.7 Weibull 和 指數模型的比較 至此，我們可以看出，同樣的生存數據我們可以選擇使用指數模型也可以使用 Weibull 模型。問題是，哪個模型會更優於另一個？簡單說有兩種方法可以幫助你作出選擇。 使用繪圖輔助 使用統計檢驗比較 87.7.1 繪圖法 使用非參數方法獲得的圖形，有時會有助於（視覺上的方法，非正式但有助於）判斷哪種參數模型更加合適你手頭的數據。這裏用一個二進制暴露變量來做解釋。 在指數分布模型中，累積風險度 cumulative hazard 是和追蹤時間呈正比的: \\[ H(t;x) = -\\log S(t;x) = \\lambda t e^{\\beta x} \\] 在 Weibull 分布模型中，累積風險度 cumulative hazard，取了對數以後: \\[ \\log H(t;x) = \\log\\{ -\\log S(t;x) \\} = \\log \\lambda + \\kappa \\log t + \\beta x \\] 所以，累積風險度如果取了對數，那麼這個值和時間的對數 \\(\\log t\\) 是呈線性關系的，且當這個直線的坡度爲 1 （和橫軸呈現45度角） 的話 \\(\\kappa = 1\\)，就說明數據符合指數模型。如果，\\(x\\) 只是一個二分類解釋變量的話，你會看到對數累積風險度和對數時間呈現爲兩條平行線。 87.7.2 統計檢驗法 很簡單， Wald test: \\[ \\frac{\\log \\hat\\kappa}{SE(\\log \\hat\\kappa)} \\sim N(0,1) \\] 當然你也可以使用似然比檢驗 likelihood ratio test，因爲指數分布模型是 Weibull 分布模型在 \\(\\kappa = 1\\) 時的特殊形態，二者擬合的統計模型也會是嵌套式模型: \\[ -2(\\ell_{\\text{exponential}} - \\ell_{\\text{Weibull}}) \\sim \\chi_1^2 \\] 服從的卡方分布的自由度是兩個模型的參數數量的差。似然比檢驗通常會比簡單比較 \\(\\kappa = 1\\) 更值得實施因爲它通常會相對 wald 檢驗提供更加值得信任的檢驗，所以多數人也比較傾向於使用似然比檢驗法比較符合嵌套結構的參數模型。 圖 87.3: Leukaemia patient data: Kaplan-Meier plots of the cumulative hazard (left) and the log cumulative hazard (right) in treatment and controls groups. summary(weibull.model) ## ## Call: ## survreg(formula = Surv(time = weeks, event = remission) ~ group, ## data = gehan, dist = &quot;weibull&quot;) ## Value Std. Error z p ## (Intercept) 2.2484 0.1660 13.547 &lt; 2e-16 ## grouptreated 1.2673 0.3106 4.080 0.0000451 ## Log(scale) -0.3117 0.1473 -2.116 0.0343 ## ## Scale= 0.7322 ## ## Weibull distribution ## Loglik(model)= -106.6 Loglik(intercept only)= -116.4 ## Chisq= 19.65 on 1 degrees of freedom, p= 9.3e-06 ## Number of Newton-Raphson Iterations: 5 ## n= 42 lrtest(weibull.model, exp.model) ## Likelihood ratio test ## ## Model 1: Surv(time = weeks, event = remission) ~ group ## Model 2: Surv(time = weeks, event = remission) ~ group ## #Df LogLik Df Chisq Pr(&gt;Chisq) ## 1 3 -106.579 ## 2 2 -108.524 -1 3.88912 0.0486 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 87.8 拓展解釋變量（類型與個數）的參數模型 當然可以在生存分析參數模型中加入多於一個變量，而且可以是分類型，連續型變量 \\(\\mathbf{X} = (X_1, X_2, \\dots, X_p)^T\\) : \\[ h(t;x) = h_0 (t)e^{\\beta^Tx} \\] \\(h_0(t)\\) 是基線組的風險度 (baseline hazard); \\(\\mathbf{\\beta} = (\\beta_1, \\beta_2, \\cdots, \\beta_p)^T\\) 是一組解釋變量的回歸系數; \\(\\beta_k\\) 是當保持所有其他變量不變時，解釋變量 \\(X_k\\) 在增加/減少一個單位對應的對數風險度比 (log-hazard ratio)。 87.8.1 當變量是連續型時 對於一個連續型暴露變量 \\(X\\) 來說，每增加1個單位，其效果其實就是風險度乘以 \\(\\exp^\\beta\\)。所以，比較一個 \\(X = 1\\) 的實驗對象和一個 \\(X = 0\\) 的實驗對象的風險度之比： \\[ \\frac{h(t : 1)}{h(t: 0)} = \\frac{h_0(t) e^\\beta}{h_0(t)} = e^\\beta \\] 如果說舉例年齡作爲唯一的暴露變量的話，73歲的人和72歲的人相比，他們之間的風險度比是： \\[ \\frac{h(t : 73)}{h(t: 72)} = \\frac{h_0(t) e^{73\\beta}}{h_0(t) e^{72\\beta}} = e^\\beta \\] 所以，對於一個連續型變量 \\(X\\) 來說，\\(\\beta\\) 是 \\(X\\) 每增加一個單位時的風險度比的對數 (the log hazard ratio associated with 1 unit increase in \\(X\\))。 87.8.2 （多於兩種類型的）分類型變量 如果是一個多餘兩種分類（\\(K + 1\\)）類型的變量，我們定義一系列的 \\(K\\) 個啞變量 (dummy variable)，或者叫做指示型變量 (indicator variables) \\[ X_k = \\left\\{ \\begin{array}{ll} 1 &amp; \\text{ if in category } k \\\\ 0 &amp; \\text{ otherwise } \\end{array} \\right. \\] 那麼此時第 \\(k\\) 個分組的風險度是 \\[ h_0(t)e^{\\beta_k}, (k = 0, 1, \\dots, K) \\] 其中基線風險度 \\(h_0(t)\\) 其實是分類在第一個類別（基準組類別 \\(X_0 = 1, \\beta_0 = 0\\)）中的實驗對象的風險度。所以，\\(e^{\\beta_k}\\) 就是比較第 \\(k\\) 組分類和第一個類別的實驗對象的風險度比 (the hazard ratio which compares individuals in category \\(k\\) with individuals in category 0)。這樣一個模型同時可以改寫成： \\[ h(t; x) = h_0(t)\\exp(\\beta_1x_1 + \\beta_2 x_2 + \\cdots + \\beta_K x_K) \\] 其中 \\(x_k\\) 是實驗對象是否屬於第 \\(k\\) 組分類的指示型變量。 87.8.3 當你加入了多個解釋變量時 一般來說我們會用 \\(X\\) 表示一系列的暴露變量組成的向量。其中可能包括二進制型，多分類型，或者連續型變量。那如果說 \\(\\mathbf{\\beta}\\) 表示這些暴露變量本身的對數風險度比(log hazard ratio)的估計值組成的向量。那解釋其中某一個 \\(\\beta\\) 的方法其實就是，該估計值對應的暴露變量的對數危險度比，當且僅當其他的變量保持不變。也就是調整了其他暴露變量之後該變量的對數風險度比。 87.9 Practical Survival 03 whitehall &lt;- read_dta(&quot;../backupfiles/whitehall.dta&quot;) whitehall &lt;- whitehall %&gt;% mutate(timein = as.numeric(timein), timeout = as.numeric(timeout), timebth = as.numeric(timebth)) %&gt;% mutate(time = (timeout - timein)/365.25) with(whitehall, tabpct(grade, chd, graph = FALSE)) ## ## Original table ## chd ## grade 0 1 Total ## 1 1104 90 1194 ## 2 419 64 483 ## Total 1523 154 1677 ## ## Row percent ## chd ## grade 0 1 Total ## 1 1104 90 1194 ## (92.5) (7.5) (100) ## 2 419 64 483 ## (86.7) (13.3) (100) ## ## Column percent ## chd ## grade 0 % 1 % ## 1 1104 (72.5) 90 (58.4) ## 2 419 (27.5) 64 (41.6) ## Total 1523 (100) 154 (100) #### median time Median_t &lt;- ddply(whitehall,c(&quot;grade&quot;,&quot;chd&quot;),summarise,Median=median(time)) Median_t ## grade chd Median ## 1 1 0 18.1779175 ## 2 1 1 11.9110102 ## 3 2 0 17.8726806 ## 4 2 1 8.7679441 whl.km &lt;- survfit(Surv(time = time, event = chd) ~ as.factor(grade), data = whitehall) plot(whl.km, conf.int = T, col = c(&quot;blue&quot;, &quot;red&quot;), mark.time = F, xlab = &quot;Time&quot;, ylab = &quot;Survivor function&quot;, ylim = c(0.8, 1)) legend(1, 0.85, c(&quot;Grade 1&quot;, &quot;Grade 2&quot;), col = c(&quot;blue&quot;, &quot;red&quot;), lty = 1) 圖 87.4: Rplots of the Kaplan-Meier survivor functions “Grade 1” 患者的生存概率明顯好於 “Grade 2”。而且，95% 信賴區間沒有重疊，提示這兩組之間的生存概率曲線應該有統計學上的顯著不同。 # How many individuals survived 5, 10, 15 years of follow-up in each job grade? summary(whl.km, times = c(5, 10, 15)) ## Call: survfit(formula = Surv(time = time, event = chd) ~ as.factor(grade), ## data = whitehall) ## ## as.factor(grade)=1 ## time n.risk n.event survival std.err lower 95% CI upper 95% CI ## 5 1169 10 0.9916 0.002648 0.9864 0.9968 ## 10 1114 24 0.9709 0.004913 0.9613 0.9806 ## 15 1045 30 0.9443 0.006772 0.9311 0.9577 ## ## as.factor(grade)=2 ## time n.risk n.event survival std.err lower 95% CI upper 95% CI ## 5 445 17 0.9642 0.008521 0.9477 0.9811 ## 10 383 22 0.9144 0.013135 0.8890 0.9405 ## 15 334 16 0.8747 0.015876 0.8442 0.9064 # Log rank test to compare the estimated survivor functions in the two job grades survdiff(Surv(time=time, event = chd) ~ as.factor(grade), data = whitehall) ## Call: ## survdiff(formula = Surv(time = time, event = chd) ~ as.factor(grade), ## data = whitehall) ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## as.factor(grade)=1 1194 90 114.19 5.123 19.85 ## as.factor(grade)=2 483 64 39.81 14.692 19.85 ## ## Chisq= 19.8 on 1 degrees of freedom, p= 8.4e-06 # Fit an exponential model whl.exp &lt;- survreg(Surv(time, chd) ~ as.factor(grade), dist = &quot;exponential&quot;, data = whitehall) summary(whl.exp) ## ## Call: ## survreg(formula = Surv(time, chd) ~ as.factor(grade), data = whitehall, ## dist = &quot;exponential&quot;) ## Value Std. Error z p ## (Intercept) 5.4205 0.1054 51.424 &lt; 2e-16 ## as.factor(grade)2 -0.6885 0.1635 -4.211 0.0000255 ## ## Scale fixed at 1 ## ## Exponential distribution ## Loglik(model)= -944.7 Loglik(intercept only)= -953.1 ## Chisq= 16.76 on 1 degrees of freedom, p= 0.000042 ## Number of Newton-Raphson Iterations: 6 ## n= 1677 這裏 R 的輸出結果和 STATA 的結果略有不同: . streg i.grade, d(exp) nohr failure _d: chd analysis time _t: (timeout-origin)/365.25 origin: time timein Iteration 0: log likelihood = -627.95275 Iteration 1: log likelihood = -620.09818 Iteration 2: log likelihood = -619.57374 Iteration 3: log likelihood = -619.57209 Iteration 4: log likelihood = -619.57209 Exponential PH regression No. of subjects = 1,677 Number of obs = 1,677 No. of failures = 154 Time at risk = 27605.37066 LR chi2(1) = 16.76 Log likelihood = -619.57209 Prob &gt; chi2 = 0.0000 ------------------------------------------------------------------------------ _t | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- 2.grade | .6885037 .1635118 4.21 0.000 .3680264 1.008981 _cons | -5.420525 .1054093 -51.42 0.000 -5.627123 -5.213926 ------------------------------------------------------------------------------ 在 R 裏面，指數分布模型的回歸系數中，常數項 (Intercept) 等同於 STATA 裏的 _cons，但是，它在 R 裏估計的是 \\(-\\log \\lambda\\)。grade 的回歸系數 \\(\\beta\\) 也一樣，在 R 裏它估計的是 \\(-\\beta\\)。所以你會發現 R 的輸出結果和 STATA 的結果符號相反，但是殊途同歸。 # Change the time scale to age time and fit the models again #The survreg function does not allow delayed entry times, so we can&#39;t use it with age as the time scale and entry at &#39;timein&#39; #But we can fit the same model using an alternative function called &#39;weibreg&#39; which is in the &#39;eha&#39; package. You will need to install this package. # install.packages(&quot;eha&quot;) # install and loading this package by uncomment these two lines # library(eha) whl.exp2&lt;-weibreg(Surv(timein/365.25, timeout/365.25,event=chd,origin=timebth/365.25)~as.factor(grade), data = whitehall, shape = 1) summary(whl.exp2) ## Call: ## weibreg(formula = Surv(timein/365.25, timeout/365.25, event = chd, ## origin = timebth/365.25) ~ as.factor(grade), data = whitehall, ## shape = 1) ## ## Covariate Mean Coef Exp(Coef) se(Coef) Wald p ## as.factor(grade) ## 1 0.737 0 1 (reference) ## 2 0.263 0.689 1.991 0.164 0.000 ## ## log(scale) 5.421 225.998 0.105 0.000 ## ## Shape is fixed at 1 ## ## Events ## Total time at risk 27605 ## Max. log. likelihood -944.7 ## LR test statistic 16.76 ## Degrees of freedom 1 ## Overall p-value 0.0000423884 #Another alternative is the flexsurv package # install.packages(&quot;flexsurv&quot;) # install and loading this package by uncomment these two lines # library(flexsurv) whl.exp3&lt;-flexsurvreg(Surv(timein/365.25, timeout/365.25,event=chd,origin=timebth/365.25)~as.factor(grade), data = whitehall,dist = &quot;exponential&quot;,inits = rep(0.1,2)) whl.exp3 ## Call: ## flexsurvreg(formula = Surv(timein/365.25, timeout/365.25, event = chd, ## origin = timebth/365.25) ~ as.factor(grade), data = whitehall, ## dist = &quot;exponential&quot;, inits = rep(0.1, 2)) ## ## Estimates: ## data mean est L95% U95% se exp(est) L95% U95% ## rate NA 0.004425 0.003599 0.005440 0.000466 NA NA NA ## as.factor(grade)2 0.288014 0.688359 0.367869 1.008848 0.163518 1.990446 1.444653 2.742439 ## ## N = 1677, Events: 154, Censored: 1523 ## Total time at risk: 27605.371 ## Log-likelihood = -944.69654, df = 2 ## AIC = 1893.3931 在指數分布模型下，我們默認事件發生率不會隨着時間變化，所以，改變了時間尺度，對生存分析估計的參數結果沒有影響。 whitehall &lt;- whitehall %&gt;% mutate(agecat = cut(agein, breaks = c(40, 50, 55, 60, 65, 70),right = F, labels = F)) whl.exp &lt;- survreg(Surv(time, chd) ~ as.factor(grade) + as.factor(agecat), dist = &quot;exponential&quot;, data = whitehall) summary(whl.exp) ## ## Call: ## survreg(formula = Surv(time, chd) ~ as.factor(grade) + as.factor(agecat), ## data = whitehall, dist = &quot;exponential&quot;) ## Value Std. Error z p ## (Intercept) 6.2076 0.1956 31.729 &lt; 2e-16 ## as.factor(grade)2 -0.2681 0.1755 -1.527 0.126669 ## as.factor(agecat)2 -0.9559 0.2582 -3.703 0.000213 ## as.factor(agecat)3 -1.4462 0.2416 -5.985 2.16e-09 ## as.factor(agecat)4 -1.4832 0.2707 -5.480 4.26e-08 ## as.factor(agecat)5 -2.4060 0.3749 -6.418 1.38e-10 ## ## Scale fixed at 1 ## ## Exponential distribution ## Loglik(model)= -914.1 Loglik(intercept only)= -953.1 ## Chisq= 78.01 on 5 degrees of freedom, p= 2.2e-15 ## Number of Newton-Raphson Iterations: 6 ## n= 1677 # Fit the Weibull model in R, keep job grade and age category whl.weibull &lt;- survreg(Surv(time, chd) ~ as.factor(grade) + as.factor(agecat), dist = &quot;weibull&quot;, data = whitehall) summary(whl.weibull) ## ## Call: ## survreg(formula = Surv(time, chd) ~ as.factor(grade) + as.factor(agecat), ## data = whitehall, dist = &quot;weibull&quot;) ## Value Std. Error z p ## (Intercept) 5.23905 0.22680 23.100 &lt; 2e-16 ## as.factor(grade)2 -0.20191 0.12469 -1.619 0.105383 ## as.factor(agecat)2 -0.68550 0.18946 -3.618 0.000297 ## as.factor(agecat)3 -1.04268 0.18683 -5.581 2.39e-08 ## as.factor(agecat)4 -1.07834 0.20598 -5.235 1.65e-07 ## as.factor(agecat)5 -1.80110 0.28840 -6.245 4.23e-10 ## Log(scale) -0.34620 0.07678 -4.509 6.51e-06 ## ## Scale= 0.7074 ## ## Weibull distribution ## Loglik(model)= -905.1 Loglik(intercept only)= -946.7 ## Chisq= 83.21 on 5 degrees of freedom, p= 1.8e-16 ## Number of Newton-Raphson Iterations: 10 ## n= 1677 這個結果和 STATA 的結果也有些許不同: streg i.grade i.agecat, d(weib) nohr failure _d: chd analysis time _t: (timeout-origin)/365.25 origin: time timein Fitting constant-only model: Iteration 0: log likelihood = -627.95275 Iteration 1: log likelihood = -621.65709 Iteration 2: log likelihood = -621.54148 Iteration 3: log likelihood = -621.54144 Fitting full model: Iteration 0: log likelihood = -621.54144 Iteration 1: log likelihood = -591.43979 Iteration 2: log likelihood = -580.27283 Iteration 3: log likelihood = -579.9356 Iteration 4: log likelihood = -579.93477 Iteration 5: log likelihood = -579.93477 Weibull PH regression No. of subjects = 1,677 Number of obs = 1,677 No. of failures = 154 Time at risk = 27605.37066 LR chi2(5) = 83.21 Log likelihood = -579.93477 Prob &gt; chi2 = 0.0000 ------------------------------------------------------------------------------ _t | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- 2.grade | .285431 .1753856 1.63 0.104 -.0583184 .6291805 | agecat | 2 | .9690825 .2581668 3.75 0.000 .463085 1.47508 3 | 1.47402 .2416534 6.10 0.000 1.000388 1.947652 4 | 1.524436 .2707669 5.63 0.000 .9937422 2.055129 5 | 2.546185 .3759036 6.77 0.000 1.809428 3.282943 | _cons | -7.406372 .3705694 -19.99 0.000 -8.132675 -6.680069 -------------+---------------------------------------------------------------- /ln_p | .3462011 .0767777 4.51 0.000 .1957195 .4966827 -------------+---------------------------------------------------------------- p | 1.413687 .1085397 1.216186 1.643261 1/p | .7073702 .0543103 .6085461 .8222428 ------------------------------------------------------------------------------ STATA裏的 ln_p (就是\\(\\kappa\\)形狀參數 shape parameter)，在 R 裏的名字是 -log(scale)。 STATA報告對數風險度比 2.grade |.285431 ，R 裏面的回歸系數 as.factor(grade)2 -0.2019 其實是對數風險度比除以形狀參數之後變更符號，所以 \\(-\\frac{0.2854}{\\exp(0.346)} = 0.202\\) 所以在 R 中實際上輸出的結果是: \\(-\\log\\kappa, -\\frac{\\beta}{\\kappa}\\)。 whl.km.agecat1 &lt;- survfit(Surv(time=time,event=chd)~grade,data=subset(whitehall,agecat==1)) plot(whl.km.agecat1,conf.int=T,col=c(&quot;red&quot;,&quot;black&quot;),mark.time=F,xlab=&quot;log time&quot;, ylab=&quot;log(-log S(t))&quot;,fun=&quot;cloglog&quot;) 圖 87.5: Non-paramatric plot to investigate whether the Weibull model fit the data appropriate 用 Weibull 分布模型的結果，繪制兩個 job grade 在 5 個不同年齡層次的估計生存概率曲線: whl.weibull &lt;- survreg(Surv(time, chd) ~ as.factor(grade) + as.factor(agecat), dist = &quot;weibull&quot;, data = whitehall) plot(predict(whl.weibull, newdata = list(grade = 1, agecat = 1), type = &quot;quantile&quot;, p = seq(0.01, 0.99, by = 0.01)), seq(0.99, 0.01, by = -0.01), type = &quot;l&quot;, lwd = 2, col = &quot;red&quot;, xlab = &quot;Time&quot;, ylab = &quot;Survivor function: S(t)&quot;, xlim = c(0,20), ylim = c(0.5, 1)) lines(predict(whl.weibull, newdata = list(grade = 2, agecat = 1), type = &quot;quantile&quot;, p = seq(0.01, 0.99, by = 0.01)), seq(0.99, 0.01, by = -0.01), type = &quot;l&quot;, lwd = 2, lty = 2, col = &quot;red&quot;) lines(predict(whl.weibull, newdata = list(grade = 1, agecat = 2), type = &quot;quantile&quot;, p = seq(0.01, 0.99, by = 0.01)), seq(0.99, 0.01, by = -0.01), type = &quot;l&quot;, lwd = 2, lty = 1, col = &quot;green&quot;) lines(predict(whl.weibull, newdata = list(grade = 2, agecat = 2), type = &quot;quantile&quot;, p = seq(0.01, 0.99, by = 0.01)), seq(0.99, 0.01, by = -0.01), type = &quot;l&quot;, lwd = 2, lty = 2, col = &quot;green&quot;) lines(predict(whl.weibull, newdata = list(grade = 1, agecat = 3), type = &quot;quantile&quot;, p = seq(0.01, 0.99, by = 0.01)), seq(0.99, 0.01, by = -0.01), type = &quot;l&quot;, lwd = 2, lty = 1, col = &quot;black&quot;) lines(predict(whl.weibull, newdata = list(grade = 2, agecat = 3), type = &quot;quantile&quot;, p = seq(0.01, 0.99, by = 0.01)), seq(0.99, 0.01, by = -0.01), type = &quot;l&quot;, lwd = 2, lty = 2, col = &quot;black&quot;) lines(predict(whl.weibull, newdata = list(grade = 1, agecat = 4), type = &quot;quantile&quot;, p = seq(0.01, 0.99, by = 0.01)), seq(0.99, 0.01, by = -0.01), type = &quot;l&quot;, lwd = 2, lty = 1, col = &quot;orange&quot;) lines(predict(whl.weibull, newdata = list(grade = 2, agecat = 4), type = &quot;quantile&quot;, p = seq(0.01, 0.99, by = 0.01)), seq(0.99, 0.01, by = -0.01), type = &quot;l&quot;, lwd = 2, lty = 2, col = &quot;orange&quot;) lines(predict(whl.weibull, newdata = list(grade = 1, agecat = 5), type = &quot;quantile&quot;, p = seq(0.01, 0.99, by = 0.01)), seq(0.99, 0.01, by = -0.01), type = &quot;l&quot;, lwd = 2, lty = 1, col = &quot;blue&quot;) lines(predict(whl.weibull, newdata = list(grade = 2, agecat = 5), type = &quot;quantile&quot;, p = seq(0.01, 0.99, by = 0.01)), seq(0.99, 0.01, by = -0.01), type = &quot;l&quot;, lwd = 2, lty = 2, col = &quot;blue&quot;) 圖 87.6: The estimated survivor curves from the Weibull model in each job and age-at-entry category 下面把隨訪時間按照 5 到 20 年每間隔五年的方法把所有患者的追蹤時間截斷成4個部分。然後用指數分布回歸模型擬合數據，這也是一種放鬆恆定事件發生率這一前提條件的方法: whl.split &lt;- survSplit(Surv(time, chd) ~ ., whitehall, cut = c(0, 5, 10, 15, 20), start = &quot;time0&quot;, episode = &quot;fuband&quot;) with(whitehall, whitehall[id == 5038,]) ## # A tibble: 1 × 16 ## id all chd sbp chol grade4 smok agein grade cholgrp sbpgrp timein timeout timebth time ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 5038 0 0 147 295 2 3 51.4 1 4 3 -840. 6239. -19630. 19.4 ## # … with 1 more variable: agecat &lt;int&gt; with(whl.split, whl.split[id == 5038,]) ## id all sbp chol grade4 smok agein grade cholgrp sbpgrp timein timeout timebth ## 9 5038 0 147 295 2 3 51.444218 1 4 3 -840.01318 6238.9795 -19630.013 ## 10 5038 0 147 295 2 3 51.444218 1 4 3 -840.01318 6238.9795 -19630.013 ## 11 5038 0 147 295 2 3 51.444218 1 4 3 -840.01318 6238.9795 -19630.013 ## 12 5038 0 147 295 2 3 51.444218 1 4 3 -840.01318 6238.9795 -19630.013 ## agecat time0 time chd fuband ## 9 2 0 5.000000 0 2 ## 10 2 5 10.000000 0 3 ## 11 2 10 15.000000 0 4 ## 12 2 15 19.381226 0 5 whl.split.exp &lt;- flexsurvreg(Surv(time0, time, chd) ~ as.factor(grade) + as.factor(agecat) + as.factor(fuband), dist = &quot;exponential&quot;, data = whl.split) whl.split.exp ## Call: ## flexsurvreg(formula = Surv(time0, time, chd) ~ as.factor(grade) + ## as.factor(agecat) + as.factor(fuband), data = whl.split, ## dist = &quot;exponential&quot;) ## ## Estimates: ## data mean est L95% U95% se exp(est) L95% ## rate NA 0.001059 0.000627 0.001788 0.000283 NA NA ## as.factor(grade)2 0.266742 0.286099 -0.057633 0.629832 0.175377 1.331225 0.943996 ## as.factor(agecat)2 0.218258 0.970919 0.464910 1.476929 0.258173 2.640371 1.591871 ## as.factor(agecat)3 0.194422 1.477681 1.003971 1.951391 0.241693 4.382770 2.729098 ## as.factor(agecat)4 0.114967 1.529719 0.998873 2.060564 0.270845 4.616879 2.715221 ## as.factor(agecat)5 0.016053 2.562203 1.824200 3.300206 0.376539 12.964346 6.197837 ## as.factor(fuband)3 0.261716 0.628789 0.153466 1.104112 0.242516 1.875338 1.165868 ## as.factor(fuband)4 0.242744 0.783803 0.307212 1.260394 0.243163 2.189785 1.359630 ## as.factor(fuband)5 0.223610 1.074270 0.569018 1.579521 0.257786 2.927854 1.766532 ## U95% ## rate NA ## as.factor(grade)2 1.877295 ## as.factor(agecat)2 4.379475 ## as.factor(agecat)3 7.038471 ## as.factor(agecat)4 7.850399 ## as.factor(agecat)5 27.118213 ## as.factor(fuband)3 3.016545 ## as.factor(fuband)4 3.526812 ## as.factor(fuband)5 4.852629 ## ## N = 6167, Events: 154, Censored: 6013 ## Total time at risk: 27605.371 ## Log-likelihood = -904.07753, df = 9 ## AIC = 1826.1551 我們用指數分布回歸擬合的生存時間模型，其實還可以用泊鬆回歸模型來做，結果也是一樣的: whl.poi &lt;- glm(chd ~ as.factor(grade), family = poisson(link = log), offset = log(time), data = whitehall) summary(whl.poi) ## ## Call: ## glm(formula = chd ~ as.factor(grade), family = poisson(link = log), ## data = whitehall, offset = log(time)) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -0.58433 -0.41268 -0.40212 -0.39440 3.55361 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -5.42052 0.10541 -51.4238 &lt; 2.2e-16 *** ## as.factor(grade)2 0.68850 0.16351 4.2108 0.00002545 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for poisson family taken to be 1) ## ## Null deviance: 947.906 on 1676 degrees of freedom ## Residual deviance: 931.144 on 1675 degrees of freedom ## AIC: 1243.14 ## ## Number of Fisher Scoring iterations: 6 你可以回頭去和指數分布回歸的模型結果做個比較，他們的回歸系數估計和標準誤完全是一樣的。 "],["cox.html", "第 88 章 Cox 比例風險模型 88.1 本章概要 88.2 初步介紹 Cox 比例風險模型 88.3 偏似然法 (partial likelihood) 88.4 處理相等的生存時間 handling tied survival times 88.5 估計生存曲線 88.6 Cox回歸模型中包涵的假設： 88.7 評估比例風險假設 assessing the proportional hazard assumption 88.8 該用半參數模型還是用全參數模型 88.9 Practical Survival 04", " 第 88 章 Cox 比例風險模型 88.1 本章概要 學會寫下 Cox 比例風險函數的數學表達式 能夠解釋 Cox 比例風險模型是怎樣通過偏似然的方法獲取 MLE 的，這個過程又是怎樣獲得估計風險度比 (hazard ratio)，和它的標準誤，p 值，以及信賴區間的 比較 Cox 比例風險模型和全參數模型 (fully parametric models)，及非參數方法 (non-parametric methods) 能夠解釋各種不同類型的（連續型，二進制型，或者多變量型）解釋（暴露）變量在 Cox 比例風險模型中獲得的參數估計的涵義 學會使用統計軟件繪製的圖形方法來分析並解釋比例風險度的假設條件是否得到滿足 能夠在 R 等統計包中準確地運行需要的 Cox 比例風險模型，並且會用這些統計包輔助進行模型性能評測 88.2 初步介紹 Cox 比例風險模型 如果可以認爲暴露（解釋）變量對風險度的作用是成比例的 (act proportionally on the hazard)，那麼對某個觀察對象來說，他/她/它的解釋變量如果用向量 \\(\\mathbf{X} = x\\) 來表示的話，他/她/它的風險度方程和基線風險度 (baseline hazard) 之間的關係可以描述爲： \\[ h(t|x) = h_0(t)e^{\\beta^Tx} \\] 其中，\\(h_0(t)\\) 就是被比較的基線組成員(baseline individual)的風險度函數 (hazard function)，在 Weibull 模型或者指數模型中，這個基線風險 (baseline hazard) 是需要被模型根據數據來進行參數估計的 (parameterized)。但是，1972年，神一樣的人物 Cox (David R. Cox 1972) 提出，其實我們不需要對這個基線風險進行估計，可以忽略它在模型中的存在。正因為如此，這個模型被冠以發明者的名字 Cox proportional hazards model。因為此模型不對基線風險進行任何估計，但是對預測變量對於風險的效果 (effect of the explanatory variable) 用模型中的 \\(\\beta\\) 進行參數估計，所以，它又被稱爲是半參數化模型 (semi-parametric model)。 下面的討論，我們保持和之前的章節使用相同的數學標記法。 \\(i = 1, \\dots, n\\) 標記實驗對象的個體編號 \\(x_i\\) 表示她/他/它的解釋型變量（大多數情況下它是包含了多個變量的向量） \\(t_i\\) 表示生存時間（刪失時間） \\(\\delta_i\\) 則是指示是使用生存時間，或者刪失時間的指示變量 (indicator) 那麼用這些標記法描述的 Cox 比例風險模型下的似然是： \\[ L= \\prod_{i=1}^n\\{ h_0(t)e^{\\beta^Tx_i}\\exp(-\\int_0^{t_i} h_0(u)e^{\\beta^Tx_i}du) \\}^{\\delta_i}\\{ \\exp(-\\int_0^{t_i} h_0(u)e^{\\beta^Tx_i}du) \\}^{1-\\delta_i} \\] 是無法估計的，此時要用到偏似然法 (partial likelihood)， 88.3 偏似然法 (partial likelihood) 假定已知某一名實驗對象身上經過了生存時間 \\(t_j\\) 之後發生了研究者追蹤的事件 (event of interest)。我們用 \\(i_j\\) 標記該實驗對象，她/他/它身上具有的所有解釋變量則用 \\(x_{i_j}\\) 來表達。在無限接近時間點 \\(t_j\\) 之前的時刻，有一個包含了所有此時仍未發生事件的觀察對象的潛在對象集合 (risk set) \\(R_j\\)。觀察對象 \\(i_j\\) 也屬於這個潛在對象集合 \\(R_j\\)。這裏我們假定該時間無限短，短到有且僅有一個對象可以發生事件，即沒有人同時發生事件。如圖 88.1 圖 88.1: Definition of risk sets. 接下來我們思考這樣一個問題：在這組用 \\(R_j\\) 標記的潛在對象集合中，我們已知它們同時都存活到了時間點 \\(t_j\\)，且沒有發生刪失，那麼這組患者中的某個個體 \\(i_j\\)，它/他/她有一個解釋變量 \\(x_i\\)，它/他/她在這個時間點發生事件的條件概率 (conditional probability) 該怎麼計算？ \\[ \\frac{h_0(t_j)\\exp(\\beta^Tx_{i_j})}{\\sum_{k\\in R_j}h_0(t_j)\\exp(\\beta^Tx_k)} = \\frac{\\exp(\\beta^Tx_{i_j})}{\\sum_{k\\in R_j}\\exp(\\beta^Tx_k)} \\] 是的，你沒有看錯，基線風險度 \\(h_0(t)\\) 被完美的從分子和分母中抵消掉了，這就是它不需要被參數估計的原因。那麼，在所有發生事件的時間點上，我們都可以類似的計算其對應的條件概率，然後把所有發生事件時的條件概率相乘，就獲得了我們所需要的偏似然 (partial likelihood)，用 \\(L_p\\) 來表示： \\[ L_p = \\prod_j \\frac{\\exp(\\beta^Tx_{i_j})}{\\sum_{k\\in R_j}\\exp(\\beta^Tx_k)} \\] 這個似然之所以被命名爲偏似然 (partial)，就因爲它並不是一個完整的生存過程，我們只巧妙地取用了生存過程中的一部分。而且目前爲止的統計學已經證明了，它和完整的標準似然在生存數據中其實是漸進一致的 (asymptotically the same)。這也就意味着，我們可以利用這個性質，忽略掉 \\(h_0(t)\\)，使用極大似然法來獲取全部的 \\(\\beta\\) 的估計值。且我們知道這些 MLE \\(\\hat\\beta\\) 的方差 (variance) 可以通過計算 Fisher information matrix 的逆矩陣 (inverse of matrix) 來獲得。這樣我們就理解了 Cox 回歸的計算原理和過程。 該偏似然的對數如果用 \\(l_p\\) 表示： \\[ l_p = \\sum_j \\beta^T x_{i_j} - \\sum_j \\log(\\sum_{k \\in R_j} \\exp \\beta^T x_k) \\] 在最簡單的只有一個解釋變量 \\(x\\) 的情況之下，\\(\\beta\\) 可以通過對該對數似然求導數之後解下列的方程獲得： \\[ \\frac{dl_p}{d\\beta} = \\sum_j x_{i_j} - \\sum_j \\frac{\\sum_{k \\in R_j} x_k \\exp \\beta x_k}{\\sum_{k \\in R_j} \\exp \\beta x_k} = 0 \\] 如果 \\(\\beta\\) 是多個需要被估計的 MLE 那麼就會同時獲得多個類似上述方程的聯立方程需要同時求解。在實際操作中，統計包會選擇使用迭代法 (iterative method) 去尋找符合這樣聯立方程的解作爲 MLE。 Example 88.1 給白血病患者數據套用 Cox 比例風險回歸模型 在這個數據中，42名白血病患者中各有21人分別在治療和對照組。研究者關心的事件是病情的緩解 (remission)。追蹤時間是從白血病診斷時起，單位是週數。那麼暴露變量就是被分配到治療組與否，其中被分配到對照組的患者的風險度被認爲是基線風險度 (baseline hazard)。於是這個模型其實可以簡單描述成： \\[ \\begin{cases} h_0(t) &amp; 對照組 \\text{ control group} \\\\ h_0(t) e^\\beta &amp; 治療組 \\text{ treatment group} \\end{cases} \\] 使用偏似然法計算該模型的參數我們獲得對數風險度比 (log hazard ratio) 的估計值 \\(\\hat\\beta = -1.51\\)，其對應的標準誤是 \\(0.410\\)，95% 信賴區間是 (-2.31, -0.71)。於是相應的，風險度比 \\(\\exp \\hat\\beta = 0.22\\)，95% 信賴區間是 \\((0.10, 0.49)\\)。 該模型用 Stata 計算的過程如下 ## ## . infile group weeks remission using https://data.princeton.edu/wws509/datasets ## &gt; /gehan.raw ## host not found ## r(631); ## ## . label define group 1 &quot;control&quot; 2 &quot;treated&quot; ## ## . label values group group ## no variables defined ## r(111); ## ## . stset weeks, failure(remission) ## variable weeks not found ## r(111); ## ## . stcox group ## variable group not found ## r(111); ## ## . stcox group, nohr ## variable group not found ## r(111); ## ## . 該模型用 R 計算的過程如下 gehan &lt;- read.table(&quot;https://data.princeton.edu/wws509/datasets/gehan.raw&quot;, header = FALSE, sep =&quot;&quot;, col.names = c( &quot;group&quot;, &quot;weeks&quot;, &quot;remission&quot;)) cox.model &lt;- coxph(Surv(time = weeks, event = remission) ~ as.factor(group), data = gehan, method = &quot;breslow&quot;) summary(cox.model) ## Call: ## coxph(formula = Surv(time = weeks, event = remission) ~ as.factor(group), ## data = gehan, method = &quot;breslow&quot;) ## ## n= 42, number of events= 30 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## as.factor(group)2 -1.50919 0.22109 0.40956 -3.6849 0.0002288 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## as.factor(group)2 0.22109 4.5231 0.099071 0.49339 ## ## Concordance= 0.69 (se = 0.041 ) ## Likelihood ratio test= 15.21 on 1 df, p=0.0001 ## Wald test = 13.58 on 1 df, p=0.0002 ## Score (logrank) test = 15.93 on 1 df, p=7e-05 88.3.1 爲什麼使用 Cox 回歸模型？ 理由很簡單，半參數回歸模型我們放棄了對基線風險度的估計，也就是放寬了對它的限制和假設，使模型估計的結果更高效可靠 (efficient and reliable)。Cox回歸模型現在已經廣爲人知且易於理解。 Example 88.2 稍微複雜一些的例子：EPIC-Norfolk 隊列研究數據分析乳腺癌的危險因子 EPIC-Norfolk 隊列研究是一個收集了25639名觀察對象的隊列。起點觀察時間是在1990年代，全部的觀察對象都在40歲以上。該隊列研究追蹤觀察對象的多種疾病診斷和死亡，同時收集了大量的觀察對象本身的生活習慣數據，其中有飲食習慣相關數據。這個例子中我們把事件定義爲被診斷爲乳腺癌，且乳腺癌的診斷不是其他部位轉移產生的癌症，即原發乳腺癌的診斷。那麼，男性觀察對象被排除，剩下12576名女性患者作爲潛在對象集合。另外再需要排除在隨訪開始時就已經患有任意一種癌症的女性，隨訪過程中如果在未觀察到乳腺癌時就發生了其他部位的癌症的話，在診斷爲其他癌症時就被定義爲是刪失值。其餘的刪失值還包括由於非乳腺癌原因的死亡事件，或者觀察對象離開研究而致隨訪中斷。我們使用年齡作爲分析的事件尺度，圖 88.2 是該隊列的 Kaplan-Meier 生存函數曲線。 圖 88.2: Kaplan-Meier estimate of the survival curve for women in the EPIC-Norfolk cohot (solid line), showing the 95% confidence limits (dotted lines) 例如我們現在的分析目的是想用該隊列收集的生活習慣分析飲酒量和被診斷爲乳腺癌的風險之間的關係。同時模型中我們還希望能夠調整其他可能的混雜因子。這裏我們先考慮兩個簡單的混雜因子，一個是家族乳癌史，還有一個是吸菸習慣。現實情況中你可能需要考慮更多的潛在混雜因子。飲酒量通過問卷調查獲得，並被換算成爲單位是每10g/天的連續型變量。家族乳癌史是二進制變量 (是/否)。吸菸習慣是三個分類的多類別變量（從未(ref)/曾經/現在吸菸）。那麼我們可以寫下這個比例風險模型的數學表達式： \\[ h(t; \\mathbf{X}) = h_0(t) \\exp\\{ \\beta_1 X_{\\text{alc}} + \\beta_2 X_{\\text{FH}} + \\beta_3 X_{\\text{former-smoker}} + \\beta_4 X_{\\text{current-smoker}} \\} \\] 其中， \\(X_{\\text{alc}}\\) 是表示飲酒量的連續型變量。 \\(X_{\\text{FH}}\\) 是表示是(=1)否(=0)有家族乳癌史的二進制變量。 \\(X_{\\text{former-smoker}}\\) 是表示是(=1)否(=0)是曾經吸菸者的二進制變量。 \\(X_{\\text{current-smoker}}\\) 是表示是(=1)否(=0)是現在吸菸者的二進制變量。 該模型的 Cox 比例風險模型分析的結果如下表： Variable Hazard ratio 95% confidence interval p-value \\(X_{\\text{alc}}\\) 1.140 (1.041, 1.249) 0.005 \\(X_{\\text{FH}}\\) 1.766 (1.337, 2.334) &lt;0.001 \\(X_{\\text{former-smoker}}\\) 0.875 (0.714, 1.047) 0.197 \\(X_{\\text{current-smoker}}\\) 1.001 (0.749, 1.337) 0.995 你會解釋上面列出的風險度比的結果嗎？ 88.4 處理相等的生存時間 handling tied survival times 在許多實驗和觀察研究中，生存時間會有相等的時候。也就是在某些時間點上，發生兩個及以上事件是可能的。這個可能是根據實驗對時間的定義精確度決定的。如果只是精確到週或者月，甚至是天，都有可能出現生存時間相同的情況。即使這樣，偏似然其實也是可以克服的。假如在時間點 \\(t_j\\) 時發生了 \\(m_j\\) 個事件。那麼此時，這些發生事件的對象組成的集合 \\((i_{1_j}, i_{2_j}, \\dots, i_{m_j})\\)，如果他們的解釋變量向量是 \\((x_{i_1}, x_{i_2}, \\dots, x_{i_m})\\) 的話，該時間點時刻發生時間的概率是 \\[ \\frac{h_0(t_j) \\exp \\beta^T x_{i_1} \\times h_0(t_j) \\exp \\beta^T x_{i_2} \\times \\dots \\times h_0(t_j) \\exp \\beta^T x_{i_m}}{\\sum_{L \\in R_{mj}} \\prod _{l \\in L} \\exp \\beta^T x_l} \\\\ = \\frac{\\exp(\\beta^T x_{i_1} + \\beta^T x_{i_2} + \\dots + \\beta^Tx_{i_m})}{\\sum_{L \\in R_{mj}}\\prod _{l \\in L} \\exp \\beta^T x_l} \\] 如果數據中在相同時間點發生事件的件數較多，上面的方程變得繁瑣，因爲分母變得特別複雜。這時我們傾向於使用一個叫做 “Breslow” 估計法 (Breslow’s approximation) 來近似的計算上述方程以簡化計算： \\[ L_{p*} = \\prod_j \\frac{\\exp(\\beta^T x_{i_1} + \\beta^T x_{i_2} + \\dots + \\beta^Tx_{i_m})}{\\{ \\sum_{k \\in R_j} \\exp \\beta^T x_k \\}^{m_j}} \\] R 裏的程序中也已經加入了這個近似法。 88.5 估計生存曲線 通常情況下，我們分析生存數據時只是爲了分析暴露變量和生存概率之間的關。於是基本上你看到大多數生存分析的報告和論文只是報告這些暴露變量的風險度比，及其對應的標準誤及信賴區間。那麼從我們本章目前爲止的介紹可以看出，在不需要估計基線風險 (baseline hazard) 的情況下啊，我們也可以求得我們想要的風險度比。 但是在另外一些時候，我們有期望能夠描述觀察對象中的模型估計生存概率（曲線）i.e. estimated survival curves。還有的時候，我們希望利用辛苦建立的模型來有效地預測擁有相應特徵的人羣的生存概率。例如我們在分析了白血病患者數據之後，可能希望用該數據獲得的模型來預測某些患者如果進入治療組或者放在對照組，20週以後的生存概率。這些情況下的估計和預測，就需要使用到被Cox回歸模型忽略掉的基線風險。 在全參數型模型中，如之前我們着重討論過的指數模型和 Weibull 模型，這並不是太大的問題，因爲在這些全參數模型中，基線風險也是被估計的參數之一，我們會獲得相應的基線風險估計值。怎樣在使用 Cox 回歸模型之後也能做相似的後續分析呢？ 處理的思考方式是這樣的，假設某個研究對象是屬於“基線組 (baseline group)”的，那麼它/他/她身上具有的所有可能的解釋變量可以用 \\(\\mathbf{x}^* = (x^*_1, x^*_2, \\dots, x^*_p)^T\\) 表示。事實上這些變量由於是基線組，大多數可能都恰好等於零。當然也有特例，例如身高可能我們會選用平均身高作爲基線值，因爲身高爲零並不具有可比性。那麼用下面的表達式可以估計在時間點 \\(t\\) 時，時間段 \\(t_k \\leqslant t &lt; t_{k+1}\\)上的基線累積風險 (baseline cumulative hazard)： \\[ \\hat H_0(t) = \\sum_{j=1}^k\\frac{d_j}{\\sum_{l \\in R_j}\\exp\\{ \\hat\\beta^T(x_l - x^*) \\}} \\] 其中 \\(d_j\\) 是在時間 \\(t_j\\) 時發生的事件的計數。這個方程被命名爲 “Nelson-Aalen” 估計法，或者叫 “Breslow” 估計法估計基線累積風險。從上述計算式我們可以進一步估計生存函數： \\[ \\hat S(t;x) = \\exp\\{ - \\hat H_0(t) \\exp (\\hat\\beta^T x) \\} \\] 這樣就可以繪製Cox回歸模型估計的生存曲線了。 圖 88.3: Leukaemia patients data: estimated survivor curves using the Cox proportional hazard model. Example 88.3 EPIC-Norfolk 隊列研究數據分析乳腺癌的危險因子： 之前分析過的模型中，加入了三個解釋變量 - 飲酒量（連續型），家族乳癌史（二進制型），吸菸習慣（分類型）。當你的模型類似這樣有多個模型時，不妨嘗試使用這幾個解釋變量的一些有特徵的值來繪製對應的不同組別對象的生存曲線。下圖 88.4 就是指定了四個特徵值的人的模型估計生存分析。 圖 88.4: Breast cancer data: estimated survivor curves using the Cox proportional hazard model. [FH: family history] 88.6 Cox回歸模型中包涵的假設： 和諸多的統計模型一樣，Cox比例風險模型本身有它的前提條件。其中最顯而易見的有兩個： \\[ h(t|x) = h_0(t)e^{\\beta^Tx} \\] 比例風險假設 (proportional hazard assumption) - 解釋變量對與風險的作用所帶來的風險度比 (hazard ratio) 是不隨時間改變的 (hazard ratio is constant over time)。 模型構建合理假設 - 變量本身在模型中的形式是準確無誤的，特別是連續型變量。(We have correctly specified the form for how continuous explanatory variables act on the hazard); 這兩個假設本身可能互相影響，其中比例風險假設可能在連續型變量保持不變的時候不能得到滿足，也可能當你修改了連續型變量的形式的時候（例如改成二次方，或者三次方形式）得到滿足。 第三個不太明顯的假設是，刪失值是無有效生存信息的 (Uninformative censoring)。 88.7 評估比例風險假設 assessing the proportional hazard assumption 在一些簡單的情況下，如單一的二進制暴露變量。我們可以簡單的使用繪圖的方式來分析模型的比例風險假設是否得到滿足。比例風險模型下，我們有 \\(h(t|x) = h_0(t)e^{\\beta^Tx}\\)，此時 \\(x = 0 \\text{ or } 1\\)。用我們熟悉的生存數據函數，我們可以把它該寫成： \\[ S(t; x) = \\exp\\{ -\\int_0^t h_0(u) e^{\\beta x} du \\} \\] 把這個方程左右兩邊同時去對數，並轉移負號： \\[ -\\log S(t;x) = e^{\\beta x} \\int_0^t h_0(u) du = e^{\\beta x} H_0(t) \\] 其中 \\(H_0(t)\\) 是基線累積風險函數，我們再對之同時取等式兩邊對數： \\[ \\log\\{ -\\log S(t;x)\\} = \\log H_0(t) + \\beta x \\] 所以當 \\(x\\) 是二進制變量時，上面的式子等價於 \\[ \\log\\{ -\\log S(t;0)\\} = \\log H_0(t) \\\\ \\log\\{ -\\log S(t;1)\\} = \\log H_0(t) + \\beta \\] 所以也就是說，如果比例風險假設是OK的，那麼把 \\(\\log\\{ -\\log S(t;0)\\}\\) 和 \\(\\log\\{ -\\log S(t;1)\\} = \\log H_0(t)\\) 同時繪製在縱軸，橫軸是時間的話，你會看見兩條不會交叉，接近平行的曲線。此時，你可以比較有自信地認爲比例風險假設應該不太有可能被違背。特別是當你觀察到這樣兩條曲線如果產生了交叉，那可能就要重新考慮是否這個假設還能被認爲是合適的。 相似的方法你可以把它推廣到其他多分類型變量中去，區別在與多分類變量的上述曲線你會有多於兩條的最好是都互相平行的曲線，以確保假設得到滿足。 圖 88.5: Plots of log{-logS(t;x)} against time and log time to remission among leukaemia patients in treatment and control groups 圖 88.6: Leukaemia patient data: estimated survivor curves using the Cox proportional hazards model and using Kaplan-Meier. 88.8 該用半參數模型還是用全參數模型 如果說指數模型或者 Weibull 模型是合理的，通常此時用 Cox 半參數模型也是合理的； 如果指數模型或者 Weibull 模型都是合理的，那麼 Cox 半參數模型給出的估計，其實不會和指數模型或者 Weibull 模型相差甚遠。指數模型或者 Weibull 模型可能給出的估計會相對更精確 (更小的標準誤)，但是實際應用中這種更加精確的程度其實十分有限； 另外，使用指數模型或者 Weibull 模型，重要的基線風險是否被模型擬合正確將會是關鍵 (baseline hazard mis-specified?)，但是使用 Cox 模型，就可以避免這個假設，忽略掉基線風險； 2002 年，(Royston and Parmar 2002) 提出第三種生存數據模型，“flexible parametric survival models”，結合了參數和半參數模型的長處，正在變得流行起來。在這個新型靈活參數生存模型中，使用了三次方程平滑曲線 (cubic splines modelled smoothly) 擬合對數基線累積風險 (log cumulative baseline hazard)。 88.9 Practical Survival 04 ########################################################## ##########################pbc data######################## ########################################################## library(survival) library(haven) pbc &lt;- read_dta(&quot;../backupfiles/pbcbase.dta&quot;) ##question 1## pbc.cox1&lt;-coxph(Surv(time,d) ~ as.factor(treat),data=pbc) summary(pbc.cox1) ## Call: ## coxph(formula = Surv(time, d) ~ as.factor(treat), data = pbc) ## ## n= 191, number of events= 96 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## as.factor(treat)2 -0.15501 0.85640 0.20556 -0.7541 0.4508 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## as.factor(treat)2 0.8564 1.1677 0.57241 1.2813 ## ## Concordance= 0.503 (se = 0.028 ) ## Likelihood ratio test= 0.57 on 1 df, p=0.5 ## Wald test = 0.57 on 1 df, p=0.5 ## Score (logrank) test = 0.57 on 1 df, p=0.5 pbc.cox2&lt;-coxph(Surv(time,d)~bil0,data=pbc) summary(pbc.cox2) ## Call: ## coxph(formula = Surv(time, d) ~ bil0, data = pbc) ## ## n= 191, number of events= 96 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## bil0 0.0067119 1.0067345 0.0007971 8.4203 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## bil0 1.0067 0.99331 1.0052 1.0083 ## ## Concordance= 0.777 (se = 0.023 ) ## Likelihood ratio test= 43.38 on 1 df, p=5e-11 ## Wald test = 70.9 on 1 df, p=&lt;2e-16 ## Score (logrank) test = 93.31 on 1 df, p=&lt;2e-16 ##question 2## pbc.1&lt;-survfit(Surv(time,d)~as.factor(treat),data=pbc) plot(pbc.1,mark.time=F, col=c(&quot;blue&quot;,&quot;red&quot;),fun=&quot;cloglog&quot;,xlab=&quot;time (log scale)&quot;,ylab=&quot;log(-log S(t))&quot;) legend(0.02,0,c(&quot;Treat=1&quot;,&quot;Treat=2&quot;),col=c(&quot;blue&quot;,&quot;red&quot;),lty=1) pbc$bil_q&lt;-cut(pbc$bil0,breaks=quantile(pbc$bil0,probs=seq(0,1,0.25))) pbc.2&lt;-survfit(Surv(time,d)~as.factor(bil_q),data=pbc) plot(pbc.2,mark.time=F, col=c(&quot;blue&quot;,&quot;red&quot;,&quot;green&quot;,&quot;yellow&quot;),fun=&quot;cloglog&quot;,xlab=&quot;time (log scale)&quot;,ylab=&quot;log(-log S(t))&quot;) legend(0.02,0,c(&quot;bil0: group 1&quot;,&quot;bil0: group 2&quot;,&quot;bil0: group 3&quot;,&quot;bil0: group 4&quot;),col=c(&quot;blue&quot;,&quot;red&quot;,&quot;green&quot;,&quot;yellow&quot;),lty=1) pbc.cox&lt;-coxph(Surv(time,d)~treat,data=pbc) plot(survfit(pbc.cox,newdata=data.frame(treat=c(0,1))),mark.time=F,col=c(&quot;grey&quot;,&quot;black&quot;),xlab=&quot;Time&quot;,ylab=&quot;Estimated survivor function&quot;) pbc.km&lt;-survfit(Surv(time,d)~as.factor(treat),data=pbc) lines(pbc.km,mark.time=F,col=c(&quot;grey&quot;,&quot;black&quot;),lty=2,add=T) legend(8,1,c(&quot;Treat=1, Cox&quot;,&quot;Treat=2, Cox&quot;,&quot;Treat=1, Kaplan-Meier&quot;,&quot;Treat=2, Kaplan-Meier&quot;),col=c(&quot;grey&quot;,&quot;black&quot;,&quot;grey&quot;,&quot;black&quot;),lty=c(1,1,2,2)) #question 3 pbc.cox&lt;-coxph(Surv(time,d)~treat+bil0,data=pbc) summary(pbc.cox) ## Call: ## coxph(formula = Surv(time, d) ~ treat + bil0, data = pbc) ## ## n= 191, number of events= 96 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## treat -0.38381178 0.68125964 0.21425185 -1.7914 0.07323 . ## bil0 0.00711080 1.00713614 0.00083482 8.5177 &lt; 2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## treat 0.68126 1.46787 0.44765 1.0368 ## bil0 1.00714 0.99291 1.00549 1.0088 ## ## Concordance= 0.746 (se = 0.026 ) ## Likelihood ratio test= 46.6 on 2 df, p=8e-11 ## Wald test = 72.98 on 2 df, p=&lt;2e-16 ## Score (logrank) test = 96.22 on 2 df, p=&lt;2e-16 pbc.km.bil0.1&lt;-survfit(Surv(time,d)~as.factor(bil_q),data=subset(pbc,treat==1)) pbc.km.bil0.2&lt;-survfit(Surv(time,d)~as.factor(bil_q),data=subset(pbc,treat==2)) par(mfrow=c(1,2)) plot(pbc.km.bil0.1,mark.time=F,col=c(&quot;blue&quot;,&quot;red&quot;,&quot;green&quot;,&quot;yellow&quot;),fun=&quot;cloglog&quot;,xlab=&quot;time (log scale)&quot;,ylab=&quot;log(-log S(t))&quot;,main=&quot;Treatment group 1&quot;) legend(0.02,1,c(&quot;bil0: group 1&quot;,&quot;bil0: group 2&quot;,&quot;bil0: group 3&quot;,&quot;bil0: group 4&quot;),col=c(&quot;blue&quot;,&quot;red&quot;,&quot;green&quot;,&quot;yellow&quot;),lty=1) plot(pbc.km.bil0.2,mark.time=F,col=c(&quot;blue&quot;,&quot;red&quot;,&quot;green&quot;,&quot;yellow&quot;),fun=&quot;cloglog&quot;,xlab=&quot;time (log scale)&quot;,ylab=&quot;log(-log S(t))&quot;,main=&quot;Treatment group 2&quot;) legend(0.02,1,c(&quot;bil0: group 1&quot;,&quot;bil0: group 2&quot;,&quot;bil0: group 3&quot;,&quot;bil0: group 4&quot;),col=c(&quot;blue&quot;,&quot;red&quot;,&quot;green&quot;,&quot;yellow&quot;),lty=1) #question 4 pbc.cox.sq&lt;-coxph(Surv(time,d)~treat+bil0+I(bil0^2),data=pbc) summary(pbc.cox.sq) ## Call: ## coxph(formula = Surv(time, d) ~ treat + bil0 + I(bil0^2), data = pbc) ## ## n= 191, number of events= 96 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## treat -0.406076880 0.666258943 0.211007470 -1.9245 0.0543 . ## bil0 0.021833018 1.022073102 0.003126447 6.9833 2.883e-12 *** ## I(bil0^2) -0.000033812 0.999966188 0.000008092 -4.1785 2.935e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## treat 0.66626 1.5009 0.44059 1.00752 ## bil0 1.02207 0.9784 1.01583 1.02836 ## I(bil0^2) 0.99997 1.0000 0.99995 0.99998 ## ## Concordance= 0.769 (se = 0.024 ) ## Likelihood ratio test= 74.21 on 3 df, p=5e-16 ## Wald test = 86.87 on 3 df, p=&lt;2e-16 ## Score (logrank) test = 109.58 on 3 df, p=&lt;2e-16 exp(pbc.cox.sq$coef[1]+60*pbc.cox.sq$coef[2]+(60^2)*pbc.cox.sq$coef[3])/exp(50*pbc.cox.sq$coef[2]+(50^2)*pbc.cox.sq$coef[3]) ## treat ## 0.79856415 #question 5 pbc.cox.sq&lt;-coxph(Surv(time,d)~treat+bil0+I(bil0^2),data=pbc) par(mfrow=c(1,1)) plot(survfit(pbc.cox.sq,newdata=data.frame(treat=c(0,1),bil0=50)),mark.time=F,col=c(&quot;grey&quot;,&quot;black&quot;),xlab=&quot;Time&quot;,ylab=&quot;Estimated survivor function&quot;) legend(7,1,c(&quot;Treatment group 1&quot;,&quot;Treatment group 2&quot;),col=c(&quot;grey&quot;,&quot;black&quot;),lty=1) ########################################################## ##########################whitehall####################### ########################################################## whl &lt;- read.table(&quot;../backupfiles/whitehall.csv&quot;,sep=&quot;,&quot;,header=T) whl$agecat&lt;-cut(whl$agein, breaks=c(40,50,55,60,65,70),right=F,labels=F) my.mod1&lt;-coxph(Surv(time=timein,time2=timeout,event=chd,origin=timein)~grade,data=whl) summary(my.mod1) ## Call: ## coxph(formula = Surv(time = timein, time2 = timeout, event = chd, ## origin = timein) ~ grade, data = whl) ## ## n= 1677, number of events= 154 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## grade 0.71396 2.04207 0.16368 4.362 0.00001289 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## grade 2.0421 0.4897 1.4817 2.8145 ## ## Concordance= 0.585 (se = 0.02 ) ## Likelihood ratio test= 17.94 on 1 df, p=2e-05 ## Wald test = 19.03 on 1 df, p=1e-05 ## Score (logrank) test = 19.85 on 1 df, p=8e-06 my.mod2&lt;-coxph(Surv(time=timein,time2=timeout,event=chd,origin=timein)~grade+as.factor(agecat),data=whl) summary(my.mod2) ## Call: ## coxph(formula = Surv(time = timein, time2 = timeout, event = chd, ## origin = timein) ~ grade + as.factor(agecat), data = whl) ## ## n= 1677, number of events= 154 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## grade 0.28128 1.32483 0.17555 1.6022 0.1091028 ## as.factor(agecat)2 0.97495 2.65104 0.25820 3.7759 0.0001594 *** ## as.factor(agecat)3 1.48454 4.41294 0.24190 6.1370 8.409e-10 *** ## as.factor(agecat)4 1.53513 4.64193 0.27109 5.6627 1.490e-08 *** ## as.factor(agecat)5 2.57802 13.17110 0.37706 6.8372 8.077e-12 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## grade 1.3248 0.754816 0.93913 1.8689 ## as.factor(agecat)2 2.6510 0.377210 1.59821 4.3974 ## as.factor(agecat)3 4.4129 0.226606 2.74677 7.0898 ## as.factor(agecat)4 4.6419 0.215428 2.72862 7.8968 ## as.factor(agecat)5 13.1711 0.075924 6.29025 27.5788 ## ## Concordance= 0.706 (se = 0.019 ) ## Likelihood ratio test= 84.15 on 5 df, p=&lt;2e-16 ## Wald test = 80.17 on 5 df, p=8e-16 ## Score (logrank) test = 103.3 on 5 df, p=&lt;2e-16 #We can do the same thing as follows (note the change in the Surv function) my.mod1&lt;-coxph(Surv(time=(timeout-timein),event=chd)~grade,data=whl) summary(my.mod1) ## Call: ## coxph(formula = Surv(time = (timeout - timein), event = chd) ~ ## grade, data = whl) ## ## n= 1677, number of events= 154 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## grade 0.71396 2.04207 0.16368 4.362 0.00001289 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## grade 2.0421 0.4897 1.4817 2.8145 ## ## Concordance= 0.585 (se = 0.02 ) ## Likelihood ratio test= 17.94 on 1 df, p=2e-05 ## Wald test = 19.03 on 1 df, p=1e-05 ## Score (logrank) test = 19.85 on 1 df, p=8e-06 my.mod2&lt;-coxph(Surv(time=(timeout-timein),event=chd)~grade+as.factor(agecat),data=whl) summary(my.mod2) ## Call: ## coxph(formula = Surv(time = (timeout - timein), event = chd) ~ ## grade + as.factor(agecat), data = whl) ## ## n= 1677, number of events= 154 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## grade 0.28128 1.32483 0.17555 1.6022 0.1091028 ## as.factor(agecat)2 0.97495 2.65104 0.25820 3.7759 0.0001594 *** ## as.factor(agecat)3 1.48454 4.41294 0.24190 6.1370 8.409e-10 *** ## as.factor(agecat)4 1.53513 4.64193 0.27109 5.6627 1.490e-08 *** ## as.factor(agecat)5 2.57802 13.17110 0.37706 6.8372 8.077e-12 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## grade 1.3248 0.754816 0.93913 1.8689 ## as.factor(agecat)2 2.6510 0.377210 1.59821 4.3974 ## as.factor(agecat)3 4.4129 0.226606 2.74677 7.0898 ## as.factor(agecat)4 4.6419 0.215428 2.72862 7.8968 ## as.factor(agecat)5 13.1711 0.075924 6.29025 27.5788 ## ## Concordance= 0.706 (se = 0.019 ) ## Likelihood ratio test= 84.15 on 5 df, p=&lt;2e-16 ## Wald test = 80.17 on 5 df, p=8e-16 ## Score (logrank) test = 103.3 on 5 df, p=&lt;2e-16 #using age as the time scale with delayed entry my.mod3&lt;-coxph(Surv(time=timein,time2=timeout,event=chd,origin=timebth)~grade,data=whl) summary(my.mod3) ## Call: ## coxph(formula = Surv(time = timein, time2 = timeout, event = chd, ## origin = timebth) ~ grade, data = whl) ## ## n= 1677, number of events= 154 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## grade 0.34027 1.40533 0.16794 2.0262 0.04274 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## grade 1.4053 0.71158 1.0112 1.9531 ## ## Concordance= 0.555 (se = 0.022 ) ## Likelihood ratio test= 4.02 on 1 df, p=0.05 ## Wald test = 4.11 on 1 df, p=0.04 ## Score (logrank) test = 4.14 on 1 df, p=0.04 my.mod4&lt;-coxph(Surv(time=timein,time2=timeout,event=chd,origin=timebth)~grade+as.factor(agecat),data=whl) summary(my.mod4) ## Call: ## coxph(formula = Surv(time = timein, time2 = timeout, event = chd, ## origin = timebth) ~ grade + as.factor(agecat), data = whl) ## ## n= 1677, number of events= 154 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## grade 0.26575 1.30441 0.17541 1.5150 0.12976 ## as.factor(agecat)2 0.32814 1.38839 0.28010 1.1715 0.24140 ## as.factor(agecat)3 0.54328 1.72165 0.29050 1.8701 0.06146 . ## as.factor(agecat)4 0.31074 1.36444 0.33982 0.9144 0.36049 ## as.factor(agecat)5 1.14826 3.15269 0.44609 2.5741 0.01005 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## grade 1.3044 0.76663 0.92493 1.8396 ## as.factor(agecat)2 1.3884 0.72026 0.80184 2.4040 ## as.factor(agecat)3 1.7217 0.58084 0.97425 3.0424 ## as.factor(agecat)4 1.3644 0.73290 0.70096 2.6559 ## as.factor(agecat)5 3.1527 0.31719 1.31513 7.5578 ## ## Concordance= 0.58 (se = 0.026 ) ## Likelihood ratio test= 12.07 on 5 df, p=0.03 ## Wald test = 13.08 on 5 df, p=0.02 ## Score (logrank) test = 13.56 on 5 df, p=0.02 References "],["surv-check.html", "第 89 章 分析策略和模型檢查 Model checking-survival analysis 89.1 本章概要 89.2 生存分析策略 89.3 針對不同的研究設計不同的分析策略 89.4 模型檢查的要點 89.5 比例風險假設的檢查 check the proportional hazard assumtion 89.6 評價模型擬合的其他有趣方法 89.7 Practical Survival 05", " 第 89 章 分析策略和模型檢查 Model checking-survival analysis 89.1 本章概要 學會如何有計劃，步驟清晰地對生存數據進行比例風險模型的建模，包括如何恰當地選擇放入模型中的解釋變量，和它們的形式。 能進行模型與模型之間比較的似然比檢驗 (likelihood ratio test)，並解釋該檢驗的結果。 掌握各種不同的檢驗“比例風險假設”的方法，特別是使用 Schoenfeld 殘差圖的方法，來觀察暴露變量對風險函數的作用是否隨着時間發生改變。 使用 Martingale 殘差圖和偏差殘差圖 (deviance residuals) 評價模型擬合程度 (model fitting)。 使用 Martingale 殘差來輔助判斷某個連續型變量合適放入模型的數學函數形式。 會使用 R/Stata 獲取風險比例模型建立之後的各種不同殘差。 89.2 生存分析策略 在分析生存數據的時候同樣一個數據集，你其實可以建立許多不同的（比例風險）模型，那麼解釋變量的選擇就顯得很重要，究竟你應該在模型中放入哪些變量才算是合適呢？其實這要根據研究的目的和分析時的上下文而有相應的調整。例如說， 分析目的只是着重看某個暴露變量對生存/死亡風險的影響。也就是我們說到底只關心一個特殊的暴露變量。但是我們希望這個模型可以調整其他可能存在的混雜因子，從而獲得該暴露變量真實的效果 (true effect)。 分析目的是爲了瞭解測量獲得的一組暴露變量數據集與研究對象生存時間之間的關係。其中可能着重關心該變量集合中的一個或者幾個對生存的影響，或者最終決定哪個/些是對生存概率的影響較大的。 分析目的是爲了建立一個預測生存概率的模型。研究者可能希望通過在模型中加入儘可能多的變量以提高模型預測能力的精確度。這樣新的研究對象的生存概率就可以通過建立好的模型直接套用該對象具有的解釋變量計算。 在廣義線性回歸模型部分的分析策略章節 (Chapter 65) 詳細討論過一般分析數據時建立回歸模型的策略。該策略也可以用於指導生存分析模型建立的過程。 89.2.1 關於似然比檢驗 A note on likelihood ratio tests 似然比檢驗法同樣可以用於比較兩個具有嵌套結構的Cox比例風險模型。這裏用兩個簡單的解釋變量 \\(X_1, X_2\\) 來示範似然比檢驗的過程。 假設，我們主要對 \\(X_1\\) 和生存概率之間的關係感興趣，而 \\(X_2\\) 作爲唯一的混雜因子變量。那麼我們可以分別建立兩個生存分析模型，一個有 \\(X_2\\)，另一個不包含 \\(X_2\\)。如果這兩個模型給出的變量 \\(X_1\\) 的風險度比估計值發生了較爲顯著的變化，那麼可以考慮模型中要保留 \\(X_2\\) 作爲重要的混雜因子變量。如果包含了 \\(X_2\\) 的回歸模型給出的 \\(X_1\\) 的風險度比和不包含 \\(X_2\\) 的回歸模型給出的風險度比估計值差別可以忽略不計，且可以認爲 \\(X_2\\) 不是重要的獨立解釋變量，那麼我們決定把它從模型中移出也沒有太大的問題。如果數據集中有許多個潛在的混雜因子變量，那麼我們可以對每一個重複上述相同的步驟。最主要的是，要記住，對於混雜是否有意義，並沒有正式的檢驗方法。 如果 Model 1 包含的變量少於 Model 2 (Model 1 is nested within Model 2)，那麼似然比檢驗的檢驗統計量是 \\[ -2 (\\ell_{\\text{Model 1}} - \\ell_{\\text{Model 2}}) \\sim \\chi^2_p \\] 其中， \\(\\ell\\) 是表示兩個模型的對數似然 (log-likelihood) \\(p\\) 是兩個模型中相差的預測變量的個數 (the difference in the number of parameters in the two models)。 另外，這裏模型中還允許考慮變量之間的交互作用項或者是給連續型變量進行數學形式的調整（增加二次項甚至是三次，多次項）。 要注意的是，似然比檢驗顯然無法用於比較一個全參數模型（如 Weibull Model）和一個半參數模型（如 Cox 比例風險模型）。這是因爲他們之間不存在嵌套結構關係。 89.3 針對不同的研究設計不同的分析策略 分析策略需要根據不同的研究設計量身定製，下面我們着重討論兩種主要類型的生存數據研究設計 – 隨機對照臨牀試驗型 (randomised controlled trial, RCT)，和觀察性研究 (observational study)。 89.3.1 針對隨機對照臨牀試驗 RCT 思考一個有治療組和對照組的隨機對照臨牀試驗，例如目前位置我們一直使用的白血病患者數據。由於隨機分配的法則，使我們認爲除了治療本身的暴露，不存在其餘的組間差異。那麼我們認爲一個比較合理的分析策略應該可以歸納如下： 先總結 (summarize) 兩個不同治療組患者（實驗對象）的各方面數據：人數 (n)，事件數 (n of events)，刪失值數 (n of censors)，各組的生存時間中位數 (median of survival time)，及刪失對象的觀察時間長度的中位數 (median of censoring time)。 使用非參數法，繪製兩個治療組的 Kaplan-Meier 生存曲線。 再使用非參數法，特別是 log-rank 檢驗法對零假設：兩組生存曲線的模式無不同 (the survivor curves in the two treatment groups are the same)。 使用繪圖法，初步（非正式地 informally）判斷比例風險假設是否成立，或者可能被違反 如果可以認爲比例風險假設得到滿足，那麼，接下來可以進一步使用比例風險模型，或者你可能喜歡的指數模型，Weibull 模型等其他你認爲可能合適的模型來建立回歸模型，通過你最喜歡的R分析並計算獲得相應的風險度比 (hazard ratio) 及其信賴區間的估計。 最後，對該模型的風險比例假設進行正式的統計學評估（將在接下來的章節中詳述）。可以是使用治療組 \\(\\times\\) 時間 這樣一個交互項看其回歸係數是否顯著不等於零，也可以是使用 Schoenfeld 殘差分析圖，也可以是把觀察時間進一步分割成幾個時間段之後分別估計每個時間段內的風險度比是否存在較大差異。 89.3.2 針對觀察型研究 observational studies 在觀察型研究獲得的生存數據中，分析者通常需要考慮多個不同類型的暴露（解釋變量）。同樣地，變量的選擇也要基於分析的目的和研究本身的設計來決定。同樣是觀察型研究，不同研究者的研究興趣各不相同。 某些觀察型研究的主要目的是估計某一個特別感興趣的暴露變量對生存概率的影響，但同時希望把可能對暴露和結果之間的關係造成混雜影響的因素都儘可能的控制住。 某些觀察型研究的主要目的是分析某幾個特定的暴露變量和生存概率之間的關係，同時希望瞭解哪些（個）變量可能對生存概率（時間）有最大的作用。 某些觀察型研究的主要目的是通過收集到的所有可能的解釋變量建立符合該實驗目的的生存概率預測模型，用於對患者/實驗對象的實際生存時間或者某個時間點的生存概率的估計。 先看第一種情況下的分析策略： 89.3.2.1 Type 1: 分析某個暴露變量對生存的影響 estimating an exposure effect 下列分析步驟僅僅只是一個大致的範圍和框架，供參考和討論： 第一步，先實施非參數法分析，對數據進行大致的瞭解：這不僅僅是生存分析過程中重要的開始步驟，也是所有生物統計分析開始的敲門磚和基石。 對於可操作的變量（二進制型，多類別型）逐一繪製 Kaplan-Meier 生存曲線圖，實施 log-rank 檢驗。 對每一個變量實施初步的比例風險前提的圖形觀察和評估。 使用表格歸納法，或者是廣義線性回歸模型分析暴露變量之間可能存在的關係。 第二步，主要的建模分析：如果確認比例風險前提可以得到滿足，則多數研究者會選用比例風險模型（Cox半參數或者全參數模型），有時候取決於個人偏好。 建立最簡單的只有一個主要暴露變量的初步風險回歸模型 (Model 0)。 建立一系列的風險回歸模型，每個模型中的解釋變量除了前一步中的主要暴露變量意外，只單獨增加數據集中的一個變量。(fit further models including the main exposure and each potential confounder, one at a time) 觀察前一步中建立的系列風險回歸模型給出的主要暴露變量的風險度比估計（也就是主要暴露變量和生存概率之間的關係），主要留意哪些模型給出的估計和初步模型 Model 0 給出的風險度比估計相比變化顯著。(examine the impact of adjustment for each confounder on the estimated association between the main exposure and time-to-event, i.e. on the hazard ratio.) 使用交互作用項檢驗每一個變量和主要暴露變臉之間是否存在顯著的交互作用關係 (i.e. whether there are any interactions.) 選 iii. 步中判定是混雜因子的變量，如果 iv. 中發現有意義的交互作用關係也在這裏保留，建立一個略複雜的風險比例回歸模型 (Model 1) 第 v. 步中未加入 Model 1 的變量此時再逐步加入模型中來，說不定他們會是你在 v. 中選入作爲混雜因子變量之後的混雜因子 (confounders in the presence of other variables) 建立最終模型 (Model 2)，把 v. 和 vi. 中認爲需要調整的變量及可能存在的交互作用都加入進來。 第三步，檢查比例風險模型在上述各模型中是否都得到滿足。 89.3.2.2 Type 2: 分析某幾個特定的暴露變量和生存概率之間的關係 understand the associations between a set of several variables and the time-to-event 這其實是相對偏探索型分析的情境。之所以是這樣的分析目的，很大可能是我們並不太瞭解，或者這些暴露變量對該生存事件本身的影響沒有太多的背景知識，或者研究對象本身是來自相對未知的人羣，我們他們身上發生的（生存/疾病/死亡）事件本身比較沒有概念。所以在這樣的情況下，我們並不確定，也沒有把握哪個或者哪些變量對我們關心的事件發生之間可能有怎樣的關係。此時，如果你的數據集中收集的變量個數不多，很多研究者可能選擇使用減法的方法來篩選變量，也就是一開始就把所有的變量都放入模型中去。如此可以一開始就看到多個變量同時互相調整時對事件發生，生存概率的影響。相反，你也可以考慮使用我們在第一種情境（Type 1）下的步驟的擴展版： 第一步，先實施非參數法分析： 對於可操作的變量（二進制型，多類別型）逐一繪製 Kaplan-Meier 生存曲線圖，實施 log-rank 檢驗。 對每一個變量實施初步的比例風險前提的圖形觀察和評估。 使用表格歸納法，或者是廣義線性回歸模型分析暴露變量之間可能存在的關係。 第二步，主要的建模分析：這一步其實有多種可能性，下面所寫的分析策略也只是多種可能的方案之一，僅作參考。 把每一個可能的變量，我們都先把它當作潛在的最重要的主要暴露變量，逐一建立只有一個解釋變量的風險比例模型。用似然比檢驗法，確認哪些變量對事件發生，或者生存概率之間的有單獨的有意義的關係。(assess whether each is associated with survival by itself using a likelihood ratio test) 把第 i. 步中確認單獨和生存概率有關係的變量全部放入一個風險比例模型。此時再使用似然比檢驗法，逐一篩選此時模型中的變量，看是否對模型的對數似然 (log-likelihood) 有顯著的影響，無則棄，有則留，最終保留的模型爲 Model 1。 第 ii. 步中丟棄的那些變量，我們在這一步中，再逐一放入 Model 1，看哪一個，或者有哪些在此時可能對模型的對數似然有顯著貢獻（還是使用似然比檢驗法），如果有，再把它（們）加回模型中去 (Model 2)。 最終確認 Model 2 中的變量沒有任何一個是可以再被從模型中移出的，確保每一個保留下的變量都對事件的發生有影響形成模型 Model 3。 第三步，檢查比例風險模型在上述各模型中是否都得到滿足。 89.3.2.3 Type 3: 建立預測模型 如果研究的目的是建立一個可靠的預測模型，我們可以使用和 Type 2 情境下相似的策略。不過如果你的數據集測量的非常多的變量，那麼你可能需要考慮在建立生存模型之前，進行一些數據的降維過程，提煉一些數據中真正需要的變量。 Example 89.1 另一個白血病患者的觀察數據，分析患者的白細胞計數，白細胞的某種特性 AG (+/-)，以及死亡時間之間可能存在的關係，這個數據包含了 33 名白血病患者的血液數據。數據中有兩個變量： AG: 爲 0/1 的二進制變量 (0 = -; 1 = +)，它表示白細胞的某種特性 (characteristic)； 白細胞計數 (WBC)：是一個連續型變量表示患者採集血樣中的白細胞的個數。 患者的生存時間的單位是“週”，範圍是 1 至 156 週，且該數據中 33 名患者最終都死亡了。（即，沒有刪失值） 下面的表格總結了該數據擬合的三個 Cox 比例風險回歸模型估計的各變量的風險度比，95%信賴區間，和模型的對數似然： 有且僅有 AG 一個解釋變量 有且僅有 WBC 一個解釋變量 有 AG, WBC 兩個解釋變量 AG WBC log-likelihood Model (1) 0.307 (0.136,0.696) - -80.93 p = 0.005 Model (2) - 1.010 (1.001,1.020) -83.16 p = 0.038 Model (3) 0.336 (0.146,0.776) 1.008 (0.998,1.018) -79.79 p = 0.011 p = 0.117 你會選擇哪個模型？ # p value for likelihood ratio test comparing Model (3) with Model (1) pchisq(-2*(-80.93 - (-79.79)), df = 1, lower.tail = FALSE) ## [1] 0.13105187 # p value for likelihood ratio test comparing Model (3) with Model (2) pchisq(-2*(-83.16 - (-79.79)), df = 1, lower.tail = FALSE) ## [1] 0.0094274625 89.4 模型檢查的要點 建立風險比例模型之後，報告你的分析結果之前，我們應該實施的重要步驟還有模型的檢查。這一步保證了我們報告的結果可靠，且不至於給出錯誤的結論。生存數據模型的檢查，比起線性回歸模型要複雜一些，但是離不開下面三個要點： 總體模型對數據的擬合情況是否合理？(how good is the overall fit of the model?) 是否有極端數據，影響了模型的擬合結果？(Are there some individuals for whom the model does not provide a good fit?) 解釋變量，特別是連續型變量是否以正確的形式進入了模型？(Is the functional form for the explanatory variables correct?) 89.5 比例風險假設的檢查 check the proportional hazard assumtion 主要有三板斧： 用非參數法繪製簡單的生存曲線圖； 用統計檢驗，判斷一個解釋變量對風險的影響是否和時間產生了交互作用； 殘差繪圖法。 非參數法繪製生存曲線圖詳見第 86 章節部分。 89.5.1 比例風險檢查的統計檢驗法 在滿足比例風險前提下，某個解釋變量估計的風險度比 (hazard ratio) 不會隨著時間變化而變化，根據這個特點，我們可以認為，如果某些解釋變量在追踪開始時對風險影響很強，在之後的追踪中，和風險之間的關係變弱的話，(或者反過來)，那麼風險比的這一變化就違背了比例風險這一前提。最簡單的，我們可以在模型中加入該變量和時間的相乘項 (交互作用項)： \\[ h(t|x) = h_0(t)\\exp\\{ \\beta x + \\gamma (x\\times t)\\} \\] 聰明的你一下子就明白了，接下來只要檢驗 \\(H_0: \\gamma = 0\\): \\[ \\frac{\\hat\\gamma}{SE(\\hat\\gamma)} \\sim N(0,1) \\] 89.5.2 用 Schoenfeld 殘差繪圖 另外一種視覺化檢查比例風險假設的方法是使用 Schoenfeld 殘差： 首先我們用下面的式子表示 Cox 風險比例模型的對數偏似然： \\[ \\ell_p = \\sum_j \\beta^T x_{i_j} - \\sum_j \\log (\\sum_{k \\in R_j }\\exp(\\beta^T) x_k) \\] 其中， \\(x_k\\) 表示第 \\(k\\) 名對象的解釋變量組成的向量 \\(x_k = (x_{1k}, x_{2k}, \\dots, x_{pk})^T\\)。 \\(\\beta\\) 是每個解釋變量對應的回歸係數，也就是對數似然比估計 log-hazard ratios \\(\\beta = (\\beta_1, \\dots, \\beta_p)^T\\) 偏似然是把所有事件發生的時刻時的條件概率相加起來。 該偏似然計算式取 \\(\\beta_1\\) 的一階導數 (first derivative of \\(\\ell_p\\) with respect to \\(\\beta_1\\)) 是： \\[ \\frac{d\\ell_p}{d\\beta_1} = \\sum_j x_{1i_j} - \\sum_j \\frac{\\sum_{k \\in R_j} x_{1k} \\exp\\beta^T x_k}{\\sum_{k \\in R_j} \\exp \\beta^T x_k} \\] 那麼在事件時間 \\(t_j\\) 時，我們定義 Schoenfeld 殘差 \\(r_{s_{1j}}\\) 爲： \\[ r_{s_{1j}} = x_{1i_j} - \\frac{\\sum_{k \\in R_j} x_{1k} \\exp\\hat\\beta^T x_k}{\\sum_{k \\in R_j} \\exp \\hat\\beta^T x_k} \\] 由於我們知道 \\(\\hat\\beta\\) 是當且僅當偏似然的一階導數等於零的情況下的極大似然估計。所以這些 Schoenfeld 殘差之和必須也爲零。這個殘差的涵義其實質是在比較每個事件發生的時間點時，發生事件對象的解釋變量的觀察值和其餘的潛在對象集合 (the risk set) 乘以他們各自的權重均值之差。(The residual compares the observed values of the explanatory variable for the case at a given event time with the weighted average of the explanatory variable in the risk set.) 重點是，這些個計算獲得的 Schoenfeld 殘差不應該和事件有任何的關係，如果繪製這些殘差和事件時間的散點圖，他們應該是呈現一種無序的狀態，也就說明了比例風險假設是沒有被違反的。(The residuals should not show any dependence on time – this would indicate that the proportional hazards assumptions is not met.) 實際操作中，更常用的是把這些 Schoenfeld 殘差調整之後的 “scaled Schoenfeld residuals”。調整後的 scaled Schoenfeld 殘差 的計算式是： \\[ r_{SS_{1j}} = d \\times r_{S_{1j}} \\text{var}(\\hat\\beta_1) \\] 其中， \\(\\text{var}(\\hat\\beta_1)\\) 是該對數風險度比的方差。 \\(d\\) 是在該時間點時同時發生的事件計數 當比例風險前提得到滿足時，調整後的 scaled Schoenfeld residuals 的均值等於該變量的對數似然比。(The Scaled Schoenfeld residuals have a mean which is the true log hazard ratio under the proportional hazards assumption)。所以把調整後的 scaled Schoenfeld residuals 和時間做圖的話，繪製它隨着時間變化時的均值平滑曲線 (a smoothed average curve)，就能看出該變量的對數似然比，到底有沒有隨着時間的推進出現較大的波動。這樣的圖被叫做時間波動對數風險度比 (time-varying log-hazard ratio)。 Example 89.2 白血病患者數據，評估風險比例假設，當模型中增加了“治療組 \\(\\times\\) 時間”的交互作用項之後，它的參數估計是 \\(e^{\\hat\\gamma} = 1.008\\)，它的信賴區間估計是 \\((0.894, 1.137)\\)，\\(p = 0.894\\)。似乎並沒有證據提示比例風險假設前提被違反。該數據的調整後 scaled Schoenfeld 殘差圖和時間之間關係的圖繪製在圖 89.1 中。 圖 89.1: Plot of the scaled Schoenfeld residuals for the leukaemia patient data. Example 89.3 AGVHD數據，評估風險比例假設，在這個數據的例子中，我們給風險比例模型中加入了“治療組 \\(\\times\\) 時間”的交互作用項之後，發現它的參數估計是 \\(e^{\\hat\\gamma} = 0.854\\)，它的信賴區間估計是 \\((0.726, 1.003)\\)，\\(p = 0.055\\)。似乎有跡象表明比例風險假設的前提沒有被滿足。這和我們繪製的生存曲線圖 89.2，還有調整後 scaled Schoenfeld 殘差圖 89.3 提示的一致。圖 89.3 中顯示的平滑曲線遠遠不能認爲是和橫軸近似平行的曲線。隨着時間的推移，該變量的對數風險度比很明顯是越來越小的。 圖 89.2: AGVHD data: plots of the estimated survivor curve in the two treatment groups. 圖 89.3: AGVHD data: plots of the scaled Schoenfeld residuals. Example 89.4 EPIC-Norfolk 隊列研究數據，評估乳癌發生的風險比例假設，在這個例子中我們建立了有三個解釋變量的模型，其中吸菸習慣還是一個有三個類別的變量。我們進一步用下列模型來分析每一個解釋變量的風險度比是否會隨時間發生變化： \\[ h(t;X) = h_0(t) \\exp\\{ \\beta_1 X_{\\text{alc}} + \\beta_2 X_{\\text{FH}} + \\beta_3 X_{\\text{former-smoker}} + \\beta_4 X_{\\text{current-smoker}} + \\gamma_1 X_{\\text{alc}}t + \\gamma_2 X_{\\text{FH}}t + \\gamma_3 X_{\\text{former-smoker}}t + \\gamma_4 X_{\\text{current-smoker}}t \\} \\] 上述模型估計的 \\(\\gamma\\) 總結在下列表格中： Parameter Estimate 95% CI p-value Alcohol (\\(\\exp \\gamma_1\\)) 0.995 (0.995, 1.005) 0.306 Family history (\\(\\exp \\gamma_2\\)) 1.007 (0.978, 1.036) 0.656 Former smoker (\\(\\exp \\gamma_3\\)) 1.029 (1.008, 1.051) 0.008 Current smoker (\\(\\exp \\gamma_4\\)) 1.038 (1.005, 1.071) 0.022 對該模型的每一個解釋變量，都可以繪製相應的 scaled Schoenfeld 殘差圖。 圖 89.4: Plots of the scaled Schoenfeld residuals for the breast cancer data. 89.6 評價模型擬合的其他有趣方法 89.6.1 Martingale 殘差-assessing the functional form of continuous variables Matingale (馬丁哥?) 殘差圖可以用來輔助分析判斷生存回歸模型中連續型變量是否使用了合適的數學函數形式 (appropriate functional form)，因為有時候連續型變量需要增加該連續型變量的二次項或者多次項，也可能要用對數項之類的變形之後，才能完全把其與生存數據之間的關係完全解釋清楚。例如我們分析一個連續型變量 \\(X\\)，有許多時候可能需要把它進行數學轉換，那麼我們需要比較進行了數學轉換之前的模型和轉換之後的模型哪個更加合適： \\[ h(t; x) = h_0(t) \\exp(\\beta_1 \\color{red}{x}) \\text{ or } h(t; x) = h_0(t) \\exp(\\beta_1 \\color{red}{\\log x}) \\] 一個 “Martingale” 殘差，其實是在描述實驗對象在所建立好的比例風險回歸模型估計的事件發生與否的殘差。它比較的是，該實驗對象在隨訪中是否真是觀察到事件發生，以及和模型中預測到該對象的最終事件發生與否之間的差值。A Martingale is a residual for an event process – it is the difference between what happened to a person (whether they had the event or not) and what is predicted to happen to a person under the model that has been fitted. The Martingale residual for individual i is: \\[ r_{M_i} = \\delta_i - \\hat H_0(t_i)\\exp(\\hat\\beta x_i) \\] 其中， \\(\\delta_i\\) 是該實驗對象 \\(i\\) 實際是 (=1) 否 (=0) 發生事件的指示變量 \\(t_i\\) 是生存時間，或者刪失時間 \\(x_i\\) 是解釋變量的向量 \\(\\hat H_0(t_i)\\) 則是在時間點 \\(t_i\\) 時，該模型估計的累積基線風險 (estimated baseline cumulative hazard) 如果模型正確，它就能接近100%準確地估計每一個實驗對象是否在對應的時間發生事件，且這個殘差之和應該等於零 這樣一個有趣的殘差，它之所以能幫助我們判斷連續型變量應有的數學函數形式，其實是要通過我們計算零模型 (沒有解釋變量的模型) 的 Martingale 殘差之後，繪製該殘差和你將要加入的連續變量（或轉換之後的形式）之間的散點圖。如果說模型中已有其他的非連續型變量，那麼上述的零模型可以指代沒有該連續變量的模型。 Example 89.5 白血病患者的觀察數據，分析患者的白細胞計數 (WBC)，白細胞的某種特性 AG (+/-)，以及死亡時間之間可能存在的關係：我們該如何處理 WBC 這個連續型變量？ 首先，我們建立一個只有 AG 變量的 Cox 模型。此時獲得的 Martingale 殘差我們把它和連續型變量 WBC 做散點圖 89.5 圖 89.5: Plot of Martingale residuals (from a model with AG only) against WBC. 假如該散點圖中的平滑曲線 (smoothed curve) 顯示爲接近一條直線，那麼我們可以認爲把 WBC 原封不動，連續型的單一變量放入模型中就可以，但是顯然圖中所示並非如此。那麼接下來該做的是，就是對 WBC 進行數學函數轉換 (transformation)。下圖 89.6 展示的是相同模型獲得的 Martingale 殘差和對數轉換之後的 WBC 繪製的散點圖，看起來似乎比之前原始數據的形式給出的散點圖更接近直線： 圖 89.6: Plot of Martingale residuals (from a model with AG only) against log WBC. 那麼我們重新建立一個增加了 log WBC 而不是 WBC 本身的風險比例模型。 \\[ h(t|AG,WBC) = h_0(t)e^(\\beta_1 AG + \\beta_2 \\log(WBC)) \\] 再計算獲取該模型的 Martingale 殘差，將之和 log WBC 繪製散點圖 89.7。如果這個變量的形式選對了，那麼此時的平滑曲線應該是接近橫軸的平線 (flat line)，顯然，這條平滑曲線接近平線的程度並不十分令人滿意。 圖 89.7: Plot of Martingale residuals (from a model with AG and log(WBC)) against log WBC. 當然，有人此時可能開始考慮把 WBC 白細胞計數這個變量本身給轉換成分類型變量（例如分成五個等分）。 \\[ h(t|AG,WBC) = h_0(t)e^(\\beta_1 AG + \\beta_2 WBC_2 + \\beta_3 WBC_3 + \\beta_4 WBC_4 + \\beta_5 WBC_5) \\] 圖 89.8 顯示的是上述模型獲得的 Martingale 殘差和WBC之間的散點圖，及其獲得的平滑曲線； 圖 89.8: Plot of Martingale residuals (from a model with AG and categorized WBC) against WBC. 似乎此時我們看見了最接近平線 (flat line) 的平滑曲線。但是通常情況下，其實我們並不期望把連續型變量人爲地分割成多類別變量。 89.6.2 Deviance 偏差殘差 – identifying individuals for whom the model does not provide a good fit 偏差殘差是馬丁哥殘差的轉換值，它的定義是: \\[ r_{D_i} = \\text{sign}(r_{M_i})[-2\\{r_{M_i} + \\delta_i\\log(\\delta_i - r_{M_i})\\}]^{\\frac{1}{2}} \\] 偏差殘差通過上面的公式，把模型給出的馬丁哥殘差轉換成為一組理論上應該是平均分佈在零兩側的數據。如果某個個體的偏差殘差過大，偏離0太遠的話，提示該模型對該個體數據擬合不佳。具體來說，如果偏差殘差遠大於零，提示的是該個體遠在模型預測他/她/它會發生事件的時間之前就已經發生了事件；相反如果偏差殘差遠小於零，則提示該個體在模型預測發生事件的時間點之後很晚才真的發生事件。 把偏差殘差作 Y 軸，危險度評分 (risk score \\(=\\beta^Tx\\))，作 x 軸繪圖可以用於分析模型是否針對某些危險度高的人給出較高的偏差殘差，從而可以判斷模型是否合理。當判斷某些人可能偏差殘差過大，或者過小，之後要做的決定才是殘忍的，你要從數據中刪除這些個體？還是分析這些個體到底有哪些與眾不同的特質？或者是要重新對模型的各項解釋變量的形式進行修正？ 在進行生存分析的時候，請一定要一邊構建模型，一邊用這些殘差來綜合分析模型的合理性。 89.7 Practical Survival 05 在本次練習中，繼續使用 PBC 數據。 89.7.1 把數據讀入你最喜歡的 R 的環境中，先考慮一個二進制變量 cir0 對生存的影響。在建立的模型中加入該 cir0 變量和時間的交互作用項。在 R 裏需要用到 tt() 命令。 pbcbase &lt;- read.table(&quot;../backupfiles/pbcbase.csv&quot;, sep=&quot;,&quot;, header=T) head(pbcbase) ## id datein dateout time d treat age logb0c alb0c logigm0c cenc0 cir0 gh0 asc0 ## 1 5 19feb1980 19sep1981 1.582478 1 1 46 1.0400000 -2.520001 -8.80e-01 1 0 0 0 ## 2 22 22aug1980 22aug1980 0.000000 0 2 68 0.3999999 6.680000 7.90e-01 0 1 0 0 ## 3 23 22jul1980 02aug1989 9.032169 0 2 65 0.0800000 7.680000 1.60e-01 0 0 0 0 ## 4 40 08aug1980 21nov1982 2.286105 1 1 36 0.3999999 4.680000 7.00e-02 0 1 0 0 ## 5 42 06sep1980 05oct1982 2.078029 1 1 38 0.8299999 4.680000 -1.19e-09 0 0 0 1 ## 6 45 09feb1980 02jun1985 5.311430 1 1 48 -0.2600000 5.680000 -8.40e-01 1 0 0 0 ## bil0 alb0 igm0 bilcat ## 1 371.53520 31.78 0.3890451 3 ## 2 85.11379 40.98 18.1970100 3 ## 3 40.73803 41.98 4.2657950 2 ## 4 85.11379 38.98 3.4673690 3 ## 5 229.08670 38.98 2.9512090 3 ## 6 18.62087 39.98 0.4265795 1 with(pbcbase, tabpct(treat, d, graph = FALSE)) ## ## Original table ## d ## treat 0 1 Total ## 1 45 49 94 ## 2 50 47 97 ## Total 95 96 191 ## ## Row percent ## d ## treat 0 1 Total ## 1 45 49 94 ## (47.9) (52.1) (100) ## 2 50 47 97 ## (51.5) (48.5) (100) ## ## Column percent ## d ## treat 0 % 1 % ## 1 45 (47.4) 49 (51) ## 2 50 (52.6) 47 (49) ## Total 95 (100) 96 (100) ##question 1## cir0.model&lt;- coxph(Surv(time,d)~cir0+tt(cir0), data=pbcbase, tt=function(x,t,...) {x*t}) summary(cir0.model) ## Call: ## coxph(formula = Surv(time, d) ~ cir0 + tt(cir0), data = pbcbase, ## tt = function(x, t, ...) { ## x * t ## }) ## ## n= 191, number of events= 96 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## cir0 1.52149 4.57902 0.36632 4.1534 0.00003276 *** ## tt(cir0) -0.16368 0.84901 0.10278 -1.5926 0.1113 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## cir0 4.57902 0.21839 2.23336 9.3883 ## tt(cir0) 0.84901 1.17784 0.69411 1.0385 ## ## Concordance= 0.628 (se = 0.028 ) ## Likelihood ratio test= 24.38 on 2 df, p=5e-06 ## Wald test = 25.28 on 2 df, p=3e-06 ## Score (logrank) test = 28.81 on 2 df, p=6e-07 可以看到，cir0 和時間交互作用項的風險度比估計值是 0.849， 意思其實是，log(0.849) = -0.164 是該變量每增加一年的隨訪時間對死亡風險度的額外影響 (is the additional effect on the hazard for cirrhosis for each additional year of follow-up time)。對該交互作用項的回歸係數是否等於零的 Wald 檢驗提示並沒有有意義的交互作用。也就是該變量對發生死亡風險度的影響並不會隨時間改變。所以，無證據提示比例風險假設被違背。該模型的數學表達式可以寫作： \\[ h(t;x) = h_0(t)\\exp(\\beta x + \\gamma xt) \\] 89.7.2 繪製模型中只有 cir0 一個變量的情況下，調整後的 scaled Schoenfeld 殘差圖。 ##question 2## cir0.cox&lt;-coxph(Surv(time,d)~cir0,data=pbcbase) time.dep.zph &lt;- cox.zph(cir0.cox, transform = &#39;identity&#39;) time.dep.zph ## chisq df p ## cir0 2.602 1 0.107 ## GLOBAL 2.602 1 0.107 plot(time.dep.zph) 圖 89.9: Test of PH assumption. 儘管途中顯示似乎殘差和時間有那麼一點點關係，但是平滑曲線好像又有點接近平線 (flat line)。該卡方檢驗其實檢驗的是該圖中繪製的平滑曲線是否和平線相同。p = 0.11說明沒有證據提示該變量有違反風險比例假設。 89.7.3 另外一種探索變量 cir0 的風險度比是否隨時間保持不變的方法是可以把生存數據分割成幾個時間段，分別估計每個時間段內該暴露變量的風險度比。 在隨訪時間的中位數 2.85 年時把數據分割成兩部分，使用 survSplit 命令 使用 cir0 和分割好的時間段之間的交互作用項建立模型，看該交互作用項的風險度比是否有意義。 # Remove zero survival times pbc1&lt;-pbcbase[!(pbcbase$time==0),] pbc.split&lt;- survSplit(Surv(time,d)~., pbc1, cut=c(2.85,12), end=&quot;time&quot;, event=&quot;d&quot;, start=&quot;time0&quot;, episode=&quot;tiband&quot;) cir0.model.tiband1&lt;- coxph(Surv(time,d)~cir0,data=pbc.split[pbc.split$tiband==1,]) cir0.model.tiband2&lt;- coxph(Surv(time,d)~cir0,data=pbc.split[pbc.split$tiband==2,]) summary(cir0.model.tiband1) ## Call: ## coxph(formula = Surv(time, d) ~ cir0, data = pbc.split[pbc.split$tiband == ## 1, ]) ## ## n= 184, number of events= 48 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## cir0 1.30766 3.69751 0.29049 4.5016 6.745e-06 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## cir0 3.6975 0.27045 2.0924 6.5339 ## ## Concordance= 0.655 (se = 0.035 ) ## Likelihood ratio test= 19.63 on 1 df, p=9e-06 ## Wald test = 20.26 on 1 df, p=7e-06 ## Score (logrank) test = 23.28 on 1 df, p=1e-06 summary(cir0.model.tiband2) ## Call: ## coxph(formula = Surv(time, d) ~ cir0, data = pbc.split[pbc.split$tiband == ## 2, ]) ## ## n= 111, number of events= 48 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## cir0 0.70356 2.02093 0.33503 2.1 0.03573 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## cir0 2.0209 0.49482 1.048 3.897 ## ## Concordance= 0.564 (se = 0.034 ) ## Likelihood ratio test= 3.89 on 1 df, p=0.05 ## Wald test = 4.41 on 1 df, p=0.04 ## Score (logrank) test = 4.59 on 1 df, p=0.03 cir0.model.tiband&lt;- coxph(Surv(time,d)~cir0*as.factor(tiband),data=pbc.split) ## Warning in coxph.fit(X, Y, istrat, offset, init, control, weights = weights, : Loglik converged ## before variable 2 ; coefficient may be infinite. summary(cir0.model.tiband) ## Call: ## coxph(formula = Surv(time, d) ~ cir0 * as.factor(tiband), data = pbc.split) ## ## n= 295, number of events= 96 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## cir0 1.3077e+00 3.6975e+00 2.9049e-01 4.5016 6.745e-06 *** ## as.factor(tiband)2 -1.9011e+01 5.5393e-09 2.6264e+03 -0.0072 0.9942 ## cir0:as.factor(tiband)2 -6.0410e-01 5.4657e-01 4.4343e-01 -1.3623 0.1731 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## cir0 3.6975e+00 2.7045e-01 2.09240 6.5339 ## as.factor(tiband)2 5.5393e-09 1.8053e+08 0.00000 Inf ## cir0:as.factor(tiband)2 5.4657e-01 1.8296e+00 0.22919 1.3034 ## ## Concordance= 0.755 (se = 0.018 ) ## Likelihood ratio test= 77.11 on 3 df, p=&lt;2e-16 ## Wald test = 24.67 on 3 df, p=2e-05 ## Score (logrank) test = 79.03 on 3 df, p=&lt;2e-16 cir0.model.tt&lt;- coxph(Surv(time,d)~cir0+tt(cir0),data=pbc, tt=function(x,t,...) {x*(t&lt;2.85)}) summary(cir0.model.tt) ## Call: ## coxph(formula = Surv(time, d) ~ cir0 + tt(cir0), data = pbc, ## tt = function(x, t, ...) { ## x * (t &lt; 2.85) ## }) ## ## n= 191, number of events= 96 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## cir0 0.70356 2.02093 0.33503 2.1000 0.03573 * ## tt(cir0) 0.60410 1.82960 0.44343 1.3623 0.17309 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## cir0 2.0209 0.49482 1.0480 3.8970 ## tt(cir0) 1.8296 0.54657 0.7672 4.3632 ## ## Concordance= 0.628 (se = 0.028 ) ## Likelihood ratio test= 23.53 on 2 df, p=8e-06 ## Wald test = 24.67 on 2 df, p=4e-06 ## Score (logrank) test = 27.87 on 2 df, p=9e-07 我們發現在第一個時間段內， cir0 的風險度比是 3.70，第二個時間段內，相同的參數估計是 2.02。但是你看他們二者的信賴區間有相當的重疊部分，所以事實上還是沒有證據證明風險比例假設有被違反的痕跡。 89.7.4 接下來我們來看該數據集中的一個連續型變量， bil0 。我們練習使用 Martingale 殘差輔助我們判斷該連續型變量應該放入模型中的數學函數形式。 ##question 4## empty.cox&lt;-coxph(Surv(time,d)~1,data=pbcbase) mgale_res&lt;-resid(empty.cox,type=&quot;martingale&quot;) plot(pbc$bil0,mgale_res) lines(lowess(pbc$bil0,mgale_res)) 圖 89.10: Martingale residuals from empty model and bi10 variable. pbcbase$log_bil0&lt;-log(pbcbase$bil0) plot(pbcbase$log_bil0,mgale_res) lines(lowess(pbcbase$log_bil0,mgale_res)) 圖 89.11: Martingale residuals from empty model and log bil0 variable. 圖 89.10 給出的平滑曲線顯然不能認爲是直線 (linear)。似乎提示應該把連續型變量做自然對數的轉換 (log transformation)。而進行了對數轉換之後的 Martingale 殘差和對數 bil0 之間呈現了較爲接近直線的關係。 89.7.5 選擇你認爲應該對 bil0 進行的數學函數形式，使用 Scaled Schoenfeld 殘差檢查它是否違反比例風險假設。 ##question 5## log_bil0.cox&lt;-coxph(Surv(time,d)~log_bil0,data=pbcbase) time.dep.zph &lt;- cox.zph(log_bil0.cox, transform = &#39;identity&#39;) time.dep.zph ## chisq df p ## log_bil0 0.04634 1 0.83 ## GLOBAL 0.04634 1 0.83 plot(time.dep.zph) 圖 89.12: Scaled Schoenfeld residuals from Cox model with log bil0. log_bil0.cox.tt&lt;-coxph(Surv(time,d)~log_bil0+tt(log_bil0),data=pbcbase, tt=function(x,t,...) {x*t}) summary(log_bil0.cox.tt) ## Call: ## coxph(formula = Surv(time, d) ~ log_bil0 + tt(log_bil0), data = pbcbase, ## tt = function(x, t, ...) { ## x * t ## }) ## ## n= 191, number of events= 96 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## log_bil0 1.006343 2.735578 0.173300 5.8070 6.362e-09 *** ## tt(log_bil0) -0.010890 0.989169 0.050591 -0.2153 0.8296 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## log_bil0 2.73558 0.36555 1.94776 3.8420 ## tt(log_bil0) 0.98917 1.01095 0.89579 1.0923 ## ## Concordance= 0.777 (se = 0.023 ) ## Likelihood ratio test= 82.89 on 2 df, p=&lt;2e-16 ## Wald test = 84.05 on 2 df, p=&lt;2e-16 ## Score (logrank) test = 94.31 on 2 df, p=&lt;2e-16 89.7.6 建立一個含有如下解釋變量的 Cox 比例風險回歸模型：轉換過後的bil0, cir0，cenc0, Age 寫下該模型的數學表達式 \\[ h(t; x) = h_0(t)\\exp (\\beta_1 \\text{treat} + \\beta_2 \\text{log_bil10} + \\beta_3 \\text{cir0} + \\beta_4 \\text{cenc0} + \\beta_5 \\text{age}) \\] 使用 R 建立該模型並作出估計。 ##question 6## big.model&lt;-coxph(Surv(time,d)~as.factor(treat)+cir0+log_bil0+cenc0+age,data=pbcbase) summary(big.model) ## Call: ## coxph(formula = Surv(time, d) ~ as.factor(treat) + cir0 + log_bil0 + ## cenc0 + age, data = pbcbase) ## ## n= 191, number of events= 96 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## as.factor(treat)2 -0.403828 0.667759 0.210281 -1.9204 0.054805 . ## cir0 1.011903 2.750830 0.227946 4.4392 9.029e-06 *** ## log_bil0 1.070331 2.916344 0.131845 8.1181 4.735e-16 *** ## cenc0 0.896650 2.451377 0.273444 3.2791 0.001041 ** ## age 0.049802 1.051063 0.011305 4.4053 1.056e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## as.factor(treat)2 0.66776 1.49755 0.44221 1.0083 ## cir0 2.75083 0.36353 1.75969 4.3002 ## log_bil0 2.91634 0.34290 2.25223 3.7763 ## cenc0 2.45138 0.40793 1.43435 4.1895 ## age 1.05106 0.95142 1.02803 1.0746 ## ## Concordance= 0.819 (se = 0.021 ) ## Likelihood ratio test= 132.22 on 5 df, p=&lt;2e-16 ## Wald test = 108.28 on 5 df, p=&lt;2e-16 ## Score (logrank) test = 135.55 on 5 df, p=&lt;2e-16 在其他模型解釋變量保持不變的條件下，治療組相比對照組死亡的風險度下降了近 44%。如果在基線時患者本身已經有肝硬化 cir0 = 1，是沒有肝硬化的患者的死亡風險度的 2.75 倍。年齡每增加 1 歲，死亡風險增加 5% 左右。患者如果在基線時已經有膽汁淤滯 (cenc0 = 1)，該患者的死亡風險度是沒有膽汁淤滯患者的死亡風險度的2.45 倍。在對數尺度上，每增加一個單位的 bil0，死亡風險度增加接近3倍。 我們可以使用下面的代碼和圖形來診斷年齡應該有的數學函數形式： big.model.notage&lt;-coxph(Surv(time,d)~as.factor(treat)+cir0+log_bil0+cenc0,data=pbcbase) mgale_res&lt;-resid(big.model.notage,type=&quot;martingale&quot;) plot(pbcbase$age,mgale_res) lines(lowess(pbcbase$age,mgale_res)) 圖 89.13: Martingale residuals suggest that there may be a non-linear effect of age. #adding in age^2 big.model.agesq&lt;-coxph(Surv(time,d)~as.factor(treat)+cir0+log_bil0+cenc0+age+I(age^2),data=pbcbase) summary(big.model.agesq) ## Call: ## coxph(formula = Surv(time, d) ~ as.factor(treat) + cir0 + log_bil0 + ## cenc0 + age + I(age^2), data = pbcbase) ## ## n= 191, number of events= 96 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## as.factor(treat)2 -0.44766397 0.63911941 0.21761762 -2.0571 0.039675 * ## cir0 1.00260646 2.72537617 0.22669204 4.4228 9.744e-06 *** ## log_bil0 1.09029781 2.97515998 0.13485536 8.0849 6.219e-16 *** ## cenc0 0.82992173 2.29313924 0.28452399 2.9169 0.003536 ** ## age -0.02251409 0.97773747 0.08410094 -0.2677 0.788928 ## I(age^2) 0.00065222 1.00065243 0.00075564 0.8631 0.388067 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## as.factor(treat)2 0.63912 1.56465 0.41720 0.97908 ## cir0 2.72538 0.36692 1.74770 4.24998 ## log_bil0 2.97516 0.33612 2.28413 3.87525 ## cenc0 2.29314 0.43608 1.31293 4.00514 ## age 0.97774 1.02277 0.82915 1.15295 ## I(age^2) 1.00065 0.99935 0.99917 1.00214 ## ## Concordance= 0.819 (se = 0.021 ) ## Likelihood ratio test= 132.93 on 6 df, p=&lt;2e-16 ## Wald test = 109.72 on 6 df, p=&lt;2e-16 ## Score (logrank) test = 137.67 on 6 df, p=&lt;2e-16 mgale_res&lt;-resid(big.model.agesq,type=&quot;martingale&quot;) plot(pbcbase$age,mgale_res) lines(lowess(pbcbase$age,mgale_res)) 圖 89.14: Martingale residuals adding a quadratic term of age. 重新評估對數轉換之後的 bil0 是否違反了比例風險假設 #re-assessing the form for log_bilirubin big.model&lt;-coxph(Surv(time,d)~as.factor(treat)+cir0+log_bil0+cenc0+age,data=pbcbase) mgale_res&lt;-resid(big.model,type=&quot;martingale&quot;) plot(pbcbase$log_bil0,mgale_res) lines(lowess(pbcbase$log_bil0,mgale_res)) 圖 89.15: Martingale residuals with log bil0. 令人滿意的圖。 #Schoenfeld test big.model.zph &lt;- cox.zph(big.model, transform = &#39;identity&#39;) big.model.zph ## chisq df p ## as.factor(treat) 1.50021 1 0.221 ## cir0 0.57141 1 0.450 ## log_bil0 0.02714 1 0.869 ## cenc0 0.90385 1 0.342 ## age 0.07815 1 0.780 ## GLOBAL 2.53437 5 0.771 par(mfrow=c(3,2)) plot(big.model.zph) 圖 89.16: Scaled Schoenfeld residuals plot from Cox model for each covariate. Schoenfeld 殘差圖及其檢驗結果也提示無違反風險比例的跡象。 89.7.6.1 觀察該模型的偏差殘差圖 ##question 7## #deviance residuals## devres&lt;-resid(big.model,type=&quot;deviance&quot;) plot(devres,xlab=&quot;index&quot;, ylab=&quot;Deviance residuals&quot;,cex.lab=1.3) abline(h=0) #delta betas delta.betas&lt;-resid(big.model,type=&quot;dfbeta&quot;) par(mfrow=c(2,3)) plot(delta.betas[,1],xlab=&quot;index&quot;,ylab=&quot;Delta-betas&quot;,main=&quot;treat&quot;) abline(h=0) plot(delta.betas[,2],xlab=&quot;index&quot;,ylab=&quot;Delta-betas&quot;,main=&quot;log_bil0&quot;) abline(h=0) plot(delta.betas[,3],xlab=&quot;index&quot;,ylab=&quot;Delta-betas&quot;,main=&quot;cir0&quot;) abline(h=0) plot(delta.betas[,4],xlab=&quot;index&quot;,ylab=&quot;Delta-betas&quot;,main=&quot;cenc0&quot;) abline(h=0) plot(delta.betas[,5],xlab=&quot;index&quot;,ylab=&quot;Delta-betas&quot;,main=&quot;age&quot;) abline(h=0) "],["competing-risk.html", "第 90 章 競爭風險模型 competing risk 90.1 Cause-specific hazard 90.2 Cumulative incidence function 90.3 Subdistribution hazard - Fine and Gray model 90.4 Multi-state models 90.5 Practical Survival 06", " 第 90 章 競爭風險模型 competing risk 當我們在做風險模型研究的時候，除了重要的比例風險假設，另外一個 (經常被忘記的) 假設是我們認為刪失值只是一堆無效信息 (non-informative censoring)。這個假設通常來說都是合理的，但是如果某些刪失值是由於他們身上發生了別的事件，導致無法追踪或者無法再發生我們關心的事件。這樣的現象被叫做競爭風險 (competing risk)。最明顯的例子是我們關心某些疾病(心血管疾病，癌症)的發生，但是患者可能提前因為別的原因 (事故或者別的原因) 死亡而離開研究。這些離開研究的人，假如沒有死亡，繼續留在研究中，他們還是有可能會發生研究關心的事件的。那麼此時，我們說死亡事件，是一個疾病發生的競爭風險。 90.1 Cause-specific hazard 如果，我們認為研究中存在 \\(k\\) 種”事件(event/failure)“，我們可以定義這樣的因素別風險方程 (cause-specific hazard function): \\[ h_k(t) = \\lim_{\\delta t \\rightarrow 0} \\frac{1}{\\delta t}\\text{Pr}\\{ t\\leqslant T &lt; t + \\delta t, D = k | T\\geqslant t \\} \\] 這可以被定義為在時間點 \\(t\\)，該對象發生事件 \\(k\\) 的瞬間風險。(This can be interpreted as the instantaneous risk of dying from cause \\(k\\) given the individual is alive at time \\(t\\). i.e. they have not died of any cause before time \\(t\\)) (Cumulative cause-specific hazard)累積因素別風險方程則可以被定義為： \\[ H_k(t) = \\int_0^t h_k(s)ds \\] 相應地，生存方程： \\[ S_k(t) = \\exp(-H_k(t)) \\] Overall hazard is the sum of all cause-specific hazards: \\[ \\begin{aligned} h(t) &amp; = \\sum_{e=1}^K \\lim_{\\delta t\\rightarrow 0} \\frac{1}{\\delta t}\\text{Pr}\\{ t\\leqslant T &lt; t + \\delta t, D = e | T\\geqslant t \\} \\\\ &amp; = \\lim_{\\delta t \\rightarrow 0} \\frac{1}{\\delta t}\\text{Pr}\\{ t\\leqslant T &lt; t + \\delta t | T \\geqslant t \\} \\end{aligned} \\] It follows that the overall survival can be written as useful application of this cause-specific survivor function: \\[ S(t) = \\exp[-\\sum_{e=1}^KH_e(t)] = \\prod_{e = 1}^K \\exp(-H_e(t)) \\] 90.1.1 Cause-specific hazards models \\[ h_k(t|x) = h_{k, 0} (t)e^{\\beta_k x} \\] People are censored at the time of any event that is not the event of interest We fit a separate Cox model for each event type \\(\\beta_k\\) represents the impact of \\(x\\) on the hazard for event type k,** among those at risk of event type k** 90.2 Cumulative incidence function Other names: absolute cause-specific risk/Crude Probabilty of event \\[ I_k(t) = \\int_0^t h_k(s)S(s)ds \\] 90.3 Subdistribution hazard - Fine and Gray model The approach uses an alternative definition of the hazard, called the subdistribution hazard, which represents the instantaneous risk of dying from cause k given that an individual has not already died from cause k, that is: \\[ h^s_k(t) = \\lim_{\\delta t \\rightarrow 0} \\frac{1}{\\delta t} \\{ \\text{Pr}(t \\leqslant T &lt; t + \\delta t, K = k | T &gt; t \\text{ or } (T \\leqslant t, K \\neq k)) \\} \\] This differs from the cause-specific hazard in its risk set; here individuals are not removed from the risk set if they die from another competing cause of death than cause k. 90.3.1 Subdistribution hazard model \\[ h_k^s(t) = -\\frac{d}{dt} \\log(1 - I_k(t)) \\] \\[ h_k^s(t|x) = h_{0,k}(t)e^{\\beta^T_k x} \\] The relationsship between the CIFs in the two treatment groups is given by: \\[ 1 - I_k(t|1) = [1 - I_k(t|0)]^{\\exp(\\beta_kx)} \\] 90.4 Multi-state models 90.4.1 The Markov model A common assumption for multi-state mode is that upon entering a particular state i, individuals are subject to common trasition rate for movement to state j, irrespective of their history. In other words, we assume that the transition rate does not differ according to the previous states an individual has been in. This is called the Markov assumption, and is often quite a strong assumption to make. 90.4.2 Cox proportional hazards model for transition intensities The transition intensities for transition i to j is given by: \\[ h_{ij} (t | x) = h_{ij,0} (t)\\exp(\\beta_{ij}^Tx) \\] 90.5 Practical Survival 06 "],["other-surv.html", "第 91 章 生存分析的其他手段 91.1 分層Cox生存分析 stratified Cox proportional hazards model 91.2 加速失效(死亡)模型 Accelerated failure time (AFT) model 91.3 Practical Survival 07", " 第 91 章 生存分析的其他手段 91.1 分層Cox生存分析 stratified Cox proportional hazards model Under the Cox proportional hazards model, the effect of each explanatory variable on the hazard is assumed to be such that the ratio of hazards is constant accross the time scale (the proportional hazards assumption). In applications with several explanatory variabls, the effect of some of these variables may not be proportional. When the aim of the analysis is not focussed on these particular variables, for example if they are just being used as adjustment variables and are not the main exposures of interest, then the proportionality assumption can be relaxed just for those variables by fitting a stratified Cox proportional hazards model. In the stratified Cox proportional hazards model, instead of assuming that the proportional hazards model holds overall, we assume that the proportional hazards assumption holds within groups (or strata) of individuals. \\[ h(t|x,s) = h_{0s} (t)e^{\\beta^T x} \\] Each stratum, s, has a separate baseline hazard \\(h_{0s}(t)\\). However, the other explanatory variables x are assumed to act in the same way on the baseline hazard in each stratum, i.e. the \\(\\beta\\) are the same accross strata. 91.2 加速失效(死亡)模型 Accelerated failure time (AFT) model 加速失效模型，AFT 模型的特點是不管所謂的風險概念，而是對每個患者真正的生存時間進行模型化處理，其實個人更加喜歡這個模型，因為它很直觀地告訴你某類人的生存時間就是比另一類人短，而不是告訴你一個抽象的一組的風險低於或者高於另一組，因為很多人無法理解什麼是風險 (hazard)，正如很多人無法理解什麼是比值 (odds) 一樣。同樣還因為風險比例模型還要考慮是否對基線風險進行參數估計的取捨問題。 所以，我們先來回憶一下風險比例模型的定義。當解釋變量 (explanatory variable) 是一個二分類型變量，例如治療組和對照組。我們用 \\(h_0(t)\\) 表示在時間點 \\(t\\) 時，對照組 (control or baseline group) 的風險度方程 (hazard function)。那麼當比例風險成立時 (proportional hazard)，治療組的風險度方程和對照組的風險度方程成比例，如下面的式子所示： \\[ h_1(t) = \\psi_{PH}h_0(t) \\] 在比例風險模型中，我們需要進行估計的(to be estimated)，就是上面式子中的比例係數 \\(\\psi_{PH}\\)。另外，基線風險度，baseline hazard \\(h_0(t)\\)，也是可參數化的 (can be parameterized)。例如我們認爲生存數據服從指數分佈 (exponential distribution, see Chapter 85.8.1) 時，對照組的風險度被認爲不隨着時間而變化，是恆定的 (\\(h_0(t) = \\lambda\\))。如果我們認爲對照組風險度其實是會隨着時間而單調遞增或者單調遞減時，那麼它服從 Weibull 分佈 (see Chapter 85.8.2) 基線的風險度就是 \\(h_0(t) = \\kappa \\lambda t^{\\kappa -1}\\)。在一般常用的 Cox 比例風險模型中，這個基風險度被忽略而不進行參數化。 其實有時候我們可以簡單一點地思考這個生存數據，讓我們換一個角度看待我們的研究問題到底問的是什麼。發自我們內心的，其實，如果你也承認，我們會更加關心的是治療組，相比對照組的患者，生存時間 (survival time)上有沒有差異，而不是抽象的（難以理解的）風險度 (hazard) 的差異。 所以，我們這一章節想要討論的加速失效（死亡）模型，簡稱 AFT 模型就是用於比較組與組之間生存時間 \\((T)\\) 差異的模型。假設 \\(T_0\\) 是對照組（基線組 baseline group）的生存時間，那麼 \\(T_1\\) 表示治療組的生存時間，假如治療本身對生存時間的影響可以使用乘法的方式來表達，那麼治療組和對照組之間生存時間的關係可以描述成： \\[ T_1 = \\psi_{AFT}T_0 \\] 在 AFT 模型中，\\(\\psi_{AFT}\\) 就是加速指數，它的直接涵義就是，治療組患者的死亡時間被“加速”或者“減緩”了。也就是它可以回答，治療組的患者是不是更快的痊癒？或者更快的死亡？這樣明了的問題。假設我們估計說，\\(\\psi_{AFT} = 2\\)，這就可以被解釋成是，治療組患者的生存時間，是對照組患者生存時間的兩倍，也就是說，治療使得患者發生死亡的時間被推遲了。 圖 91.1: The survival curve in the treatment and control groups when accelerated factor = 2 (left); and the survivor curve for the treatment group again (right), but with the scale of the time axis changed. 91.2.1 詳細推導 繼續一邊和比例風險模型對比一邊推導加速失效模型。在比例風險模型中 \\(h_1(t) = \\psi_{PH}h_0(t)\\)，我們常常用 \\(e^{\\beta_{PH}}\\) 取代 \\(\\psi_{PH}\\)。這樣一來，就可以避免估計風險比例係數時只能是正數這樣的取值範圍限制，也就是指數函數中的 \\(\\beta_{PH}\\) 現在就又可以取所有實數啦，可正，可負。所以我們也可以用類似的思維對加速失效模型的加速度參數進行參數化分析，通常情況下，這個加速度指數用 \\(e^{-\\beta_{AFT}}\\) 進行參數化分析，稍後的解釋可以讓我們更加理解這裏爲什麼被加上了一個減號： \\[ T_1 = T_0 e^{-\\beta_{AFT}} \\] 在AFT模型中，用生存方程會更加直觀。對照組（基線組）的生存方程用 \\(S_0(t)\\) 表示的話，那麼治療組的生存方程 \\(S_1(t)\\) 可以表示爲： \\[ \\begin{aligned} S_1(t) &amp; = \\text{Pr}(T_1 &gt; t) \\\\ &amp; = \\text{Pr}(e^{-\\beta_{AFT}}T_0 &gt; t) \\\\ &amp; = \\text{Pr}(T_0 &gt; te^{\\beta_{AFT}}) \\\\ &amp; = S_0(e^{\\beta_{AFT}}t) \\end{aligned} \\] 也就是說，治療組的生存方程和對照組是相同的，只是時間 \\(t\\) 被替換成了 \\(e^{\\beta_{AFT}}t\\)。這樣一來，治療組，對照組患者的生存方程的分佈形狀 (shape of survival distribution)，其實是相同的，但是兩組之間的時間軸在前進的速度上有差異（更快了，或者更慢了）。也就是說，治療組相比較對照組，在走到同一個終點（死亡）之前的時間過程中，被按了快進鍵（或者減速鍵）。所以如果 \\(e^{\\beta_{AFT}} &gt; 1\\)，那麼治療組的患者發生（死亡）事件之前的時間較短，所以治療加速了死亡進程。如果 \\(e^{\\beta_{AFT}} &lt; 1\\)，那麼治療組患者發生（死亡）事件之前的時間較長，所以治療延長了死亡進程。所以你會看見，這個 \\(e^{\\beta_{AFT}}\\) 沒有類似風險度比 (hazard ratio) 那樣的意義，它是一個加速度指數。人最終都是會走向死亡的，只是時間長短的問題。 91.2.2 再詳細推導 目前爲止，我們只討論了當解釋變量是一個而分類變量時的情況。更加一般性地，當我們有一串觀察變量組成的向量 (a vector of explanatory variables) \\(\\mathbf{x}\\)，在AFT模型下它的生存方程可以描述成： \\[ S(t;\\mathbf{x}) = S_0(te^{\\beta_{AFT}^T\\mathbf{x}}) \\] 上述模型中，\\(S_0\\) 是基線組個體的生存方程，其中 \\(\\beta_{AFT}\\) 則變成了各解釋變量的回歸係數構成的向量 (a vector of parameters)。 那麼，很容易地，我們可以寫下一般情況下，AFT模型中的風險度方程 (hazard function, \\(h(t;\\mathbf{x})\\))，和生存概率密度方程 (probability density function, \\(f(t;\\mathbf{x})\\))： \\[ \\begin{aligned} h(t;\\mathbf{x}) &amp; = h_0(te^{\\beta_{AFT}^T\\mathbf{x}})e^{\\beta_{AFT}^T\\mathbf{x}} \\\\ f(t;\\mathbf{x}) &amp; = f_0(te^{\\beta_{AFT}^T\\mathbf{x}})e^{\\beta_{AFT}^T\\mathbf{x}} \\end{aligned} \\] 91.2.3 風險比例模型(PH)和加速失效（死亡）模型(AFT)的比較 詳細比較兩種模型下，風險度方程和生存方程表達的不同。這裏我們繼續用簡單的二分類變量（治療組，對照組）來簡化數學模型： 模型 風險度方程 (hazard function) 生存方程 (survivor function) PH 對照組: \\(h_0(t)\\) 對照組: \\(S_0(t) = \\exp\\{-\\int_0^th_0(u) du\\}\\) 治療組: \\(h_1(t) = e^{\\beta_{PH}}h_0(t)\\) 治療組: \\(S_1(t) = S_0(t)^{\\exp(\\beta_{PH})} = \\exp\\{ -e^{\\beta_{PH}}\\int_0^th_0(u) du \\}\\) AFT 對照組: \\(h_0(t)\\) 對照組: \\(S_0(t) = \\exp\\{-\\int_0^th_0(u) du\\}\\) 治療組: \\(h_1(t) = e^{\\beta_{AFT}} h_0( e^{\\beta_{AFT}} t)\\) 治療組: \\(S_1(t) = S_0(e^{\\beta_{AFT}}t) = \\exp\\{-e^{\\beta_{AFT}}\\int_0^th_0(e^{\\beta_{AFT}}u)du\\}\\) 91.2.4 Weibull 模型也是一種 AFT 模型 上述的討論，是對AFT模型的一般化的討論。但是和風險比例模型相似的，AFT模型其實也是一大類的生存分析模型 (a family of models)。這裏我們討論一下 Weibull 模型的另一種表達方式。 Weibull 模型下，對照組的生存方程 (survival function, \\(S_0(t)\\)) 被描述爲： \\[ S_0(t) = \\exp\\{-\\lambda t^{\\kappa}\\} \\] 那麼，治療組的生存方程 (\\(S_1(t)\\)) 可以被描述爲： \\[ S(t;\\mathbf{x}) = \\exp\\{-\\lambda(te^{\\beta_{AFT}^T\\mathbf{x}})^\\kappa\\}= \\exp\\{-\\lambda e^{\\kappa \\beta_{AFT}^T\\mathbf{x}} t^\\kappa\\} \\] 你如果仔細觀察，認真思考，就不難發現，其實這個治療組的生存方程，也是服從Weibull分佈的方程，只是和對照組生存方程相比，\\(\\lambda\\) 被替換成了 \\(\\lambda e^{\\kappa \\beta_{AFT}^T\\mathbf{x}}\\)。也就是說，不論是對照組還是治療組，患者的生存時間都服從Weibull分佈，差別只在於某些解釋變量 (explanatory variables) 改變了 Weibull 分佈的某些參數。所以我們說，Weibull分佈，也是一種特殊形態的AFT模型。 但是，我們之前探討 Weibull 模型時，只討論了它在風險比例前提下的形式： \\[ S(t;\\mathbf{x}) = \\exp\\{-\\lambda e^{\\beta^T_{PH}\\mathbf{x}} t^\\kappa \\} \\] 一個 Weibull 模型在 AFT 模型下的生存方程是： \\[ S(t;\\mathbf{x}) = \\exp \\{ -\\lambda e^{\\kappa \\beta^T_{AFT}\\mathbf{x}} t^\\kappa \\} \\] 所以當你用 Weibull 模型時，其實可以自由在兩種類型 (PH or AFT) 之間自由切換： \\[ \\exp(\\beta^T_{PH}) = \\exp(\\kappa\\beta^T_{AFT}) \\] Weibull 模型和其特殊形態–指數模型，為唯二的兩個，可以在 PH 模型和 AFT 模型之間自由切換的模型。 91.3 Practical Survival 07 "],["time-dep.html", "第 92 章 時間依存變量 Time-dependent variables 和脆弱模型 frailty model 92.1 時間依存變量指的是什麼 92.2 Extended Cox model 把Cox模型擴展開去 92.3 時間依存變量數據的結構 92.4 Frailty Models (脆弱模型?) 92.5 Practical Survival 08", " 第 92 章 時間依存變量 Time-dependent variables 和脆弱模型 frailty model 92.1 時間依存變量指的是什麼 生存分析的模型中，我們常常會使用一些實際上會經過時間變化而變化的預測變量。這些變量被稱爲時間依存型變量(time-dependent variables)。有些教科書會把這種類型的變量命名爲自更新變量(time-updated)或者時變變量(time-varying)。實際的例子有： 某觀察型研究使用患者病例數據庫分析患有囊性肺纖維化(cystic fibrosis)的病人的生存情況。在病人數據庫隨訪收集數據的過程中，有些患者接受了肺部臟器的移植，有些患者沒有。那麼有沒有肺部臟器移植手術就是影響患者死亡率，或者說生存概率的重要指標之一。那麼這樣的模型中，是否接受過移植手術這一變量就是一個時間依存型變量。它的特徵除了是一個二分類變量以外，患者只能從 0（未接受移植）變成 1（接受過移植），而不能反過來。 某觀察型隊列研究的課題是分析研究對象的血壓水平和心臟疾病之間的關係。在隊列研究的隨訪中，研究對象的血壓可能在每次隨訪時都有相應的測量數據。在這樣的實驗情形下，每次隨訪獲得的血壓數據就是一個時間依存型的連續變量。 時間依存型變量除了有二分類的，連續型的等等不同之外，它還有另外一個更加重要的性質需要考慮並且加以區分。這就是看我們想要討論的時間依存型變量的時間依存性質的來源，是內在性的(internal)還是外源性(external)的。 內在性的時間依存變量是指這個變量的隨時間的變化的特性是只能在觀察對象未發生我們所關心的事件（比如死亡事件）之前測量獲取的。而且這種內在性還體現在如果不與實驗對象取得聯繫的話，更新之後的數據研究者是無法得到的。比方說需要從仍然存活的患者身上提取血液樣本測量一些生物指標，比如是否接受過臟器移植，或者是最近的血壓值是多少等等。 外源性的時間依存變量是指這樣的變量雖然隨着時間變化，但是不需要通過聯繫患者或者實驗對象也能夠獲取想要的數據。年齡是最典型的一個例子，你只要知道患者在起始時的年齡，也就知道了在隨訪過程中患者的年齡。另外的常見外源性時間依存變量的例子還有如一些臨牀試驗中隨着患者病程的變化而按照事先準備或者計劃好的劑量調整治療方案。再比如研究空氣污染水平和患者哮喘之間關係的空氣污染水平數據，可以通過外來的如氣象局提供的歷史數據來查詢獲得。 這兩種類型的時間依存變量在進行數據分析的時候，常常不需要加以刻意的區分，但是在結果的解讀和解釋的時候就需要考慮這兩種不同類型的時間依存性質給分析結果帶來的影響。 在正式進入時間依存變量的數學模型之前，我們需要引入時間依存變量的數學標記方法。一般地，\\(x\\)被用於表示預測變量，它可以是一個單一的變量，也可以是一個由許多預測變量組成的向量。在處理時間依存型變量的時候，我們通常使用 \\(x(t)\\) 來表示。其含義就是在時間點 \\(t\\) 時預測變量的值。如果 \\(x(t)\\) 是一個向量，它可以同時表示時間依存型變量和其他的不隨時間變化而變化的變量。如果用 \\(x(t)\\) 表示一個非時間依存型變量的話，它就表示無論時間 \\(t\\) 是多少，\\(x\\) 值的大小都始終保持不變。 92.2 Extended Cox model 把Cox模型擴展開去 Cox比例風險模型是很容易被擴展，用來加入時間依存型預測變量。當Cox比例風險模型中加入了時間依存型變量，它的數學模型被寫作： \\[ h(t|x(t)) = h_0(t) e^{\\beta^Tx(t)} \\] 這一數學模型其實是在說我們對該預測變量感興趣的是在時間點 \\(t\\) 時的測量值是否和發生相關事件的風險(hazard)有關係。也就是在這個模型裏，時間依存變量的最新值，是我們關心的最主要預測變量。這裏的基線風險(baseline hazard, \\(h_0(t)\\))應該被解釋爲是一個所有的預測變量從起始直至所有追蹤結束時均爲零的觀察對象。[This formulation is assumed that we are interested in the explanatory variable at the time of the event of interest. In other words, it means that only the current value of the covariates (i.e. at time t) affects the hazard. Here, the baseline hazard function is interpreted as the hazard function for an individual for whom all the variables are zero (from the time origin and during all the follow-up).] 那麼這個模型的對數風險度比(log hazard ratios)又該怎麼理解呢？爲了便於解釋，先考慮只有一個時間依存型變量的模型 \\(x_1(t)\\)。那麼對象編號爲 \\(r\\) 和對象編號爲 \\(s\\) 的兩人，他們之間的風險度比 (hazard ratio)： \\[ \\begin{aligned} \\frac{h(t|x_{1r}(t))}{h(t|x_{1s}(t))} &amp; = \\frac{h_0e^{\\beta_1x_{1r}(t)}}{h_0e^{\\beta_1x_{1s}(t)}} \\\\ &amp; = \\exp(\\beta_1(x_{1r}(t) - x_{1s}(t))) \\end{aligned} \\] 所以，簡單地解釋就是，\\(\\beta_1\\) 比較的是\\(r,s\\)兩個觀察對象的預測變量 \\(x_1\\) 在任意一個時間點時相差一個單位時的風險度。值得指出的是，這裏回歸係數的解釋暗示了 時間依存變量\\(x_1\\)在任意一個時間點時，改變一個單位的風險度比是固定不變的。但是，由於 \\(x_{1r}(t) - x_{1s}(t)\\) 是會隨時間 \\(t\\) 變化的（也就是風險度比不再是成固定比例的，而是允許它隨時間變化而發生改變）。這個Cox風險模型就不能再被叫做“比例”風險模型，它被叫做Cox擴展模型(extended Cox Model)。 92.3 時間依存變量數據的結構 假設有一個隨時間變化而變化的二分類型解釋變量 \\(x(t)\\)，假設有三名從時間點 0 開始參與其中的實驗對象： 實驗對象1，她/他的 \\(x(t)\\) 隨着時間沒有發生變化，在整個隨訪過程中都是 \\(x(t) = 0\\)的狀態，在時間點10時該患者失去聯繫（刪失值，censor）。 實驗對象2，她/他的 \\(x(t)\\) 在隨訪時間 5 之前均爲 \\(x(t) = 0\\)，在該時間點之後 \\(x(t) = 1\\)，在時間點20時該患者失去聯繫（刪失值，censor）。 實驗對象3，她/他的 \\(x(t)\\) 在隨訪時間 15 之前均爲 \\(x(t) = 0\\)，在該時間點之後 \\(x(t) = 1\\)，在時間點25時該患者死亡 (event = 1)。 用表格來說明這三人在追蹤隨訪過程中的狀態如下： 其中的實驗對象： 實驗對象1，她/他的 \\(x(t)\\) 隨着時間沒有發生變化，在整個隨訪過程中都是 \\(x(t) = 0\\)的狀態，在時間點10時該患者失去聯繫（刪失值，censor）。 實驗對象2，她/他的 \\(x(t)\\) 在隨訪時間 5 之前均爲 \\(x(t) = 0\\)，在該時間點之後 \\(x(t) = 1\\)，在時間點20時該患者失去聯繫（刪失值，censor）。 實驗對象3，她/他的 \\(x(t)\\) 在隨訪時間 15 之前均爲 \\(x(t) = 0\\)，在該時間點之後 \\(x(t) = 1\\)，在時間點25時該患者死亡 (event = 1)。 用表格來說明這三人在追蹤隨訪過程中的狀態如下： 其中的實驗對象： 實驗對象1，她/他的 \\(x(t)\\) 隨着時間沒有發生變化，在整個隨訪過程中都是 \\(x(t) = 0\\)的狀態，在時間點10時該患者失去聯繫（刪失值，censor）。 實驗對象2，她/他的 \\(x(t)\\) 在隨訪時間 5 之前均爲 \\(x(t) = 0\\)，在該時間點之後 \\(x(t) = 1\\)，在時間點20時該患者失去聯繫（刪失值，censor）。 實驗對象3，她/他的 \\(x(t)\\) 在隨訪時間 15 之前均爲 \\(x(t) = 0\\)，在該時間點之後 \\(x(t) = 1\\)，在時間點25時該患者死亡 (event = 1)。 用表格來說明這三人在追蹤隨訪過程中的狀態如下： 表 92.1: Example data for individuals with time-dependent explanatory variable x(t). Each individual has a line of data for each time period over which the explanatory variables takes a different value. The status refers to whether the individual has the event (1) or not (0) at the end of the interval. Individual Time.origin Start.time Stop.time x.t. status 1 0 0 10 0 0 2 0 0 5 0 0 2 0 5 20 1 0 3 0 0 15 0 0 3 0 15 25 1 1 表格 92.1 中時間區間其實是左開右閉的。所以2號實驗對象在時間段 \\((0, 5]\\) 的 \\(x(t) = 0\\)，但是在時間段 \\((5, 20]\\) 時 \\(x(t) = 1\\)。 實際研究數據的例子： ## ## . use &quot;../backupfiles/stanford.d. list in 1/10 ## ## +-----------------------------------------------------------------+ ## | id sex dob datein datetr dateout dead | ## |-----------------------------------------------------------------| ## 1. | 1 0 10jan1937 15nov1967 . 03jan1968 1 | ## 2. | 2 0 02mar1916 02jan1968 . 07jan1968 1 | ## 3. | 3 0 19sep1913 06jan1968 06jan1968 21jan1906 1 | ## 4. | 4 0 23dec1927 28mar1968 02may1968 05may1968 1 | ## 5. | 5 0 28jul1947 10may1968 . 27may1968 1 | ## |-----------------------------------------------------------------| ## 6. | 6 0 08nov1913 13jun1968 . 15jun1968 1 | ## 7. | 7 0 29aug1917 12jul1968 31aug1968 17may1970 1 | ## 8. | 8 0 27mar1923 01aug1968 . 09sep1968 1 | ## 9. | 9 0 11jun1921 09aug1968 . 01nov1968 1 | ## 10. | 10 1 31jan1939 22feb1974 31mar1974 01apr1974 0 | ## +-----------------------------------------------------------------+ ## ## . 其中 datein 是該名患者加入實驗的日期； datetr 是該名患者接受心臟移植手術的日期（如果沒有接受手術則爲缺失值）； dateout 是患者離開實驗追蹤的日期（因爲死亡或者刪失）； dead 是實驗追蹤截止時患者的生存狀態（死亡１，刪失0）。 爲了讓這個數據能夠進行 Cox 比例風險模型的擬合，在 Stata 中需要使用到 stsplot 命令，當患者在隨訪中曾經接受過心臟移植手術，那麼他/她的數據將被分成兩行，前一行是移植手術前，後一行則是移植手術後的數據。患者如果沒有接受心臟移植手術，她/他的數據就只有一行。 ## ## . use &quot;../backupfiles/stanford.d. replace datetr = mdy(01, 01, 2001) if datetr == . ## (34 real changes made) ## ## . ## . stset dateout, id(id) origin(datein) scale(365.25) f(dead) ## ## id: id ## failure event: dead != 0 &amp; dead &lt; . ## obs. time interval: (dateout[_n-1], dateout] ## exit on or before: failure ## t for analysis: (time-origin)/365.25 ## origin: time datein ## ## ------------------------------------------------------------------------------ ## 103 total observations ## 3 multiple records at same instant PROBABLE ERROR ## (dateout[_n-1]==dateout) ## 2 observations end on or before enter() ## 1 observation begins on or after (first) failure ## ------------------------------------------------------------------------------ ## 97 observations remaining, representing ## 97 subjects ## 72 failures in single-failure-per-subject data ## 86.793 total analysis time at risk and under observation ## at risk from t = 0 ## earliest observed entry t = 0 ## last observed exit t = 4.925394 ## ## . ## . stsplit post = datetr, at(0) ## (64 observations (episodes) created) ## ## . ## . replace post = post+1 ## (161 real changes made) ## ## . ## . list in 1/20 ## ## +-----------------------------------------------------------------------+ ## 1. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 1 | 0 | 10jan1937 | 15nov1967 | 01jan2001 | 03jan1968 | 1 | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 1 | 2875 | .13415469 | 0 | 0 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 2. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 2 | 0 | 02mar1916 | 02jan1968 | 01jan2001 | 07jan1968 | 1 | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 1 | 2923 | .01368925 | 0 | 0 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 3. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 4 | 0 | 23dec1927 | 28mar1968 | 02may1968 | 02may1968 | . | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 0 | 3009 | .09582478 | 0 | 0 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 4. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 4 | 0 | 23dec1927 | 28mar1968 | 02may1968 | 05may1968 | 1 | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 1 | 3009 | .10403833 | .09582478 | 1 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 5. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 5 | 0 | 28jul1947 | 10may1968 | 01jan2001 | 27may1968 | 1 | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 1 | 3052 | .04654346 | 0 | 0 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 6. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 6 | 0 | 08nov1913 | 13jun1968 | 01jan2001 | 15jun1968 | 1 | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 1 | 3086 | .0054757 | 0 | 0 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 7. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 7 | 0 | 29aug1917 | 12jul1968 | 31aug1968 | 31aug1968 | . | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 0 | 3115 | .13689254 | 0 | 0 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 8. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 7 | 0 | 29aug1917 | 12jul1968 | 31aug1968 | 17may1970 | 1 | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 1 | 3115 | 1.8453114 | .13689254 | 1 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 9. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 8 | 0 | 27mar1923 | 01aug1968 | 01jan2001 | 09sep1968 | 1 | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 1 | 3135 | .10677618 | 0 | 0 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 10. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 9 | 0 | 11jun1921 | 09aug1968 | 01jan2001 | 01nov1968 | 1 | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 1 | 3143 | .22997947 | 0 | 0 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 11. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 10 | 0 | 20may1928 | 13sep1967 | 01jan2001 | 18sep1967 | 1 | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 1 | 2812 | .01368925 | 0 | 0 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 12. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 11 | 0 | 22aug1920 | 15aug1968 | 09sep1968 | 09sep1968 | . | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 0 | 3149 | .06844627 | 0 | 0 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 13. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 11 | 0 | 22aug1920 | 15aug1968 | 09sep1968 | 14jan1969 | 1 | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 1 | 3149 | .41615332 | .06844627 | 1 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 14. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 12 | 0 | 09jul1915 | 17sep1968 | 01jan2001 | 24sep1968 | 1 | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 1 | 3182 | .01916496 | 0 | 0 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 15. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 13 | 0 | 22feb1914 | 19sep1968 | 05oct1968 | 05oct1968 | . | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 0 | 3184 | .04380561 | 0 | 0 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 16. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 13 | 0 | 22feb1914 | 19sep1968 | 05oct1968 | 08dec1968 | 1 | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 1 | 3184 | .21902806 | .04380561 | 1 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 17. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 14 | 0 | 16sep1914 | 20sep1968 | 26oct1968 | 26oct1968 | . | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 0 | 3185 | .09856263 | 0 | 0 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 18. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 14 | 0 | 16sep1914 | 20sep1968 | 26oct1968 | 07jul1972 | 1 | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 1 | 3185 | 3.7946612 | .09856263 | 1 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 19. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 16 | 0 | 16may1919 | 26oct1968 | 22nov1968 | 22nov1968 | . | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 0 | 3221 | .07392197 | 0 | 0 | ## +-----------------------------------------------------------------------+ ## ## +-----------------------------------------------------------------------+ ## 20. | id | sex | dob | datein | datetr | dateout | dead | _st | ## | 16 | 0 | 16may1919 | 26oct1968 | 22nov1968 | 29aug1969 | 1 | 1 | ## |----------------------------------------------------------+------------| ## | _d | _origin | _t | _t0 | post | ## | 1 | 3221 | .84052019 | .07392197 | 1 | ## +-----------------------------------------------------------------------+ ## ## . ## . stcox post ## ## failure _d: dead ## analysis time _t: (dateout-origin)/365.25 ## origin: time datein ## id: id ## ## Iteration 0: log likelihood = -283.80782 ## Iteration 1: log likelihood = -283.79628 ## Iteration 2: log likelihood = -283.79628 ## Refining estimates: ## Iteration 0: log likelihood = -283.79628 ## ## Cox regression -- Breslow method for ties ## ## No. of subjects = 97 Number of obs = 161 ## No. of failures = 72 ## Time at risk = 86.7926078 ## LR chi2(1) = 0.02 ## Log likelihood = -283.79628 Prob &gt; chi2 = 0.8792 ## ## ------------------------------------------------------------------------------ ## _t | Haz. Ratio Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## post | .9550011 .2889517 -0.15 0.879 .5277868 1.728022 ## ------------------------------------------------------------------------------ ## ## . 請問，經過Stata調整過後的數據中，_t0, t, post, _d 分別是什麼意義的數字？ _t0 是追蹤的時間起點，對於有接受心臟移植的患者來說，第二行的 _t0 是接受完移植手術後的時間起點； t 是生存時間，或者刪失值發生之前的時間； _d 是事件指示變量(event indicator)，對於有接受心臟移植的患者來說，她/他有兩行數據，第一行是手術前，第二行是手術後。當患者死亡(event = 1)，那麼那一行的 _d = 1，之前的每一行都是0。每名患者最多只有一行發生死亡事件； post 則是指示該行患者數據是處於心臟移植手術之前(post = 0)，還是之後(post = 1)。例如，第7名患者進入實驗的起點時間是1968年7月12日，她/他在1968年8月31日 (即0.13698245年之後)這天接受了心臟移植手術。所以在這兩個時間點之內是該患者的第一行數據，被記錄爲手術前 (post = 0)，這之後該患者又被持續追蹤到1970年5月17日，在這段時間內的數據是患者的第二行數據，被記錄爲手術後 (post = 1)； stcox post 的結果 Haz. Ratio = 0.96, 95%CI: 0.528, 1.728的涵義是，接受心臟手術之後，患者的死亡風險相比不接受心臟移植手術平均要低 4%，但是這個風險比 (HR)的 95%信賴區間是 (0.53, 1.73)，包含了零假設時的 1，所以數據分析的結果是心臟手術降低的死亡風險不能達到顯著性效果，沒有統計學意義。 92.3.1 值得注意的點 如果說我們感興趣的時間依存變量是外源性的 (external time-dependent variable)，那麼經典的條件風險 (conditional hazard) 和條件生存概率 (conditional survival)的關係仍然是有意義的： \\[ S(t | x(u), u\\leqslant t) = \\text{exp}(-\\int_0^t h_0(u)\\text{exp}(\\beta^Tx(u))du) \\] 如果說時間依存變量本身是內源性的（internal time-dependent variable），那麼上面這個經典的條件風險和條件生存概率之間的關係就是沒有意義的了。因爲內源性的變量必須在患者生存的時候才能測量得到，如果你測量到了患者的時間依存變量就意味着該患者的生存概率是1。 另一個需要注意的點是在包括了時間依存變量的Cox比例風險模型中，當你加入了在暴露和結果的因果關係通路上的變量作爲共變量時，模型會變得不可解釋。舉例來說，如果治療心肌梗死的藥物是通過降低血壓來達到降低心肌梗死發生的概率的話，假設模型中調整的是跟隨時間發生變化的血壓作爲共變量，那麼這個模型中上升或者下降的血壓就會把治療效果給抵消掉(cancel out the treatment effect)。在這樣的場景設定中，血壓的變化本身是作爲主要暴露因素（治療與否）和主要結果因素（心肌梗死的發生概率）之間的媒介 (mediator)。 92.4 Frailty Models (脆弱模型?) 脆弱模型是時間事件數據的隨機效應模型。 Frailty models are random effects models for time-to-event data. 92.4.1 Individual frailty model \\[ h_i(t|x_i) = \\alpha_ih(t|x_i) = \\alpha_i h_0(t)\\exp(\\beta^Tx_i) \\] 92.4.2 Application to a Weibull model \\[ h(t|x_i,\\alpha_i) = \\alpha_i \\kappa \\lambda t^{\\kappa - 1}e^{\\beta^Tx} \\] 92.4.3 Shared frailty model \\[ h(t|x_{ij}, \\alpha_i) = \\alpha_j h_0(t)e^{\\beta^Tx_{ij}} \\] 92.5 Practical Survival 08 92.5.1 練習題 exercise 8.1 假設我們使用下面這樣的Cox擴展模型來研究關於肺部臟器移植與否的時間依存變量和死亡之間的關係： \\[ h(t|x) = h_0(t)\\text{exp}(\\beta x(t)) \\] 如果患者\\(r\\)在時間點5時進行了肺部的臟器移植，患者\\(s\\)則整個隨訪中都沒有接受臟器移植。請試着計算下列時間點時兩名患者之間的死亡風險度比： 時間點4； 時間點6。 （我們假設兩名患者在這兩個時間點時都依然還是存活着的） 92.5.2 解答 在時間點4時，兩名患者都沒有接受臟器移植，此時，他們的死亡風險度都是基線風險：\\(h(t|x) = h_0(t)\\)，故在時間點4時，他們的死亡風險度比是 1。 在時間點6時，患者\\(r\\)的風險度是：\\(h(t|x) = h_0(t)\\text{exp}(\\beta)\\)。患者 \\(s\\) 的風險度是：\\(h(t|x) = h_0(t)\\)。所以，在時間點6時，患者\\(r,s\\)之間的死亡風險度比就是 \\(\\text{exp}(\\beta)\\)。 在Cox擴展模型下，加入了時間依存變量之後，模型所使用的偏似然(partial likelihood)是： \\[ L_p = \\prod_j\\frac{\\text{exp}\\beta^Tx_{i_j}(t_j)}{\\sum_{k\\in R_j}\\text{exp}\\beta^Tx_k(t_j)} \\] 在這個偏似然中，我們實際比較了在時間點 \\(t_j\\) 時，實際觀察到的有發生事件的對象的預測變量 \\(x_{i_j}(t_j)\\) 的風險度，和在時間點 \\(t_j\\) 時仍然存在在觀察數據集合(the risk set at time \\(t_j\\))中的個體(假設人數爲 \\(R_j\\))的預測變量 \\(x_k(t_j)\\)的風險度。這裏需要特別指出的是，當使用這個偏似然作爲估計的工具時，我們需要知道所有觀察對象，當他/她/它仍然處在觀察數據集合中的時候，每當有新的事件發生被觀察到，那每個新時間發生的時間點，模型中所有預測變量的最新值（包括時間依存變量本身）。這個假設對於二分類（是否接受移植臟器）時間依存變量來說不難，但是當時間依存變量是連續型變量的時候，要知道每一次事件發生時所有存在在觀察數據集合中每一名觀察對象的觀察值（例如血壓），是無法辦到的。這是因爲血壓值其實是時時刻刻都處在變化中的，但是我們實際對患者隨訪測量血壓時，都只能獲得患者在某個時間點上的血壓值。因此，這個Cox擴展模型中如果存在連續性的時間依存變量，那麼模型的另一個隱含的前提條件是，假設患者或者實驗對象的連續性時間依存變量在前後兩次測量值獲得的間隔期內是保持不變的（assuming that it stays constant from the last time it has been observed）。 "],["surv-advance.html", "第 93 章 時間事件數據的高級分析法", " 第 93 章 時間事件數據的高級分析法 "],["bayes-surv.html", "第 94 章 貝葉斯生存分析 Bayesian Survival Analysis", " 第 94 章 貝葉斯生存分析 Bayesian Survival Analysis 我們使用相同的白血病患者數據來展示分析代碼和結果： Example 94.1 給白血病患者數據套用 Cox 比例風險回歸模型 在這個數據中，42名白血病患者中各有21人分別在治療和對照組。研究者關心的事件是病情的緩解 (remission)。追蹤時間是從白血病診斷時起，單位是週數。那麼暴露變量就是被分配到治療組與否，其中被分配到對照組的患者的風險度被認爲是基線風險度 (baseline hazard)。於是這個模型其實可以簡單描述成： \\[ \\begin{cases} h_0(t) &amp; 對照組 \\text{ control group} \\\\ h_0(t) e^\\beta &amp; 治療組 \\text{ treatment group} \\end{cases} \\] 使用偏似然法計算該模型的參數我們獲得對數風險度比 (log hazard ratio) 的估計值 \\(\\hat\\beta = -1.51\\)，其對應的標準誤是 \\(0.410\\)，95% 信賴區間是 (-2.31, -0.71)。於是相應的，風險度比 \\(\\exp \\hat\\beta = 0.22\\)，95% 信賴區間是 \\((0.10, 0.49)\\)。 該模型用 Stata 計算的過程如下 ## ## . infile group weeks remission using https://data.princeton.edu/wws509/datasets ## &gt; /gehan.raw ## host not found ## r(631); ## ## . label define group 1 &quot;control&quot; 2 &quot;treated&quot; ## ## . label values group group ## no variables defined ## r(111); ## ## . stset weeks, failure(remission) ## variable weeks not found ## r(111); ## ## . stcox group ## variable group not found ## r(111); ## ## . stcox group, nohr ## variable group not found ## r(111); ## ## . 該模型用 R 計算的過程如下 gehan &lt;- read.table(&quot;https://data.princeton.edu/wws509/datasets/gehan.raw&quot;, header = FALSE, sep =&quot;&quot;, col.names = c( &quot;group&quot;, &quot;weeks&quot;, &quot;remission&quot;)) cox.model &lt;- coxph(Surv(time = weeks, event = remission) ~ as.factor(group), data = gehan, method = &quot;breslow&quot;) summary(cox.model) ## Call: ## coxph(formula = Surv(time = weeks, event = remission) ~ as.factor(group), ## data = gehan, method = &quot;breslow&quot;) ## ## n= 42, number of events= 30 ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## as.factor(group)2 -1.50919 0.22109 0.40956 -3.6849 0.0002288 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## as.factor(group)2 0.22109 4.5231 0.099071 0.49339 ## ## Concordance= 0.69 (se = 0.041 ) ## Likelihood ratio test= 15.21 on 1 df, p=0.0001 ## Wald test = 13.58 on 1 df, p=0.0002 ## Score (logrank) test = 15.93 on 1 df, p=7e-05 相同的模型如果使用 brms 通過 Stan 運行貝葉斯模型的話是這樣子的： gehan &lt;- gehan %&gt;% mutate( remission1 = 1 - remission ) %&gt;% mutate( Group = as.factor(group) ) fitCox1002 &lt;- brm(data = gehan, family = brmsfamily(&quot;cox&quot;), weeks | cens(remission1) ~ 1 + Group, iter = 4000, warmup = 1500, chains = 4, cores = 4, seed = 14) saveRDS(fitCox1002, &quot;../Stanfits/Cox1002.rds&quot;) Check the summary for fitCox1002. fitCox1002 &lt;- readRDS(&quot;../Stanfits/Cox1002.rds&quot;) print(fitCox1002) ## Family: cox ## Links: mu = log ## Formula: weeks | cens(remission1) ~ 1 + Group ## Data: gehan (Number of observations: 42) ## Draws: 4 chains, each with iter = 4000; warmup = 1500; thin = 1; ## total post-warmup draws = 10000 ## ## Population-Level Effects: ## Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS ## Intercept 1.57 0.33 0.96 2.24 1.00 6732 6706 ## Group2 -1.68 0.43 -2.55 -0.88 1.00 8812 6939 ## ## Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS ## and Tail_ESS are effective sample size measures, and Rhat is the potential ## scale reduction factor on split chains (at convergence, Rhat = 1). 計算對應的貝葉斯事後危險度比 Hazard Ratio post &lt;- posterior_samples(fitCox1002) ## Warning: Method &#39;posterior_samples&#39; is deprecated. Please see ?as_draws for recommended ## alternatives. post %&gt;% transmute(`hazard ratio` = exp(b_Group2)) %&gt;% summarise(median = median(`hazard ratio`), sd = sd(`hazard ratio`), ll = quantile(`hazard ratio`, probs = .025), ul = quantile(`hazard ratio`, probs = .975)) %&gt;% mutate_all(round, digits = 4) ## median sd ll ul ## 1 0.19 0.0875 0.0781 0.4154 繪製貝葉斯方法獲得的事後分佈概率密度函數 (Why not glance at the full posterior?)： post %&gt;% transmute(`hazard ratio` = exp(b_Group2)) %&gt;% ggplot(aes(x = `hazard ratio`, y = 0)) + geom_vline(xintercept = 1, color = &quot;white&quot;) + stat_halfeye(.width = c(.5, .95)) + scale_y_continuous(NULL, breaks = NULL) + xlab(&quot;hazard ratio for Group2 vs Group1&quot;) + theme(panel.grid = element_blank()) 圖 94.1: The full posterior distribution of the hazard ratio from model fitCox1002 從已經運行好的模型中調取 brms 自動爲我們生成的 Stan 代碼: fitCox1002$model ## // generated with brms 2.15.0 ## functions { ## /* distribution functions of the Cox proportional hazards model ## * parameterize hazard(t) = baseline(t) * mu ## * so that higher values of &#39;mu&#39; imply lower survival times ## * Args: ## * y: the response value; currently ignored as the relevant ## * information is passed via &#39;bhaz&#39; and &#39;cbhaz&#39; ## * mu: positive location parameter ## * bhaz: baseline hazard ## * cbhaz: cumulative baseline hazard ## */ ## real cox_lhaz(real y, real mu, real bhaz, real cbhaz) { ## return log(bhaz) + log(mu); ## } ## real cox_lccdf(real y, real mu, real bhaz, real cbhaz) { ## // equivalent to the log survival function ## return - cbhaz * mu; ## } ## real cox_lcdf(real y, real mu, real bhaz, real cbhaz) { ## return log1m_exp(cox_lccdf(y | mu, bhaz, cbhaz)); ## } ## real cox_lpdf(real y, real mu, real bhaz, real cbhaz) { ## return cox_lhaz(y, mu, bhaz, cbhaz) + cox_lccdf(y | mu, bhaz, cbhaz); ## } ## // Distribution functions of the Cox model in log parameterization ## real cox_log_lhaz(real y, real log_mu, real bhaz, real cbhaz) { ## return log(bhaz) + log_mu; ## } ## real cox_log_lccdf(real y, real log_mu, real bhaz, real cbhaz) { ## return - cbhaz * exp(log_mu); ## } ## real cox_log_lcdf(real y, real log_mu, real bhaz, real cbhaz) { ## return log1m_exp(cox_log_lccdf(y | log_mu, bhaz, cbhaz)); ## } ## real cox_log_lpdf(real y, real log_mu, real bhaz, real cbhaz) { ## return cox_log_lhaz(y, log_mu, bhaz, cbhaz) + ## cox_log_lccdf(y | log_mu, bhaz, cbhaz); ## } ## } ## data { ## int&lt;lower=1&gt; N; // total number of observations ## vector[N] Y; // response variable ## int&lt;lower=-1,upper=2&gt; cens[N]; // indicates censoring ## int&lt;lower=1&gt; K; // number of population-level effects ## matrix[N, K] X; // population-level design matrix ## // data for flexible baseline functions ## int Kbhaz; // number of basis functions ## // design matrix of the baseline function ## matrix[N, Kbhaz] Zbhaz; ## // design matrix of the cumulative baseline function ## matrix[N, Kbhaz] Zcbhaz; ## // a-priori concentration vector of baseline coefficients ## vector&lt;lower=0&gt;[Kbhaz] con_sbhaz; ## int prior_only; // should the likelihood be ignored? ## } ## transformed data { ## int Kc = K - 1; ## matrix[N, Kc] Xc; // centered version of X without an intercept ## vector[Kc] means_X; // column means of X before centering ## for (i in 2:K) { ## means_X[i - 1] = mean(X[, i]); ## Xc[, i - 1] = X[, i] - means_X[i - 1]; ## } ## } ## parameters { ## vector[Kc] b; // population-level effects ## real Intercept; // temporary intercept for centered predictors ## simplex[Kbhaz] sbhaz; // baseline coefficients ## } ## transformed parameters { ## } ## model { ## // likelihood including constants ## if (!prior_only) { ## // compute values of baseline function ## vector[N] bhaz = Zbhaz * sbhaz; ## // compute values of cumulative baseline function ## vector[N] cbhaz = Zcbhaz * sbhaz; ## // initialize linear predictor term ## vector[N] mu = Intercept + Xc * b; ## for (n in 1:N) { ## // special treatment of censored data ## if (cens[n] == 0) { ## target += cox_log_lpdf(Y[n] | mu[n], bhaz[n], cbhaz[n]); ## } else if (cens[n] == 1) { ## target += cox_log_lccdf(Y[n] | mu[n], bhaz[n], cbhaz[n]); ## } else if (cens[n] == -1) { ## target += cox_log_lcdf(Y[n] | mu[n], bhaz[n], cbhaz[n]); ## } ## } ## } ## // priors including constants ## target += student_t_lpdf(Intercept | 3, 2.4, 2.5); ## target += dirichlet_lpdf(sbhaz | con_sbhaz); ## } ## generated quantities { ## // actual population-level intercept ## real b_Intercept = Intercept - dot_product(means_X, b); ## } "],["why-bayes.html", "第 95 章 爲什麼我們要用貝葉斯統計學方法？ 95.1 氨甲喋呤 (methotrexate) 在系統性硬皮病 (systematic sclerosis, SSc) 中的療效 95.2 Example: The GREAT trial", " 第 95 章 爲什麼我們要用貝葉斯統計學方法？ Everybody is a Bayesian. It’s just that some know it, and some don’t. Trivellore Raghunathan Lectures for Bayesian Statistics were orgainised and taught by Professor Alexina Mason and supported by Dr. F. Javier Rubio. 統計學模型 (理論)，結合現實的數據 (實踐)，才能讓我們深刻地理解這個世界，既能檢驗我們的理論，又能從中找出規律性，爲一些現象做出總結和結論。如果說這個理論和實踐相結合的過程有類別之分，那麼最大的兩個類別區分就是: 概率論，和貝葉斯理論。 試從一個醫生的角度來思考他推斷一個患者疾病的過程: 門診中，有個患者因爲身患多種症狀前來就醫，他/她自己可能認爲自己患了某種疾病。你作爲接診的醫生，在思考和推斷患者是否患有他/她所認爲的那種疾病時，你的思考會建立在如下的前提 (prior view) 之上: 你觀察到的患者症狀，患者的家族病史，會帶來相同症狀的不同疾病的鑑別診斷。接下來，你可能讓該患者去做一些具體的生理生化，影像或者病理學檢查 (收集相應的數據)。接下來，你收到了該患者的生理生化檢查結果，影像報告和病理學報告，在看了這些報告 (分析獲得的數據) 過後，你重新再對患者到底是否患上該種疾病進行評估，獲得你心中認可的，他/她患有該疾病的概率 (updates their prior in light of the data to get a posterior view on whether the patient has the disease)。當然，更加常見的情況是，你看了這些初步報告之後，可能又讓該患者進一步做一些確診性質的檢查，用於輔助診斷。可能你還沒意識到，這個思考過程，就是一個十分典型的貝葉斯方式的推理。 在上面的醫生給患者做診斷的例子中，醫生診斷的過程，其實就是在評估該特定患者患有某種疾病的概率。很顯然不同的醫生可能會給出不同的概率 (=不同的診斷)，這個概率，其實是一個主觀概率 (subjectively)。每個醫生給出的概率大小，其實是他/她自己對於給定了相應的數據 (患者主訴，檢查報告) 之後對於該患者患有該疾病的可能性的度量。(The size of the probability represents the physician’s degree of belief about the occurence of an event, i.e. their own personal assessment of how likely an event is, based on the evidence available to them.) 這樣的主觀概率，你是否也認爲它比起概率論者常說的概率更加接近我們平時常說的 “概率” 的概念呢？ (概率論者的”概率”: 一個事件發生的概率，等於在無數次相同的實驗中，該事件發生次數所佔的比例)。所以這個貝葉斯方式的主觀概率，其實是因人而異的 (其屬性在於人)，而非所謂的客觀現象 (not the phenomenon of interest)。所以，主觀概率是貝葉斯統計學的最基礎思維方式。 下面我們用兩個例子，來闡述貝葉斯和概率論兩種統計學思維所展示的不同。第一個來自論文 (Johnson et al. 2009)，該論文中，作者使用了貝葉斯統計方法重新分析了使用概率論方法分析過的一個臨牀隨機試驗的結果。第二個例子來自於 (Spiegelhalter, Abrams, and Myles 2004)，叫做 GREAT 的隨機臨牀試驗。 95.1 氨甲喋呤 (methotrexate) 在系統性硬皮病 (systematic sclerosis, SSc) 中的療效 95.1.1 背景資料-SSc trial 某臨牀試驗 (RCT) 的設定是這樣的，兩組患者，一組是新療法 (氨甲喋呤)，一組是安慰劑 (或者標準療法)。在一個傳統的概率論者的框架底下，分析這樣一個RCT試驗數據的人最有可能進行的分析步驟如下: 建立一個所謂的零假設 (歸零假設), null hypothesis: 氨甲喋呤對於系統性硬皮病的治療是無效的。 確定一個和零假設互補的替代假設。 設定 0.05 (或者 5%) 作爲假陽性出現概率，也就是 type I error。 通過模型計算，報告 p 值。 那麼，當報告中的 p 值 \\(&gt; 0.05\\) 時，大多數蠢蠢欲動的醫生和研究者可能就會下結論說: “我們沒有找到足夠的證據來拒絕零假設”。事實真的是這樣子嗎？更糟糕的是，許多這樣的臨牀試驗可能會被打上 “negative (消極結果)” 的標籤，然後經過很多年以後大家都認爲這個RCT就被總結成了類似 “氨甲喋呤無效”，或者 “氨甲喋呤不能治療系統性硬皮病”等結論在醫學界被傳播。要知道，類似系統性硬皮病這樣的稀少疾病，其實是很難找到足夠的患者數量進行臨牀試驗的。這些稀少疾病的臨牀試驗中，p 值 \\(&gt; 0.05\\) 很可能只是反映了獲得數據的統計效能不足 (lack of power)，並不一定就說明了藥物或者療法是無效的。 系統性硬皮病是一種患病率極低的罕見疾病。目前沒有特效藥物治療該疾病，從而導致患者長期忍受疾病的折磨，生活品質因爲身體機能的下降而長期處在十分低下的水平。過去有兩個小型試驗報告了氨甲喋呤 (MTX) 可能在系統性硬皮病的治療中起到積極的效果，於是就有研究者組織了一個爲時一年的隨機雙盲臨牀試驗，對象是那些系統性硬皮病的早期患者。35名患者被隨機分配接受 MTX 治療，另外36名患者被分配至了安慰劑對照組。期間有一些患者中途退出了試驗，多數退出的患者的理由是，治療缺乏有效性。 MTX對系統性硬皮病的治療效果評價，使用了三個指標: modified Rodnan skin score (MRSS) - 得分範圍: 0-78; University of California Los Angeles (UCLA) skin score - 得分範圍 0-30; Physician global assessment of overall disease activity (ODA) - 使用視覺模擬指標，評分範圍從 0 (無疾病) 至 10 (極爲嚴重疾病) 不等。 95.1.2 概率論者分析結果 下圖 95.1 所示的表格，是從論文 (Johnson et al. 2009) 中節選出來的，該表格展示了典型的概率論者分析該臨牀試驗數據的結果，當時的分析中，只對最終完成試驗的患者的數據進行了分析。 圖 95.1: Methotrexate in Seleroderma: results of a frequentist analysis 根據這個分析結果，概率論者報告了下面三個 p 值: MRSS - 效果不顯著 (\\(p \\geqslant 0.05\\)); UCLA - 效果不顯著 (\\(p \\geqslant 0.05\\)); ODA - 有（概率論）統計學意義的顯著效果 (\\(p = 0.04\\))。 要知道，這個臨牀試驗，在設計的時候是計劃能夠通過它尋找 35% 或者以上的療效差異的。所以，任何小於 35% 的療效 (儘管在臨牀上很可能是有意義的) 在概率論的理論框架下都是無法被檢驗，或者沒有足夠的統計效能來檢驗的。於是概率論持有的研究者就此結果下了結論: 我們沒有找到足夠的證據來拒絕 “氨甲喋呤在治療系統性硬皮病上是無效的” 這一零假設。如此，過了一些時日，這個試驗的結論在醫學界漸漸就變成了 “氨甲喋呤不能治療系統性硬皮病”。 其實，概率論持有者下的結論，其真實的含義是: 如果，零假設 (“氨甲喋呤在治療系統性硬皮病上是無效的”) 是正確的，假如可以重複無數次相同的臨牀試驗 (每次都找來不同的各自獨立的系統性硬皮病早期患者)，那麼我們能觀察到和該次RCT試驗得到的試驗療效相同，甚至療效更加顯著的試驗出現的概率是大於 0.05 的。你爲這樣的結論，真的正面回答了你想知道的問題了嗎？ 我認爲，更加能夠回答大衆或患者們所關心的關於這個試驗的醫學問題應該是，“當我們獲得且分析了試驗數據以後，氨甲喋呤對於系統性硬皮病治療有效的概率是多少 (what is the probability that the intervention is effective given the data?)”。貝葉斯統計學其實可以讓我們正式地，在數學模型上把已知的對於某個事件的知識包括進試驗獲得的數據及其模型當中去，從而計算這個新的治療方法在考慮了已知的醫學背景，及現有的試驗數據之後，它對於疾病的治療是有效的概率到底是多少。這才應是每一個臨牀試驗真正想要回答的最關鍵的問題。 95.1.3 貝葉斯統計分析結果 使用貝葉斯統計理論分析相同臨牀試驗數據的結果，已經被發表在論文(Johnson et al. 2009)中，我們節選其總結的表格在下圖 95.2 中。在該表格中，可以看見作者除了對完成試驗的患者的數據進行分析，同時使用補全法補過缺失值後的數據分析結果也展示在 “imputing missing data” 這一列中。 圖 95.2: Methotrexate in Seleroderma: results of a Bayesian analysis 貝葉斯統計分析的結果，直接且正面的回答了我們想知道的問題，那就是 MTX 到底對於治療系統性硬皮病這一疾病來說是不是有效的。從圖 95.2 中的表格，以及該論文中作者用貝葉斯多元模型分析的結果可以看到，貝葉斯模型推算的是 MTX 在使用三種不同指標進行療效評估時，MTX可以被認定爲有療效的概率。(Johnson et al. 2009)報告說，有96%的可能性，在使用三種療效評估方法中的兩種或者以上來評估時，我們講看到 MTX 其實是可以改善系統性硬皮病的病情的 (也就是有效的)。 圖 95.2 中表格用的先驗概率是不明確的，沒有太多信息的先驗概率 (vague/flat prior)，其含義是: 所有可能的治療效果，不論大小，都被認爲有相似的先驗概率 (prior)。(every possible size of treatment effect considered equally likely a priori) 沒有太多信息的先驗概率意味着不提供太多的背景知識給模型。(no external information to current trial incorporated in analysis) 但是，其實我們是有背景知識的，在做這個臨牀試驗之前，已經有兩個小型試驗告訴人們， MTX很有可能可以治療系統性硬皮病，這才導致研究者組織了這第三次臨牀試驗。這兩個小型試驗的結果，被 (Johnson et al. 2009) 巧妙地轉換成爲含有信息的先驗概率 (informative prior)。 圖 95.3 展示的是，使用兩種先驗概率所計算的不同的後驗概率的結果之比較。左邊使用的是沒有信息的先驗概率 (flat, wide black prior distribution)，右邊則使用的是有信息的先驗概率。兩個圖中，黑色線均爲先驗概率，綠色線是似然 (來自本次實驗的數據)，紅色線是後驗概率。紅色的面積表示 MTX 在MRSS療效指標中支持其有效的概率，95%CrI是各自的可信區間。可見，當只使用來自本次試驗的數據的時候 (無信息的先驗概率，左邊圖)，療效的點估計，和可信區間，是十分接近概率論者計算的點估計和信賴區間的。與之相對的是，當我們給模型中加入了有信息的先驗概率分佈時，後驗概率分佈給出的點估計和可信區間發生了變化: 後驗概率分佈向右邊 (治療無效) 發生了位移 (shift towards no treatment effect)，也就是療效的點估計從 -5.3 下降至 -3.4; 95%可信區間的範圍變得比左邊使用無信息先驗概率的結果狹窄了 (估計變得精確了)，從之前的 (-11.8, 1.3) 變窄至 (-7.3, 0.4)。 圖 95.3: Methotrexate in Seleroderma: comparison of priors 紅色面積 (也就是支持 MTX 治療有效的概率)，因爲分佈的位移，以及可信區間變窄的原因，從 94% 略增加到了 96%。 在這個實驗中先驗概率分佈和該次試驗計算的似然給模型提供了相似的信息量。在更多的情況下，歷史數據，背景知識只能給出有限的信息量。所以，一個使用貝葉斯方法計算的統計報告，你會看見統計學家使用多個不同的先驗概率分佈，加上該次試驗的似然，來計算多個不同先驗概率下給出的後驗概率分佈結果，從而展示他/她給出的結論對於不同先驗概率的敏感程度。 這個實例給我們展示了貝葉斯統計學能做到，而概率論統計學不能做到的幾個要點: 貝葉斯分析結果可以告訴我們，藥物有效的概率是多少，簡單直接了當。 背景知識，除了你可以洋洋灑灑地寫在論文中之外，竟然還可以被當做一種先驗概率分佈，有效地和實驗數據獲得的似然相結合，妙哉妙哉。 三種評估手段，可以通過貝葉斯統計學模型整合到一起，同時給出後驗概率的分佈，這在傳統的概率論統計學模型中是很難，甚至是不可能做到的。貝葉斯方法同時還允許我們建立十分複雜的模型，且不必擔心模型擬合計算量對電腦的要求。 中途退出試驗的患者數據可以使用貝葉斯方法簡單地歸納進統計模型中來，概率論統計學所使用的缺失值的補全法其實相比貝葉斯法來說顯得不完整，且可靠程度較低。 醫生從貝葉斯統計方法計算的結果中獲得了更加多的信息，和結論。你可以計算超過某個療效差異的概率大小。在貝葉斯統計學方法中，整個事後概率的密度分佈圖都可以給出，而不僅僅是一個點和信賴區間的估計。 95.2 Example: The GREAT trial 接下來我們一起一步一步利用GREAT臨牀試驗數據，看看下面不同的分析方法會帶給我們什麼樣子的結果： 經典統計學方法; 貝葉斯統計學方法（通過兩種不同的先驗概率分布） 95.2.1 Background (GREAT trial) GREAT 臨牀試驗是一項隨機雙盲對照試驗(RCT)，試驗藥物是阿尼普酶(anistreplase，復合纖維溶解酶)，具有溶解血栓的效果。該試驗比較的是傳統的心肌梗塞(myocardial infarction, MI)被確診之後的治療方法，和家庭醫生對患者確診心肌梗塞之後在家中就立即服用阿尼普酶的療效是否有差異。 主要結果：30天死亡率 之前有過研究(GISSI trial)，結果表明，當患者在醫院時，阿尼普酶如果在確認患者發生心肌梗塞之後一小時內服用，能夠有效降低患者因心肌梗塞導致的一年死亡率 (從19%降低至12%)。但是當投藥發生在患者心肌梗塞確診６小時以上時，死亡率則沒有變化。 本次試驗的方法是： 家庭醫生給予患者阿尼普酶 (治療組) 或者安慰劑 (對照組)； 當患者被送至醫院後，院內給予安慰劑(治療組)，或者阿尼普酶 (對照組)。[注意二者投藥順序正好相反]。 95.2.2 試驗結果 治療組（在家中先服用阿尼普酶後院內服用安慰劑）163例，死亡病例13例；對照組 (家中服用安慰劑後院內服用阿尼普酶) 148例，死亡23例。 95.2.3 經典統計學分析方法 觀察數據給出的比值比的點估計可以計算爲: \\(\\text{OR} = \\frac{13/(163-13)}{23/(148-23)} = 0.47\\); 根據比值比的對數服從正態分布，且標準誤爲: \\(\\text{SE}_{\\log(\\text{OR})} = \\sqrt{\\frac{1}{13} + \\frac{1}{163-13} + \\frac{1}{23} + \\frac{1}{148-23}} = -0.7528664\\)，那麼 \\(\\log{\\text{OR}}\\) 的95%CI 可以計算爲\\(\\log{0.47} \\pm 1.96*(-0.7528664) = (-1.47, -0.03)\\)，再反過來計算\\(\\text{OR}\\)的95%CI，可以獲得比值比的信賴區間是：\\((0.23, 0.97)\\)。 至此，傳統的統計學方法的計算過程結束，獲得點估計: \\(\\text{OR} = 0.47; 95\\%\\text{CI:} (0.23, 0.97), p = 0.04\\)。 95.2.4 貝葉斯統計學分析方法 先驗概率使用專家意見: expert prior 專家的意見來自之前已經進行過的三個較小的臨牀試驗： 阿尼普酶可能可以降低一些死亡率，但是不多 (15-25%); 阿尼普酶不太可能降低死亡率達到40%或者以上 這個專家意見被貝葉斯統計學家用統計學語言翻譯成: 在比值比尺度上(OR)，治療組(家中立即服用阿尼普酶)相對對照組的比值比的95%信賴區間應該在 \\((0.6, 1)\\) 範圍內，包括1。 我們還需要把這句話再進行對數轉換以便於做邏輯回歸計算 (log-odds ratio) \\(\\log(\\text{OR})\\) 的95%信賴區間的範圍需要落在\\((-0.51, 0)\\)之內; 這相當於就是一個均值爲 \\(\\log(0.6)/2 = -0.26\\), 方差是 \\((\\frac{0-\\log(0.6)}{2} = 0.13)^2\\) ，的正態分布: x &lt;- seq(0, 1.5, by = 0.001) y &lt;- dlnorm(x, meanlog = -0.26, sdlog = 0.13) # use log Normal Distribution generator plot(x, y, type = &quot;l&quot;, frame = F, #ylab = &quot;lognormal(-0.26, 0.13)&quot;, ylim = c(0, 4.5), yaxt=&#39;n&#39;, ylab = &quot;&quot;, xlab = &quot;Odds ratio&quot;, main = &quot;lognormal(-0.26, 0.13)&quot;) 圖 95.4: Expert Prior probablity density: small reductions in mortality likely, no or large benefit unlikely. 但是GREAT臨牀試驗的數據告訴我們，\\(\\text{OR} = 0.47; 95\\%\\text{CI:} (0.23, 0.97), p = 0.04\\)，它的分布是數據支持的似然函數分布： x &lt;- seq(0, 1.5, by = 0.001) y &lt;- dlnorm(x, meanlog = -0.26, sdlog = 0.13) # use log Normal Distribution generator z &lt;- dlnorm(x, meanlog = log(0.47), sdlog = (-0.03+1.47)/(2*1.96)) plot(x, y, type = &quot;l&quot;, frame = F, #ylab = &quot;lognormal(-0.26, 0.13)&quot;, ylim = c(0, 4.5), yaxt=&#39;n&#39;, ylab = &quot;&quot;, xlab = &quot;Odds ratio&quot;, main = &quot; &quot;) points (x, z, type=&quot;l&quot;, col=&quot;blue&quot;) 圖 95.5: Expert Prior probablity density: small reductions in mortality likely, no or large benefit unlikely, adding likelihood (blue) from the GREAT trial. # abline(v=0.47, lty = 3) 當我們使用貝葉斯方法把專家給出的先驗概率，以及本次實驗給出的似然合並之後，獲得的事後概率認爲，心肌梗塞患者在家中立刻服藥沒有幫助或者甚至有害的概率是0.5%： x &lt;- seq(0, 1.5, by = 0.001) y &lt;- dlnorm(x, meanlog = -0.26, sdlog = 0.13) # use log Normal Distribution generator z &lt;- dlnorm(x, meanlog = log(0.47), sdlog = (-0.03+1.47)/(2*1.96)) u &lt;- dlnorm(x, meanlog = -0.3, sdlog = 0.12) plot(x, y, type = &quot;l&quot;, frame = F, #ylab = &quot;lognormal(-0.26, 0.13)&quot;, ylim = c(0, 4.5), yaxt=&#39;n&#39;, ylab = &quot;&quot;, xlab = &quot;Odds ratio&quot;, main = &quot; &quot;) points (x, z, type=&quot;l&quot;, col=&quot;blue&quot;) points(x, u, type = &quot;l&quot;, col = &quot;red&quot;) 圖 95.6: Expert Prior probablity density: small reductions in mortality likely, no or large benefit unlikely, adding likelihood (blue) from the GREAT trial, and posterior distribution (red). # abline(v=0.47, lty = 3) 先驗概率使用懷疑觀點的概率分布: sceptical prior 假定我們不相信專家意見，懷疑地認爲阿尼普酶對降低心肌梗塞患者死亡率本身應該沒有什麼效果的話，可以認爲比值比爲1，也就是 \\(\\log(\\text{OR}) = 0\\)。同時還認爲有顯著療效是小概率事件。此時，先驗概率的分布可以表示爲： 圖 95.7: Sceptical Prior probablity density, no benifit or large treatment effect unlikely 即便如此，實驗數據給出的似然函數分布依然把這個持懷疑觀點的先驗概率分布向治療有效的方向拉動了，此時給出的心肌梗塞患者在家中立刻服藥沒有幫助或者甚至有害的概率是8%： 圖 95.8: Sceptical Prior probablity density, adding likelihood (blue) from the GREAT trial, and posterior distribution (red). 專家的觀點十分樂觀，但是它仍然起到了把實驗數據給出的似然概率向更現實的方向（不那麼樂觀的方向）拉動了一點點，使用專家意見給出的事後比值比均值是0.73，值得關注的是，採用懷疑論觀點的先驗概率分布，也能給出相似的事後比值比均值 0.70，只是懷疑觀點的先驗概率分布使得事後概率分布中藥物可能無效甚至有害的概率變大了。這個分析展示了，一個對該藥物療效持懷疑觀點的人，和持樂觀觀點的人二者分析相同數據時很可能作出不同的結論，但是有一點是相同的，那就是傳統概率論統計學計算獲得的比值比，\\(\\text{OR} = 0.47; 95\\%\\text{CI:} (0.23, 0.97), p = 0.04\\)不論與專家意見相比，還是和懷疑論者相比，都過於樂觀了 (0.48 is too good to be true)。 References "],["MC-estimation.html", "第 96 章 蒙特卡羅估計和預測 Mente Carlo estimation and prediction 96.1 起源 96.2 百分比的統計學推斷 inference on proportions 96.3 蒙特卡羅估計 96.4 蒙特卡羅法分析軟件 OpenBUGS / JAGS 96.5 Practical Bayesian Statistics 02", " 第 96 章 蒙特卡羅估計和預測 Mente Carlo estimation and prediction 96.1 起源 圖 96.1: Reproduction of part of the original printed Bayes paper. 一切都開始於1763年，英國東南地區叫做唐橋井 (Tunbridge Wells) 的地方有個叫做託馬斯貝葉斯的牧師死後，他的朋友將他遺留下的手稿發表於世。圖 96.1 是他遺作論文的節選。這段話使用的當時的英文有點令人摸不着頭腦，但其實翻譯成現代文的意思是（這裏請在大腦中想象我們最長使用的投擲一枚可能有偏的硬幣的場景）：我們一共投擲硬幣 \\(n\\) 次，這其中有 \\(y\\) 次硬幣是正面朝上的（事件發生）。假定 \\(y\\) 服從參數爲 \\(\\theta\\) 的二項分布：\\(y \\sim \\text{Binomial}(\\theta, n)\\)，那麼\\(\\theta\\)就是硬幣正面朝上的概率。 貝葉斯牧師感興趣的是，參數\\(\\theta\\)，落在某個範圍內 \\(\\text{Pr}(\\theta_1 &lt; \\theta &lt; \\theta_2 | y, n)\\)的可能性(chance)。這句話，在當年那個概率論持有者爲主流的社會中是極爲危險而且激進的 (radical) ，因爲貝葉斯牧師使用可能性 (chance)來描述一個參數的不確定性(uncertainty)。本質上說，貝葉斯牧師打算對一個無法直接觀測的參數用一個簡單直接的數學表達式來描述它的不確定性。這句話對於概率論觀點持有者佔主流的統計學領域來說，是一種明顯的異端邪說。因爲在概率論觀點持有者的語境下，概率是在無數次可重復實驗中事件發生的平均次數 (probability is interpreted in terms of a long run sequence of events)，這個無法觀測到的參數，是不會改變的 (the key idea is that the unknown parameter is considered to be a random variable under Bayesian theory, rather than fixed but unknown)。 我們在第一章也看到了，貝葉斯牧師提出的理論有助於我們直接，正面地回答研究中我們想知道的問題。圖 96.2 提供了一個很好的例子，它節選自論文(Tinmouth et al. 2004)中，該文的作者是這樣描述的：“There is an 89% probability that the absolute increase in major bleeds is less than 10 percent with low-dose PLT transfusions. (使用低劑量PLT輸血時，患者大出血的出血量增加的絕對值小於10%的可能性是89%。)” 圖 96.2: Example of a direct expression about an unknown parameter. 像圖 96.2 這樣使用一個概率分布來描述我們想知道的參數有什麼好處呢？ 最重要的好處是，用概率分布描述這個未知參數可以直觀地告訴我們這個參數它本身可能分布的範圍，和在各自分布點時的可能性。 沒有 p 值，因爲我們要計算整個參數可能分布的範圍，這是概率密度分布的面積。 沒有(難以令人理解的)信賴區間的概念(confidence interval)，相反地，我們需要盡可能詳細地描述參數可能的分布，它的中位數，它的均值，它可能取值的範圍，它中間包含了95%可信範圍的參數(credible interval) 方便地直接應用於預測。 自然地適用於決策分析 (decision analysis)，經濟學的成本效益分析 (cost-effective analysis)等。 貝葉斯理論讓我們從數學上把經驗（已經發表的實驗結果，以及已有的專家意見）納入到參數的估計上來，這是一個自我學習進化的過程。 96.2 百分比的統計學推斷 inference on proportions 我們先用一個新藥的臨牀試驗來作爲例子。 96.2.1 Example: New Drug 有一種新研發的被用於治療慢性疼痛的藥物。爲了對其有效性進行科學客觀的評價，研究者需要組織一項評價其效用的小規模臨牀試驗。在實施這項臨牀試驗之前，我們自己心裏就會提出一個問題，這個新藥物用於治療慢性疼痛時有療效的百分比有可能會是多少（期望值，expectation）？ 假如經驗告訴我們，相似成分的藥物可能達到的有療效百分比是在0.2-0.6之間。那麼我們可以把這個經驗翻譯成爲，有效率的期望可能服從某個分布，其均值是0.4，標準差是 0.1，下一步就是用一個能夠具有這樣的均值和標準差特徵的分布來表達這個經驗。我們在數學的寶庫中發現了 Beta 分布這個可以用於描述百分比的分布。 96.2.2 Beta 分布 Beta 分布的特徵是取值範圍嚴格限定在0, 1之間，這就滿足了百分比數值的取值範圍條件。它由兩個參數來決定分布的特徵。 我們用 \\(\\theta \\sim \\text{Beta}(a, b)\\) 標記 Beta 分布。它的特徵值有： \\[ \\begin{aligned} p(\\theta|a, b) &amp; = \\frac{\\Gamma(a + b)}{\\Gamma(a)\\Gamma(b)}\\theta^{a-1}(1-\\theta)^{b-1}; \\theta \\in (0,1) \\\\ \\text{E}(\\theta|a, b) &amp; = \\frac{a}{a+b} \\\\ \\text{V}(\\theta|a, b) &amp; = \\frac{ab}{(a+b)^2(a + b + 1)} \\end{aligned} \\] 其中 \\(\\Gamma(a) = (a-1)!\\) 是一個伽瑪方程。 正如我們在貝葉斯入門的章節42.3.1也介紹過的那樣，Beta分布的一些形狀特徵總結如下： 圖 96.3: Shape of some Beta distribution functions for various values of a, b 回到新藥試驗的話題上來看，我們的經驗被翻譯成了均值爲0.4, 標準差0.1，那麼把它們帶入Beta分布的均值方差的特徵值公式中去，就可以求得相對應的Beta分布：\\(\\text{Beta}(9.2, 13.8)\\) \\[ \\begin{aligned} \\theta &amp; \\sim \\text{Beta}(9.2, 13.8) \\\\ \\text{E}(\\theta) &amp; = \\frac{9.2}{9.2 + 13.8} = 0.4 \\\\ \\text{V}(\\theta) &amp; = \\frac{9.2\\times13.8}{(9.2 + 13.8)^2(9.2+13.8+1)} = 0.01 = 0.1^2 \\end{aligned} \\] 這個本來只是一句話的經驗，就被我們成功用Beta分布翻譯成了數學模型可以使用的分布方程，它的概率密度曲線如下，使用這個Beta分布的含義就是，經驗告訴我們相似成分的藥物可能達到的有療效百分比是在0.2-0.6之間： 圖 96.4: Prior distribution for Drug Example 96.2.3 作出預測 在臨牀試驗觀測到有療效人數 \\(y\\) 之前，我們可以通過把未知參數積分消除(intergrate out)的方法給出預測分布： \\[ p(y) = \\int p(y|\\theta)p(\\theta)d\\theta \\] 預測在很多領域都可以得到廣泛的應用，比如做天氣預報，經濟學上的成本效益分析，進行實驗設計，以及用於檢驗觀測數據是否和期望值相匹配，等等。 96.2.4 Example: 新藥表現預測 我們再回到新藥治療慢性疼痛的臨牀試驗上來，假設我們設計接納20名患者進入這個臨牀試驗。那麼我們可能想根據已有的經驗，來預測一下這進來的20名患者中藥物有效的人數。 我們已經知道用 Beta 分布來描述經驗（也就是先驗概率 prior distribution），此時，我們再加入用 \\(y\\) 標記20名患者中有效人數的隨機變量。那麼很自然地，我們會使用二項分布作爲 \\(y\\) 的理想模型： \\[ \\begin{aligned} \\theta &amp; \\sim \\text{Beta} (a,b) \\\\ y &amp; \\sim \\text{Binomial}(\\theta, n) \\end{aligned} \\] 這個模型的預測模型能夠被計算得到（甚至不需要用到計算機），且它有個自己的專有名字 Beta-Binomial，它的概率方程是： \\[ \\begin{aligned} p(y) &amp; = \\frac{\\Gamma(a+b)}{\\Gamma(a)\\Gamma(b)}\\binom{n}{y}\\frac{\\Gamma(a + y)\\Gamma(b + n - y)}{\\Gamma(a + b + n)} \\\\ &amp; = \\binom{n}{y}\\frac{B(a + y, b + n -y)}{B(a,b)} \\end{aligned} \\] 其中，\\(B(a,b) = \\frac{\\Gamma(a)\\Gamma(b)}{\\Gamma(a+b)}\\)； 均值是： \\[ \\text{E}(Y) = n\\frac{a}{a + b} \\] 那麼我們在進行這項試驗時我們可以預測，20名患者中有療效人數出現的概率，我們將它的預測概率分布圖和先驗概率分布放在一起： # # Beta Binomial Predictive distribution function # BetaBinom &lt;- Vectorize(function(rp){ # log.val &lt;- lchoose(np, rp) + lbeta(rp+a+r,b+n-r+np-rp) - lbeta(a+r,b+n-r) # return(exp(log.val)) # }) par(mfrow=c(1,2)) pi &lt;- Vectorize(function(theta) dbeta(theta, 9.2,13.8)) curve(pi, xlab=&quot;Probabiltiy of response&quot;, ylab=&quot;Density&quot;, main=&quot;(a) Prior distribution Beta(9.2, 13.8)&quot;, frame=FALSE, lwd=2) # or we can use the built-in function for beta-binomial distribution in package TailRank: library(TailRank) N &lt;- 20; a &lt;- 9.2; b &lt;- 13.8; y &lt;- 0:N yy &lt;- dbb(y, N, a, b) barplot(yy, xlab = &quot;Number of successes&quot;, names.arg = 0:20, axes = F, ylim = c(0, 0.16), main = &quot;(b) predictive distribution&quot;) axis(2,at=seq(0,0.16,0.02)) 圖 96.5: Prior and predictive distribution for the drug example. 我們根據這個預測概率分布，或者預測概率方程，可以計算”20名患者中有15名或者更多的患者的症狀得到改善”這一事件出現的概率會是： \\[ P(y \\geqslant 15) = \\sum_{15}^{20}p(y) = 0.015 \\] 96.3 蒙特卡羅估計 但是在一般的情況下，像這個新藥臨牀試驗這樣能夠獲得一個閉環式 (closed-form) 概率預測概率方程的情況少之又少，有時候幾乎是不太可能完成的任務。假設我們本來也無法順利計算出上面的 Beta-Binomial概率公式，我們是否有其他的手段來獲得我們想要的預測概率結果呢？答案是，有的。人類發明的計算機，可以通過模擬試驗的方式(computer simulation)幫我們計算這個結果，它有個很酷的名字，叫做蒙特卡羅積分 (Monte Carlo integration)。 96.3.1 用蒙特卡羅法估計概率分佈尾側累積概率(面積) 假設要求一個很簡單的問題，一枚完美的硬幣，投擲10次中8次甚至更多次正面朝上的概率是多少？ 在概率數學上，我們會用正式的方法來求: \\[ \\begin{aligned} y &amp; \\sim \\text{Binomial}(0.5, 10), \\text{Pr}(y \\geqslant 8)? \\\\ \\text{Pr}(y\\geqslant 8 \\text{ heads}) &amp; = \\sum_{y = 8}^{10}p(y | \\theta = 0.5, n = 10) \\\\ &amp; = \\binom{10}{8}(0.5)^8(0.5)^2 + \\binom{10}{9}(0.5)^9(0.5)^1 + \\binom{10}{10}(0.5)^{10}(0.5^0) \\\\ &amp; = 0.0547 \\end{aligned} \\] 但是，如果有人很懶，他可以不這樣計算，而是真的拿那個硬幣過來不停的進行很多很多次投擲試驗，然後計算其中8次正面朝上出現的試驗的比例，那麼從長遠來說，就能夠無線接近理論計算的概率數值。 那麼，計算機進行模擬試驗的過程 (simulation)，其實就是讓計算機代替我們進行投擲硬幣試驗的過程。圖 96.6 展示的是計算機模擬投擲硬幣(a) 100次 (b) 10,000 次時正面朝上次數的概率分佈，以及 (c) 真實的概率分佈。 圖 96.6: Proportion of simulations with 8 or more “heads” in 10 tosses. 從中可以計算每種情況下硬幣正面朝上10次中出現8次或者更多的事件出現的概率分別是: 100次模擬試驗: 0.08 10000次模擬試驗: 0.0562 真實的二項分佈累積概率: 0.0547 可見，當模擬試驗的次數增加，計算想要的事件出現的比例，就越來越接近理論計算的真實值。蒙特卡羅積分法，用的也是類似計算機模擬試驗的方法來計算預測概率分佈的。 96.3.2 用蒙特卡羅法計算預測概率分佈 如果用蒙特卡羅法，也就是計算機模擬試驗的方法來計算預測概率分佈的話，那麼我們就不需要再通過 Beta-binomial 概率分佈的公式來進行計算了。取而代之的就是，蒙特卡羅積分法: 從先驗概率分佈中隨機選取一個值 \\(\\theta = \\theta_1\\) 把從先驗概率分佈中隨機選取的 \\(\\theta_1\\) 作爲已知量放到二項分佈中再隨機選取一個服從 \\(n = 20, \\theta = \\theta_1\\) 二項分佈數據中的 \\(y\\)。 重複上面步驟1，2成千上萬次之後，獲得的新的概率分佈，就是 \\(y\\) 的預測分佈的一個樣本。這樣獲得的樣本，我們就可以想進各種方法來描述它，可以是取均值，取方差，取四分位，等任何你可以用來描述的特徵值來作爲對預測概率分佈的描述。 96.4 蒙特卡羅法分析軟件 OpenBUGS / JAGS 本書中我們主要用 JAGS 軟件進行貝葉斯統計分析。 96.4.1 用 JAGS/BUGS 分析投擲硬幣數據 回到投擲硬幣的簡單模型上來，我們的隨機變量 \\(y\\) 服從的是二項分佈，\\(y \\sim \\text{Binomial}(0.5, 10)\\)，我們想要計算的是”8次或者更多次正面朝上”事件出現的概率: \\(P(y\\geqslant 8)\\)。這一模型在 BUGS 語言下被描述爲: model{ y ~ dbin(0.5, 10) P8 &lt;- step(y - 7.5) } 其中step是一個能夠產生邏輯結果(True or False)的指示方程(indicator function)。P8 &lt;- step(y - 7.5)這段BUGS語句的含義是，當y - 7.5的結果\\(\\geqslant0\\)，P8將會取 1 (True)，反之將返回結果 0 (False)。意思就是使得當隨機選取的二項分布樣本 \\(y\\geqslant8\\) 時，P8會取值1，否則取0。 將這一段計算機模擬拋擲硬幣的語句重復一萬次以上(iterations)，然後對獲得的所有10000個P8取均值，獲得的就會是 \\(y\\geqslant8\\) 這一事件將會出現的概率。 96.4.2 用 JAGS 對藥物臨牀試驗的結果做預測 還記得我們在藥物對慢性疼痛治療療效評價的這一臨牀試驗中使用的先驗概率是 \\(\\theta \\sim \\text{Beta}(9.2, 13.8)\\)。我們再來思考一次，我們收集到20位志願者參加這個臨牀試驗，那麼”這20位患者中，有15名或者更多的患者症狀得到改善（治療有效）“這件事發生的概率是多少？ 這時候，模型的先驗概率和似然，以及我們想要知道的問題，被數學語言寫成了下面的三句話： \\[ \\begin{split} \\theta &amp; \\sim \\text{Beta}(9.2, 13.8) &amp; \\text{ Prior distribution} \\\\ y &amp; \\sim \\text{Binomial}(\\theta, 20) &amp; \\text{ Sampling distribution} \\\\ P_{crit} &amp; = P(y \\geqslant 15) &amp; \\text{ Probability of exceeding critical threshold} \\end{split} \\] 如果要把這三句話翻譯成爲JAGS的BUGS語言，可以這樣表達： model{ theta ~ dbeta(9.2, 13.8) # Prior distribution y ~ dbin(theta, 20) # Sampling distribution P.crit &lt;- step(y - 14.5) # = 1 if y &gt;= 15, 0 otherwise } 計算機模擬試驗10000次以後獲得的結果可能是下面這樣子的 Node statistics mean sd MC_error val2.5pc median val97.5pc start sample P.crit 0.015 0.1216 0.00121 0.0 0.0 0.0 1 10000 theta 0.4008 0.09903 9.683E-4 0.2159 0.3982 0.5993 1 10000 y 8.034 2.919 0.02578 3.0 8.0 14.0 1 10000 第一行我們可以看見顯示的是列的名稱，接下來每一行都是JAGS/OpenBUGS的軟件在進行計算機模擬試驗過程中監測的(monitor)變量的結果，以及它們的數據描述。值得注意的是其中P.crit這一行，除了第一列的均值mean = 0.015有實際意義意外，其餘的數值是沒有什麼含義的，可以忽略。這個P.crit均值的含義即是我們關心的問題【“這20位患者中，有15名或者更多的患者症狀得到改善（治療有效）”這件事發生的概率】的答案，是0.015。 我們可以把蒙特卡羅算法給出的計算機模擬試驗的結果，和精確統計學計算法獲得的結果相比較： \\(\\theta:\\) 均值0.4，標準差0.1； \\(y:\\) 均值8, 標準差2.93。 20人中15人及以上治療有效的概率是0.015。 由於這些樣本是互相獨立的，輸出結果中的 MC_error \\(=\\frac{\\text{SD}}{\\sqrt{\\text{n of iterations}}}\\)。如果你願意，完全可以爲了提高精確度再增加計算機模擬試驗的次數。 OpenBUGS 同時可以輸出計算機模擬計算過後的圖片： 圖 96.7: Example OpenBUGS plots from the drug example 圖 96.8: Example OpenBUGS plots from the drug example 96.4.3 用蒙特卡羅法計算一個臨牀試驗的統計效能 allow uncertainty in power calculation 假設有一個臨牀試驗是這樣設計的，計劃在治療組和對照組各徵集 \\(n\\) 名患者，治療陽性反應率的標準差爲\\(\\sigma = 1\\)。設計上希望達到一類錯誤 5%，和80%的效能。治療組和對照組的療效差異希望能達到 \\(\\theta = 0.5\\)。計算樣本量爲\\(n\\)，療效差爲\\(\\theta\\)的試驗的統計效能的數學公式已知爲： \\[ \\text{Power} = \\Phi(\\sqrt{\\frac{n\\theta^2}{2\\sigma^2}} - 1.96) \\] 再假設我們希望對\\(\\theta,\\sigma\\)同時描述其不確定性： \\[ \\begin{aligned} \\theta &amp; \\sim \\text{Uniform}(0.3, 0.7) \\\\ \\sigma &amp; \\sim \\text{Uniform}(0.5, 1.5) \\\\ \\end{aligned} \\] 接下來，我們可以利用這個公式和給出的先驗概率對統計效能的不確定性進行估計。 模擬從\\(\\theta, \\sigma\\)的先驗概率中各自選取相應的值； 把每次模擬試驗獲得的 \\(\\theta, \\sigma\\) 代入上面計算效能的公式中計算每次可以獲得的統計效能； 重復步驟１，２許多次，獲取這個過程中計算得到的統計效能的預測分布(predictive distribution)。 如果說每組患者人數是63人，那麼這個模型寫成BUGS語言就是： model{ sigma ~ dunif(0.5, 1.5) theta ~ dunif(0.3, 0.7) power &lt;- phi(sqrt(63/2)*theta/sigma - 1.96) prob70 &lt;- step(power - 0.7) # is power &gt;= 0.7 } 該模型的輸出結果如下，預測的效能分布圖爲圖96.9： Node statistics mean sd MC_error val2.5pc median val97.5pc start sample power 0.7508 0.2249 0.00216 0.2846 0.8031 1.0 1 10000 prob70 0.6265 0.4837 0.004626 0.0 1.0 1.0 1 10000 當治療組對照組每組各只有６３人時，你會發現統計效能在電腦模擬１００００次試驗過後的中位數才勉強達到了80%，而且這麼寬的效能預測分布也提示我們６３人實在太少了，效能遠遠不能達到設計的要求。 圖 96.9: Predictive Distribution of Power 96.5 Practical Bayesian Statistics 02 拋擲硬幣試驗 用BUGS語言描述拋擲硬幣的模型，把寫有下列模型代碼的文件保存爲coinmodel.txt: model{ y ~ dbin(0.5, 10) P8 &lt;- step(y - 7.5) # = 1 if Y is 8 or more } 下面的代碼展示了如何在 R 裏連接OpenBUGS進行蒙特卡羅運算和調出其結果的過程： library(BRugs) # Step 1 check model modelCheck(paste(bugpath, &quot;/backupfiles/coinmodel.txt&quot;, sep = &quot;&quot;)) # there is no data so just compile the model modelCompile(numChains = 1) # There is no need to provide initial values as this is # a Monte Carlo forward sampling from a known distribution # but the program still requires initial values to begin # generate a random value. modelGenInits() # # Set monitors on nodes of interest samplesSet(c(&quot;P8&quot;, &quot;y&quot;)) # Generate 1000 iterations modelUpdate(1000) #### SHOW POSTERIOR STATISTICS sample.statistics &lt;- samplesStats(&quot;*&quot;) print(sample.statistics) #### PUT THE SAMPLED VALUES IN ONE R DATA FRAME: chain &lt;- data.frame(P8 = samplesSample(&quot;P8&quot;), y = samplesSample(&quot;y&quot;)) samplesHistory(&quot;*&quot;, mfrow = c(2,1), ask=FALSE) 下面的代碼展示了如何在R裏連接JAGS進行蒙特卡羅運算和調出其結果的過程： library(runjags) library(rjags) library(R2jags) # Step 1 check model jagsModel &lt;- jags.model(file = paste(bugpath, &quot;/backupfiles/coinmodel.txt&quot;, sep = &quot;&quot;), n.chains = 1) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 0 ## Unobserved stochastic nodes: 1 ## Total graph size: 6 ## ## Initializing model # Step 2 update 1000 iterations update(jagsModel, n.iter = 1000, progress.bar=&quot;none&quot;) # Step 3 set monitor variables codaSamples &lt;- coda.samples( jagsModel, variable.names = c(&quot;P8&quot;, &quot;y&quot;), n.iter = 1000, progress.bar=&quot;none&quot;) summary(codaSamples) ## ## Iterations = 1001:2000 ## Thinning interval = 1 ## Number of chains = 1 ## Sample size per chain = 1000 ## ## 1. Empirical mean and standard deviation for each variable, ## plus standard error of the mean: ## ## Mean SD Naive SE Time-series SE ## P8 0.058 0.23386 0.0073953 0.0073953 ## y 4.941 1.57226 0.0497191 0.0497191 ## ## 2. Quantiles for each variable: ## ## 2.5% 25% 50% 75% 97.5% ## P8 0 0 0 0 1 ## y 2 4 5 6 8 # Show the trace plot # library(mcmcplots) # ggSample &lt;- ggs(codaSamples) # ggs_traceplot(ggSample) mcmcplots::traplot(codaSamples) 圖 96.10: History of the iterations by JAGS. 對模型進行修改，嘗試計算相同設計的試驗，在徵集了30名患者，新藥的有效率爲0.7時，15名或者以內的患者有顯著療效的事件發生的概率是多少？ model{ y ~ dbin(0.7, 30) P15 &lt;- step(15.5 - y) # = 1 if Y is 15 or fewer } OpenBUGS Codes: # Step 1 check model modelCheck(paste(bugpath, &quot;/backupfiles/coinmodel30.txt&quot;, sep = &quot;&quot;)) # there is no data so just compile the model modelCompile(numChains = 1) # There is no need to provide initial values as this is # a Monte Carlo forward sampling from a known distribution # but the program still requires initial values to begin # generate a random value. modelGenInits() # # Set monitors on nodes of interest#### SPECIFY, WHICH PARAMETERS TO TRACE: parameters &lt;- c(&quot;P15&quot;, &quot;y&quot;) samplesSet(parameters) # Generate 1000 iterations modelUpdate(10000) #### SHOW POSTERIOR STATISTICS sample.statistics &lt;- samplesStats(&quot;*&quot;) print(sample.statistics) #### PUT THE SAMPLED VALUES IN ONE R DATA FRAME: chain &lt;- data.frame(P15 = samplesSample(&quot;P15&quot;), y = samplesSample(&quot;y&quot;)) #### PLOT THE HISTOGRAMS OF THE SAMPLED VALUES ## samplesDensity(&quot;*&quot;, 1, mfrow = c(2,2), ask=NULL) for(p_ in parameters) { hist(chain[[p_]], main=p_, ylab=NA, xlab=NA, #prob = TRUE, nclas=50, col=&quot;red&quot;) } JAGS code: # Step 1 check model jagsModel &lt;- jags.model(file = paste(bugpath, &quot;/backupfiles/coinmodel30.txt&quot;, sep = &quot;&quot;), n.chains = 1) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 0 ## Unobserved stochastic nodes: 1 ## Total graph size: 6 ## ## Initializing model # Step 2 update 1000 iterations update(jagsModel, n.iter = 1000, progress.bar=&quot;none&quot;) # Step 3 set monitor variables codaSamples &lt;- coda.samples( jagsModel, variable.names = c(&quot;P15&quot;, &quot;y&quot;), n.iter = 10000, progress.bar=&quot;none&quot;) summary(codaSamples) ## ## Iterations = 1001:11000 ## Thinning interval = 1 ## Number of chains = 1 ## Sample size per chain = 10000 ## ## 1. Empirical mean and standard deviation for each variable, ## plus standard error of the mean: ## ## Mean SD Naive SE Time-series SE ## P15 0.0169 0.1289 0.001289 0.001289 ## y 21.0385 2.4936 0.024936 0.024936 ## ## 2. Quantiles for each variable: ## ## 2.5% 25% 50% 75% 97.5% ## P15 0 0 0 0 0 ## y 16 19 21 23 26 #### PLOT THE HISTOGRAMS OF THE SAMPLED VALUES ggSample &lt;- ggs(codaSamples) ggs_histogram(ggSample, bins = 18) 圖 96.11: Predictive distribution of the nodes of interest. 所以此時少於或等於１５人得到症狀改善的事件發生的概率被推測爲1.8%。 藥物治療臨牀試驗 藥物臨牀試驗的例子中，我們建立的模型如下： # Monte Carlo predictions for Drug example model{ theta ~ dbeta(9.2,13.8) # prior distribution y ~ dbin(theta,20) # sampling distribution P.crit &lt;- step(y-14.5) # =1 if y &gt;= 15, 0 otherwise } 把這個模型存儲成drug-MC.txt文件之後，可以使用OpenBUGS完成該模型的蒙特卡羅模擬試驗計算： # Step 1 check model modelCheck(paste(bugpath, &quot;/backupfiles/drug-MC.txt&quot;, sep = &quot;&quot;)) # there is no data so just compile the model modelCompile(numChains = 1) # There is no need to provide initial values as this is # a Monte Carlo forward sampling from a known distribution # but the program still requires initial values to begin # generate a random value. modelGenInits() # # Set monitors on nodes of interest#### SPECIFY, WHICH PARAMETERS TO TRACE: parameters &lt;- c(&quot;theta&quot;, &quot;y&quot;, &quot;P.crit&quot;) samplesSet(parameters) # Generate 1000 iterations modelUpdate(10000) #### SHOW POSTERIOR STATISTICS sample.statistics &lt;- samplesStats(&quot;*&quot;) print(sample.statistics) #### PUT THE SAMPLED VALUES IN ONE R DATA FRAME: chain &lt;- data.frame(theta = samplesSample(&quot;theta&quot;), y = samplesSample(&quot;y&quot;), P.crit = samplesSample(&quot;P.crit&quot;)) #### PLOT THE DENSITY and HISTOGRAMS OF THE SAMPLED VALUES ##1. samplesDensity(&quot;*&quot;, 1, mfrow = c(2,2), ask=NULL) # or 2. by looping # for(p_ in parameters) # { # hist(chain[[p_]], main=p_, # ylab=NA, xlab=NA, #prob = TRUE, # nclas=50, col=&quot;red&quot;) # } par(mfrow=c(1,2)) plot(density(chain$theta), main = &quot;theta sample 10000&quot;, ylab = &quot;P(theta)&quot;, xlab = &quot;theta&quot;, col = &quot;red&quot;) hist(chain$y, main = &quot;y sample 10000&quot;, ylab = &quot;P(Y)&quot;, xlab = &quot;y&quot;, col = &quot;red&quot;, prob = TRUE) 也可以使用JAGS完成該模型的蒙特卡羅模擬試驗計算： # Step 1 check model jagsModel &lt;- jags.model(file = paste(bugpath, &quot;/backupfiles/drug-MC.txt&quot;, sep = &quot;&quot;), n.chains = 1) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 0 ## Unobserved stochastic nodes: 2 ## Total graph size: 8 ## ## Initializing model # Step 2 update 1000 iterations update(jagsModel, n.iter = 1000, progress.bar=&quot;none&quot;) # Step 3 set monitor variables parameters &lt;- c(&quot;theta&quot;, &quot;y&quot;, &quot;P.crit&quot;) codaSamples &lt;- coda.samples( jagsModel, variable.names = parameters, n.iter = 10000, progress.bar=&quot;none&quot;) summary(codaSamples) ## ## Iterations = 1001:11000 ## Thinning interval = 1 ## Number of chains = 1 ## Sample size per chain = 10000 ## ## 1. Empirical mean and standard deviation for each variable, ## plus standard error of the mean: ## ## Mean SD Naive SE Time-series SE ## P.crit 0.01600 0.125481 0.00125481 0.00125481 ## theta 0.39975 0.099718 0.00099718 0.00099718 ## y 7.99120 2.917083 0.02917083 0.02917083 ## ## 2. Quantiles for each variable: ## ## 2.5% 25% 50% 75% 97.5% ## P.crit 0.00000 0.0000 0.00000 0.00000 0.00000 ## theta 0.21688 0.3285 0.39698 0.46778 0.59986 ## y 3.00000 6.0000 8.00000 10.00000 14.00000 #### PLOT THE DENSITY and HISTOGRAMS OF THE SAMPLED VALUES # par(mfrow=c(1,2)) # ggSample &lt;- ggs(codaSamples) # ggSample %&gt;% # filter(Parameter == &quot;theta&quot;) %&gt;% # ggs_density() # # ggSample %&gt;% # filter(Parameter == &quot;y&quot;) %&gt;% # ggs_histogram(bin = 38) par(mfrow=c(1,2)) Theta &lt;- ggSample %&gt;% filter(Parameter == &quot;theta&quot;) Y &lt;- ggSample %&gt;% filter(Parameter == &quot;y&quot;) plot(density(Theta$value), main = &quot;theta sample 10000&quot;, ylab = &quot;P(theta)&quot;, xlab = &quot;theta&quot;, col = &quot;red&quot;) hist(Y$value, main = &quot;y sample 10000&quot;, ylab = &quot;P(Y)&quot;, xlab = &quot;y&quot;, col = &quot;red&quot;, prob = TRUE) 圖 96.12: Predictive distribution of the nodes of interest. 如果把藥物治療的臨牀試驗例子的先驗概率分布修改一下，修改成爲一個沒有信息的均一分布 \\(\\text{Uniform}(0, 1)\\)，模型的結果會有怎樣的變化呢？嘗試繪制成功次數的預測概率分布，此時”20名患者中大於或者等於15名患者有療效”這一事件發生的概率是多少？ # Monte Carlo predictions for Drug example # with a uniform prior model{ # theta ~ dbeta(9.2,13.8) # prior distribution theta ~ dunif(0,1) # prior distribution y ~ dbin(theta,20) # sampling distribution P.crit &lt;- step(y-14.5) # =1 if y &gt;= 15, 0 otherwise } # Step 1 check model jagsModel &lt;- jags.model(file = paste(bugpath, &quot;/backupfiles/drug-MCuniform.txt&quot;, sep = &quot;&quot;), n.chains = 1) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 0 ## Unobserved stochastic nodes: 2 ## Total graph size: 8 ## ## Initializing model # Step 2 update 1000 iterations update(jagsModel, n.iter = 1000, progress.bar=&quot;none&quot;) # Step 3 set monitor variables parameters &lt;- c(&quot;theta&quot;, &quot;y&quot;, &quot;P.crit&quot;) codaSamples &lt;- coda.samples( jagsModel, variable.names = parameters, n.iter = 10000, progress.bar=&quot;none&quot;) summary(codaSamples) ## ## Iterations = 1001:11000 ## Thinning interval = 1 ## Number of chains = 1 ## Sample size per chain = 10000 ## ## 1. Empirical mean and standard deviation for each variable, ## plus standard error of the mean: ## ## Mean SD Naive SE Time-series SE ## P.crit 0.29010 0.45383 0.0045383 0.0045383 ## theta 0.50349 0.29060 0.0029060 0.0029060 ## y 10.04810 6.06725 0.0606725 0.0606725 ## ## 2. Quantiles for each variable: ## ## 2.5% 25% 50% 75% 97.5% ## P.crit 0.000000 0.00000 0.00000 1.00000 1.00000 ## theta 0.025827 0.25146 0.50461 0.75791 0.97766 ## y 0.000000 5.00000 10.00000 15.00000 20.00000 #### PLOT THE DENSITY and HISTOGRAMS OF THE SAMPLED VALUES ggSample &lt;- ggs(codaSamples) par(mfrow=c(1,2)) Theta &lt;- ggSample %&gt;% filter(Parameter == &quot;theta&quot;) Y &lt;- ggSample %&gt;% filter(Parameter == &quot;y&quot;) plot(density(Theta$value), main = &quot;theta sample 10000&quot;, ylab = &quot;P(theta)&quot;, xlab = &quot;theta&quot;, col = &quot;red&quot;) hist(Y$value, main = &quot;y sample 10000&quot;, ylab = &quot;P(Y)&quot;, xlab = &quot;y&quot;, col = &quot;red&quot;, prob = TRUE) 圖 96.13: Predictive distribution of the nodes of interest. 這個條件下，“20名患者中大於或者等於15名患者有療效”這一事件發生的概率爲29.2%。 嘗試自己來寫一個模型。 打開一個空白文檔，試着寫一個模型，它的先驗概率是一個標準正態分布，(OpenBUGS code: x ~ dnorm(0,1))。值得注意的是，在OpenBUGS的環境下，標準正態分布的描述方式和平時概率論統計學有些不一樣：概率論的標準差或者方差，在貝葉斯統計學中被冠以另一種新的概念–精確度(precision, = 1/variance)。試着嘗試用蒙特卡羅模擬試驗的方法計算標準正態分布中取值低於-1.96，和-2.326的事件發生的概率各自是多少。（已知二者的理論值分別是0.025, 0.01）。 # Monte Carlo predictions # with a standard normal distribution prior model{ x ~ dnorm(0, 1) # prior distribution p.1 &lt;- step(-1.96 - x) # = 1 if x &lt;= -1.96, 0 otherwise p.2 &lt;- step(-2.32 - x) # = 1 if x &lt;= -2.32, 0 otherwise } 分別對這個模型嘗試蒙特卡羅模擬試驗100, 1000, 和100000次，比較蒙特卡羅模擬試驗給出的概率估計和理論值的差異。 # Step 1 check model jagsModel &lt;- jags.model(file = paste(bugpath, &quot;/backupfiles/standardnormalMC.txt&quot;, sep = &quot;&quot;), n.chains = 1) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 0 ## Unobserved stochastic nodes: 1 ## Total graph size: 11 ## ## Initializing model # Step 2 update 1000 iterations update(jagsModel, n.iter = 10, progress.bar=&quot;none&quot;) # Step 3 set monitor variables parameters &lt;- c(&quot;p.1&quot;, &quot;p.2&quot;, &quot;x&quot;) codaSamples &lt;- coda.samples( jagsModel, variable.names = parameters, n.iter = 100, progress.bar=&quot;none&quot;) summary(codaSamples) ## ## Iterations = 11:110 ## Thinning interval = 1 ## Number of chains = 1 ## Sample size per chain = 100 ## ## 1. Empirical mean and standard deviation for each variable, ## plus standard error of the mean: ## ## Mean SD Naive SE Time-series SE ## p.1 0.030000 0.17145 0.017145 0.020718 ## p.2 0.020000 0.14071 0.014071 0.017909 ## x 0.047827 0.95877 0.095877 0.120088 ## ## 2. Quantiles for each variable: ## ## 2.5% 25% 50% 75% 97.5% ## p.1 0.0000 0.0000 0.00000 0.00000 0.5250 ## p.2 0.0000 0.0000 0.00000 0.00000 0.0000 ## x -2.1135 -0.5632 0.13167 0.70565 1.7822 # Generate 900 iterations codaSamples &lt;- coda.samples( jagsModel, variable.names = parameters, n.iter = 1000, progress.bar=&quot;none&quot;) summary(codaSamples) ## ## Iterations = 111:1110 ## Thinning interval = 1 ## Number of chains = 1 ## Sample size per chain = 1000 ## ## 1. Empirical mean and standard deviation for each variable, ## plus standard error of the mean: ## ## Mean SD Naive SE Time-series SE ## p.1 0.028000 0.165055 0.0052195 0.0052195 ## p.2 0.009000 0.094488 0.0029880 0.0032002 ## x -0.012981 1.042048 0.0329524 0.0329524 ## ## 2. Quantiles for each variable: ## ## 2.5% 25% 50% 75% 97.5% ## p.1 0.0000 0.0000 0.000000 0.00000 1.0000 ## p.2 0.0000 0.0000 0.000000 0.00000 0.0000 ## x -1.9831 -0.7097 -0.037555 0.69824 2.0609 # Generate 100000 iterations codaSamples &lt;- coda.samples( jagsModel, variable.names = parameters, n.iter = 100000, progress.bar=&quot;none&quot;) summary(codaSamples) ## ## Iterations = 1111:101110 ## Thinning interval = 1 ## Number of chains = 1 ## Sample size per chain = 100000 ## ## 1. Empirical mean and standard deviation for each variable, ## plus standard error of the mean: ## ## Mean SD Naive SE Time-series SE ## p.1 0.025070 0.156339 0.00049439 0.00049439 ## p.2 0.009870 0.098857 0.00031261 0.00031261 ## x 0.001749 1.002820 0.00317120 0.00317120 ## ## 2. Quantiles for each variable: ## ## 2.5% 25% 50% 75% 97.5% ## p.1 0.000 0.00000 0.0000000 0.00000 1.0000 ## p.2 0.000 0.00000 0.0000000 0.00000 0.0000 ## x -1.962 -0.67341 0.0014913 0.67986 1.9695 我們知道理論上 \\(x\\sim N(0,1^2)\\)，它的均值爲0，標準差爲1。我們也能看見蒙特卡羅模擬試驗的結果，隨着我們增加其重復取樣次數二越來越接近理論值。當取樣達到十萬次以上之後，可以看到蒙特卡羅的結果已經十分之接近真實值。在一開始剛剛重復100次蒙特卡羅時，我們可以看到p.1, p.2的估計還很不準確，但是類似的，當蒙特卡羅採樣次數達到十萬次以上時，這兩個概率估計也已經十分接近真實值。另外值得注意的一點是，隨着蒙特卡羅樣本量增加，MC_error也在變得越來越小（越來越精確）。事實上，這個Naive SE本身約等於\\(\\frac{\\text{sd}}{\\sqrt{\\text{sample size}}}\\)。所以對\\(x\\)來說，經過1000次蒙特卡羅計算，\\(\\text{sd}(x) = 1.009\\)，那麼此時的Naive SE\\(=\\frac{1.009}{\\sqrt{1000}} \\approx 0.0319\\)，十分接近計算機給出的Naive SE = 0.03244。Naive SE本身可以作爲這個\\(x\\)均值的估計精確度來理解，我們同時相信，真實的理論值會落在蒙特卡羅樣本均值\\(\\pm 2\\times\\) Naive SE範圍內。 下面我們來探索一下 t分布。嘗試寫下一個BUGS模型，它的先驗概率分布是一個自由度爲4的t分布，y ~ dt(0,1,4)。然後進行10000次蒙特卡羅採樣計算，並給出概率密度分布圖。 # Monte Carlo predictions # with a t distribution prior with degree of freedom = 4 model{ y ~ dt(0, 1, 4) } # Step 1 check model jagsModel &lt;- jags.model(file = paste(bugpath, &quot;/backupfiles/MCt.txt&quot;, sep = &quot;&quot;), n.chains = 1) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 0 ## Unobserved stochastic nodes: 1 ## Total graph size: 4 ## ## Initializing model # Step 2 update 1000 iterations update(jagsModel, n.iter = 10, progress.bar=&quot;none&quot;) # Step 3 set monitor variables parameters &lt;- c(&quot;y&quot;) codaSamples &lt;- coda.samples( jagsModel, variable.names = parameters, n.iter = 10000, progress.bar=&quot;none&quot;) summary(codaSamples) ## ## Iterations = 11:10010 ## Thinning interval = 1 ## Number of chains = 1 ## Sample size per chain = 10000 ## ## 1. Empirical mean and standard deviation for each variable, ## plus standard error of the mean: ## ## Mean SD Naive SE Time-series SE ## -0.014838 1.387851 0.013879 0.013879 ## ## 2. Quantiles for each variable: ## ## 2.5% 25% 50% 75% 97.5% ## -2.758298 -0.751031 -0.023335 0.741610 2.724315 #### PLOT THE DENSITY and HISTOGRAMS OF THE SAMPLED VALUES ggSample &lt;- ggs(codaSamples) Y &lt;- ggSample %&gt;% filter(Parameter == &quot;y&quot;) plot(density(Y$value), main = &quot;y sample 10000&quot;, ylab = &quot;P(y)&quot;, xlab = &quot;y&quot;, col = &quot;red&quot;) 圖 96.14: Predictive distribution of the nodes of interest. 下面再嘗試計算一個來自均值爲1，標準差爲2的正態分布的隨機變量，它的三次方的期望值是多少。已知標準差\\(SD = 2\\)，那麼方差爲\\(Var = 4\\)，那麼翻譯成BUGS語言就是精確度爲 \\(\\frac{1}{4} = 0.25\\)。 # Monte Carlo predictions model{ y ~ dnorm(1, 0.25) ycubed &lt;- pow(y, 3) # note how to write power in BUGS } # Step 1 check model jagsModel &lt;- jags.model(file = paste(bugpath, &quot;/backupfiles/MCcube.txt&quot;, sep = &quot;&quot;), n.chains = 1) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 0 ## Unobserved stochastic nodes: 1 ## Total graph size: 5 ## ## Initializing model # Step 2 update 1000 iterations update(jagsModel, n.iter = 10, progress.bar=&quot;none&quot;) # Step 3 set monitor variables parameters &lt;- c(&quot;y&quot;, &quot;ycubed&quot;) codaSamples &lt;- coda.samples( jagsModel, variable.names = parameters, n.iter = 10000, progress.bar=&quot;none&quot;) summary(codaSamples) ## ## Iterations = 11:10010 ## Thinning interval = 1 ## Number of chains = 1 ## Sample size per chain = 10000 ## ## 1. Empirical mean and standard deviation for each variable, ## plus standard error of the mean: ## ## Mean SD Naive SE Time-series SE ## y 1.0018 1.9908 0.019908 0.02055 ## ycubed 13.0391 39.7504 0.397504 0.40482 ## ## 2. Quantiles for each variable: ## ## 2.5% 25% 50% 75% 97.5% ## y -2.8439 -0.341175 1.0053 2.3391 4.9108 ## ycubed -23.0013 -0.039713 1.0159 12.7975 118.4277 #### PLOT THE DENSITY and HISTOGRAMS OF THE SAMPLED VALUES ggSample &lt;- ggs(codaSamples) par(mfrow=c(1,2)) Y &lt;- ggSample %&gt;% filter(Parameter == &quot;y&quot;) Ycubed &lt;- ggSample %&gt;% filter(Parameter == &quot;ycubed&quot;) plot(density(Y$value), main = &quot;y sample 10000&quot;, ylab = &quot;P(y)&quot;, xlab = &quot;y&quot;, col = &quot;red&quot;) plot(density(Ycubed$value), main = &quot;ycubed sample 100000&quot;, ylab = &quot;P(ycubed)&quot;, xlab = &quot;ycubed&quot;, col = &quot;red&quot;) 圖 96.15: Predictive distribution of the nodes of interest. 所以，一個隨機變量如果它來自一個均值爲1，標準差爲2的正態分布，那麼它的三次方的期望值是13，注意ycubed右側的尾巴很長。 References "],["conjugate-priors.html", "第 97 章 共軛先驗概率 Conjugate priors 97.1 貝葉斯推斷的基礎 97.2 二項分布(似然)數據的共軛先驗概率 97.3 正態分布(似然)數據的共軛先驗概率 97.4 泊淞分布(似然)數據的共軛先驗概率 97.5 共軛先驗概率分布的總結 97.6 Practical Bayesian Statistics 03", " 第 97 章 共軛先驗概率 Conjugate priors 本章節我們重溫一下最早在貝葉斯統計學入門部分(Chapter 41)介紹過的一些基本原則。特別是關於共軛先驗概率的概念，並提供一些使用BUGS模型的例子來展示如何運算這些模型。 97.1 貝葉斯推斷的基礎 在一個臨牀試驗中，作爲一名貝葉斯統計學者，必須清晰明瞭地闡述如下幾個問題: 合理地描述目前爲止，在瞭解本次試驗數據的結果之前，類似研究曾經給出過的療效差異的報告結果，可能的取值範圍 (the prior distribution)； 本次試驗數據得到的結果，支持怎樣的療效差異 (the likelihood)； 之後需要將上述兩個資源通過合理的數學模型結合在一起，用於產生 最終療效是否存在的意見和建議，證據的總結 (the posterior distribution)。 最後第三步將先驗概率和似然相結合的過程，用到的是貝葉斯定理(Bayes Theorem)。通過貝葉斯定理把目前位置的經驗作爲先驗概率統合現階段試驗數據給出的似然的過程，其實是一個自我學習不斷更新知識的過程。經過貝葉斯推斷，給出事後概率分布之時，我們可以拿它來做什麼呢？ 估計和評價治療效果，治療差異。 估計和評價模型中參數的不確定性。 計算你感興趣的那個變量（可以是療效差異，可以是模型中的參數）達到或者超過某個特定目標值的概率。 預測你感興趣的那個變量可能存在的範圍。 作爲未來要進行的試驗設計階段的先驗概率分布。 給決策者提供證據。 你是否還記得貝葉斯定理的公式: 如果\\(A, B\\)分別標記兩個事件，那麼有 \\[ p(A|B) = \\frac{p(B|A)p(A)}{p(B)} \\] 如果\\(A_i\\)是一系列互斥不相交事件，也就是\\(p(\\cup_iA_i) = \\sum_ip(A_i) = 1\\)，貝葉斯定理可以被改寫成爲： \\[ p(A_i|B) = \\frac{p(B|A_i)p(A_i)}{\\sum_jp(B|A_j)p(A_j)} \\] 貝葉斯統計學推斷從根本上的特點在於嚴格區分： 觀測數據 \\(y\\)，也就是試驗獲得的數據。 未知參數 \\(\\theta\\)，這裏，\\(\\theta\\)可以用統計學工具來描述，它可以是統計學參數，可以是缺失值，可以是測量誤差數據等等。 這裏貝葉斯統計學把未知參數當做一個可以變化的隨機變量(parameters are treated as random variables)； 在貝葉斯統計學框架下，我們對參數的不確定性進行描述(we make probability statements about model parameters)。 在概率論統計學框架下，統計學參數是未知，但是確實不變的。使用概率論統計學進行推斷時，我們只對數據進行不確定性的描述(parameters are fixed non-random quantities and the probability statements concern the data.) 貝葉斯統計學推斷中，我們仍然需要建立模型用來描述 \\(p(y|\\theta)\\)，這個也就是概率論統計學中常見的似然(likelihood)。似然是把各個變量關聯起來的完整的概率模型(full probability model)。 從貝葉斯統計學推斷的觀點出發， 在實施試驗，收集數據之前，參數(\\(\\theta\\))是未知的，所以它需要由一個概率分布(probability distribution)來反應它的不確定性，也就是說，我們需要先對參數可能來自的分布進行描述，指定一個先驗概率(prior distribution)\\(p(\\theta)\\)； 試驗進行完了，數據整理分析之時，我們知道了\\(y\\)，這就是我們來和先驗概率結合的似然，使用貝葉斯定理，從而獲得給定了觀測數據之後(conditional on)，服從先驗概率的參數現在服從的概率分布，這被叫做事後概率分布(posterior distribution)。 \\[ p(\\theta|y) = \\frac{p(\\theta)p(y|\\theta)}{\\int p(\\theta)p(y|\\theta)d\\theta} \\propto p(\\theta)p(y|\\theta) \\] 總結一下就是， 先驗概率(prior distribution)，\\(p(\\theta)\\)描述的是在收集數據之前參數的不確定性。 事後概率(posterior distribution)，\\(p(\\theta | y)\\) 描述的是在收集數據之後參數的不確定性。 97.2 二項分布(似然)數據的共軛先驗概率 沿用前一個章節新藥試驗的例子。我們在實施試驗之前對藥物的認知是，我們認爲它的藥效概率可能在 0.2-0.6 之間。我們把這個試驗前對藥物療效的估計認知翻譯成一個服從均值爲0.4，標準差爲0.1的Beta分布。這個Beta分布使用的參數(參數的參數被叫做超參數, hyperparameter)，是9.2, 13.8，寫作\\(\\text{Beta}(9.2, 13.8)\\)。那麼現在我們假設試驗結束，收集的20名患者中15名療效顯著。接下來貝葉斯統計學家要回答的問題是，這個試驗結果對先驗概率分布產生了多大的影響(How should this trial change our opinion about the positive response rate)？ 在這個例子中，我們現在來詳細給出先驗概率和似然。 似然 likelihood (distribution of the data)：如果患者可以被認爲是相互獨立的，他們來自一個相同的總體，在這個總體中有一個未知的對藥物療效有效反應(positive response)的概率 \\(\\theta\\)，這樣的數據可以用一個二項分布似然來描述 binomial likelihood: \\[ p(y | n, \\theta) = \\binom{n}{y}\\theta^y(1-\\theta)^{n-y} \\propto \\theta^y(1-\\theta)^{n-y} \\] 描述試驗前我們對\\(\\theta\\)的認知的先驗概率 prior distribution，這是一個連續型先驗概率分布。對於百分比，我們用Beta分布來描述： \\[ \\begin{aligned} \\theta &amp; \\sim \\text{Beta}(a,b) \\\\ p(\\theta) &amp; = \\frac{\\Gamma(a+b)}{\\Gamma(a)\\Gamma(b)} \\theta^{a-1}(1-\\theta)^{b-1}\\\\ \\end{aligned} \\] 根據貝葉斯定理，我們來把先驗概率分布和似然相結合（相乘），來獲取事後概率分布： \\[ \\begin{aligned} p(\\theta | y, n) &amp; \\propto p(y|\\theta, n)p(\\theta) \\\\ &amp; \\propto \\theta^y(1-\\theta)^{n-y}\\theta^{a-1}(1-\\theta)^{b-1} \\\\ &amp; = \\theta^{y + a -1}(1-\\theta)^{n - y + b -1} \\end{aligned} \\] 眼尖的人立刻能看出來，這個事後概率分布本身也是一個Beta分布的概率方程，只是它的超參數和先驗概率相比發生了變化(更新)： \\[ p(\\theta | y,n) = \\text{Beta}(a + y, b + n -y) \\] 像這樣，先驗概率和事後概率兩個概率分布都來自相同分佈家族的情況，先驗概率又被叫做和似然成共軛關系的先驗概率(共軛先驗概率, conjugate prior)。 par(mfrow=c(3,1)) # Plot exact prior probability density # values of the hyperparameters a &lt;- 9.2 b &lt;- 13.8 # prior function prior &lt;- Vectorize(function(theta) dbeta(theta, a, b)) # Plot curve(prior, 0, 1, type = &quot;l&quot;, main = &quot;Prior for &quot;~theta, ylim = c(0, 4.5), frame = F, xlab = &quot;Probability of positive response&quot;, ylab = &quot;Density&quot;, lwd = 2, cex.axis = 1.5, cex.lab = 1.5) # binomial likelihood function (likelihood) Likelihood &lt;- Vectorize(function(theta) dbinom(15, 20, theta)) # Plot curve(Likelihood, 0, 1, type = &quot;l&quot;, main = &quot;Likelihood for the data&quot;, frame = FALSE, xlab = &quot;Probability of positive response&quot;, ylab = &quot;Density&quot;, lwd = 2, cex.axis = 1.5, cex.lab = 1.5) # n &lt;- 0; r &lt;- 0; a &lt;- 9.2; b &lt;- 13.8; np &lt;- 20 # plot(0:20, BetaBinom(0:20), type = &quot;b&quot;, xlab = &quot;r*&quot;, ylab = &quot;P(R = r*)&quot;, # main = &quot;Prior predictive: a = 9.2, b = 13.8&quot;) # Posterior function posterior &lt;- Vectorize(function(theta) dbeta(theta, a+15, b+20-15)) # Plot curve(posterior, 0, 1, type = &quot;l&quot;, main = &quot;Posterior for &quot;~theta, frame = FALSE, xlab = &quot;Probability of positive response&quot;, ylab = &quot;Density&quot;, lwd = 2, cex.axis = 1.5, cex.lab = 1.5) 圖 97.1: Prior, likelihood, and posterior for Drug example 本次試驗的模型，它的三個部分（先驗概率，似然，事後概率），分別從上到下繪制在圖 97.1 中。由於我們使用了共軛先驗概率，所以我們也可以通過數學的計算（甚至不需要計算機的輔助）也能算出事後概率分布。可是，並不是所有的模型都有共軛先驗概率分布供我們選擇，這時候，蒙特卡羅模擬試驗的算法就提供了強有力的工具。在BUGS/JAGS語言中，我們可以用蒙特卡羅算法，忽視掉那些無法在數學上推導出事後概率分布方程的模型。BUGS本身很厲害，它可以自動識別出我們給它的先驗概率分布是否和似然之間是共軛的，如果是，那麼它會計算出共軛的事後概率分布方程，然後從事後概率分布方程中選取蒙特卡羅樣本。這個新藥試驗的BUGS模型可以寫作： # Monte Carlo model for Drug example model{ theta ~ dbeta(9.2,13.8) # prior distribution y ~ dbin(theta,20) # sampling distribution (likelihood) y &lt;- 15 # data } 你可以看到這個模型和我們在前一章做預測的模型只有第三行指令發生了變化。當時我們是打算要來做試驗結果的預測。此時，我們試驗完畢，觀察到15名患者的疼痛症狀得到了改善，所以試驗數據是15。BUGS/JAGS本身會自動識別出我們是否給似然增加了觀察數據。當它識別到我們不是用這個模型做結果預測時，它會自動明白並且切換到事後概率分布的計算。這個在似然裏面的數據，是它要拿來放到模型中做條件的(observed values, i.e. data needs to be conditioned on)。 97.2.1 事後概率分布預測 假如這個新藥的效果仍然無法讓人覺得信服，我們考慮再做一次試驗徵集更多的患者，如果在這個試驗中，40名患者中有25名或者更多的患者症狀得到緩解，可以考慮把該藥物加入下一次發展計劃當中。這時候，又一次回到了預測概率的問題上來，我們想知道，“再做40人的試驗時，有25名或者更多的患者的症狀可以得到緩解”這件事可能發生的概率。這時候的模型可以被擴展如下： \\[ \\begin{split} \\theta &amp; \\sim \\text{Beta}(a,b) &amp; \\text{ Prior distribution} \\\\ y &amp; \\sim \\text{Binomial}(\\theta, n) &amp; \\text{ Sampling distribution} \\\\ y_{\\text{pred}} &amp; \\sim \\text{Binomial}(\\theta, m) &amp; \\text{ Predictive distribution} \\\\ P_{\\text{crit}} &amp; \\sim P(y_{\\text{pred}} \\geqslant m_{\\text{crit}}) &amp; \\text{ Probability of exceeding critical threshold} \\end{split} \\] 這段模型翻譯成BUGS語言可以描述爲： model{ theta ~ dbeta(a, b) # prior distribution y ~ dbin(theta, n) # sampling distribution y.pred ~ dbin(theta, m) # predictive distribution P.crit &lt;- step(y.pred - mcrit + 0.5) # = 1 if y.pred &gt;= mcrit, 0 otherwise } 我們可以把數據寫在另一個txt文件/向量裏面： list(a = 9.2, # parameters of prior distribution b = 13.8, y = 15, # number of successes in completed trial n = 20, # number of patients in completed trial m = 40, # number of patients in future trial mcrit = 25) # critical value of future successes 當然這是一個很簡單的例子，你完全可以把數據和模型寫在一起： model{ theta ~ dbeta(9.2, 13.8) # prior distribution y ~ dbin(theta, 20) # sampling distribution y.pred ~ dbin(theta, 40) # predictive distribution P.crit &lt;- step(y.pred - 24.5) # = 1 if y.pred &gt;= mcrit, 0 otherwise y &lt;- 15 } Dat &lt;- list(a = 9.2, # parameters of prior distribution b = 13.8, y = 15, # number of successes in completed trial n = 20, # number of patients in completed trial m = 40, # number of patients in future trial mcrit = 25) # critical value of future successes # fit use R2jags package post.jags &lt;- jags( data = Dat, parameters.to.save = c(&quot;P.crit&quot;, &quot;theta&quot;, &quot;y.pred&quot;), n.iter = 50100, model.file = paste(bugpath, &quot;/backupfiles/MCdrugP29.txt&quot;, sep = &quot;&quot;), n.chains = 1, n.thin = 10, n.burnin = 100, progress.bar = &quot;none&quot;) ## module glm loaded ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 1 ## Unobserved stochastic nodes: 2 ## Total graph size: 12 ## ## Initializing model print(post.jags) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/MCdrugP29.txt&quot;, fit using jags, ## 1 chains, each with 50100 iterations (first 100 discarded), n.thin = 10 ## n.sims = 5000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% ## P.crit 0.342 0.474 0.000 0.000 0.000 1.000 1.000 ## theta 0.563 0.075 0.413 0.512 0.565 0.614 0.706 ## y.pred 22.596 4.349 14.000 20.000 23.000 26.000 31.000 ## deviance 6.657 2.429 3.401 4.860 6.155 7.962 12.554 ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 3.0 and DIC = 9.6 ## DIC is an estimate of expected predictive error (lower deviance is better). Simulated &lt;- coda::as.mcmc(post.jags) #### PUT THE SAMPLED VALUES IN ONE R DATA FRAME: ggSample &lt;- ggmcmc::ggs(Simulated) #### PLOT THE DENSITY and HISTOGRAMS OF THE SAMPLED VALUES par(mfrow=c(1,2)) Theta &lt;- ggSample %&gt;% filter(Parameter == &quot;theta&quot;) Y &lt;- ggSample %&gt;% filter(Parameter == &quot;y.pred&quot;) plot(density(Theta$value), main = &quot;theta sample 50000&quot;, ylab = &quot;P(theta)&quot;, xlab = &quot;Probability of response&quot;, col = &quot;red&quot;) hist(Y$value, main = &quot;y.pred sample 50000&quot;, ylab = &quot;P(y.pred)&quot;, xlab = &quot;Number of success&quot;, col = &quot;red&quot;, prob = TRUE,xlim = c(0, 40)) 圖 97.2: Posterior and predictive distributions for Drug example # # Or simply use the denplot() function from the mcmcplots package # mcmcplots::denplot(post.jags, &quot;theta&quot;) 圖97.2左邊的圖，是前一次試驗結果的事後概率分布，20名患者中觀察到15名患者症狀改善。右邊的圖則是對下一次40人的試驗的結果做的預測，平均22.5名患者可能會有症狀改善，這個均值的標準差是4.3。 mcmcplots::traplot(post.jags, &quot;theta&quot;) 圖 97.3: Plot of the MCMC chain of the parameter, Drug example. 爲了比較，我們可以把精確計算獲得的答案和蒙特卡羅算法給出的預測做個比較： \\(\\theta:\\)均值爲0.563，標準差是0.075； \\(y_{\\text{pred}}:\\)均值22.51，標準差是4.31； 至少25名患者得到症狀改善的精確概率是 0.329。 97.3 正態分布(似然)數據的共軛先驗概率 例子：英國各地自來水公司依照法律規定，需要定期監測自己公司生產的自來水中三氯甲烷(trihalomethane, THM)的濃度。一年之中，每個公司都會在各個時期，不同的供水區域進行水樣的採集。假設現在我們需要來估計某個供水區域的自來水中三氯甲烷的濃度。 已知已經進行了兩次取樣，監測到三氯甲烷濃度分別是 \\(y_1 = 128\\mu g/l, y_2 = 132 \\mu g/l\\)。兩次監測的均值爲 \\(130 \\mu g/l\\)。如果，這一片固定供水區域監測三氯甲烷濃度時檢測值的標準差是已知的 \\(\\sigma = 5\\mu g/l\\)，那麼問題是，在這片固定供水區域的三氯甲烷濃度的估計值\\((\\theta)\\)能否計算？ 一個只有概率論知識的統計專家是這樣計算的： 樣本均值 \\(\\bar y = 130 \\mu g/l\\)是總體均值 \\(\\theta\\) 的一次估計； 它的標準誤是 \\(\\frac{\\sigma}{\\sqrt{n}} = 5/\\sqrt{2} = 3.5 \\mu g/l\\)。 然後這兩次測量的結果告訴我們總體均值的點估計和95%信賴區間是: \\(\\bar y \\pm 1.96 \\times \\sigma/\\sqrt{n} = 130 \\pm 1.96\\times3.5 = (123.1, 136.9) \\mu g /l\\) 但是一個擁有了貝葉斯統計學知識的統計專家則會是這樣思考的： 這個模型中，我們知道似然(likelihood)是一個正態分布：\\(y_i \\sim N(\\theta, \\sigma^2) (i = 1, \\dots, n)\\)，且這裏的標準差是已知的 \\(\\sigma = 5\\mu g/l\\)。那麼我們給均值這個參數 \\(\\theta\\) 一個怎樣的先驗概率分布呢？ \\[ \\theta \\sim N(\\mu, \\omega^2) \\] 先驗概率分布的方差 \\(\\omega^2\\) 常可以用數據的方差來表達：\\(\\omega^2 = \\sigma^2/n_0\\)。 這裏的 \\(n_0\\)，可以被解釋爲隱藏的先驗概率樣本量(implicit prior sample size)。 在 BUGS/JAGS 標記法中，正態分布的代碼是 y ~ dnorm(theta, tau)，其中 tau 是方差的倒數(又叫做精確度)。 這時候我們需要一些過去同一家供水廠監測三氯甲烷時濃度的數據來給這個先驗概率分布一些提示。例如翻閱記錄我們發現來自同一家自來水公司，在其他供水區域的三氯甲烷濃度均值是 \\(120 \\mu g/l\\)，標準差是 \\(10 \\mu g/l\\)。這就提供了 \\(N(120, 10^2)\\) 作爲 \\(\\theta\\) 的先驗概率分布。這時我們把先驗概率分布的標準差用觀測區域的標準差來表達: \\(\\omega^2 = \\sigma^2/n_0\\)，此時 \\(n_0 = \\sigma^2/\\omega^2 = 5^2/10^2 = 0.25\\)。那麼先驗概率分布可以被表達成 \\(\\theta \\sim N(120, \\sigma^2/0.25)\\)。如果 \\(n_0\\) 靠近 \\(0\\)，那麼根據這個方程我們知道先驗概率分布的方差就會變大，意味着先驗概率給出的信息越不精確，分布越”平坦(flatter)“。 此時貝葉斯統計專家把似然和先驗概率分布結合起來，計算事後概率分布： \\[ \\begin{aligned} \\theta | \\mathbf{y} &amp; \\sim N(\\frac{n_0 + n\\bar y}{n_0 + n}, \\frac{\\sigma^2}{n_0 + n})\\\\ &amp; \\sim N(\\frac{0.25\\times 120 + 2 \\times 130}{0.25 + 2}, \\frac{5^2}{0.25 + 2}) \\\\ &amp; = N(128.9, 3.33^2 ) \\end{aligned} \\] 貝葉斯算法給出的事後概率分布的95%可信區間則是 \\((122.4, 135.4) \\mu g/l\\)。 事後概率分布的均值\\(\\frac{n_0 + n\\bar y}{n_0 + n}\\)其實是先驗概率均值，和觀測數據均值之間加權之後的綜合值，它們加的權重，分別是各自的精確度(相對樣本量 relative sample size)。這其實告訴我們，觀測數據和先驗概率二者結合之時，需要各自妥協。(a compromise between the likelihood and the prior) 事後概率分布的方差也是和先前提到的先驗概率樣本量有密切關系。它是觀測數據的方差除以觀測樣本量和先驗概率樣本量之和。 當然，當你的觀測數據樣本量趨向於無窮大時 \\(n \\rightarrow \\infty\\)，事後概率分布本身就接近與觀測數據的似然 \\(p(\\theta | \\mathbf{y}) \\rightarrow N(\\bar y, \\sigma^2/n)\\)。也就是說觀測數據的信息量佔絕對主導，先驗概率分布，不再能提供太多有價值的信息，可以忽略不計了。 # prior function xseq&lt;-seq(80,180,.01) densities&lt;-dnorm(xseq, 120,10) # Plot plot(xseq, densities, col=&quot;darkgreen&quot;,xlab=&quot;mean THM concentration, ug/l (theta)&quot;, ylab=&quot;Density&quot;, type=&quot;l&quot;,lwd=2, cex=2, # main=&quot;PDF of Prior, likelihood, and posterior for THM example.&quot;, cex.axis=0.9, cex.lab = 1, ylim = c(0,0.12)) # normal likelihood function (likelihood) Likelihood &lt;- dnorm(xseq, 130, 5) # Plot points(xseq, Likelihood, col=&quot;darkred&quot;, type=&quot;l&quot;,lwd=2, cex=2) # Posterior function posterior &lt;- dnorm(xseq, 128.9, 3.33) # Plot points(xseq, posterior, col=&quot;black&quot;, type=&quot;l&quot;,lwd=2, cex=2) legend(&quot;topright&quot;, c(&quot;Prior&quot;, &quot;Likelihood&quot;, &quot;Posterior&quot;), bty = &quot;n&quot;, lwd = 2, lty = c(1,1,1), col = c(&quot;darkgreen&quot;, &quot;darkred&quot;, &quot;black&quot;)) 圖 97.4: PDF of Prior, likelihood and posterior for THM example. 97.4 泊淞分布(似然)數據的共軛先驗概率 接下來，我們把注意力轉到計數型數據的模型，泊淞分布上來。如果一組數據是計數型數據，\\(y_1, y_2, \\dots. , y_n\\)，它們可以被認爲是服從泊淞分布的話，它們的總體均值是\\(\\mu\\)，其似然(likelihood)方程可以寫作： \\[ p(\\mathbf{y} | \\mu) = \\prod_i\\frac{\\mu^{y_i}e^{-\\mu}}{y_i!} \\] 那麼，經過前輩探索，我們知道，泊淞分布的似然它也有一個共軛先驗概率分布，是伽馬分布(Gamma distribution)： \\[ p(\\mu) = \\text{Gamma}(a,b) = \\frac{b^a}{\\Gamma(a)}\\mu^{a-1}e^{-b\\mu} \\] 伽馬分布是一個十分靈活的分布，適用於要求數據嚴格爲正的模型(positive quantities)。如果 \\(\\mu \\sim \\text{Gamma}(a,b)\\)： \\[ \\begin{aligned} p(\\mu | a,b) &amp; = \\frac{b^a}{\\Gamma(a)}\\mu^{a-1}e^{-b\\mu}, \\mu \\in (0,\\infty) \\\\ \\text{E}(\\mu |a,b) &amp; = \\frac{a}{b} \\\\ \\text{V}(\\mu |a,b) &amp; = \\frac{a}{b^2} \\end{aligned} \\] 它的模型在BUGS語言可以用 mu ~ dgamma(a,b) 來表述。伽馬分布還有如下的一些有趣的特徵： \\(\\text{Gamma}(1,b)\\) 是均值爲 \\(\\frac{1}{b}\\) 的指數分布。 \\(\\text{Gamma}(\\frac{v}{2},\\frac{1}{2})\\)，其實是自由度爲 \\(v\\) 的卡方分布 \\(\\chi_v^2\\)。 \\(\\mu \\sim \\text{Gamma}(0,0)\\) 其實等價於 \\(p(\\mu) \\propto \\frac{1}{\\mu}\\)，或者 \\(\\log \\mu \\sim \\text{Uniform}\\)。 伽馬分布同時也是正態分布數據（似然）的精確度（方差的倒數，inverse variance or precision）共軛先驗概率。 伽馬分布也可以用於正向非對稱性分布(skewed positive valued quantities)的樣本分布。 下圖展示了一些常見伽馬分布的形狀： 圖 97.5: Shape of some Gamma distribution functions for various values of a, b 將伽馬分布的概率方程和泊淞分布似然方程相結合，貝葉斯定理告訴我們，它會變成另外一個更新過後的伽馬分布： \\[ \\begin{aligned} p(\\mu | \\mathbf{y}) &amp; \\propto p(\\mu) p(\\mathbf{y} | \\mu) \\\\ &amp; = \\frac{b^a}{\\Gamma(a)}\\mu^{a-1}e^{-b\\mu} \\prod_{i=1}^ne^{-\\mu}\\frac{\\mu^{y_i}}{y_i!} \\\\ &amp; \\propto \\mu^{a + n\\bar y -1} e^{-(b+n)\\mu} \\\\ &amp; = \\text{Gamma}(a + n\\bar y, b+n) \\end{aligned} \\] 這個新的伽馬分布的期望值是： \\[ E(\\mu | \\mathbf{y}) = \\frac{a + n\\bar y}{b + n} = \\bar y (\\frac{n}{n + b}) + \\frac{a}{b}(1 - \\frac{n}{n + b}) \\] 也就是說事後概率分布的伽馬分布，它的均值（期望）是先驗概率分布的均值 \\(\\frac{a}{b}\\) 和數據樣本均值 \\(\\bar y\\) 相互妥協的結果。泊淞－伽馬分布的模型常常可以用於估計發病率(rate)，或者相對危險度(relative risk)，反而較少用於估計率數據的均值(mean of possion data)。 97.5 共軛先驗概率分布的總結 從這些共軛概率分布的結果和他們的特徵值的推導來看，我們發現： 事後概率分布的均值，總是將先驗概率分布均值和觀察數據的樣本均值相結合並且互相妥協之後的結果。 事後概率分布的標準差（方差），總是小於先驗概率分布的方差和觀察數據的樣本標準差的任何一個。 而且，當樣本數據的樣本量很大， \\(n \\rightarrow \\infty\\)： 事後概率分布的均值都會無限接近觀察數據的樣本均值。\\(\\text{The posterior mean } \\rightarrow \\text{ the sample mean}\\)； 事後概率分布的標準差會無限接近觀察數據的樣本標準誤。\\(\\text{The posterior standard deviation } \\rightarrow \\text{ the standard error}\\)； 事後概率分布就不再依賴先驗概率分布了。 當事後概率分布，和先驗概率分布恰好都來自相同分布家族時，我們稱這樣的分布具有共軛性質(conjugacy)。此時，先驗概率分布的參數常常可以被解讀成爲先驗概率樣本(prior sample)。 這樣的分布我們總結一下常見的例子： 表 97.1: Examples of conjugate distributions and likelihood. Likelihood Parameter Prior Posterior Normal mean Normal Normal Normal precision Gamma Gamma Binomial success prob. Beta Beta Poisson rate or mean Gamma Gamma 共軛先驗概率分布在數學上是十分便利的，但是並不是所有的似然都能找到它的共軛概率分布做先驗概率。這時候我們就需要求助於計算機模擬試驗的威力，下一章我們會接觸到怎樣使用 Markov Chain Monte Carlo (MCMC)來克服我們找不到共軛先驗概率的似然時，後驗概率分布的計算。它的中文名被翻譯成馬爾可夫鏈蒙特卡羅。 97.6 Practical Bayesian Statistics 03 A. 新藥試驗模型 新藥臨牀試驗的BUGS模型可以寫作: # Drug example - model code model{ theta ~ dbeta(a,b) # prior distribution y ~ dbin(theta,n) # sampling distribution y.pred ~ dbin(theta,m) # predictive distribution P.crit &lt;- step(y.pred-ncrit+0.5) # =1 if y.pred &gt;= ncrit, 0 otherwise } 這個模型中 theta 是藥物的陽性反應率(有效率, response rate)；y.pred是40名未來患者中可能出現陽性反應的人數(number of positive response in 40 future patients)。P.crit 是用來表示患者中有25名或者更多的人有陽性反應時的指示變量(indicator variable)。 新藥試驗的數據則可以寫爲: # Drug example - data # values for a, b, m, n, ncrit could alternatively have been given in model description list( a = 9.2, # parameters of prior distribution b = 13.8, y = 15, # number of successes n = 20, # number of trials m = 40, # future number of trials ncrit = 25) # critical value of future successes 把這裏的模型保存稱爲 drug-model.txt文件，把數據保存成 drug-data.txt文件，我們來試着用OpenBUGS/JAGS跑這個模型: # Codes for OpenBUGS # # Step 1 check model # modelCheck(paste(bugpath, &quot;/backupfiles/drug-model.txt&quot;, sep = &quot;&quot;)) # # Load the data # modelData(paste(bugpath, &quot;/backupfiles/drug-data.txt&quot;, sep = &quot;&quot;)) # # compile the model # modelCompile(numChains = 1) # # There is no need to provide initial values as # # they are aleady provided in the model specification # modelGenInits() # # # Set monitors on nodes of interest#### SPECIFY, WHICH PARAMETERS TO TRACE: # parameters &lt;- c(&quot;P.crit&quot;, &quot;theta&quot;, &quot;y.pred&quot;) # samplesSet(parameters) # # Generate 10000 iterations # modelUpdate(10000) # #### SHOW POSTERIOR STATISTICS # sample.statistics &lt;- samplesStats(&quot;*&quot;) # print(sample.statistics) # Codes for R2JAGS Dat &lt;- list(a = 9.2, # parameters of prior distribution b = 13.8, y = 15, # number of successes in completed trial n = 20, # number of patients in completed trial m = 40, # number of patients in future trial ncrit = 25) # critical value of future successes # fit use R2jags package post.jags &lt;- jags( data = Dat, parameters.to.save = c(&quot;P.crit&quot;, &quot;theta&quot;, &quot;y.pred&quot;), n.iter = 10100, model.file = paste(bugpath, &quot;/backupfiles/drug-model.txt&quot;, sep = &quot;&quot;), n.chains = 1, n.thin = 1, n.burnin = 100, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 1 ## Unobserved stochastic nodes: 2 ## Total graph size: 12 ## ## Initializing model print(post.jags) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/drug-model.txt&quot;, fit using jags, ## 1 chains, each with 10100 iterations (first 100 discarded) ## n.sims = 10000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% ## P.crit 0.334 0.472 0.000 0.000 0.000 1.000 1.000 ## theta 0.563 0.074 0.416 0.513 0.564 0.613 0.708 ## y.pred 22.523 4.304 14.000 20.000 23.000 26.000 31.000 ## deviance 6.637 2.378 3.382 4.873 6.199 7.916 12.404 ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 2.8 and DIC = 9.5 ## DIC is an estimate of expected predictive error (lower deviance is better). 此時我們獲得我們關心的各個事後概率分佈描述，其中陽性反應率的點估計是0.563，其95%可信區間是(0.412, 0.707)。40名患者中25人或者以上出現有療效反應的概率是32.4%。 請繪製theta的事後概率分佈的密度曲線，以及y.pred的預測概率分佈: #### PLOT THE DENSITY and HISTOGRAMS OF THE SAMPLED VALUES par(mfrow=c(1,2)) Theta &lt;- ggSample %&gt;% filter(Parameter == &quot;theta&quot;) Y &lt;- ggSample %&gt;% filter(Parameter == &quot;y.pred&quot;) plot(density(Theta$value), main = &quot;theta sample 10000&quot;, ylab = &quot;P(theta)&quot;, xlab = &quot;Probability of response&quot;, col = &quot;red&quot;) hist(Y$value, main = &quot;y.pred sample 10000&quot;, ylab = &quot;P(y.pred)&quot;, xlab = &quot;Number of success&quot;, col = &quot;red&quot;, prob = TRUE,xlim = c(0, 40)) 圖 97.6: Posterior and predictive distributions for Drug example 比較一下這裏的模型和我們前一章的練習中的模型， Model from Practical 2 # Monte Carlo predictions for Drug example model{ theta ~ dbeta(9.2,13.8) # prior distribution y ~ dbin(theta,20) # sampling distribution P.crit &lt;- step(y-14.5) # =1 if y &gt;= 15, 0 otherwise } Model from Practical 3 # Drug example - model code model{ theta ~ dbeta(a,b) # prior distribution y ~ dbin(theta,n) # sampling distribution y.pred ~ dbin(theta,m) # predictive distribution P.crit &lt;- step(y.pred-ncrit+0.5) # =1 if y.pred &gt;= ncrit, 0 otherwise # data y &lt;- 15 } 這兩個模型的構成基本上是相同的，最重要的不同點在於，Practical 2中的 MC分析中沒有關於該次試驗的觀測數據 y，也就是20名患者中陽性反應，療效顯著的患者人數。所以，該模型不能從試驗數據中”學習”，導致 OpenBUGS/JAGS 其實在進行 MC 模擬試驗時僅僅是從先驗概率分佈 \\(\\text{Beta}(9.2, 13.8)\\) 中隨機採樣對結果做出預測。在 Practical 3的模型裏，我們把試驗數據加入到了模型裏面 y &lt;- 15，所以OpenBUGS/JAGS此時識別了本次試驗數據是20人中15人有效，接下來它就知道需要做事後概率分佈的計算而不是一個結果的預測。獲得事後概率分佈之後，OpenBUGS/JAGS也就開始從事後概率分佈當中獲取隨機樣本。然後我們需要在模型中加入新的變量來預測下一次如果做40人的研究時，可能出現的事後概率分佈。 如果把模型中陽性反應率theta的先驗概率分佈改成一個沒有太多信息的，連續型均勻分佈(uniform distribution)，例如 \\(\\text{Uniform}(0,1)\\)，或者是 \\(\\text{Beta}(1,1)\\)。MC結果會變成怎樣呢？ 先驗概率爲連續型均勻分佈的BUGS模型和數據可以寫成是: # Drug example - model code model{ theta ~ dunif(0,1) # prior distribution uniform distribution y ~ dbin(theta,n) # sampling distribution for n observed patients y.pred ~ dbin(theta,m) # predictive distribution for m new patients P.crit &lt;- step(y.pred-ncrit+0.5) # =1 if y.pred &gt;= ncrit, 0 otherwise } list( y = 15, # number of successes n = 20, # number of trials m = 40, # future number of trials ncrit = 25 # critical value of future successes ) # Codes for OpenBUGS # # Step 1 check model # modelCheck(paste(bugpath, &quot;/backupfiles/drug-modeluniform.txt&quot;, sep = &quot;&quot;)) # # Load the data # modelData(paste(bugpath, &quot;/backupfiles/drug-datauniform.txt&quot;, sep = &quot;&quot;)) # # compile the model # modelCompile(numChains = 1) # # There is no need to provide initial values as # # they are aleady provided in the model specification # modelGenInits() # # # Set monitors on nodes of interest#### SPECIFY, WHICH PARAMETERS TO TRACE: # parameters &lt;- c(&quot;P.crit&quot;, &quot;theta&quot;, &quot;y.pred&quot;) # samplesSet(parameters) # # # Generate 10000 iterations # modelUpdate(10000) # #### SHOW POSTERIOR STATISTICS # sample.statistics &lt;- samplesStats(&quot;*&quot;) # print(sample.statistics) # Codes for R2JAGS Dat &lt;- list( y = 15, # number of successes n = 20, # number of trials m = 40, # future number of trials ncrit = 25 # critical value of future successes ) # fit use R2jags package post.jags &lt;- jags( data = Dat, parameters.to.save = c(&quot;P.crit&quot;, &quot;theta&quot;, &quot;y.pred&quot;), n.iter = 10100, model.file = paste(bugpath, &quot;/backupfiles/drug-modeluniform.txt&quot;, sep = &quot;&quot;), n.chains = 1, n.thin = 1, n.burnin = 100, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 1 ## Unobserved stochastic nodes: 2 ## Total graph size: 12 ## ## Initializing model print(post.jags) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/drug-modeluniform.txt&quot;, fit using jags, ## 1 chains, each with 10100 iterations (first 100 discarded) ## n.sims = 10000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% ## P.crit 0.835 0.371 0.000 1.000 1.000 1.000 1.000 ## theta 0.728 0.093 0.530 0.668 0.735 0.795 0.889 ## y.pred 29.101 4.665 19.000 26.000 29.000 33.000 37.000 ## deviance 4.141 1.331 3.197 3.286 3.628 4.443 7.944 ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 0.9 and DIC = 5.0 ## DIC is an estimate of expected predictive error (lower deviance is better). 這個結果則提示，如果使用連續型均勻分佈的先驗概率，新藥試驗的陽性反應率是0.73，95%可信區間是(0.53, 0.89)。根據這個試驗結果對下次40人的試驗做預測時，認爲40人中大於或者等於25人有顯著療效(陽性反應)的概率會有0.84。 B. THM 三氯甲烷濃度實例 在飲用水檢測三氯甲烷濃度這個試驗中，我們已知濃度的方差，希望通過貝葉斯方法推斷其均值。 以下是我們需要思考的問題: 在這個供水區域內，三氯甲烷的濃度均值是多少？ 兩次測量濃度的數據，它的似然是怎樣的？ 如果可以假定三氯甲烷濃度服從正態分佈，那麼似然就是正態分佈似然: y[i] ~ N(theta, sigma^2)。 在上面提到的正態分佈似然中，有哪些參數，哪個是已知的哪個是未知的？ theta 區域濃度的均值未知，sigma區域濃度的方差是給定的(已知的)。 哪個參數需要在模型中給出先驗概率分佈？該怎樣指定這個先驗概率分佈才合理？theta，區域濃度均值需要給它指定一個先驗概率分佈，正態分佈數據均值的先驗概率分佈可以使用正態分佈。 # THM model: model { # data # y[1] &lt;- 128 # y[2] &lt;- 132 # tau &lt;- 1/pow(5, 2) for(i in 1:2) { y[i] ~ dnorm(theta, tau) } # informative prior theta ~ dnorm(120, prec) prec &lt;- 1/100 # vague prior # theta ~ dnorm(0, 0.000001) # OR # theta ~ dunif(-10000, 10000) } 在BUGS語言中，正態分佈用 dnorm(theta, tau)，其中 theta 爲均值，tau 是精確度(precision = 1/variance)，它是方差的倒數。 # Codes for R2JAGS Dat &lt;- list( y = c(128, 132), # observed tau = 1/(5^2) ) # fit use R2jags package post.jags &lt;- jags( data = Dat, parameters.to.save = c(&quot;theta&quot;), n.iter = 10100, model.file = paste(bugpath, &quot;/backupfiles/thm-model.txt&quot;, sep = &quot;&quot;), n.chains = 1, n.thin = 1, n.burnin = 100, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 2 ## Unobserved stochastic nodes: 1 ## Total graph size: 8 ## ## Initializing model print(post.jags) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/thm-model.txt&quot;, fit using jags, ## 1 chains, each with 10100 iterations (first 100 discarded) ## n.sims = 10000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% ## theta 128.868 3.342 122.241 126.547 128.867 131.137 135.377 ## deviance 11.429 1.402 10.434 10.537 10.899 11.750 15.521 ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 1.0 and DIC = 12.4 ## DIC is an estimate of expected predictive error (lower deviance is better). # OpenBUGS code: # # Step 1 check model # modelCheck(paste(bugpath, &quot;/backupfiles/thm-model.txt&quot;, sep = &quot;&quot;)) # # # compile the model # modelCompile(numChains = 1) # # There is no need to provide initial values as # # they are aleady provided in the model specification # modelGenInits() # # # Set monitors on nodes of interest#### SPECIFY, WHICH PARAMETERS TO TRACE: # parameters &lt;- c(&quot;theta&quot;) # samplesSet(parameters) # # Generate 10000 iterations # modelUpdate(10000) # #### SHOW POSTERIOR STATISTICS # sample.statistics &lt;- samplesStats(&quot;*&quot;) # print(sample.statistics) 所以這個區域三氯甲烷的事後均值和95%可信區間分別是 128.9 (122.3, 135.4)。和我們之前用精確計算法給出的結果相同/相近。 如果在這個模型中，我們嘗試沒有信息的先驗概率分佈，結果會怎樣呢？ # Codes for R2JAGS Dat &lt;- list( y = c(128, 132), # observed tau = 1/(5^2) ) # fit use R2jags package post.jags &lt;- jags( data = Dat, parameters.to.save = c(&quot;theta&quot;), n.iter = 10100, model.file = paste(bugpath, &quot;/backupfiles/THM-vaguemodel.txt&quot;, sep = &quot;&quot;), n.chains = 1, n.thin = 1, n.burnin = 100, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 2 ## Unobserved stochastic nodes: 1 ## Total graph size: 6 ## ## Initializing model print(post.jags) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/THM-vaguemodel.txt&quot;, fit using jags, ## 1 chains, each with 10100 iterations (first 100 discarded) ## n.sims = 10000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% ## theta 130.002 3.508 123.113 127.673 129.999 132.324 137.036 ## deviance 11.418 1.414 10.434 10.530 10.866 11.729 15.391 ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 1.0 and DIC = 12.4 ## DIC is an estimate of expected predictive error (lower deviance is better). # OpenBUGS code: # # Step 1 check model # modelCheck(paste(bugpath, &quot;/backupfiles/THM-vaguemodel.txt&quot;, sep = &quot;&quot;)) # # # compile the model # modelCompile(numChains = 1) # # There is no need to provide initial values as # # they are aleady provided in the model specification # modelGenInits() # # # Set monitors on nodes of interest#### SPECIFY, WHICH PARAMETERS TO TRACE: # parameters &lt;- c(&quot;theta&quot;) # samplesSet(parameters) # # # Generate 10000 iterations # modelUpdate(10000) # #### SHOW POSTERIOR STATISTICS # sample.statistics &lt;- samplesStats(&quot;*&quot;) # print(sample.statistics) MC試驗10000次給出的事後均值是129.9，它和樣本均值相同，因爲此時我們給模型一個幾乎不含有效信息的先驗概率分佈時，意味着我們讓試驗獲得的數據做完全主導作用，“data speak for themselves”。 C. Disease risk in a small area 下面的BUGS/JAGS模型代碼可以用來進行泊淞－伽馬分布似然的MC計算。在這個例子中，在某個區域我們觀察到５例白血病新病例，已知該區域的年齡性別標準化發病期望病例數是\\(E = 2.8\\)。注意看我們在代碼中加入了兩種不同類型的先驗概率分布，一個是沒有太多信息的(vague prior distribution)dgamma(0.1, 0.1)，一個則是有一定信息的(informative prior, stribution) dgamma(48, 40)。我們把兩個先驗概率分布同時加在一個模型裏，這是十分便於進行兩種先驗概率對結果的影響的比較的手段。你當然可以把它寫成兩個不同的模型。注意模型代碼是如何表示事後概率分布和計算相對危險度比(relative risk)大於1的概率的。 model { lambda[1] ~ dgamma(0.1, 0.1) # vague prior distribution lambda[2] ~ dgamma(48, 40) # informative prior distribution y[1] ~ dpois(mu[1]) # sampling distribution mu[1] &lt;- lambda[1] * 2.8 # repeat for second model y[2] ~ dpois(mu[2]) # sampling distribution mu[2] &lt;- lambda[2] * 2.8 # Is relative risk &gt; 1 P.excess[1] &lt;- step(lambda[1] - 1) P.excess[2] &lt;- step(lambda[2] - 1) # data # y[1] &lt;- 5 # y[2] &lt;- 5 # replicate data to fit both models together } # Codes for R2JAGS Dat &lt;- list( y = c(5, 5) # replicate data to fit both models together ) # fit use R2jags package post.jags &lt;- jags( data = Dat, parameters.to.save = c(&quot;P.excess[1]&quot;, &quot;P.excess[2]&quot;, &quot;lambda[1]&quot;, &quot;lambda[2]&quot;), n.iter = 10100, model.file = paste(bugpath, &quot;/backupfiles/disease-model.txt&quot;, sep = &quot;&quot;), n.chains = 1, n.thin = 1, n.burnin = 100, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 2 ## Unobserved stochastic nodes: 2 ## Total graph size: 15 ## ## Initializing model print(post.jags) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/disease-model.txt&quot;, fit using jags, ## 1 chains, each with 10100 iterations (first 100 discarded) ## n.sims = 10000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% ## P.excess[1] 0.848 0.359 0.000 1.000 1.000 1.000 1.000 ## P.excess[2] 0.928 0.259 0.000 1.000 1.000 1.000 1.000 ## lambda[1] 1.773 0.783 0.590 1.202 1.652 2.225 3.590 ## lambda[2] 1.239 0.169 0.933 1.122 1.231 1.349 1.590 ## deviance 8.650 1.482 7.170 7.708 8.215 9.071 12.721 ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 1.1 and DIC = 9.7 ## DIC is an estimate of expected predictive error (lower deviance is better). # # Step 1 check model # modelCheck(paste(bugpath, &quot;/backupfiles/disease-model.txt&quot;, sep = &quot;&quot;)) # # # compile the model # modelCompile(numChains = 1) # # There is no need to provide initial values as # # they are aleady provided in the model specification # modelGenInits() # # # Set monitors on nodes of interest#### SPECIFY, WHICH PARAMETERS TO TRACE: # parameters &lt;- c(&quot;P.excess[1]&quot;, &quot;P.excess[2]&quot;, &quot;lambda[1]&quot;, &quot;lambda[2]&quot;) # samplesSet(parameters) # # # Generate 10000 iterations # modelUpdate(10000) # #### SHOW POSTERIOR STATISTICS # sample.statistics &lt;- samplesStats(&quot;*&quot;) # print(sample.statistics) 在沒有信息的先驗概率(dgamma(0.1, 0.1))分布條件下，該地區可能有較高白血病發病率的概率是85%，但是在有參考價值信息的先驗概率分布(dgamma(48, 40))條件下，該地區可能有較高白血病發病率的概率是93%。所以，盡管相對危險度(relative risk)的事後均值在沒有信息的先驗概率分布條件下比較高(lambda[1] = 1.770 &gt; lambda[2] = 1.238)，但是沒有信息的先驗概率分布條件下，這個相對危險度大於1的概率(85%)要比有信息的先驗概率分布條件下相對危險度大於1的概率要低(93%)。這是因爲在沒有信息的先驗概率分布條件下，相對危險度估計本身有太多的不確定性(uncertainty，圖97.7)。 # # # Step 1 check model # modelCheck(paste(bugpath, &quot;/backupfiles/disease-model.txt&quot;, sep = &quot;&quot;)) # # # compile the model # modelCompile(numChains = 1) # # There is no need to provide initial values as # # they are aleady provided in the model specification # modelGenInits() # # # Set monitors on nodes of interest#### SPECIFY, WHICH PARAMETERS TO TRACE: # parameters &lt;- c(&quot;P.excess[1]&quot;, &quot;P.excess[2]&quot;, &quot;lambda[1]&quot;, &quot;lambda[2]&quot;) # samplesSet(parameters) # # # Generate 10000 iterations # modelUpdate(10000) #### PUT THE SAMPLED VALUES IN ONE R DATA FRAME: # chain &lt;- data.frame(P.excess1 = samplesSample(&quot;P.excess[1]&quot;), # P.excess2 = samplesSample(&quot;P.excess[2]&quot;), # lambda1 = samplesSample(&quot;lambda[1]&quot;), # lambda2 = samplesSample(&quot;lambda[2]&quot;)) Simulated &lt;- coda::as.mcmc(post.jags) #### PUT THE SAMPLED VALUES IN ONE R DATA FRAME: ggSample &lt;- ggmcmc::ggs(Simulated) Lambda1 &lt;- ggSample %&gt;% filter(Parameter == &quot;lambda[1]&quot;) Lambda2 &lt;- ggSample %&gt;% filter(Parameter == &quot;lambda[2]&quot;) boxplot(Lambda1$value,Lambda2$value, col = &quot;green&quot;, ylab = &quot;lambda&quot;, outline=FALSE, main = &quot;boxplot: lambda&quot;, ylim = c(0,4), names = c(&quot;1&quot;, &quot;2&quot;)) abline(h = 1.5) 圖 97.7: Box plots of relative risk (lambda) of leukaemia under different priors (vague = 1, informative = 2). 圖 97.7的箱式圖也告訴我們，相對危險度的事後概率分布在有信息的先驗概率分布條件下要精確得多，其標準差sd[2] = 0.17也要小得多 sd[1] = 0.78。所以，此時，先驗概率分布對我們的事後概率分布推斷產生了較大的影響，有信息的先驗概率分布把相對危險度的估計值更加拉近了1的同時(more realistic)，也使得相對危險度的事後概率估計變得更加精確。 接下來，假設我們在該區域進行了更長時間的觀察，收集到100個新的白血病病例，同時在這段時間內病例的期望值只有56例。據此，重新改寫這個模型，在兩種先驗概率分布條件下，此時由於觀察數據信息量的增加，相對危險度的事後估計有怎樣的變化？ model { lambda[1] ~ dgamma(0.1, 0.1) # vague prior distribution lambda[2] ~ dgamma(48, 40) # informative prior distribution y[1] ~ dpois(mu[1]) # sampling distribution mu[1] &lt;- lambda[1] * 56 # the expectation changed from 2.8 to 56 # repeat for second model y[2] ~ dpois(mu[2]) # sampling distribution mu[2] &lt;- lambda[2] * 56 # the expectation changed from 2.8 to 56 # Is relative risk &gt; 1 P.excess[1] &lt;- step(lambda[1] - 1) P.excess[2] &lt;- step(lambda[2] - 1) # data # y[1] &lt;- 100 # the observed new cases changed from 5 to 100 # y[2] &lt;- 100 # replicate data to fit both models together } # Codes for R2JAGS Dat &lt;- list( y = c(100, 100) # the observed new cases changed from 5 to 100 ) # fit use R2jags package post.jags &lt;- jags( data = Dat, parameters.to.save = c(&quot;P.excess[1]&quot;, &quot;P.excess[2]&quot;, &quot;lambda[1]&quot;, &quot;lambda[2]&quot;), n.iter = 10100, model.file = paste(bugpath, &quot;/backupfiles/disease-modelupdated.txt&quot;, sep = &quot;&quot;), n.chains = 1, n.thin = 1, n.burnin = 100, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 2 ## Unobserved stochastic nodes: 2 ## Total graph size: 15 ## ## Initializing model print(post.jags) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/disease-modelupdated.txt&quot;, fit using jags, ## 1 chains, each with 10100 iterations (first 100 discarded) ## n.sims = 10000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% ## P.excess[1] 1.000 0.000 1.000 1.000 1.000 1.000 1.000 ## P.excess[2] 1.000 0.000 1.000 1.000 1.000 1.000 1.000 ## lambda[1] 1.785 0.180 1.452 1.660 1.778 1.905 2.153 ## lambda[2] 1.544 0.128 1.304 1.457 1.540 1.628 1.804 ## deviance 16.606 2.821 13.110 14.480 16.027 18.002 23.628 ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 4.0 and DIC = 20.6 ## DIC is an estimate of expected predictive error (lower deviance is better). # OpenBUGS codes: # # Step 1 check model # modelCheck(paste(bugpath, &quot;/backupfiles/disease-modelupdated.txt&quot;, sep = &quot;&quot;)) # # # compile the model # modelCompile(numChains = 1) # # There is no need to provide initial values as # # they are aleady provided in the model specification # modelGenInits() # # # Set monitors on nodes of interest#### SPECIFY, WHICH PARAMETERS TO TRACE: # parameters &lt;- c(&quot;P.excess[1]&quot;, &quot;P.excess[2]&quot;, &quot;lambda[1]&quot;, &quot;lambda[2]&quot;) # samplesSet(parameters) # # # Generate 10000 iterations # modelUpdate(10000) # #### SHOW POSTERIOR STATISTICS # sample.statistics &lt;- samplesStats(&quot;*&quot;) # print(sample.statistics) 有了更多的觀察數據的模型，我們看到，相對危險度的事後估計lambda[1], lambda[2]都變得更加精確了，有了更小的標準差。這和我們的預期相同，因爲觀察數據增加自然會提高相對危險度估計的精確度。可是，我們發現在沒有信息的先驗概率分布條件下，相對危險度的事後估計幾乎沒有太大的變化(1.783 v.s. 1.770)。相反地，有信息的先驗概率分布條件下，相對危險度的事後估計比之前增加了不少(1.540 v.s. 1.238)。這主要是因爲，現在我們得到更多的觀察數據，這些數據得到的信息被給予了更多的權重，且觀察數據提示相對危險度應該要比較大(100/56 = 1.786)。 盡管觀察數據確實給模型提供了較多的有價值的信息，你會發現，我們使用的第二個先驗概率分布（也就是有信息的先驗概率分布）仍然對相對危險度的事後估計起到了相當的影響(the prior variance is 0.03, giving prior sd of 0.17)。這也是因爲這個先驗概率分布給出的信息量，幾乎相當於觀察數據給出的信息量（二者的標準差很接近）。另外一種理解此現象的方法是看事後概率分布推導出的新的伽馬分布的計算式： \\[ \\begin{aligned} p(\\lambda | y, E) &amp; \\propto p(\\lambda) p (y | \\lambda, E) \\\\ &amp; \\propto \\frac{b^a}{\\Gamma(a)}\\lambda^{a-1}e^{-b\\lambda} \\frac{(\\lambda E)^ye^{-\\lambda E}}{y!} \\\\ &amp; \\propto \\lambda^{a + y -1}e^{-(b+E)\\lambda} \\\\ &amp; = \\text{Gamma}(a + y, b + E) \\end{aligned} \\] 由於事後伽馬分布的方差（標準差）主要由第二個參數\\((b + E)\\)決定，從上面的公式推導我們可以看見，事後伽馬分布的第二個參數\\((b + E)\\)，分別是先驗概率分布的第二個參數\\((b = 40)\\)，和觀察數據的期望值\\((E = 56)\\)。由於這兩個數值大小接近，所以我們也可以理解此時先驗概率提供的信息和我們觀察數據提供的信息旗鼓相當。另外，在這個新的觀察數據條件下，我們無論使用哪個先驗概率分布做條件，都獲得了100%的結果也就是這個特定區域的白血病發病率大於期望值的概率是100%。也就是我們此時有100%的把握認爲這個特定區域的白血病發病率較高。 #### PUT THE SAMPLED VALUES IN ONE R DATA FRAME: # chain &lt;- data.frame(P.excess1 = samplesSample(&quot;P.excess[1]&quot;), # P.excess2 = samplesSample(&quot;P.excess[2]&quot;), # lambda1 = samplesSample(&quot;lambda[1]&quot;), # lambda2 = samplesSample(&quot;lambda[2]&quot;)) Simulated &lt;- coda::as.mcmc(post.jags) #### PUT THE SAMPLED VALUES IN ONE R DATA FRAME: ggSample &lt;- ggmcmc::ggs(Simulated) Lambda1 &lt;- ggSample %&gt;% filter(Parameter == &quot;lambda[1]&quot;) Lambda2 &lt;- ggSample %&gt;% filter(Parameter == &quot;lambda[2]&quot;) boxplot(Lambda1$value,Lambda2$value, col = &quot;green&quot;, ylab = &quot;lambda&quot;, outline=FALSE, main = &quot;boxplot: lambda&quot;, ylim = c(0,4), names = c(&quot;1&quot;, &quot;2&quot;)) abline(h = 1.66) 圖 97.8: Box plots of relative risk (lambda) of leukaemia under different priors (vague = 1, informative = 2) with more observations. D. James Bond Example. 007邦德喝了16杯馬丁尼酒，每飲一杯，都被問道那杯馬丁尼酒是被調酒師用搖的(shaken)還是用攪拌的(stired)調制的。結果在這邦德喝過的16杯馬丁尼酒中，他居然答對了13杯。（007就是流弊） 嘗試修改新藥試驗的模型代碼，用均一分布作爲參數\\(\\theta\\)的先驗概率分布，你是否能進行一個貝葉斯分析來回答這個問題：“邦德能夠正確區分一杯馬丁尼酒的調制方法的概率是多少？” 那如果把這個問題稍微改變一下，“邦德能夠區分馬丁尼酒的調制方法的概率是多少？(what is the probability that James Bond has at least some ability to tell the difference between shaken and stirred martinis?i.e. better than guessing)”你能回答嗎？ 假定這樣一個場景，你和另外三個朋友在酒吧遇見了邦德，你們每個人都說要和邦德玩品酒的遊戲，如果邦德能準確分辨出馬丁尼酒的調制方法，你們就付那一杯酒錢，如果邦德答錯了，那他要把酒錢付給你們。在這樣的場景下，已知邦德能分辨16杯馬丁尼酒中的13杯，你們４人有多大的概率能把酒錢都賺回來？ # Bond example - model code model{ theta ~ dunif(0, 1) # prior distribution y ~ dbin(theta,16) # sampling distribution P.ability &lt;- step(theta - 0.5) # = 1 if theta &gt; 0.5 (i.e. if better than guessing) y.pred ~ dbin(theta,4) # predictive distribution for 4 new taste tests P.Moneyback &lt;- step(0.5 - y.pred) # =1 if y.pred &lt;= 0.5, 0 otherwise #P.Moneyback &lt;- equals(y.pred, 0) # alternative way of calculating predictive prob of 0 correct taste tests # data # y &lt;- 13 # observed number of correct taste tests in original experiment } # Codes for R2JAGS Dat &lt;- list( y = c(13) # Bond had 13 correct taste tests ) # fit use R2jags package post.jags &lt;- jags( data = Dat, parameters.to.save = c(&quot;P.ability&quot;, &quot;P.Moneyback&quot;, &quot;theta&quot;, &quot;y.pred&quot;), n.iter = 100100, model.file = paste(bugpath, &quot;/backupfiles/bondmodel.txt&quot;, sep = &quot;&quot;), n.chains = 1, n.thin = 1, n.burnin = 100, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 1 ## Unobserved stochastic nodes: 2 ## Total graph size: 12 ## ## Initializing model print(post.jags) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/bondmodel.txt&quot;, fit using jags, ## 1 chains, each with 100100 iterations (first 100 discarded) ## n.sims = 100000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% ## P.Moneyback 0.006 0.077 0.000 0.000 0.000 0.000 0.000 ## P.ability 0.994 0.076 1.000 1.000 1.000 1.000 1.000 ## theta 0.778 0.095 0.568 0.718 0.788 0.849 0.932 ## y.pred 3.110 0.896 1.000 3.000 3.000 4.000 4.000 ## deviance 3.721 1.315 2.788 2.882 3.215 4.024 7.437 ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 0.9 and DIC = 4.6 ## DIC is an estimate of expected predictive error (lower deviance is better). # # Step 1 check model # modelCheck(paste(bugpath, &quot;/backupfiles/bondmodel.txt&quot;, sep = &quot;&quot;)) # # # compile the model # modelCompile(numChains = 1) # # There is no need to provide initial values as # # they are aleady provided in the model specification # modelGenInits() # # # Set monitors on nodes of interest#### SPECIFY, WHICH PARAMETERS TO TRACE: # parameters &lt;- c(&quot;P.ability&quot;, &quot;P.Moneyback&quot;, &quot;theta&quot;, &quot;y.pred&quot;) # samplesSet(parameters) # # # Generate 100000 iterations # modelUpdate(100000) # #### SHOW POSTERIOR STATISTICS # sample.statistics &lt;- samplesStats(&quot;*&quot;) # print(sample.statistics) 第一個問題，可以用 theta 的事後概率分布來回答，十萬次MC計算的結果顯示，邦德能夠準確分辨馬丁尼酒的調制方法的概率是0.78，且這個事後概率分布的95%可信區間是(0.57, 0.93)。 第二個問題，邦德擁有能準確分辨馬丁尼酒調制方法的能力(不是猜的)的概率是 P.ability = 0.994。如果邦德只是瞎猜，那麼 theta 就只能等於或者十分接近0.5。所以我們相信邦德有這樣一種分辨能力的概率是99.3%。 你和４名好友在酒吧能從邦德身上把4被馬丁尼酒錢賺回來的概率，也就等價於邦德在這四次猜酒的結果上都給出了錯誤的答案，四次全錯的概率，就是 P.Moneyback = 0.006。模型代碼中 y.pred 用來預測邦德在接下來４次猜酒遊戲中給出的答案是 0還是 1(四次都對的話和爲4)。結果顯示 y.pred 的均值達到了3.11，４次全錯的概率是驚人的0.006。 "],["MCMC-methods.html", "第 98 章 馬爾可夫鏈蒙特卡羅MCMC，圖形模型，BUGS語言 98.1 Markov Chain Monte Carlo 馬爾可夫鏈蒙特卡羅算法 98.2 使用 MCMC 時需要考慮的一些問題 98.3 BUGS 軟件 98.4 圖形模型 statistical graphical models - Directed Acyclic Graphs (DAGs) 98.5 BUGS language 98.6 爲BUGS model模型準備格式正確的數據 98.7 Practical Bayesian Statistics 04", " 第 98 章 馬爾可夫鏈蒙特卡羅MCMC，圖形模型，BUGS語言 98.1 Markov Chain Monte Carlo 馬爾可夫鏈蒙特卡羅算法 98.1.1 爲什麼我們需要用計算機模擬算法(simulation methods)來進行貝葉斯統計推斷？ 貝葉斯統計推斷是圍繞着事後概率分佈進行的: \\[ p(\\mathbf{\\theta}|x) \\propto p(x|\\mathbf{\\theta})\\times p(\\mathbf{\\theta}) \\] 其中，\\(\\mathbf{\\theta}\\) 常常是一個很長的參數向量(vector of parameters) \\(\\mathbf{\\theta} = \\{ \\theta_1, \\theta_2, \\dots, \\theta_k \\}\\)，其中似然\\(p(x|\\mathbf{\\theta})\\)和先驗概率分佈\\(p(\\mathbf{\\theta})\\)一般都能找到相應的計算式，或者叫做閉合解形式(closed form)。可惜事後概率分佈 \\(p(\\mathbf{\\theta}|x)\\)就沒有這麼幸運，你會常常碰見無法在數學上獲得解析解的情況(analytically untractable)。 此時，我們又希望能夠獲得 某個或者某些參數的事後概率分布 \\(p(\\theta_i | x) = \\int\\int\\dots\\int p(\\mathbf{\\theta}|x)d\\mathbf{\\theta_{(-i)}}\\) (where \\(\\mathbf{\\theta_{(-i)}}\\) denotes the vector of \\(\\theta\\)s excluding \\(\\theta_i\\))。 計算某個或者某些參數的事後概率分布的數學性質，特徵值如均值 \\(= \\int\\theta_i p(\\theta_i | x)d\\theta_i\\)，或者尾部的概率面積(tail areas) \\(=\\int_T^\\infty p(\\theta_i |x)d\\theta_i\\)等等。 我們無法獲得解析解 (analytical solution/closed solution) 的情況下，可以求助於數學上的數值解 (numerical solution/intergration)。 第二章 (Chapter 96) 我們已經見識過了蒙特卡羅模擬法可以用來從先驗概率分布，或者從閉合解形式(closed form)的事後概率分布中採樣計算的過程。如果我們可以把人類不可能完成的任務，也交給計算機來對無法獲取閉合解的事後概率分布做蒙特卡羅樣本採集的話，那麼貝葉斯統計學推斷就可以被推廣到幾乎任何一種模型，任何一種試驗設計中。 所以，我們的目的是希望從無法獲得閉合解形式的多維(多變量)事後概率分布\\(p(\\mathbf{\\theta}|x)\\)中採集樣本做計算機模擬實驗(simulation)。但是，現實中從這樣的事後概率分布中採集相互獨立(independent)的樣本，是不容易的一件事。反其道行之，科學家發現，從事後概率分布有依賴性的馬爾可夫鏈式樣本採集(dependent sampling from a Markov chain)，作爲一種穩態分布(stationary/equilibrium distribution)卻相對容易。 一連串的隨機變量 \\(\\theta^{(0)},\\theta^{(1)},\\theta^{(2)},\\cdots\\) 形成的馬爾可夫鏈，其重點在於 \\(\\theta^{(i + 1)} \\sim p(\\theta|\\theta^{(i)}\\)，也就是在 \\(\\theta^{(i)}\\) 的條件下 \\(\\theta^{(i+1)}\\) 和它之前的樣本 \\(\\theta^{(i - 1)},\\cdots,\\theta^{(0)}\\)是獨立的。這樣的馬爾科夫鏈式採樣，需要特殊的方法來進行。美特羅波利斯-海斯廷斯(Metroplis-Hastings)算法(algorithm)是其中的一種。而吉布斯(Gibbs)採樣法是 Metropolis-Hastings 算法的一種特殊形態。吉布斯採樣法是從全條件分布(full conditional distributions)中產生一串馬爾科夫鏈的算法。我們下面來看看吉布斯採樣法的特徵和使用方法，其詳細的算法我們過後再來討論。 98.1.2 吉布斯採樣 假設，現在我們在給定了數據 \\(x\\) 之後，我們需要在關於它的一個未知參數的向量中\\(\\mathbf{\\theta} = (\\theta_1, \\theta_2, \\dots,\\theta_k)\\)採集事後概率分布樣本。那麼吉布斯採樣法的具體過程描述如下： 把未知參數向量分成不同的成分，最簡單的就是每個元素爲一個部分 \\(\\mathbf{\\theta} = (\\theta_1, \\theta_2, \\dots,\\theta_k)\\)； 給每個部分/參數選取一個起始值(starting/initial values) \\(\\theta_1^{(0)},\\theta_2^{(0)},\\dots,\\theta_k^{(0)}\\)； 然後:從\\(p(\\theta_1|\\theta_2^{(0)},\\theta_3^{(0)},\\dots,\\theta_k^{(0)},x)\\)中採集 \\(\\theta_1^{(1)}\\)從\\(p(\\theta_2|\\theta_1^{(1)},\\theta_3^{(0)},\\dots,\\theta_k^{(0)},x)\\)中採集\\(\\theta_2^{(1)}\\)\\(\\vdots\\)從\\(p(\\theta_k|\\theta_1^{(1)},\\theta_2^{(1)},\\dots,\\theta_{k-1}^{(0)},x)\\)中採集\\(\\theta_k^{(1)}\\) 重復第3步 \\(N\\) 次，我們就可以獲得一串參數的事後分布樣本 \\(\\mathbf{\\theta}^{(0)},\\mathbf{\\theta}^{(1)},\\dots,\\mathbf{\\theta}^{(N)}\\)。當 \\(N\\rightarrow\\infty\\) 我們就獲得了多維事後概率分布的一個樣本 \\(p(\\mathbf{\\theta}|x)\\)。 用只有兩個位置參數的向量來解釋就是：\\(k = 2, \\text{ i.e. } \\mathbf{\\theta} = (\\theta_1, \\theta_2)\\)。下圖 98.1 展示了對兩個未知參數進行吉布斯採樣的一個過程：當我們先設定一組起始值 \\(\\mathbf{\\theta}^{(0)}\\)，之後從\\(p(\\theta_1|\\theta_2^{(0)}, x)\\)中採集\\(\\theta_1^{(1)}\\)，然後再從 \\(p(\\theta_2|\\theta_1^{(1)}, x)\\)中採集\\(\\theta_2^{(1)}\\)，這樣就獲得了樣本 \\(\\mathbf{\\theta}^{(1)}\\)。然後再重復相同搞得過程採集接下來的參數樣本。 圖 98.1: Gibbs sampling with k = 2. 利用馬爾科夫鏈的性質，可以被證明的是當採樣達到無窮大 \\(N\\rightarrow\\infty\\)，無論起始樣本 \\((\\theta_1^{(0)},\\theta_2^{(0)},\\dots,\\theta_k^{(0)})\\) 如何採樣，最終產生的事後概率樣本 \\(\\mathbf{\\theta}^{(0)},\\mathbf{\\theta}^{(1)},\\dots,\\mathbf{\\theta}^{(N)}\\) 將會收斂成爲真實的事後概率分布 \\(p(\\mathbf{\\theta}|y)\\)，所以確保了重復這個過程的次數是無窮大時，起初的一部分采样，\\(N_0\\)可作爲初始樣本，並且因爲通常一開始的採樣過程是不穩定的，而把他們從總體事後概率分布樣本中刨除，這個過程被叫做 burn in。最終可獲得樣本量爲 \\(N-N_0\\) 的事後概率分布樣本。 我们需要指出的是，這一採集事後概率分布樣本的方法之所以有用，是因爲條件事後概率分布(conditional posterior sampling)的採集，要比全事後概率分布(full posterior sampling)的採集要容易得多。否則，我們爲啥不直接從全事後概率分布中採樣呢。 簡單地說，比如我們需要同時對正態分布數據似然的均值，和方差兩個未知參數進行事後概率分布樣本的採集，兩個未知參數的事後概率分布需要用到復雜的微積分推導過程，但是我們知道已知均值時方差的事後概率分布，或者是已知方差時均值的事後概率分布，它們都比兩個未知參數時的計算和推導要簡單明了得多。 接下來我們來討論一下使用MCMC在貝葉斯統計學推斷中的實際應用和一些技巧。 98.1.3 初始值 initial values MCMC過程需要對所有的未知參數先給出起始值(initial/starting values)。我們在使用BUGS進行貝葉斯統計學推斷時，可以利用先驗概率分布對各個未知參數隨機產生各自的起始值，但是這要建立在先驗概率分布是含有有價值的信息的前提下(informative priors)，如果我們只有一些聊勝於無的先驗概率分布(vague priors)，隨機從這樣的分布中產生起始值的話，很可能導致計算機選取很不恰當的起始值使得模型需要花很長的時間才能收斂，有些時候甚至導致計算機崩潰。這時候，統計學家的經驗是我們最好人爲地給模型中的未知參數設定幾個”合理”的起始值(separate reasonable initial values lists)，以防止不收斂或者計算機崩潰的情況出現。同時，我們也發現用戶如果給模型提供合理的起始值，也有助於鑑別模型收斂(convergence checking)。 在 BUGS 語言中，起始值可以直接寫在模型中，也可以寫在另外一個獨立的文件裏。需要明確指出的是，這些起始值是用來輔助 MCMC 採樣的，起始值並不是先验概率(initial values are not priors)。 98.2 使用 MCMC 時需要考慮的一些問題 在使用 MCMC 時有兩個主要的問題需要我們思考： 收斂時間：MCMC採集的樣本 \\(\\{\\mathbf{\\theta}^{(t)}\\}\\)，需要多久時間能夠到達或者接近事後概率分布 \\(p(\\mathbf{\\theta}|x)\\)。 效率：從採集的樣本 \\(\\mathbf{\\theta}^{(t)}\\) 中估計的參數是否在事後概率分布 \\(p(\\mathbf{\\theta}|x)\\) 中真的有效 (how well are functionals of \\(p(\\mathbf{\\theta}|x)\\) estimated from \\(\\{\\mathbf{\\theta}^{(t)}\\}\\))。 98.2.1 收斂時間 收斂時間，是我們關心的最主要的問題之一，我們在進行 MCMC 時要花多長時間才能使採集的樣本達到或者接近(數學上叫做收斂)真是的事後概率分布呢？換句話說，我們需要從採集的樣本中刨除掉多少一開始採集的不穩定的樣本呢(how do we know the number of “burn-in” iterations)？可以說沒有人能準確地給出一個答案。所以在檢查MCMC採樣是否收斂時，我們需要格外的小心。很多時候，沒有人能夠給出100%確定的答案說一條MCMC鏈達到了收斂，但是幸運地是，我們能準確地判斷沒有成功收斂的 MCMC 鏈。 檢查MCMC是否收斂，最常用的方法是視覺檢查，作出MCMC鏈式圖來輔助我們診斷。我們建議，使用多個不同的起始值，產生多個不同的 MCMC 樣本鏈來輔助診斷。當然，除了視覺診斷，另外還存在一些比較鏈內(within)和鏈間(between)方差的方法來進行收斂診斷的手段。但是，沒有哪種方法是萬無一失的。在 R 裏面，有一個很強大的包 coda，它被設計來把OpenBUGS的輸出結果 (output) 轉變成爲輸入對象 (input object)，利用R來便利地進行模型分析和診斷。許多對模型收斂程度的診斷，都會認爲未知參數的起始值是相對事後概率分布來說過度離散的。所以，建議在提供起始值的時候，每一個未知參數的起始值，都盡量爲每一個MCMC鏈給出幾個“合理”但差異較大(plausible but widely differing initial values)的起始值。 評估MCMC的收斂與否，一個比較實用的手段是雙保險的方法: 就是既從圖形視覺上來診斷產生的MCMC樣本鏈的收斂程度，也通過統計檢驗方法對收斂作收斂與否的統計學分析。當某些模型含有衆多的未知的參數的時候，你想對每一個未知參數的事後概率分佈的MCMC採樣是否收斂進行分析和檢驗可能是不太實際的，此時的常見手段是隨機選取衆多未知參數中幾個來分析其MCMC採樣結果的收斂與否。 我們的選擇包括： 把MCMC事後概率分布採樣過程的整個歷史(history)痕跡(trace)全部繪制出來-不同起始值的同一個未知參數的MCMC鏈是否都給出了相對穩定的歷史痕跡？他們是否有合理的相互重疊(overlapping)？ 檢查自我相關程度(autocorrelation)-過高的自相關暗示收斂過程較慢。(high autocorrelation is a symtom of slow convergence)。 看Gelman-Rubin收斂統計量-它通過比較MCMC鏈內方差(within variability)和鏈間方差(between variability)來評估MCMC鏈是否達到收斂。 98.2.1.1 視覺檢驗方法 視覺檢驗方法是一種十分有效的輔助鑑別MCMC樣本鏈是否收斂的手段。常用的方法是使用幾個不同，且合理的起始值進行MCMC採樣運算，看他們是否最終都收斂到相同的位置。通常我們會把採集的 \\(\\theta^{(i)}\\) 樣本和 \\(i\\) (也就是採樣次數) 做圖，如果順利達到收斂，圖形應該顯示爲隨機出現在一條直線上下附近的散點圖。 在BUGS軟件裏，通常有兩種方法可以供用戶查看未知參數的MCMC樣本鏈的歷史痕跡(history trace)： 實時觀察MCMC樣本採集的歷史痕跡。 (只能在windows下進行，需要用到OpenBUGS的窗口) MCMC樣本採集結束以後把採集的未知參數事後樣本的歷史痕跡一次性全部繪制出來。 繪制歷史痕跡時用不同顏色來表示不同起始值的MCMC鏈會更加有助於我們在圖形上識別出MCMC鏈是否分別都達到了令人滿意的模型收斂，互相的重疊程度也能一目了然。 至於(Brooks-)Gelman-Rubin (BGR)診斷收斂統計量，它的使用前提是必須使用合理且差異較大的不同起始值（至少兩個）。 98.2.2 模型效率 efficiency of MCMC 一旦你認爲MCMC採集的樣本鏈已經達到收斂於事後概率分布。接下來要做的是繼續MCMC樣本採集，採集的事後概率分布樣本越多，事後概率推斷就越精確。通常一個表現良好的事後概率分布，我們的經驗是4000個左右的獨立樣本產生的95%可信區間能夠給出94%-96%實際的事後概率分布(actual posterior probability) (Raftery and Lewis 1992)。但是實際上MCMC採集的樣本鏈是高度自相關的(autocorrelated)，因此實際有效的樣本量會少於真實的樣本量。(effective sample size &lt; actual sample size) 計算事後概率分布對未知參數的估計的精確度的方法之一，是給每一個未知參數計算蒙特卡羅標準誤(Monte Carlo standard error)。它是對MCMC樣本參數均值和真實事後均值之間差的估計(estimate of the difference between the mean of the sampled values, which we are using as our estimate of the posterior mean for each parameter, and the true posterior mean.)。 MCSE (Monte Carlo Standard Error) 等於未知參數的事後樣本均值的標準誤。此時，事後樣本均值被當做是事後期望值的理論取值的一個估計 (an estimate of the theoretical posterior expectation) \\(E(\\theta|y)\\)。 如果採集的樣本是相互獨立的，那麼\\(\\text{MCSE}^{ind} = \\frac{s}{\\sqrt{N}}\\) 其中，\\(s = \\text{posterior SD}\\) 參數\\(\\theta\\)的事後樣本標準差，\\(N\\) 是採集的事後樣本的樣本量。但是我們真正能採集到的樣本是自相關樣本(autocorrelated samples)，自相關樣本的\\(\\text{MCSE}^{ac} &gt; \\text{MCSE}^{ind}\\)。 一個有自相關的MCMC鏈的有效樣本量 (effective sample size)\\(N^*\\)可以這樣估計： \\[ N^* = (\\frac{s}{\\text{MCSE}^{ac}})^2 \\] 所以，如果： \\(\\text{MCSE}^{ac} \\approx 0.05s \\Rightarrow N^* \\approx 1/0.05^2 = 400\\); \\(\\text{MCSE}^{ac} \\approx 0.015s \\Rightarrow N^* \\approx 1/0.015^2 = 4444\\); \\(\\text{MCSE}^{ac} \\approx 0.01s \\Rightarrow N^* \\approx 1/0.01^2 = 10000\\); 由事後樣本的標準差和蒙特卡羅標準誤之間的關系可見，基本上MCMC鏈達到收斂以後，你需要重復MCMC採樣的次數，也就是採集的事後分布樣本量的大小要使得蒙特卡羅標準誤小於事後樣本標準差的1/100才能基本滿足要求。未知參數的事後估計和總結也就是要建立在有效樣本量至少爲10000或更多的基礎之上。 98.3 BUGS 軟件 你完全可以另闢蹊徑在STATA或者R裏面寫下吉布斯採樣的算法，但是這並不簡單。幸好，許多軟件已經能夠幫助我們規避掉寫吉布斯採樣算法這一複雜的過程。 BUGS全稱是 Bayesian inference Using Gibbs Sampling。它是用來描述貝葉斯統計學模型的計算機語言。有三種流行的統計學軟件都使用BUGS語言來描述貝葉斯統計學模型，他們分別是 WinBUGS，OpenBUGS，和 JAGS。他們的語法十分接近R的語法，甚至可以直接在R的環境下運行(正如我這本書中在R裏連接JAGS運算貝葉斯統計推斷一樣)。 WinBUGS 1.4.3是一個穩定的貝葉斯統計學軟件，但是它已經不再更新，也沒有再跟進開發。也正如其名字暗示的那樣，它能且只能運行在瘟倒死(windows)機器上。你可以從它的網站上下載並免費使用之: https://www.mrc-bsu.cam.ac.uk/software/bugs/the-bugs-project-winbugs/。 OpenBUGS是開源的，且能夠在Linux機器上無縫運行。它也有自己的GUI(只有在瘟倒死上才有的功能)，讓你實現用鼠標點擊也能完成貝葉斯統計學分析。它的主要網站是http://www.openbugs.net/w/Downloads。 JAGS的全稱是 Just Another Gibbs Sampler，開發者是 Martyn Plummer。它沒有任何GUI，只能通過命令行來執行運算。 其他著名的軟件還有 Stan。它也是開源的自由軟件。 98.4 圖形模型 statistical graphical models - Directed Acyclic Graphs (DAGs) 在統計學模型中我們常常默認指定一些隨機變量之間的邏輯關系，這樣的邏輯關系可以用圖形來表示： 節點 nodes：用來表示變量(variables)； 連接線 links：用來表示變量之間的邏輯依賴關系(dependence association)。 帶方向的連接線 (directed links)被用來表示邏輯依賴關系的方向(natural ordering of the dependence association)。 其實這連接線所帶的方向本身就是回歸模型中表示預測變量和結果變量之間的依賴關系。貝葉斯統計學中常用的有向無環圖 (directed acyclic graphs, DAGs)，是我們常用的輔助建立貝葉斯模型的示意圖。 例如一個描述吸煙，肥胖和心髒病發病可能的關系的的有向無環圖如下圖 98.2。途中帶方向的連線（箭頭）表示預測變量和結果變量之間的依賴關系。 圖 98.2: DAG for heart disease example 98.4.1 條件獨立的概念 conditional independence concept 在概率論入門(Chapter 1)中學習過獨立的概念： \\[ p(Y,X) = p(Y)p(X) \\] 我們說 \\(X,Y\\) 以條件 \\(Z\\) 獨立如果他們滿足： \\[ p(X,Y|Z) = p(Y|Z)p(X|Z) \\] 條件獨立的關系可以用下面的有向無環圖 98.3 來表示： 圖 98.3: DAG for conditional independence 基因型例子 genotype example:如果 \\(X,Y\\) 分別是同一個家庭中的兩個孩子的基因型，\\(Z\\)是其父母的基因型。那麼兩個孩子之間的基因型就是以父母的基因型爲條件獨立的關系: \\(p(X,Y|Z) = p(Y|Z)p(X|Z)\\)。如果沒有父母親基因型的條件，兩個孩子的基因型就不互相獨立，而是相關的（很顯然因爲他們是親兄弟/妹）。 在有向無環圖的術語中，一個變量的Parent(父/母)指的是有向連線指向該變量的最近的那個變量，反過來這個被指向的變量就被叫做Child(子)。所以如果從變量 \\(\\alpha\\) 存在指向 \\(\\beta\\) 的箭頭連線，那麼 \\(\\alpha\\) 被叫做 \\(\\beta\\) 的父/母(parent)，\\(\\beta\\) 被叫做 \\(\\alpha\\) 的子(child)。 硬幣例子 coin example:如果一枚硬幣正面朝上或者反面朝上的概率分別是 \\(p(H), p(T)\\)，那麼令 \\(p(H) = \\theta = 1 - p(T)\\)，如果兩次投擲硬幣試驗的結果分別是 \\(X, Y\\)，那麼 \\(X,Y\\) 就是以 \\(\\theta\\) 爲條件的獨立事件: \\(p(X,Y|\\theta) = p(Y|\\theta)p(X|\\theta)\\)。這裏的 \\(\\theta\\) 在貝葉斯統計學的環境下不是固定不變的，而是一個隨機的未知參數。 條件獨立是一個十分重要的概念，因爲它爲\\(X,Y,Z\\)三個未知參數的聯合分布(joint distribution)提供了十分有用的因式分解理論依據： \\[ p(X,Y,Z) = p(Y|Z)p(X|Z)p(Z) \\] 因爲，即使使用計算機進行模擬實驗 (simulation)，從條件分布\\(p(Y|Z), p(X|Z)\\)中採集事後概率分布樣本，也比從 \\(p(X,Y,Z)\\) 中直接採集樣本要容易進行得多。 一般地，一個含有許多個變量節點(nodes)的向量的聯合分布可以寫作： \\[ p(V) = \\prod_{v\\in V} p(v|\\text{parents}[v]) \\] 下圖98.4給出的一個較爲復雜的 DAG 模型，其實它沒有看起來那麼復雜，有了條件獨立的概念，我們可以方便地把它的聯合分布進行因式分解： \\[ p(V) = p(A)p(F)p(B|A)p(C|A)p(E|A,F)p(D|B,C) \\] 圖 98.4: More complex DAG for conditional independence BUGS軟件也是利用這一概念來進行復雜的事後概率分布模型的計算，例如上述的模型中， \\[ p(E|A,B,C,D,F) = p(E|A,F) \\] 98.5 BUGS language 在 BUGS 軟件提供的手冊裏有對 BUGS 語言更加詳盡的介紹，這裏我們只是對其精要部分做簡單概括的介紹。 98.5.1 節點的種類 types of nodes 在 BUGS 環境下，每個變量或者參數都被叫做一個節點。它主要被分爲兩類： 隨機節點 (stochastic nodes)：需要我們給出它們分布的描述。一個波浪線 ~ 被用來幫助我們描述這些隨機節點的分布，例如 r ~ dunif(a, b) 的含義就是，在區間 \\([a,b]\\) 內，\\(r\\)服從均一分布。 邏輯節點 (logical nodes)：則表示的是對節點和節點之間關系的定義，它常常是一個方程，用 &lt;- 來輔助定義。例如，m &lt;- alpha + beta*x 定義的是 \\(m\\) 和 \\(\\alpha, \\beta, x\\) 節點之間的數學關系。 98.5.2 分布的標記法 BUGS語言中常用的分布和其對應的標記法歸納如下: Expression Distribution Usage dbin binomial r ~ dbin(p,n) dnorm normal x ~ dnorm(mu, tau) dpois Poisson r ~ dpois(lambda) dunif uniform x ~ dunif(a, b) dgamma gamma x ~ dgamma(a, b) 要注意的是，這裏的正態分布的參數是均值 mu，和精確度 precision tau: \\[ \\text{precision} = \\frac{1}{\\text{variance}} = \\frac{1}{sd^2} \\] 另外，在 BUGS 語言中，我們無法在指定分布時給參數使用方程，這種時候必須做的是分步驟來寫模型： y ~ dnorm(mu, tau); mu &lt;- a + b*x 不能被寫作： y ~ dnorm(a+b*x, tau) 98.5.3 Arrays and loops 當有些模型需要有重復執行的步驟的時候，可以使用排列 (arrays) 或者循環 (loops) 的方式來寫你的BUGS模型。例如下面的代碼用來表示在長度或者人數爲 \\(m\\) 的數據中循環相同的步驟，其中n, p, r都是具有相同長度的向量： for (i in 1:m){ # loop over m individuals r[i] ~ dbin(p[i], n[i]) p[i] ~ dunif(0, 1) } 所有被包括在大括號 {} 裏面的命令都跟着變量 i 被從 1 開始重復相同的步驟直至第 m 個對象。 98.5.4 常用的方程 BUGS 建立貝葉斯模型你會常用到的方程有： p &lt;- step(x - 0.7): 當 \\(x\\geqslant0.7\\)時\\(=1\\)，反之 \\(=0\\)；類似這樣的方程可以拿來監測 p 這個節點，如果取它的均值，我們就得到 \\(x\\geqslant0.7\\) 的概率。 p &lt;- equals(x, 0.7): 當 \\(x = 0.7\\)時\\(=1\\)，反之 \\(=0\\)。 tau &lt;- 1/pow(s, 2): 這是用來給變量節點 s 加指數方程的命令等價於 \\(\\tau = \\frac{1}{s^2}\\)。 s &lt;- 1/sqrt(tau): 等價於 \\(s = \\frac{1}{\\sqrt{\\tau}}\\)。 在BUGS手冊的 “Model Specification/Logical nodes” 章節有更多對不同方程命令的描述。 一般地，方程的定義要出現在 &lt;- 的右邊，例如 totalx &lt;- sum(x[])，但是並不是全部都必須如此的，例如在廣義線性回歸模型(GLM)中，鏈接方程 (link function) 是允許出現在箭頭的左邊的： logit(p[i]) &lt;- a +b*x[i] log(m[i]) &lt;- c + d*y[i] mean(p[])的含義是對 p 的所有成分取均值，如果是 mean(p[m:n])，則是對數列 p 中成分排序在 m,n 之間取均值，忽略掉其前後的元素。相似的概念也適用於 sum(p[]) 命令。 98.6 爲BUGS model模型準備格式正確的數據 OpenBUGS/JAGS 只能接受格式爲 R/S-plus 的，或者是整理成形狀爲長方形的文字格式數據。例如，名叫GREAT的臨牀試驗數據中， 在家中接受治療的患者人數是163，其中13例死亡； 在醫院內接受治療的患者人數是148，其中23例死亡。 這個模型可以用循環寫作： for(i in 1:2){ # loop through the arms deaths[i] ~ dbin(p[i], n[i]) # likelihood for each arm p[i] ~ dbeta(alpha, beta) # same prior for each arm } 這個模型的標記中， deaths[i] 表示第 \\(i\\) 組對象中死亡人數，n[i] 則表示第 \\(i\\) 組實驗對象中的總人數。而 p[i] 則代表了第 \\(i\\) 組對象中實驗對象死亡的概率。 那麼這個數據應該用怎樣的語言來描述才合理呢？ 如果用長方形格式數據，要寫作： n[] deaths[] 163 13 148 23 END 這種格式中，第一行需要給出變量名稱，每一列是變量相對應的數據，變量名稱也必須和模型中的變量名稱相匹配。在數據最後一行則需要用END來結束，並且接着要有一個空行。（所以在這樣的數據格式中最後一行必須是空行） R/S-plus格式的數據，我們已經很熟悉了，可以寫作： list(n = c(163, 148), deaths = c(13, 23)) OpenBUGS同時還允許你給模型加載多個數據文件，你如果願意的話，可以把不同格式的數據混合使用，一起加載在模型裏運算。 98.7 Practical Bayesian Statistics 04 這一次練習題的主要目的是，通過使用OpenBUGS/JAGS來思考，它是如何從非共軛模型的事後概率分布中採集MCMC樣本的。這個過程和從共軛模型的事後概率分布中採樣有哪些不同。 思考前一次，第三章的課後練習題裏的(Chapter 97.6)新藥試驗的例子。還是用這個場景，但是我們這次實施8個不同的試驗，\\(i = 1,\\dots,8\\)，其中第\\(i\\)次試驗有 \\(n_i\\) 名患者，其中 \\(y_i\\) 名患者的治療被認爲有顯著療效。每次試驗中的 \\(n_i\\) 名患者都給予相同劑量\\(x_i\\)，但是不同於其他次試驗時的使用劑量的藥物。此時我們把注意力轉到，評估治療有效百分比 \\(\\theta_i\\)，和劑量\\(x_i\\)之間的關系上來。 一種方法是，我們可以對這個數據擬合一個邏輯回歸模型，在貝葉斯統計學中，邏輯回歸模型的擬合方式如下： \\[ \\begin{aligned} y_i &amp; \\sim \\text{Binomial}(\\theta_i, n_i) \\\\ \\text{logit}(\\theta_i) &amp; = \\beta_0 + \\beta_1 x_i \\end{aligned} \\] 其中 \\(\\text{logit}\\) 轉換是方便地把 \\(0\\sim1\\) 之間的百分比變量轉化成爲 \\(-\\infty, +\\infty\\) 變量的鏈接方程。另外，貝葉斯統計學模型中，我們需要給所有模型中出現的未知參數，提供一個先驗概率分布。在上面這個模型中，我們給有效百分比 \\(\\theta_i\\) 定義了一個回歸方程式，因此，我們需要給這個回歸方程式的回歸系數(regression coefficients)指定先驗概率分布。我們先使用模糊的，沒有太多信息的先驗概率分布，例如均一分布： \\[ \\begin{aligned} \\beta_0 &amp; \\sim \\text{Uniform}(-100, 100)\\\\ \\beta_1 &amp; \\sim \\text{Uniform}(-100, 100) \\end{aligned} \\] 1.首先，用第三章練習題中的新藥試驗模型，使用 \\(\\text{beta}(1, 1)\\) 作爲 \\(\\theta\\)的先驗概率分布（已知\\(\\text{beta}(1, 1)\\)其實等價於一個均一分布）。設定監測未知參數 theta，執行1000次MCMC運算之後，繪制 theta 的歷史痕跡。下列模型代碼保存爲 MCdrugPractical04.txt 文檔。 # original conjugate drug model with uniform beta(0,1) prior on theta model{ theta ~ dbeta(1,1) # prior distribution y ~ dbin(theta, 20)# sampling distribution for 20 observed patients #y &lt;- 15 } # Codes for R2JAGS Dat &lt;- list( y = c(15) ) # fit use R2jags package post.jags &lt;- jags( data = Dat, parameters.to.save = c(&quot;theta&quot;), n.iter = 1100, model.file = paste(bugpath, &quot;/backupfiles/MCdrugPractical04.txt&quot;, sep = &quot;&quot;), n.chains = 1, n.thin = 1, n.burnin = 100, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 1 ## Unobserved stochastic nodes: 1 ## Total graph size: 4 ## ## Initializing model print(post.jags) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/MCdrugPractical04.txt&quot;, fit using jags, ## 1 chains, each with 1100 iterations (first 100 discarded) ## n.sims = 1000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% ## theta 0.725 0.094 0.536 0.662 0.734 0.793 0.885 ## deviance 4.158 1.281 3.197 3.294 3.709 4.473 7.802 ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 0.8 and DIC = 5.0 ## DIC is an estimate of expected predictive error (lower deviance is better). 下面我們來看題幹中的邏輯回歸模型的BUGS版本： model { for( i in 1 : N ) { # loop thorugh experiments y[i] ~ dbin(theta[i],n[i]) logit(theta[i]) &lt;- beta0 + beta1 * x[i] } # priors beta0 ~ dunif(-100, 100) beta1 ~ dunif(-100, 100) } 試驗獲得觀察數據如下： list(y = c(1, 3, 6, 8, 11, 15, 17, 19), n = c(20, 20, 20, 20, 20, 20, 20, 20), x = c(30, 32, 34, 36, 38, 40, 42, 44), N = 8 ) 嘗試使用JAGS/OpenBUGS來跑這個模型。記得你需要把數據加載到軟件裏面去。 # Codes for R2JAGS Dat &lt;- list( y = c(1, 3, 6, 8, 11, 15, 17, 19), n = c(20, 20, 20, 20, 20, 20, 20, 20), x = c(30, 32, 34, 36, 38, 40, 42, 44), N = 8 ) # fit use R2jags package post.jags &lt;- jags( data = Dat, parameters.to.save = c(&quot;beta0&quot;, &quot;beta1&quot;, &quot;theta[6]&quot;), n.iter = 1100, model.file = paste(bugpath, &quot;/backupfiles/logistic-reg-model.txt&quot;, sep = &quot;&quot;), n.chains = 1, n.thin = 1, n.burnin = 100, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 8 ## Unobserved stochastic nodes: 2 ## Total graph size: 53 ## ## Initializing model print(post.jags) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/logistic-reg-model.txt&quot;, fit using jags, ## 1 chains, each with 1100 iterations (first 100 discarded) ## n.sims = 1000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% ## beta0 -11.304 1.716 -14.542 -12.657 -11.225 -9.850 -8.262 ## beta1 0.306 0.046 0.224 0.267 0.303 0.341 0.396 ## theta[6] 0.715 0.049 0.617 0.683 0.717 0.749 0.805 ## deviance 26.937 2.666 23.793 24.816 26.298 28.385 33.116 ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 3.6 and DIC = 30.5 ## DIC is an estimate of expected predictive error (lower deviance is better). 對未知參數，也就是邏輯回歸的回歸系數 beta0, beta1，和第六次試驗的治療成功百分比 theta[6] 設定監測追蹤其採樣軌跡。試着執行1000次MCMC採樣，把這三個跟蹤的未知參數的採樣歷史軌跡繪制下來。 #### PLOT THE MCMC CHAINS: mcmcplots::traplot(post.jags, c(&quot;beta0&quot;, &quot;beta1&quot;, &quot;theta[6]&quot;)) 圖 98.5: History plot showing 1000 samples of beta0 對這三個位置變量的採樣歷史繪制痕跡圖之後，你發現每個參數期初的一些採樣是十分不穩定的，有很大的變動(variability)。 接下來，我們給上面同一個邏輯回歸模型增加另一條MCMC採樣鏈，重復跑相同的模型1000次，繪制同樣是這三個未知參數的事後分布MCMC採樣歷史痕跡圖。 # fit use R2jags package post.jags &lt;- jags( data = Dat, parameters.to.save = c(&quot;beta0&quot;, &quot;beta1&quot;, &quot;theta[6]&quot;), n.iter = 1000, model.file = paste(bugpath, &quot;/backupfiles/logistic-reg-model.txt&quot;, sep = &quot;&quot;), n.chains = 2, n.thin = 1, n.burnin = 0, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 8 ## Unobserved stochastic nodes: 2 ## Total graph size: 53 ## ## Initializing model mcmcplots::traplot(post.jags, c(&quot;beta0&quot;, &quot;beta1&quot;, &quot;theta[6]&quot;)) 圖 98.6: History plot showing 1000 samples of beta0, beta1, and theta[6] 使用兩個不同的起始值作爲MCMC的採樣起點時，每個未知參數分別獲得兩條不同顏色的歷史痕跡圖。和之前只有一條MCMC採樣鏈時一樣，採樣的起始部分(大約100次左右)都有一些不穩定的值。等到100次採樣過後，我們發現每個參數的採樣結果都趨向於比較穩定，也就是方差，變化小了很多。但是藍色鏈，紅色鏈一直到200-300次採樣之後才逐漸互相交叉重疊。下面的圖把起初的500次採樣刨除了之後重新對每個未知參數的MCMC採樣繪制歷史痕跡。 # samplesHistory(&quot;*&quot;, mfrow = c(3,1), beg = 501, ask = FALSE) Simulated &lt;- coda::as.mcmc(post.jags) ggSample &lt;- ggs(Simulated) ggSample %&gt;% filter(Iteration &gt;= 500 &amp; Parameter %in% c(&quot;beta0&quot;, &quot;beta1&quot;, &quot;theta[6]&quot;)) %&gt;% ggs_traceplot() 圖 98.7: History plot showing 1000 samples of beta0, beta1, and theta[6], iteration between 501-1000 500-1000次之間的隨機採樣被放大了觀察之後，我們發現 beta0, beta1 的兩條MCMC鏈條的重疊程度並不理想，不像theta[6]那樣呈現令人滿意地重疊，兩條採樣鏈上下扭動，且在一些地方差異較大。 繪制每個參數的MCMC鏈的自相關圖 (autocorrelation)，下面的圖中只繪制了500-1000次範圍內採樣的自相關圖。 ggSample %&gt;% filter(Iteration &gt;= 500 &amp; Parameter %in% c(&quot;beta0&quot;, &quot;beta1&quot;, &quot;theta[6]&quot;)) %&gt;% ggs_autocorrelation() 圖 98.8: Autocorrelation plot for beta0 其中 theta[6] 可以在視覺上認爲這些樣本大致上沒有自相關。但是 beta0, beta1 的自相關圖提示相隔50次以上的採樣之間仍然有較強的，不能被忽視的自相關。這一點在 beta0, beta1各自的歷史痕跡圖中也能看出來因爲他們各自的痕跡圖提示採樣時的跳躍並不顯著，相對照的， theta[6]的採樣的跳躍就比較顯著，反映了這個未知參數事後概率分布採樣時的連續互相獨立性較好(near-independence of the values being sampled at consecutive iterations.)。 重新在OpenBUGS裏跑這個邏輯回歸模型，這一次，嘗試自己給 beta0, beta1 設置起始值。然後更新模型，採集MCMC鏈樣本10000次。這次嘗試同時使用繪制歷史痕跡圖（視覺檢查），和計算Brooks-Gelman-Rubin診斷參數及其圖示來判斷事後概率分布採樣是否達到收斂。你能判斷這個模型需要拋出掉多少一開始採集的樣本嗎(burn-in)？ Dat &lt;- list( y = c(1, 3, 6, 8, 11, 15, 17, 19), n = c(20, 20, 20, 20, 20, 20, 20, 20), x = c(30, 32, 34, 36, 38, 40, 42, 44), N = 8 ) # fit use rjags package # inits &lt;- function (){ # list (beta0=rnorm(1), beta1=runif(1) ) # } post.jags &lt;- jags( data = Dat, # inits = inits, parameters.to.save = c(&quot;beta0&quot;, &quot;beta1&quot;, &quot;theta[6]&quot;), n.iter = 5000, model.file = paste(bugpath, &quot;/backupfiles/logistic-reg-model.txt&quot;, sep = &quot;&quot;), n.chains = 2, n.thin = 1, n.burnin = 0, progress.bar = &quot;none&quot;) mcmcplots::traplot(post.jags, c(&quot;beta0&quot;, &quot;beta1&quot;, &quot;theta[6]&quot;)) 圖 98.9: History plots based on first 10000 iterations. Simulated &lt;- coda::as.mcmc(post.jags) # postsamples &lt;- buildMCMC(&quot;*&quot;) gelman.diag(Simulated) ## Potential scale reduction factors: ## ## Point est. Upper C.I. ## beta0 3.15 7.35 ## beta1 3.15 7.29 ## deviance 1.82 3.36 ## theta[6] 1.42 2.25 ## ## Multivariate psrf ## ## 2.22 gelman.plot(Simulated) 圖 98.10: Brooks-Gelman-Rubin diagnostic graph 從Gelman.plot的圖形可以看出，在2000次及以上的採集樣本過後，基本上應該可以認爲採集的樣本收斂於事後概率分布。 確認了你想要刨除的初始樣本量(burn-in)，繼續再進行MCMC採樣直到獲得1,000,000個事後概率分布樣本。此時你對獲得的事後概率分布樣本量提供的參數估計精確度滿意否？嘗試報告此時獲得的參數們的事後均值，及其95%可信區間。 Dat &lt;- list( y = c(1, 3, 6, 8, 11, 15, 17, 19), n = c(20, 20, 20, 20, 20, 20, 20, 20), x = c(30, 32, 34, 36, 38, 40, 42, 44), N = 8 ) # inits &lt;- function (){ # list (beta0=rnorm(1), beta1=runif(1) ) # } post.jags &lt;- jags( data = Dat, # inits = inits, parameters.to.save = c(&quot;beta0&quot;, &quot;beta1&quot;, &quot;theta[6]&quot;), n.iter = 502000, model.file = paste(bugpath, &quot;/backupfiles/logistic-reg-model.txt&quot;, sep = &quot;&quot;), n.chains = 2, n.thin = 1, n.burnin = 2000, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 8 ## Unobserved stochastic nodes: 2 ## Total graph size: 53 ## ## Initializing model Compiling model graph Resolving undeclared variables Allocating nodes Graph information: Observed stochastic nodes: 8 Unobserved stochastic nodes: 2 Total graph size: 53 Initializing model Inference for Bugs model at &quot;/home/ccwang/Documents/LSHTMlearningnote/backupfiles/logistic-reg-model.txt&quot;, fit using jags, 2 chains, each with 502000 iterations (first 2000 discarded) n.sims = 1000000 iterations saved mu.vect sd.vect 2.5% 25% 50% 75% 97.5% Rhat n.eff beta0 -13.892 2.090 -18.257 -15.237 -13.788 -12.449 -10.042 1.001 3900 beta1 0.375 0.056 0.272 0.337 0.373 0.412 0.493 1.001 3100 theta[6] 0.752 0.048 0.652 0.720 0.754 0.786 0.841 1.001 10000 deviance 25.722 2.020 23.760 24.283 25.095 26.499 31.199 1.001 9600 For each parameter, n.eff is a crude measure of effective sample size, and Rhat is the potential scale reduction factor (at convergence, Rhat=1). DIC info (using the rule, pD = var(deviance)/2) pD = 2.0 and DIC = 27.8 DIC is an estimate of expected predictive error (lower deviance is better). 繪制此時beta0,beta1的自相關圖。 圖 98.11: Autocorrelation plot for beta0 圖 98.12: The joint posterior distribution, scatter plot of beta0 and beta1. 此圖98.12提示我們該邏輯回歸模型的截距(intercept)beta0，和斜率(slope)beta1其實是高度相關的。這導致了未知參數(兩個回歸系數)的事後概率分布樣本高度內部相關(high autocorrealtion within the samples of each individual parameter)。這是他們效率低下，需要大量的採集樣本仍然無法滿足或者達到理想的收斂的主要原因。 給邏輯回歸的回歸系數中心化之後的模型：我們來把兩個回歸系數的樣本中心化(centre the covariate \\(x\\))。在BUGS語言中可以使用x[i] - mean(x[])的命令來把未知參數的事後概率分布MCMC採樣過程中心化。然後我們重復一下上面的計算過程，看結果有怎樣的變化。與前者的分析比較一下收斂所需要的時間和未知參數事後估計的效率差別。 # logistic regression model with centred covariate model{ for(i in 1:N){# loop through experiments y[i] ~ dbin(theta[i], n[i]) logit(theta[i]) &lt;- beta0 + beta1 * (x[i] - mean(x[])) } # priors beta0 ~ dunif(-100, 100) beta1 ~ dunif(-100, 100) } # JAGS codes: # Dat &lt;- list( y = c(1, 3, 6, 8, 11, 15, 17, 19), n = c(20, 20, 20, 20, 20, 20, 20, 20), x = c(30, 32, 34, 36, 38, 40, 42, 44), N = 8 ) # step 1 check model jagsModel &lt;- jags.model( file = paste(bugpath, &quot;/backupfiles/logistic-reg-model-centred.txt&quot;, sep = &quot;&quot;), data = Dat, n.chains = 2, # inits = inits, quiet = TRUE) # Step 2 update 10000 iterations update(jagsModel, n.iter = 1, progress.bar = &quot;none&quot;) # Step 3 set monitor variables codaSamples &lt;- coda.samples( jagsModel, variable.names = c(&quot;beta0&quot;, &quot;beta1&quot;, &quot;theta[6]&quot;), n.iter = 10000, progress.bar = &quot;none&quot; ) mcmcplots::traplot(codaSamples, c(&quot;beta0&quot;, &quot;beta1&quot;, &quot;theta[6]&quot;)) 圖 98.13: History plots based on first 10000 iterations with centred covariates. 用中心化之後的模型我們發現需要10000或更多的起始樣本來達到事後概率分布的收斂。BGR診斷圖 98.14 也提示我們大概在10000次之後的重復採樣才能達到收斂。所以我們決定要刨除起始10000次採集的樣本。(burn-in = 10000) gelman.diag(codaSamples) ## Potential scale reduction factors: ## ## Point est. Upper C.I. ## beta0 1 1 ## beta1 1 1 ## theta[6] 1 1 ## ## Multivariate psrf ## ## 1 gelman.plot(codaSamples) 圖 98.14: Brooks-Gelman-Rubin diagnostic graph 刨除了起始10000次採集的樣本之後，剩餘的MCMC樣本的自相關也基本都降至0，說明這時候採集的事後概率分布樣本基本上都可以認爲是相互獨立的樣本。此時有效樣本量基本上約等於採集到的樣本量。 # R2JAGS codes Dat &lt;- list( y = c(1, 3, 6, 8, 11, 15, 17, 19), n = c(20, 20, 20, 20, 20, 20, 20, 20), x = c(30, 32, 34, 36, 38, 40, 42, 44), N = 8 ) post.jags &lt;- jags( data = Dat, # inits = inits, parameters.to.save = c(&quot;beta0&quot;, &quot;beta1&quot;, &quot;theta[6]&quot;), n.iter = 20000, model.file = paste(bugpath, &quot;/backupfiles/logistic-reg-model-centred.txt&quot;, sep = &quot;&quot;), n.chains = 2, n.thin = 1, n.burnin = 10000, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 8 ## Unobserved stochastic nodes: 2 ## Total graph size: 63 ## ## Initializing model mcmcplots::traplot(post.jags, c(&quot;beta0&quot;, &quot;beta1&quot;, &quot;theta[6]&quot;)) print(post.jags) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/logistic-reg-model-centred.txt&quot;, fit using jags, ## 2 chains, each with 20000 iterations (first 10000 discarded) ## n.sims = 20000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% Rhat n.eff ## beta0 -0.002 0.206 -0.404 -0.143 -0.002 0.137 0.404 1.001 20000 ## beta1 0.374 0.057 0.267 0.336 0.373 0.411 0.491 1.001 6800 ## theta[6] 0.751 0.049 0.650 0.719 0.752 0.786 0.841 1.001 9100 ## deviance 25.764 2.018 23.763 24.303 25.140 26.579 31.147 1.001 6500 ## ## For each parameter, n.eff is a crude measure of effective sample size, ## and Rhat is the potential scale reduction factor (at convergence, Rhat=1). ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 2.0 and DIC = 27.8 ## DIC is an estimate of expected predictive error (lower deviance is better). Simulated &lt;- coda::as.mcmc(post.jags) ggSample &lt;- ggs(Simulated) ggSample %&gt;% filter(Iteration &gt;= 2001 &amp; Parameter %in% c(&quot;beta0&quot;, &quot;beta1&quot;)) %&gt;% ggs_autocorrelation() 這時候我們獲得的回歸系數的事後估計的均值 beta1 = 0.377，和它的95%可信區間，0.271, 0.492。它其實是藥物劑量每增加1mg，隨之增加的藥物有效百分比的對數比值比 (log-odds-ratio of a positive response per 1 mg increase in dose.)，你有沒有發現其實我們很難解釋這個變量的實際含義呢？有沒有什麼辦法可以來改善這個結果，讓它更加容易讓人明白呢？ 想辦法在未知參數被中心的話邏輯回歸模型中增加新的語句，生成一些新的容易讓人解釋的變量，改善模型的易解釋程度。也許你可以把對數比值比轉換成比值比，你也許可以自己算一下在哪種劑量條件下可以讓95%的患者都有治療療效(ED95)： \\[ \\begin{aligned} \\text{logit}0.95 &amp; = \\beta_0 + \\beta_1(ED95 - \\bar x) \\\\ \\Rightarrow ED95 &amp; = (\\text{logit}0.95 - \\beta_0)/\\beta_1 + \\bar x \\end{aligned} \\] # logistic regression model with centred covariate # and added statements model{ for(i in 1:N){# loop through experiments y[i] ~ dbin(theta[i], n[i]) logit(theta[i]) &lt;- beta0 + beta1 * (x[i] - mean(x[])) } # priors beta0 ~ dunif(-100, 100) beta1 ~ dunif(-100, 100) # generated values OR &lt;- exp(beta1) # odds ratio of positive response per 1 mg increase in dose ED95 &lt;- (logit(0.95) - beta0)/beta1 + mean(x[]) # dose that gives 95% of maximal response logit(P35) &lt;- beta0 + beta1 * (35 - mean(x[])) # probability of positive reaction if given 35mg drugs } # R2JAGS codes: Dat &lt;- list( y = c(1, 3, 6, 8, 11, 15, 17, 19), n = c(20, 20, 20, 20, 20, 20, 20, 20), x = c(30, 32, 34, 36, 38, 40, 42, 44), N = 8 ) post.jags &lt;- jags( data = Dat, # inits = inits, parameters.to.save = c(&quot;ED95&quot;, &quot;OR&quot;, &quot;P35&quot;, &quot;beta0&quot;, &quot;beta1&quot;), n.iter = 20000, model.file = paste(bugpath, &quot;/backupfiles/logistic-reg-model-centred-stat.txt&quot;, sep = &quot;&quot;), n.chains = 2, n.thin = 1, n.burnin = 10000, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 8 ## Unobserved stochastic nodes: 2 ## Total graph size: 76 ## ## Initializing model # mcmcplots::traplot(post.jags, c(&quot;beta0&quot;, &quot;beta1&quot;, &quot;theta[6]&quot;)) print(post.jags) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/logistic-reg-model-centred-stat.txt&quot;, fit using jags, ## 2 chains, each with 20000 iterations (first 10000 discarded) ## n.sims = 20000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% Rhat n.eff ## ED95 45.045 1.384 42.746 44.083 44.887 45.860 48.148 1.001 20000 ## OR 1.457 0.082 1.310 1.399 1.451 1.510 1.633 1.001 15000 ## P35 0.323 0.050 0.227 0.288 0.322 0.356 0.423 1.001 20000 ## beta0 -0.001 0.205 -0.405 -0.140 0.001 0.138 0.400 1.001 20000 ## beta1 0.375 0.056 0.270 0.336 0.373 0.412 0.491 1.001 20000 ## deviance 25.741 2.038 23.758 24.297 25.122 26.516 31.170 1.001 20000 ## ## For each parameter, n.eff is a crude measure of effective sample size, ## and Rhat is the potential scale reduction factor (at convergence, Rhat=1). ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 2.1 and DIC = 27.8 ## DIC is an estimate of expected predictive error (lower deviance is better). 所以，藥物每增加劑量1mg，有療效的比值比是OR = 1.46 (95%CrI: 1.31, 1.63)。能夠達到95%患者都有療效的劑量是 45.02 mg (95% CrI: 42.7, 48.2 mg)。如果給予患者藥物劑量爲 35 mg，患者的疼痛能夠得到緩解(有療效)的概率是 32.3% (95% CrI: 22.7%, 42.3%)。跟着看到這裏的你是不是也覺得貝葉斯的結果和過程能夠更加豐富地回答我們想知道的問題呢？ #### PLOT THE DENSITY and HISTOGRAMS OF THE SAMPLED VALUES par(mfrow=c(3,1)) Simulated &lt;- coda::as.mcmc(post.jags) ggSample &lt;- ggs(Simulated) ED95 &lt;- ggSample %&gt;% filter(Parameter == &quot;ED95&quot;) OR &lt;- ggSample %&gt;% filter(Parameter == &quot;OR&quot;) P35 &lt;- ggSample %&gt;% filter(Parameter == &quot;P35&quot;) plot(density(ED95$value), main = &quot;ED95 sample&quot;, ylab = &quot;P(ED95)&quot;, xlab = &quot;Distribution of ED95&quot;, col = &quot;red&quot;) plot(density(OR$value), main = &quot;OR sample&quot;, ylab = &quot;P(OR)&quot;, xlab = &quot;Distribution of OR&quot;, col = &quot;red&quot;) plot(density(P35$value), main = &quot;P35 sample&quot;, ylab = &quot;P(P35)&quot;, xlab = &quot;Distribution of P35&quot;, col = &quot;red&quot;) 圖 98.15: Posterior density plots of ED95, OR, and P35. References "],["Bayes-check.html", "第 99 章 建模和模型的檢查 99.1 簡單線性回歸模型 99.2 Children in the Gambia 99.3 貝葉斯統計模型的比較 Bayesian model comparison 99.4 Practical Bayesian Statistics 05", " 第 99 章 建模和模型的檢查 對所有想要嘗試貝葉斯統計學的人來說，這個過程需要你有能力建立一個可以被用於MCMC採樣的貝葉斯模型，並且懂得怎樣獲取收斂合理，樣本量大小合適的事後概率分布樣本。下圖 99.1 中總結了建立貝葉斯統計模型並運行MCMC計算的大致過程： 圖 99.1: Input files, steps for generating a posterior sample and checks required for successfully running a Bayesian analysis using BUGS. 虛線最上端，意爲我們需要準備三種最重要的文件： BUGS語言描述下的貝葉斯統計學模型； 包含模型中使用到的觀察變量的數據文件（可以是一個，也可是多個組合）； 每個未知參數的MCMC採樣鏈的起始值 (initial values, 1 set for each chain)。 兩條虛線的中間部分是產生事後概率分布的重要步驟及其先後順序。虛線最下面則是三個重要的模型檢查，你需要在運行貝葉斯模型MCMC採集樣本的過程中反復使用這三個檢查模型的方案以確保過程的準確，以獲得合理的結果。 下面我們通過使用貝葉斯統計學框架來進行一個簡單線性回歸模型的計算和MCMC採集樣本的過程，詳細地解釋圖99.1中的每一個步驟及其含義。 先思考，一個只有概率論知識的統計學者，他/她是如何進行簡單線性回歸模型的擬合過程的？ 確認觀察數據的概率分布(似然/likelihood)； 確認結果變量和預測變量之間的合適表達式(線性回歸方程)。 這兩個步驟在貝葉斯統計學中也是不可缺少的，此外，貝葉斯統計學模型的建立和MCMC採樣還需要統計師給出回歸系數的先驗概率分布(prior distributions for the regression coefficients)，以及其他未知（可能是令人感到麻煩的 nuisance）參數的先驗概率分布。 99.1 簡單線性回歸模型 如果簡單線性回歸模型的結果變量是一個服從正態分布的單一變量 \\(y_i\\)，我們想要拿來預測這個結果變量的預測變量是從每個試驗個體 \\(i, i = 1, \\dots, n\\) 上收集到的一系列共變量 (covariates) 的向量 \\(x_{1i}, \\dots, x_{pi}\\)。概率論統計學者會把這樣的模型用數學表達式寫成： \\[ \\begin{aligned} y_i &amp; = \\beta_0 + \\sum_{k = 1}^p\\beta_k x_{ki} + \\epsilon_i \\\\ \\epsilon_i &amp; \\sim \\text{Normal}(0, \\sigma^2) \\end{aligned} \\] 或者也有人習慣於把誤差項拿掉，用結果變量的期望值（也就是均值） \\(E(y_i) = \\mu_i\\) 來寫這個模型： \\[ \\begin{aligned} y_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma^2) \\\\ \\mu_i &amp; = \\beta_0 + \\sum_{k = 1}^p\\beta_k x_{ki} \\end{aligned} \\] 在貝葉斯框架下，這個模型的參數\\((\\beta_0, \\beta_1, \\dots, \\beta_p, \\sigma^2)\\)，還需要給出它們各自的先驗概率分布。所以貝葉斯框架下的簡單線性回歸模型的標記法是： \\[ \\begin{aligned} y_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma^2) \\\\ \\mu_i &amp; = \\beta_0+ \\sum_{k = 1}^p\\beta_k x_{ki} \\\\ (\\beta_0, \\beta_1, \\dots, \\beta_p, \\sigma^2) &amp; \\sim \\text{ Prior Distributions} \\end{aligned} \\] 如果想要獲得和概率論的簡單線性回歸模型的算法(OLS, ordinary least squares / MLE, maximum likelihood estimates)獲得的結果接近的參數估計，那麼先驗概率分布可以指定爲： \\[ \\begin{aligned} \\beta_k &amp; \\sim \\text{Uniform}(-\\infty, +\\infty), k = 0, \\dots, p \\\\ \\log\\sigma^2 &amp; \\sim \\text{Uniform}(-\\infty, +\\infty) \\end{aligned} \\] 我們以後還會仔細再討論先驗概率分布的選擇問題。 99.2 Children in the Gambia 這個數據實例我們在簡單線性回歸的課程中(Chapter 27.6)也用過，它收集的是岡比亞農村兒童的身高體重年齡等信息。你可以有空和當時的模型擬合過程進行一個對比。這裏用到的變量是190名兒童的體重，年齡，和性別。圖 99.2示意的是這些兒童的體重和年齡及性別的關系。 ## # A tibble: 6 × 4 ## sex age wt len ## &lt;dbl+lbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2 [female] 23 8.40 73.2 ## 2 2 [female] 22 10.9 84.4 ## 3 2 [female] 6 7.20 68.7 ## 4 1 [male] 24 10.3 83.7 ## 5 1 [male] 14 10.5 79.2 ## 6 2 [female] 18 9.60 75.8 圖 99.2: Children in the Gambian cross-sectional survey 在這項橫斷面研究中，我們關心的主要是： 年齡每增加一個月，體重的變化是多少 kg？ 男孩女孩之間的體重差別是多少 kg？ 99.2.1 岡比亞兒童數據模型 我們給出的模型是： 結果變量 (outcome/response)：體重(kg), weight in kg； 預測變量 (predictors)：年齡(age in months)，性別(1=男孩，2=女孩)。 一開始，我們的假設是，體重和年齡之間有線性關系(linear relationship)，且誤差項服從正態分布。這一句話用貝葉斯統計學標記來表達就是： \\[ \\begin{aligned} \\text{wt}_i &amp; \\sim \\text{Normal}(\\mu_i, \\sigma^2) \\;\\; i = 1, \\dots, 190 \\\\ \\mu_i &amp; = \\alpha + \\beta \\times \\text{age}_i + \\gamma \\times \\text{sex}_i \\\\ \\log\\sigma^2 &amp; \\sim \\text{Uniform}(-100, 100) \\\\ \\alpha &amp; \\sim \\text{Uniform}(-1000, 1000) \\\\ \\beta &amp; \\sim \\text{Uniform}(-1000, 1000) \\\\ \\gamma &amp; \\sim \\text{Uniform}(-1000, 1000) \\\\ \\end{aligned} \\tag{99.1} \\] 如果想用有向無環圖(DAG)來表示這個模型的話，可以用圖 99.3 來表示這個線性回歸模型。圖中每一個元素都用圓形或者方形來表示，各個成分之間的關系則用帶方向箭頭的直線或虛線來連接。大的方形標注着 Child \\(i\\) 的部分把該模型中被循環重復的部分。這個方形又被叫做盤(plates)，盤內標記的名稱和下標表示每一個被循環重復的最小個體單位。在這個岡比亞兒童數據中，兩個共變量/預測變量(\\(age_i, sex_i\\))，和一個結果變量(\\(wt_i\\))是從每一名兒童身上測量獲得的，所以每一名兒童是模型循環重復的最小單位。未知參數 \\(\\alpha, \\beta, \\gamma, \\sigma^2\\) 都放在了盤以外的位置表示這些變量並不會隨着循環重復而改變。 值得注意的是，這個DAG圖 99.3 中有兩種不同類型的直線。如果在你寫下的模型(99.1)中兩個變量之間使用的是 \\(\\sim\\) 連接的，那麼它們之間的連線就是實線，如果變量之間的關系使用的是等號 \\(=\\) 建立的關系，那麼它們之間的連線是虛線。因爲 \\(\\sim\\) 表示的是隨機的不確定的關系(如服從某個先驗概率分布, stochastic links to a probability relationship)，而等號 \\(=\\) 代表的關系是確定的 (deteministic relationships)。習慣上，圓形變量表示未知參數/隨機變量(random variables)，方形變量表示觀測到的值(fully observed covariates)。盡管結果變量 \\((wt_i)\\) 是我們觀測收集的數據之一，但是在模型中它是隨機變量，因此在DAG繪圖法中也用圓形來標記。 圖 99.3: DAG for Gambia Regression Model 99.2.2 BUGS model for Gambia example 模型的數學標記(表達式 (99.1))確定了以後，把它翻譯成BUGS語言就是下一步的工作了。本例中，我們並不想給模型加入任何有意義的先驗概率分布信息，所以給每個未知參數的先驗概率分布都是沒有信息的扁平的分布 (flat priors)。翻譯成BUGS語言以後的模型寫作： model{ for(i in 1:190){ # loop through the 190 children wt[i] ~ dnorm(mu[i], tau) mu[i] &lt;- alpha + beta*age[i] + gamma*sex[i] } # priors alpha ~ dunif(-1000, 1000) beta ~ dunif(-1000, 1000) gamma ~ dunif(-1000, 1000) logsigma2 ~ dunif(-100, 100) sigma2 &lt;- exp(logsigma2) tau &lt;- 1/sigma2 } 99.2.3 Data file for the Gambia example 準備數據時，有兩種格式是適用的： 99.2.3.1 方形數據格式 rectangular format sex[] age[] wt[] 2 23 8.40 2 22 10.9 2 6 7.20 1 24 10.3 1 14 10.5 2 18 9.60 ... 1 30 12.1 END 99.2.3.2 R/S-plus 格式數據 這種格式的數據較爲靈活，你可以在其中放入長度不一樣的向量，假如我們在模型的第一行不給出兒童的人數 \\(190\\) 而是寫作： for(i in 1:N){ # loop through the 190 children 的話，那麼在數據文件中我們需要給出這個 N 的大小： list( N = 190, wt = c(8.4, 10.9, , 7.2, 10.3, 10.5, ..., 12.1), age = c(23, 22, 6, 24, 14, 18, ... , 30), sex = c(2, 2, 2, 1, 1, 2, 2, ..., 1) ) 99.2.4 初始值文件 initial value files 前一章節我們探討過如何確認事後概率分布的MCMC採樣達到收斂，其中一個要點是使用兩個或更多的起始值，前提是你給模型的未知參數起始值需要是在合理範圍內，且差異較大的起始值。同樣使用 list 命令。 MCMC採樣鏈1的起始值： list(alpha = 0, beta = 1, gamma = 5, logsigma2 = 1) MCMC採樣鏈2的起始值： list(alpha = 10, beta = 0, gamma = -5, logsigma2 = 5) 99.2.5 給岡比亞兒童體重數據的貝葉斯模型檢查收斂 (MCMC check 1) 一開始我們先採集1000個事後概率分布樣本。模型中的四個未知參數\\(\\alpha, \\beta, \\gamma, \\sigma^2\\)的1000次事後MCMC採樣的歷史痕跡圖繪制如圖 99.4。我們可以看到模型收斂的速度很快。刨除前50次採樣的圖 (Fig. 99.5)，可以對採樣過程看得更加清楚。像圖 99.5 這樣粗粗的有點像毛毛蟲一樣的歷史痕跡圖通常象徵已經達到理想的收斂。 # Read in the data: Data &lt;- read_tsv(paste(bugpath, &quot;/backupfiles/gambia-data.txt&quot;, sep = &quot;&quot;)) # Data file for the model Dat &lt;- list( N = nrow(Data), wt = Data$wt, age = Data$age, sex = Data$sex ) # initial values for the model # the choice is arbitrary inits &lt;- list( list(alpha = 0, beta = 1, gamma = 5, logsigma2 = 1), list(alpha = 10, beta = 0, gamma = -5, logsigma2 = 5) ) # fit the model in jags jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/gambia-model.txt&quot;, sep = &quot;&quot;), parameters.to.save = c(&quot;alpha&quot;, &quot;beta&quot;, &quot;gamma&quot;, &quot;sigma2&quot;), n.iter = 2000, n.chains = 2, inits = inits, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 190 ## Unobserved stochastic nodes: 4 ## Total graph size: 672 ## ## Initializing model # Show the trace plot Simulated &lt;- coda::as.mcmc(jagsModel) ggSample &lt;- ggs(Simulated) ggSample %&gt;% filter(Parameter %in% c(&quot;alpha&quot;, &quot;beta&quot;, &quot;gamma&quot;, &quot;sigma2&quot;)) %&gt;% ggs_traceplot() 圖 99.4: History plots for iterations 1-1000 for the Gambia example. ggSample %&gt;% filter(Iteration &gt;= 51 &amp; Parameter %in% c(&quot;alpha&quot;, &quot;beta&quot;, &quot;gamma&quot;, &quot;sigma2&quot;)) %&gt;% ggs_traceplot() 圖 99.5: History plots for iterations 51-1000 for the Gambia example. 再看這1000次MCMC抽樣獲得的 Gelman-Rubin 統計量，差不多鏈內鏈間差異的比值在1000次左右可以認爲等於1，所以我們把這前1000次MCMC採樣作爲 burn-in 從事後樣本中刨除。確定了 burn-in 之後我們再對每一條MCMC鏈重復採樣25000次。 gelman.diag(Simulated) ## Potential scale reduction factors: ## ## Point est. Upper C.I. ## alpha 1.07 1.27 ## beta 1.03 1.15 ## deviance 1.05 1.12 ## gamma 1.04 1.17 ## sigma2 1.00 1.01 ## ## Multivariate psrf ## ## 1.06 gelman.plot(Simulated) 圖 99.6: Gelman-Rubin convergence statistic for the Gambia example. 99.2.6 岡比亞兒童體重數據的貝葉斯統計學推斷結果 # Generate 52000 iterations jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/gambia-model.txt&quot;, sep = &quot;&quot;), parameters.to.save = c(&quot;alpha&quot;, &quot;beta&quot;, &quot;gamma&quot;, &quot;sigma2&quot;), n.iter = 26000, n.chains = 2, n.burnin = 1000, inits = inits, n.thin = 1, progress.bar = &quot;none&quot;) ## module glm loaded ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 190 ## Unobserved stochastic nodes: 4 ## Total graph size: 672 ## ## Initializing model summary(as.mcmc(jagsModel)) ## ## Iterations = 1:25000 ## Thinning interval = 1 ## Number of chains = 2 ## Sample size per chain = 25000 ## ## 1. Empirical mean and standard deviation for each variable, ## plus standard error of the mean: ## ## Mean SD Naive SE Time-series SE ## alpha 7.15525 0.236085 0.001055803 0.00440088 ## beta 0.16385 0.010951 0.000048975 0.00019439 ## deviance 625.14073 2.843174 0.012715062 0.02689234 ## gamma -0.51940 0.185513 0.000829639 0.00202526 ## sigma2 1.58017 0.166106 0.000742851 0.00098655 ## ## 2. Quantiles for each variable: ## ## 2.5% 25% 50% 75% 97.5% ## alpha 6.69373 6.99473 7.15565 7.31404 7.61892 ## beta 0.14221 0.15655 0.16381 0.17119 0.18517 ## deviance 621.57606 623.04667 624.49813 626.54662 632.31463 ## gamma -0.88195 -0.64499 -0.51853 -0.39354 -0.15994 ## sigma2 1.28853 1.46310 1.56904 1.68383 1.93735 由於我們給每個未知參數的先驗概率分布都是沒有實際信息的，因此，預期貝葉斯模型給出的結果將會十分接近概率論模型給出的分析結果，事實也證明的確是如此： Gambia.lm &lt;- lm(wt ~ age + factor(sex), data = growgam1) summary(Gambia.lm) ## ## Call: ## lm(formula = wt ~ age + factor(sex), data = growgam1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -4.19236 -0.76268 -0.00696 0.75675 3.79163 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 7.152414 0.234254 30.5327 &lt; 2.2e-16 *** ## age 0.163998 0.010919 15.0189 &lt; 2.2e-16 *** ## factor(sex)2 -0.518854 0.183053 -2.8344 0.005095 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.2503 on 187 degrees of freedom ## Multiple R-squared: 0.5597, Adjusted R-squared: 0.55499 ## F-statistic: 118.85 on 2 and 187 DF, p-value: &lt; 2.22e-16 regress.display(Gambia.lm) ## ## Coeff lower095ci upper095ci Pr&gt;|t| ## (Intercept) 7.15241353 6.69029297 7.61453409 1.4039052e-74 ## age 0.16399839 0.14245724 0.18553954 5.7949167e-34 ## factor(sex)2 -0.51885399 -0.87996857 -0.15773941 5.0951539e-03 即使用 Stata 獲得的也是一樣的結果，差異十分微小。 ## ## . use &quot;../backupfiles/growgam1.dta&quot; ## ## . regress wt age i.sex ## ## Source | SS df MS Number of obs = 190 ## -------------+---------------------------------- F(2, 187) = 118.85 ## Model | 371.623281 2 185.81164 Prob &gt; F = 0.0000 ## Residual | 292.346478 187 1.56335015 R-squared = 0.5597 ## -------------+---------------------------------- Adj R-squared = 0.5550 ## Total | 663.969759 189 3.51306751 Root MSE = 1.2503 ## ## ------------------------------------------------------------------------------ ## wt | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## age | .1639984 .0109195 15.02 0.000 .1424572 .1855395 ## | ## sex | ## female | -.518854 .1830531 -2.83 0.005 -.8799686 -.1577394 ## _cons | 7.152414 .2342542 30.53 0.000 6.690293 7.614534 ## ------------------------------------------------------------------------------ ## ## . 99.2.7 檢查岡比亞兒童體重數據貝葉斯模型的有效樣本量 effective sample size (MCMC check 2) 盡管我們獲取了50000個事後MCMC樣本，但是關於 \\(\\text{MC_error} \\approx 2 \\text{ orders of magnitude smaller than the posterior SD}\\) 的經驗法則 (rule of thumb)，其實並沒有得到滿足。實際用於估計事後 \\(\\alpha, \\beta\\) 的有效樣本量是小於 10000的。繪制每個參數的自回歸 (autocorrelation) 圖也證實了這些事後樣本有許多有強的自相關： 圖 99.7: Autocorrelation plot for the Gambia example (uncentered model, chain 1-2) 這些 MCMC 樣本的自相關程度之所以如此之高，其最主要的原因是我們沒有把連續變量年齡給中心化。解決這個問題的辦法是把原先模型中的線性回歸模型的年齡變量給中心化： mu[i] &lt;- alpha + beta*(age[i] - mean(age[])) + gamma*sex[i] 這一次我們獲得的50000個MCMC事後樣本的參數估計結果如下： # Generate 51000 iterations jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/gambia-model-agecen.txt&quot;, sep = &quot;&quot;), parameters.to.save = c(&quot;alpha&quot;, &quot;beta&quot;, &quot;gamma&quot;, &quot;sigma2&quot;), n.iter = 26000, n.chains = 2, n.burnin = 1000, inits = inits, n.thin = 1, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 190 ## Unobserved stochastic nodes: 4 ## Total graph size: 706 ## ## Initializing model summary(as.mcmc(jagsModel)) ## ## Iterations = 1:25000 ## Thinning interval = 1 ## Number of chains = 2 ## Sample size per chain = 25000 ## ## 1. Empirical mean and standard deviation for each variable, ## plus standard error of the mean: ## ## Mean SD Naive SE Time-series SE ## alpha 9.93477 0.138269 0.000618358 0.001467596 ## beta 0.16400 0.010905 0.000048768 0.000063547 ## deviance 625.07272 2.835241 0.012679581 0.021955846 ## gamma -0.51668 0.183846 0.000822185 0.001930376 ## sigma2 1.58092 0.162130 0.000725069 0.000954518 ## ## 2. Quantiles for each variable: ## ## 2.5% 25% 50% 75% 97.5% ## alpha 9.66463 9.84081 9.93538 10.02775 10.20531 ## beta 0.14258 0.15667 0.16401 0.17130 0.18532 ## deviance 621.54636 622.99966 624.41405 626.46184 632.16316 ## gamma -0.87797 -0.64005 -0.51696 -0.39468 -0.15594 ## sigma2 1.29418 1.46782 1.57031 1.68345 1.92450 print(jagsModel) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/gambia-model-agecen.txt&quot;, fit using jags, ## 2 chains, each with 26000 iterations (first 1000 discarded) ## n.sims = 50000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% Rhat n.eff ## alpha 9.935 0.138 9.665 9.841 9.935 10.028 10.205 1.001 36000 ## beta 0.164 0.011 0.143 0.157 0.164 0.171 0.185 1.001 50000 ## gamma -0.517 0.184 -0.878 -0.640 -0.517 -0.395 -0.156 1.001 19000 ## sigma2 1.581 0.162 1.294 1.468 1.570 1.683 1.924 1.001 27000 ## deviance 625.073 2.835 621.546 623.000 624.414 626.462 632.163 1.001 25000 ## ## For each parameter, n.eff is a crude measure of effective sample size, ## and Rhat is the potential scale reduction factor (at convergence, Rhat=1). ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 4.0 and DIC = 629.1 ## DIC is an estimate of expected predictive error (lower deviance is better). 注意到這時候事後參數估計給出的 alpha 結果發生了微妙的變化，然而其他的幾個變量的事後估計結果幾乎沒有改變。且此時 MC_error 也變得小了很多，達到了我們的經驗法則所要求的。這時候的事後MCMC採樣鏈的自相關圖也提供較爲了理想的結果： Simulated &lt;- coda::as.mcmc(jagsModel) ggSample &lt;- ggs(Simulated) ggSample %&gt;% filter(Parameter %in% c(&quot;alpha&quot;, &quot;beta&quot;, &quot;gamma&quot;, &quot;sigma2&quot;)) %&gt;% ggs_autocorrelation() 圖 99.8: Autocorrelation plot for the Gambia example (centered model, chain 1) 共變量年齡，和性別的回歸系數的事後概率分布圖繪制如下： 圖 99.9: Change in weight per month increase in age (posterior mean: 0.164 kg, 95% credible interval (0.143, 0.186) 圖 99.10: Change in weight for girls compared to boys (posterior mean: -0.520 kg, 95% credible interval (-0.880, -0.160) 圖 99.11: Fitted regression line versus covariate (age) BUGS軟件也能提供類似圖 99.11 這樣的擬合值和共變量年齡之間的關系的圖。其中紅色線代表體重的擬合值，藍色線代表95%可信區間的範圍。 經過這些步驟的分析，相信你也意識到，給貝葉斯模型中的共變量中心化(centering covariates)，是提高模型分析採樣效率的好方法。它把事後未知參數的位置中心化，同時減少事後MCMC採樣的自相關。之前沒有把年齡中心化的模型結果也提示我們如果共變量未被中心化，其事後概率分布的MCMC樣本的有效樣本量是會被打了折扣的，採樣的收斂速度也較長。 99.2.8 檢查模型擬合程度 checking model fit for the Gambia example 目前爲止我們完成了貝葉斯簡單線性回歸模型的建立，及其事後概率樣本的 MCMC 採集。下一步應該做的是對模型的擬合度進行檢查。模型檢查包括我們在簡單先行回顧章節學習過的一些標準(standard)檢查要點： 殘差 residuals：把殘差和各個共變量做散點圖，檢查每個未知參數的自相關； 預測 prediction：把創建的模型拿到其他的新數據中驗證其外部有效程度 (external validation/cross validation)。 除此之外，我們仍然要補充做的包括： 檢查先驗概率分布和實際觀察數據之間是否有衝突 check for conflict between prior and data； 檢查貝葉斯模型是否會對不同的先驗概率分布較爲敏感 check for unintended sensitivity to the prior。 標準化殘差 (standardised residuals) 的計算公式是 \\(r = \\frac{y - \\mu}{\\sigma}\\)，其中 \\(\\mu = E[y], \\sigma^2 = V[y]\\)。在貝葉斯模型中獲得的殘差也是隨機變量 (random quantities)，有自己的分布。如果你願意，你可以把殘差的事後概率分布密度圖給繪制出來，或者選擇檢驗分布的形狀參數 (testing distributional shape)等等方法來檢驗殘差，但是如果你只要給每個對象提取一個模型殘差值，你的選擇可以有： 標準化殘差的事後概率分布均值 posterior mean of the standardised residuals \\(E(r)\\)； (plug-in posterior mean) 或者把參數的事後均值\\(\\mu\\)及其標準差\\(\\sigma\\)的均值放到計算式裏面: \\(r = \\frac{y - E(\\mu)}{E(\\sigma)}\\)。 使用MCMC計算機模擬試驗的算法優勢，我們擁有了重復計算大量參數的能力。所以對於每一個觀察對象(岡比亞兒童)，我們可以用這個線性回歸模型計算他/她的體重的事後預測分布(predictive distribution) \\(y_i^{pred}\\)，然後把他/她的體重觀察值\\((y_i^{obs})\\)和他/她的體重事後概率分布做比較。利用 step 命令來計算每個孩子身上用模型計算的預測體重分布中，小於觀察的體重數據的面積 \\(p(y_i^{pred} &lt; y_i^{obs})\\)。如果有許多觀測值，位於它各自事後概率分布的兩極（即預測體重遠小於，或者遠大於觀測體重），那麼可以認爲該模型擬合度較差。 圖 99.12: Predictive check 用岡比亞兒童體重的貝葉斯模型來說，我們利用MCMC強大的事後樣本採集能力，在模型中增加並監測三個新的變量 res, wt.pred, p.pred： model{ for(i in 1:190){ # loop through the 190 children wt[i] ~ dnorm(mu[i], tau) mu[i] &lt;- alpha + beta*(age[i] - mean(age[])) + gamma*sex[i] # standardised residuals res[i] &lt;- (wt[i] - mu[i]) / sqrt(sigma2) # predictions wt.pred[i] ~ dnorm(mu[i], tau) # repredict for each child p.pred[i] &lt;- step(wt[i] - wt.pred[i]) } # priors alpha ~ dunif(-1000, 1000) beta ~ dunif(-1000, 1000) gamma ~ dunif(-1000, 1000) logsigma2 ~ dunif(-100, 100) sigma2 &lt;- exp(logsigma2) tau &lt;- 1/sigma2 } 所以我們只要增加對新增的三個變量 res, wt.pred, p.pred 的事後樣本採集的監控就可以了。圖 99.13 展示了BUGS軟件提供的殘差分析圖(caterpillar/毛蟲 plot)。它其實十分接近箱式圖 (box-plot)，唯一的區別是不顯示四分位數間距 (inter-quartile range)。毛蟲圖的最大優點在於，便於比較有很多事後概率分布的情況，像本例中190名兒童的體重都有各自的事後概率分布，他們每人的殘差也有各自的分布。圖 99.14 則是BUGS軟件繪制的岡比亞兒童體重的95%預測區間，後面的黑色散點圖是觀察值。 圖 99.13: Caterpillar plot of the posterior distribution of standardised residuals vs. child ID 圖 99.14: Prediction bands for replicate data. 99.2.9 其他的替代模型 alternative model with t-errors 檢查一個模型意爲着我們可能需要替代模型。例如，我們可以使模型中的體重不是服從正態分布，而是服從 t 分布，因爲 t 分布將會給模型提供更高的穩健性。（t分布的兩端面積比起正態分布要大一些，也就是允許模型考慮更多的離羣值outliers）： model{ for(i in 1:190){ # loop through the 190 children wt[i] ~ dt(mu[i], tau, 4) # robust likelihood t distribution on 4 df mu[i] &lt;- alpha + beta*(age[i] - mean(age[])) + gamma*sex[i] } # priors alpha ~ dunif(-1000, 1000) beta ~ dunif(-1000, 1000) gamma ~ dunif(-1000, 1000) logsigma2 ~ dunif(-100, 100) sigma2 &lt;- exp(logsigma2) tau &lt;- 1/sigma2 } 99.3 貝葉斯統計模型的比較 Bayesian model comparison 在使用統計學模型時，我們自然而然地想用模型對數據的擬合度來輔助進行模型的篩選及比較。常用的指標有 Akaike Information Criterion (AIC)： \\[ \\text{AIC} = -2\\log p(y | \\hat \\theta) + 2k \\] 其中， \\(p(y|\\hat\\theta)\\) 就是模型的似然(likelihood)用來代表模型對數據的擬合度，\\(k\\) 是模型中的未知參數個數，用來表示模型的復雜程度。 99.3.1 Deviance Information Criterion (DIC) (Spiegelhalter et al. 2002)提出用 DIC 來比較貝葉斯模型。它也是利用和 AIC 類似的思想，使用DIC來綜合表示模型的擬合度，及模型的復雜程度： \\[ \\text{DIC} = \\text{goodness of fit} + \\text{complexity} \\] 其中模型的擬合程度部分用的是模型偏差值：\\(D(\\theta) = -2\\log L(data | \\theta)\\)； 模型復雜程度使用的則是，模型中有效的未知參數的個數： \\[ \\begin{aligned} p_D &amp; = E_{\\theta | y}[D] - D(E_{\\theta | y}[\\theta]) \\\\ &amp; = \\bar D - D(\\bar\\theta) \\end{aligned} \\] i.e. the posterior mean deviance minus the deviance evaluated at the posterior mean of the parameters. 然後 DIC 的定義也模仿 AIC： \\[ \\begin{aligned} \\text{DIC} &amp; = D(\\bar\\theta) + 2 p_D \\\\ &amp; = \\bar D + p_D \\end{aligned} \\] 比較的方法是DIC越小的模型，越優，數據越支持。 如果兩個模型的 DIC 相差大於 10，說明DIC較小的模型更好； 如果兩個模型的 DIC 相差小於 5，說明兩個模型無太大差別。 在BUGS軟件中你需要像追蹤監測其他隨機變量一樣監測模型的DIC，特別是要在確定模型已經達到收斂之後，採集收斂之後的 DIC 數值用於比較。 99.3.2 岡比亞兒童體重數據模型比較 當設定體重服從正態分布時，我們獲得模型的 DIC 是 Dbar Dhat DIC pD wt 625.1 621.1 629.1 3.983 total 625.1 621.1 629.1 3.983 當設定體重服從自由度爲4的t分布時，我們獲得模型的 DIC 是 Dbar Dhat DIC pD wt 622.1 618 626.2 4.114 total 622.1 618 626.2 4.114 兩個模型的DIC差別在3左右，也就是說用正態分布，或者t分布，對結果影響不大。 這兩個模型給出的我們的問題的答案也不會有本質上的差別： 年齡每增加1個月，體重的變化： 正態分布：\\(\\beta\\) 的事後均值爲 0.164 kg，95% 可信區間 (0.143, 0.186)； t 分布：\\(\\beta\\) 的事後均值爲 0.167 kg, 95% 可信區間 (0.146, 0.187)。 男孩和女孩的體重差別： 正態分布：\\(\\gamma\\) 的事後均值爲 -0.520 kg，95% 可信區間 (-0.880, -0.160)； t 分布：\\(\\gamma\\) 的事後均值爲 -0.574 kg，95% 可信區間 (-0.915, -0.232)。 99.4 Practical Bayesian Statistics 05 本次練習我們來比較多個貝葉斯線性回歸模型。看看在模型中增加其他的變量是否能改善模型的擬合度，最終你會選哪個線性回歸模型來回答一開始我們提出的問題。 除了本章實例中使用的線性回歸模型，另外可以拿來比較的模型分別是： 增加年齡的二次方項 \\(age^2\\)； 增加年齡和性別的交互作用項 \\(age \\times sex\\)。 在思考貝葉斯模型怎樣增加上面兩個變量的語法的同時，請思考這樣幾個問題： 要怎樣修改模型的BUGS代碼才能正確表達想要增加的模型變量？特別是模型應該怎麼寫才能把年齡的平方中心化？ 如何寫MCMC鏈的起始值？ 跑完模型以後，給模型的擬合實施常規的檢查。 簡單線性迴歸模型中增加了這些部分後的結果，要如何回答我們一開始提出的問題？（年齡每增加一個月，體重的變化是多少kg？男孩和女孩之間的體重差別是多少kg？） 99.4.1 增加年齡二次方項 adding age squared model{ for(i in 1:190){ # loop through the 190 children wt[i] ~ dnorm(mu[i], tau) mu[i] &lt;- alpha + beta*cage[i] + gamma*sex[i] + delta*cagesq[i] cage[i] &lt;- age[i] - mean(age[]) # centered age agesq[i] &lt;- pow(age[i], 2) cagesq[i] &lt;- agesq[i] - mean(agesq[]) # centered age squared # standardised residuals res[i] &lt;- (wt[i] - mu[i]) / sqrt(sigma2) # predictions wt.pred[i] ~ dnorm(mu[i], tau) # repredict for each child p.pred[i] &lt;- step(wt[i] - wt.pred[i]) } # priors alpha ~ dunif(-1000, 1000) beta ~ dunif(-1000, 1000) gamma ~ dunif(-1000, 1000) delta ~ dunif(-1000, 1000) logsigma2 ~ dunif(-100, 100) sigma2 &lt;- exp(logsigma2) tau &lt;- 1/sigma2 } 使用的兩個MCMC鏈的起始值分別是： initlist &lt;- list(alpha = 0, beta = 1, gamma = 5, delta = -1, logsigma2 = 1) initlist1 &lt;- list(alpha = 10, beta = 0, gamma = -5, delta = 1, logsigma2 = 5) 獲得的50000個事後概率分佈樣本的統計描述是： mean sd MC_error val2.5pc median val97.5pc start sample alpha 9.945000 0.136100 1.166e-03 9.677000 9.945000 10.2100000 1001 50000 beta 0.256600 0.053360 1.452e-03 0.151600 0.256500 0.3621000 1001 50000 delta -0.002429 0.001372 3.731e-05 -0.005133 -0.002422 0.0002715 1001 50000 gamma -0.535000 0.181100 1.526e-03 -0.887300 -0.534900 -0.1815000 1001 50000 sigma2 1.563000 0.164300 8.325e-04 1.275000 1.551000 1.9190000 1001 50000 模型的 DIC 是： Dbar Dhat DIC pD wt 623 618 628 5.008 total 623 618 628 5.008 和之前沒有增加年齡平方的模型相比較DIC減少了大概只有1。因此，基本沒有差別的情況下，我們選擇沒有年齡平方的一開始的模型。從 delta 的事後概率分佈結果也知道它的95%可信區間是包括0的。也說明了增加年齡平方項的部分無太多意義。 99.4.2 增加年齡和性別的交互作用項 adding an interaction term model{ for(i in 1:190){ # loop through the 190 children wt[i] ~ dnorm(mu[i], tau) mu[i] &lt;- alpha + beta*cage[i] + gamma*sex[i] + delta*cage[i]*sex[i] cage[i] &lt;- age[i] - mean(age[]) # centered age # standardised residuals res[i] &lt;- (wt[i] - mu[i]) / sqrt(sigma2) # predictions wt.pred[i] ~ dnorm(mu[i], tau) # repredict for each child p.pred[i] &lt;- step(wt[i] - wt.pred[i]) } # priors alpha ~ dunif(-1000, 1000) beta ~ dunif(-1000, 1000) gamma ~ dunif(-1000, 1000) delta ~ dunif(-1000, 1000) logsigma2 ~ dunif(-100, 100) sigma2 &lt;- exp(logsigma2) tau &lt;- 1/sigma2 } 使用的起始值分別是： initlist &lt;- list(alpha = 0, beta = 1, gamma = 5, delta = -5, logsigma2 = 1) initlist1 &lt;- list(alpha = 10, beta = 0, gamma = -5, delta = 5, logsigma2 = 5) 事後概率分佈樣本的統計學描述是： mean sd MC_error val2.5pc median val97.5pc start sample alpha 9.937000 0.13730 0.0011460 9.66900 9.936000 10.21000 1001 50000 beta 0.165500 0.01609 0.0001244 0.13380 0.165500 0.19710 1001 50000 delta -0.002979 0.02223 0.0001703 -0.04668 -0.003053 0.04065 1001 50000 gamma -0.519900 0.18380 0.0015730 -0.88040 -0.518800 -0.16250 1001 50000 sigma2 1.590000 0.16700 0.0007803 1.29800 1.578000 1.94800 1001 50000 DIC是： Dbar Dhat DIC pD wt 626.1 621.1 631.1 5.003 total 626.1 621.1 631.1 5.003 增加了性別年齡交互項的模型給出的DIC比原先的模型大了2個單位左右，所以，我們還是會選擇沒有交互作用項的一開始的簡單線性迴歸模型。 References "],["Bayes-design.html", "第 100 章 不同實驗/研究設計時適用的貝葉斯模型 100.1 隊列研究設計時的貝葉斯模型 100.2 病例對照研究設計時的貝葉斯模型 100.3 橫斷面研究設計時的貝葉斯模型 100.4 把不同實驗設計的數據用貝葉斯模型連接起來 100.5 Practical Bayesian Statistics 06", " 第 100 章 不同實驗/研究設計時適用的貝葉斯模型 本章節我們將要學習和探索如何給不同的實驗設計方法寫相對應的 BUGS 貝葉斯模型，用於比較不同組之間的差異。根據不同的試驗設計，模型也會跟着發生變化。例如病例對照研究的數據和模型結構，一定和隊列研究，或者是簡單的橫斷面研究的模型和數據結構差別甚遠。 爲不同的實驗設計寫下正確的貝葉斯模型的關鍵是，要深刻理解不同實驗設計時的樣本採集過程：實驗對象的哪些特徵，哪些變量是確定的，哪些被認爲是隨機變量。我們要爲那些被認爲是隨機變量的部分採集事後概率分佈樣本。 貫穿本章節，我們默認： \\(Y\\) 是要研究的疾病，\\(X\\) 是要研究的暴露因素； 給概率 (probabilities)，和患病率 (prevalences)提供均一先驗概率分佈 (uniform priors)。給作用效果的評價指標例如危險度比 (risk ratios, RR)，危險度差 (risk difference, RD)，或者是比值比 (odds ratios, OR)提供中性的，圍繞着無效爲中心的先驗概率分佈 (“neutral” priors centred on no effect)。 100.1 隊列研究設計時的貝葉斯模型 假如我們徵集兩組觀察對象，一組爲2000名非吸菸者，另一組爲1000名吸菸者。他們年齡均爲30歲，之後我們隨訪這兩組研究對象20年，觀察到非吸菸者癌症發病人數爲100人，吸菸者癌症發病人數爲150人。這個實驗設計的目的是比較兩組觀察對象的20年癌症發病危險度。在這個實驗設計條件下，癌症發病是隨機變量，但是暴露組（吸菸）和非暴露組（非吸菸）的人數，是一開始已經定下來不會改變的數值。 需要強調的是，BUGS語言十分靈活，同一個模型，不同的人寫可能會給出完全不同，結果卻十分相近的代碼。給模型中的未知參數指定先驗概率分布時的方法也不盡相同。本隊列研究的實例中，比較癌症發病危險度 (risk) 的模型之一，可以寫作： model{ Y0 ~ dbin(r0, X0) # Data model for unexposed Y1 ~ dbin(r1, X1) # Data model for exposed # Priors for risks of exposed and unexposed r0 ~ dbeta(a.unexp, b.unexp) r1 ~ dbeta(a.exp, b.exp) # Computation of comparison statistics rd &lt;- r1 - r0 # for Risk Difference rr &lt;- r1 / r0 # for Risk Ratio } 數據文件可以寫作： list(X0 = 2000, X1 = 1000, Y0 = 100, Y1 = 150, a.unexp = 1, b.unexp = 1, a.exp = 1, b.exp = 1) 在上面的BUGS模型代碼中，我們需要給暴露組和非暴露組的發病危險度 (risks) 指定先驗概率分布。但是更常見的是直接給出危險度差，或者危險度比本身的先驗概率分布。這時候你可以把上面的 BUGS 模型加以修改： model{ Y0 ~ dbin(r0, X0) # Data model for unexposed Y1 ~ dbin(r1, X1) # Data model for exposed # define r1 as the unexposed risk plus an effect &quot;rd&quot; r1 &lt;- r0 + rd # Priors for risks of exposed and unexposed r0 ~ dbeta(a.unexp, b.unexp) rd ~ dunif(min.rd, max.rd) # Computation of comparison statistics rr &lt;- r1 / r0 # for Risk Ratio } 對於這個模型代碼來說，你需要給出的數據文件中，對於 r1 的部分可以省去，但是需要給出 rd 的先驗概率分布中均一分布的兩個超參數 (hyper parameters)： list(X0 = 2000, X1 = 1000, Y0 = 100, Y1 = 150, a.unexp = 1, b.unexp = 1, min.rd = -30, max.rd = 30) 如果你又改變主意，對相對危險度比 (risk ratio, RR) 的模型更加感興趣，建議你使用 logit 來把百分比放入模型中，因爲 \\(\\log \\text{OR}\\) 通常更加符合正態分布，便於給出先驗概率分布。這時候模型又可以變形成爲： model{ Y0 ~ dbin(r0, X0) # Data model for unexposed logit(r0) &lt;- lr0 # define the logit of r0 Y1 ~ dbin(r1, X1) # Data model for exposed logit(r1) &lt;- lr1 # define the logit of r1 # define lr1 as the unexposed logit(risk) plus log(OR): lr1 &lt;- lr0 + lor # priors for the logit of risk of unexposed and of log(OR): lr0 ~ dnorm(mean.lr0, pr.lr0) lor ~ dnorm(mean.lor, pr.lor) # computations of comparison statistics: rd &lt;- r1 - r0 # For risk difference rr &lt;- r1 / r0 # For risk ratio } 這個模型中要給 r0 一個均一分布的先驗概率，又希望給 or 指定一個95%可信區間在 (1/30, 30) 範圍內的先驗概率。那麼合適的數據文件可以寫作： list(X0 = 2000, X1 = 1000, Y0 = 100, Y1 = 150, mean.lr0 = 0, pr.lr0 = 0.3, mean.lor = 0, pr.lor = 0.33) 100.2 病例對照研究設計時的貝葉斯模型 假設試驗設計改成了病例對照研究，我們找到了1000名癌症患者，2000名無癌症的研究對象作爲對照。之後我們讓這兩羣研究對象回憶自己過去20年的吸煙史。假設數據收集到的是，在癌症患者組，有100名是吸煙者，在無癌症的對照組中吸煙人數有800人。在這個實驗設計的條件下，隨機會發生變化的就再也不是癌症的發病概率，或者危險度，而是吸煙於非吸煙的暴露，非暴露的變量 (smokers, non-smokers)。這時候我們來把模型中的變量用 logit 刻度(scale)來表示就是： model{ X0 ~ dbin(p0, Y0) # data model for CONTROLS logit(p0) &lt;- lp0 # define the logit of p0 X1 ~ dbin(p1, Y1) # data model for CASES logit(p1) &lt;- lp1 # define the logit of p1 # define lp1 as the unexposed logit(exposure) plus log(OR) lp1 &lt;- lp0 + lor # Priors for logit of exposure and of log(OR) lp0 ~ dnorm(mean.lp0, pr.lp0) lor ~ dnorm(mean.lor, pr.lor) # Computation of comparison statistics or &lt;- exp(lor) # For Odds Ratio } 這時候合適的數據文件，及先驗概率分布的超參數的指定可以寫作： list(Y0 = 2000, Y1 = 1000, X0 = 800, X1 = 600, mean.lp0 = 0, pr.lp0 = 0.3, mean.lor = 0, pr.lor = 0.33) 從這裏的代碼也可以看出，此時我們能獲得的評價指標只能是比值比 OR，它直接從對數比值比\\(\\log \\text{OR}\\)獲得。在病例對照研究的實驗設計下，我們無法計算危險度差(risk difference)，或者危險度比(risk ratio)，因爲我們獲得的只有在病例組，和對照組中暴露和非暴露的百分比 (we only have probabilities of exposure in disease categories)。 100.3 橫斷面研究設計時的貝葉斯模型 思考橫斷面研究時，我們的數據是怎樣構成的？ 此時我們採集400名實驗對象作爲橫斷面研究的樣本，然後在這個樣本中我們觀察他們的癌症患病與否，及吸煙習慣。假設數據是這樣的： 25名吸煙者患有癌症； 15名非吸煙者患有癌症； 150名吸煙者無癌症； 剩餘210名非吸煙者無癌症。 此時，這四個數據全部都是隨機變量。唯一一個固定不變的數字是總的樣本量 400 名研究對象。我們用 \\(N_{ij}\\) 來標記疾病狀態爲 \\(i\\)，吸煙習慣爲 \\(j\\) 的實驗對象人數。其中 \\(i, j = 0 \\text{(absent) or } 1\\text{(present)}\\)，那麼此時我們的數據就是 \\(N=[N_{11}, N_{10}, N_{01}, N_{00}] = [25, 15, 150, 210]\\)。 這四個數字是隨機，但不獨立的，因爲它們的總和400是已知的。這時可以想象這四個數字是按照一定的比例，從總體爲 1 的樣本中抽取，其參數分別是 \\(\\theta_{ij}, i, j = 0, 1\\)，且滿足 \\(\\sum_{ij}\\theta_{ij} = 1\\)。滿足這樣實驗設計的數學模型叫做多項式分布 (multinomial distribution)： \\[ N \\sim \\text{Multinomial}([\\theta_{11}, \\theta_{10}, \\theta_{01}, \\theta_{00}], 400) \\] 這樣的多項式分布中，我們感興趣的是其多個參數組成的一個互相有關系的向量 \\(\\mathbf{\\theta}\\)。由於這個向量中的參數之間並非相互獨立，所以我們無法分別一一給予先驗概率分布。（這很容易理解，因爲當某些參數很高時，其餘參數取值就必須是低的）這時候我們需要給整個向量 \\(\\mathbf{\\theta}\\) 提供一個綜合的先驗概率分布。 能給一個元素都是百分比的向量提供合適先驗概率的合理分布叫做狄利克雷 (Dirichlet) 分布。狄利克雷分布可以被認爲是 Beta 分布的多維擴展分布(multi-dimensional generalization of the beta distribution)。它是易於參數化(parameterize)的一個很靈活的分布，其組成元素就是一個由正數組成的向量 (a positive numbers)： \\[ \\mathbf{\\theta} \\sim \\text{Dirichlet}(\\alpha_1, \\alpha_2, \\dots. \\alpha_k) \\text{ where } \\alpha_i &gt;0, \\text{ and we denote } \\sum_{i = 1}^k \\alpha_i = \\alpha \\] 一個滿足狄利克雷分布的向量，它有如下的特徵： 狄利克雷分布中的任意一個分類的(category)邊際先驗概率分布(marginal prior distribution)是一個Beta分布：\\(\\theta_i \\sim \\text{Beta}(\\alpha_i, \\alpha - \\alpha_i)\\)； 狄利克雷分布中的任意一個分類的參數 \\(\\theta_i\\) 的均值（期望）是：\\(E(\\theta_i) = \\frac{\\alpha_i}{\\alpha}\\)； 狄利克雷分布中的任意一個分類的參數 \\(\\theta_i\\) 的方差是：\\(V(\\theta_i) = \\frac{E(\\theta_i)(1-E(\\theta_i))}{\\alpha + 1}\\) 另外有意思的一個特點是，當一個狄利克雷分布的所有元素 \\(\\alpha_i\\) 同時乘以一個正數 \\(w\\) (positive number)，產生的新的狄利克雷分布中的每個元素的參數均值（期望）與之前的狄利克雷分布均值相同，但是方差約等於之前狄利克雷分布元素的參數方差除以 \\(w\\)。利用這個性質，我們可以認爲 \\(\\alpha\\) 相當於樣本量大小： 狄利克雷分布\\(\\text{Dirichlet}(1,2,1)\\)，其實是樣本量爲\\(\\alpha = 4\\)，均值是 \\(\\text{Means}[0.25, 0.5, 0.25]\\)的分布； 狄利克雷分布\\(\\text{Dirichlet}(1,2,1)\\)，其實是樣本量爲\\(\\alpha = 40\\)，均值也是\\(\\text{Means}[0.25, 0.5, 0.25]\\)的分布。 利用狄利克雷分布作爲橫斷面研究設計的先驗概率分布，我們把本節的實驗設計用BUGS語言總結出它的合適的模型： model{ N[1:4] ~ dmulti(p[], S) # data model for sample p[1:4] ~ ddirch(alpha[]) # Dirichlet prior for vector of probabilities # Computation of comparison statistics: px0 &lt;- p[2] + p[4] # proportion of non-exposed px1 &lt;- 1 - px0 # proportion of exposed r0 &lt;- p[2] / px0 # risk in the non-exposed r1 &lt;- p[1] / px1 # risk in the exposed rr &lt;- r1 / r0 # risk ratio, RR rd &lt;- r1 - r0 # risk difference, RD or &lt;- (p[1]*p[4]) / (p[2]*p[3]) # odds ratio, OR p.crit &lt;- step(or - 1) # =1 if or &gt;= 1, 0 otherwise # calculate the total sample size S &lt;- sum(N[]) } 這個模型的數據文件則應該寫作： list(N = c(25, 15, 150, 210), alpha = c(1, 1, 1, 1)) # uniform prior for p_ij 模型的最後一行我們定義了總樣本量，且我們在橫斷面研究的實驗設計下，可以同時計算危險度差，危險度比，以及比值比等指標。另外我們還利用方便的step命令計算比值比大於1的概率。和其他任何一個貝葉斯模型一樣，我們需要給模型中的未知參數 p[1:4] 合理且分散的起始值 (initial values)。 這個模型的結果展示如下： Iterations = 1001:26000 Thinning interval = 1 Number of chains = 2 Sample size per chain = 25000 1. Empirical mean and standard deviation for each variable, plus standard error of the mean: Mean SD Naive SE Time-series SE deviance 18.81623 2.453005 1.097e-02 1.105e-02 or 2.43862 0.861082 3.851e-03 3.886e-03 p[1] 0.06436 0.012207 5.459e-05 5.459e-05 p[2] 0.03959 0.009694 4.335e-05 4.335e-05 p[3] 0.37378 0.024005 1.074e-04 1.078e-04 p[4] 0.52227 0.024829 1.110e-04 1.110e-04 p.crit 0.99372 0.078998 3.533e-04 3.630e-04 r0 0.07046 0.016980 7.594e-05 7.593e-05 r1 0.14689 0.026570 1.188e-04 1.188e-04 rd 0.07643 0.031454 1.407e-04 1.407e-04 rr 2.21362 0.703480 3.146e-03 3.172e-03 2. Quantiles for each variable: 2.5% 25% 50% 75% 97.5% deviance 16.04000 17.02000 18.19000 19.92000 25.11000 or 1.18700 1.83300 2.29700 2.88600 4.52103 p[1] 0.04272 0.05571 0.06368 0.07215 0.09039 p[2] 0.02285 0.03268 0.03880 0.04563 0.06050 p[3] 0.32720 0.35750 0.37360 0.38980 0.42150 p[4] 0.47350 0.50560 0.52240 0.53890 0.57060 p.crit 1.00000 1.00000 1.00000 1.00000 1.00000 r0 0.04094 0.05839 0.06914 0.08114 0.10730 r1 0.09882 0.12820 0.14570 0.16410 0.20270 rd 0.01569 0.05514 0.07586 0.09718 0.13970 rr 1.16700 1.71900 2.10500 2.58700 3.90200 可以看到，所有的監測指標的95%可信區間的下限都超過了零假設值 (null value)。且 OR 大於1的概率超過99%，由於我們使用的是無實際信息的先驗概率分布，所以這個分析結果是十分接近概率論模型的結果的。 假如我們現在有充分的理由相信，在本次研究對象中無癌症的對象中的吸煙者的百分比是被嚴重低估的，且我們有充足的理由認爲，這些人中有大約60%其實是吸煙者，但是對於癌症患者中吸煙者的百分比我們沒有太多的概念。那麼這樣的知識可以被翻譯到先驗概率分布的超參數裏面去：alpha = c(1,1,600,400) 這時候結果變成了下面這樣： Iterations = 1001:26000 Thinning interval = 1 Number of chains = 2 Sample size per chain = 25000 1. Empirical mean and standard deviation for each variable, plus standard error of the mean: Mean SD Naive SE Time-series SE deviance 86.75869 10.43878 4.67e-02 4.67e-02 or 1.41233 0.48014 2.15e-03 2.15e-03 p[1] 0.01854 0.00361 1.61e-05 1.61e-05 p[2] 0.01141 0.00283 1.27e-05 1.28e-05 p[3] 0.53491 0.01330 5.95e-05 5.92e-05 p[4] 0.43514 0.01325 5.93e-05 5.96e-05 p.crit 0.81588 0.38759 1.73e-03 1.74e-03 r0 0.02554 0.00630 2.82e-05 2.86e-05 r1 0.03350 0.00646 2.89e-05 2.89e-05 rd 0.00796 0.00901 4.03e-05 4.03e-05 rr 1.39672 0.46134 2.06e-03 2.06e-03 2. Quantiles for each variable: 2.5% 25% 50% 75% 97.5% deviance 67.64000 79.50000 86.26000 93.5700 108.5000 or 0.70919 1.07600 1.33600 1.6600 2.5680 p[1] 0.01216 0.01598 0.01833 0.0208 0.0262 p[2] 0.00654 0.00940 0.01118 0.0132 0.0176 p[3] 0.50880 0.52600 0.53480 0.5439 0.5611 p[4] 0.40930 0.42620 0.43510 0.4440 0.4613 p.crit 0.00000 1.00000 1.00000 1.0000 1.0000 r0 0.01473 0.02106 0.02504 0.0294 0.0393 r1 0.02205 0.02894 0.03313 0.0376 0.0472 rd -0.01009 0.00205 0.00804 0.0140 0.0255 rr 0.71649 1.07400 1.32400 1.6360 2.5040 這時候我們通過先驗概率分布給模型中加入和較大的信息量，事實上，我們加入的先驗概率代表的”樣本量”：alpha = c(1,1,600,400)，甚至比本次試驗本身的數據樣本量還要大。這時候各項指標 OR, RD, RR 的95%可信區間下限都包含了零假設值 (Null value)。甚至於此時OR大於1的概率已經降到了只有82%左右。 100.4 把不同實驗設計的數據用貝葉斯模型連接起來 通過使用不同的先驗概率分布，我們可以有效地利用實驗數據收集之前已經有的關於相似，或者相同實驗的重要結果（而不是僅僅做相互比較和討論）。比方說，我們計算獲得的某個模型某次實驗數據之後獲得的參數的事後概率分佈可以用作下一次類似研究時需要使用的先驗概率分佈信息。另外一種提高數據利用率的方法是，我們通過兩個試驗(可以是設計相同也可以是設計不同，但是討論相同研究問題的試驗)的共同參數把兩次甚至多次試驗的模型連接起來，如此既能提高事後概率分佈估計的精確度，也提高了數據的合理利用率。 100.4.1 Linking sub-models throug common parameters 在本章節的語境下，我們假設對一個相同的疾病結果\\((Y)\\)，和相同的暴露因素\\((X)\\)之間的關係做了兩次不同的研究。數據分別收集自一個隊列研究，和一個病例對照研究。 對於隊列研究來說，我們用 \\(X0c, X1c\\) 分別標記非暴露組，及暴露組的總觀察人數；用 \\(Y0c, Y1c\\) 分別標記非暴露組和暴露組的新發病例人數。那麼和這個隊列研究數據分析相匹配的貝葉斯模型的 BUGS 代碼是： model{ # Data model for unexposed group Y0c ~ dbin(r0, X0c) logit(r0) &lt;- lr0 # Data model for exposed group Y1c ~ dbin(r1, X1c) logit(r1) &lt;- lr1 # lor is log(OR) lr1 &lt;- lr0 + lor # Prior for logit of unexposed risk lr0 ~ dnorm(0, 0.3) # Prior for log(OR) lor ~ dnorm(0, 0.33) } 該模型也可以用 DAG 有向無環圖 (100.1) 來表示： 圖 100.1: DAG for model for data from the cohort study 至於病例對照設計的研究數據，用 \\(Y0cc\\) 來標記收集到的病例組人數，\\(Y1cc\\) 來標記收集到的對照組人數。用 \\(X0cc, X1cc\\) 分別標記對照組和病例組中有暴露的人數。那麼此時，該病例對照研究的實驗設計對應的BUGS語言描述的貝葉斯統計學模型可以寫作： model{ # Data model for controls X0cc ~ dbin(p0, Y0cc) logit(p0) &lt;- lp0 # Data model for cases X1cc ~ dbin(p1, Y1cc) logit(p1) &lt;- lp1 # lor is log(OR) lp1 &lt;- lp0 + lor # Prior for logit of probability of exposure for controls lp0 ~ dnorm(0, 0.3) # Prior for log(OR) lor ~ dnorm(0, 0.33) } 這個病例對照模型的 DAG 圖可以表示爲： 圖 100.2: DAG for model for data from the case-control study 從這兩個DAG圖我們也能一眼看出，這兩個模型裏面有一個共同的未知參數 lor。就是這個共同的參數可以讓我們把兩個模型連在一起，提高數據的利用效率。現在，我們把這兩個模型通過共同參數連起來的模型的DAG圖繪製出來： 圖 100.3: DAG for JOINT model for data from the cohort study and the case-control study combined through log(OR) 此時，對應 DAG 圖 100.3 的合併模型的聯合模型，其BUGS語言描述的貝葉斯模型如下： model{ # Cohort sub-model # Data model for unexposed group Y0c ~ dbin(r0, X0c) logit(r0) &lt;- lr0 # Data model for exposed group Y1c ~ dbin(r1, X1c) logit(r1) &lt;- lr1 # lor is log(OR) lr1 &lt;- lr0 + lor # Prior for logit of unexposed risk lr0 ~ dnorm(0, 0.3) # Case-control sub-model # Data model for controls X0cc ~ dbin(p0, Y0cc) logit(p0) &lt;- lp0 # Data model for cases X1cc ~ dbin(p1, Y1cc) logit(p1) &lt;- lp1 # lor is log(OR) lp1 &lt;- lp0 + lor # Prior for logit of probability of exposure for controls lp0 ~ dnorm(0, 0.3) # Prior for common log(OR) lor ~ dnorm(0, 0.33) } 其實，通過類似的辦法，你可以把無數多個研究，無論它們是相似的或者不同的實驗設計，只要你能找到它們有共同的未知參數，就可以通過貝葉斯模型連接起來，成爲一個首尾相接，數據聯通的大模型。這真是一件在概率論模型下永遠也無法做到的神奇的事情！ 100.5 Practical Bayesian Statistics 06 100.5.1 The GREAT Trial 在第一個章節，貝葉斯入門和回顧基礎知識的時候，我們介紹過GREAT臨牀試驗，這是一個雙盲對照試驗。比較阿尼普酶，一種血栓溶解藥物的兩種治療方案： 治療組：當患者被家庭醫生 (General Practitioners) 發現心肌梗塞時(myocardial infarctin, MI)，在家中立刻給予阿尼普酶藥物，等到患者被救護車帶到醫院以後給患者服用安慰劑。 對照組：同樣情況下，家庭醫生在家中發現患者有心肌梗塞時先不給予藥物治療，而是先讓患者服用安慰劑，等救護車帶患者抵達醫院之後再讓患者服用真正的阿尼普酶藥物。 這項試驗的主要觀察結果 (primary outcome) 是30天死亡率。 該項試驗獲得的觀察數據如下： 治療組163人，13例死亡； 對照組148人，23例死亡。 利用這個簡單的臨牀試驗設定，我們來實際的體驗不同的先驗概率分佈對貝葉斯分析結果的影響。 我們用BUGS語言先描述這個模型的設定： model { for (i in 1:2) { deaths[i] ~ dbin(p[i],n[i]) logit(p[i]) &lt;- alpha + beta*treat[i] } alpha ~ dunif(-100,100) beta ~ dunif(-100,100) OR &lt;- exp(beta) } 其中， treat[i] 是一個指示变量 (indicator variable)，i = 1 時表示對照組，i = 0 時表示治療組； death[i] 是第 i 組對象的死亡病例數； n[i] 是第 i 組對象的總人數； p[i] 是第 i 組試驗組患者死亡的概率。 解釋上面模型語句中 alpha, beta 的含義是什麼。 alpha 是治療組的對數比值 (log odds for the treatment arm) beta 是對照組和治療組相比較的死亡比值比 (log odds ratio of death in the control arm compared to the treatment arm)，當 beta 大於1時，說明對照組死亡比值高，結果對治療組有利。 用兩組起始值文件來跑這個貝葉斯模型。 # Data file for the model Dat &lt;- list( n = c(163, 148), deaths = c(13, 23), treat = c(0, 1) ) # initial values for the model # the choice is arbitrary inits &lt;- list( list(alpha = 1, beta = -1), list(alpha = -1, beta = 1) ) # fit the model in jags jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/great-model1.txt&quot;, sep = &quot;&quot;), parameters.to.save = c(&quot;OR&quot;, &quot;alpha&quot;, &quot;beta&quot;, &quot;p&quot;), n.iter = 1000, n.chains = 2, inits = inits, n.burnin = 0, n.thin = 1, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 2 ## Unobserved stochastic nodes: 2 ## Total graph size: 17 ## ## Initializing model # Show the trace plot Simulated &lt;- coda::as.mcmc(jagsModel) ggSample &lt;- ggs(Simulated) ggSample %&gt;% filter(Parameter %in% c(&quot;OR&quot;, &quot;alpha&quot;, &quot;beta&quot;, &quot;p[1]&quot;, &quot;p[2]&quot;)) %&gt;% ggs_traceplot() 圖 100.4: History plots for iterations 1-1000 for the GREAT trial. gelman.diag(Simulated) ## Potential scale reduction factors: ## ## Point est. Upper C.I. ## OR 1.05 1.13 ## alpha 1.02 1.06 ## beta 1.02 1.06 ## deviance 1.02 1.07 ## p[1] 1.01 1.04 ## p[2] 1.00 1.01 ## ## Multivariate psrf ## ## 1.02 gelman.plot(Simulated) 圖 100.5: Gelman-Rubin convergence statistic for the GREAT trial. 你會發現這個模型很快就能達到收斂，所以，我們選擇刨除前1000次採樣能夠滿足要求，我們另外再進行每條 MCMC 鏈各 25000 次樣本採集： 記錄這時候我們獲得的比值比 OR，迴歸係數，及兩組實驗組的事後死亡概率。 jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/great-model1.txt&quot;, sep = &quot;&quot;), parameters.to.save = c(&quot;OR&quot;, &quot;alpha&quot;, &quot;beta&quot;, &quot;p&quot;), n.iter = 26000, n.chains = 2, n.burnin = 1000, n.thin = 1, inits = inits, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 2 ## Unobserved stochastic nodes: 2 ## Total graph size: 17 ## ## Initializing model print(jagsModel) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/great-model1.txt&quot;, fit using jags, ## 2 chains, each with 26000 iterations (first 1000 discarded) ## n.sims = 50000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% Rhat n.eff ## OR 2.315 0.915 1.058 1.674 2.144 2.760 4.606 1.001 35000 ## alpha -2.480 0.295 -3.101 -2.669 -2.467 -2.277 -1.938 1.001 6000 ## beta 0.769 0.373 0.057 0.515 0.763 1.015 1.527 1.001 35000 ## p[1] 0.080 0.021 0.043 0.065 0.078 0.093 0.126 1.001 6000 ## p[2] 0.155 0.030 0.102 0.135 0.154 0.174 0.218 1.001 16000 ## deviance 11.164 2.024 9.197 9.725 10.540 11.938 16.601 1.001 50000 ## ## For each parameter, n.eff is a crude measure of effective sample size, ## and Rhat is the potential scale reduction factor (at convergence, Rhat=1). ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 2.0 and DIC = 13.2 ## DIC is an estimate of expected predictive error (lower deviance is better). 現在我們把先驗概率分佈修改成： \\[ \\begin{aligned} \\alpha &amp; \\sim \\text{Logistic}(0,1) \\\\ \\beta &amp; \\sim \\text{Normal}(0, 0.33)\\; 0.33 \\text{ is the precision}\\\\ \\end{aligned} \\] 其中，邏輯分佈方程的BUGS語言是 dlogis；這個先驗概率給予 beta 的指定信息是基於想要給它一個沒有太多信息量的先驗概率分佈，其中對數比值比(log odds ratio)服從均值爲 0, 精確度(precision)爲 0.33 的正態分佈時，其對應的比值比 (odds ratio) 的95%則分佈在 1/30 至 30 之間。\\((\\text{sd} = \\frac{\\log30 - \\log(1/30)}{2*1.96}) = 1.735 \\rightarrow \\tau^2 = (1/1.735)^2 \\approx 0.33\\)。 用相似的過程試着跑完這個貝葉斯模型： jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/great-model1_alt.txt&quot;, sep = &quot;&quot;), parameters.to.save = c(&quot;OR&quot;, &quot;alpha&quot;, &quot;beta&quot;, &quot;p&quot;), n.iter = 1000, n.chains = 2, n.burnin = 0, n.thin = 1, inits = inits, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 2 ## Unobserved stochastic nodes: 2 ## Total graph size: 18 ## ## Initializing model # Show the trace plot Simulated &lt;- coda::as.mcmc(jagsModel) ggSample &lt;- ggs(Simulated) ggSample %&gt;% filter(Parameter %in% c(&quot;OR&quot;, &quot;alpha&quot;, &quot;beta&quot;, &quot;p[1]&quot;, &quot;p[2]&quot;)) %&gt;% ggs_traceplot() ## Potential scale reduction factors: ## ## Point est. Upper C.I. ## OR 1.020 1.078 ## alpha 1.025 1.109 ## beta 1.014 1.069 ## deviance 1.000 1.000 ## p[1] 1.021 1.099 ## p[2] 0.999 0.999 ## ## Multivariate psrf ## ## 1.02 圖 100.6: Gelman-Rubin convergence statistic for the GREAT trial with alternative priors for alpha and beta. jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/great-model1_alt.txt&quot;, sep = &quot;&quot;), parameters.to.save = c(&quot;OR&quot;, &quot;alpha&quot;, &quot;beta&quot;, &quot;p&quot;), n.iter = 26000, n.chains = 2, n.burnin = 1000, n.thin = 1, inits = inits, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 2 ## Unobserved stochastic nodes: 2 ## Total graph size: 18 ## ## Initializing model print(jagsModel) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/great-model1_alt.txt&quot;, fit using jags, ## 2 chains, each with 26000 iterations (first 1000 discarded) ## n.sims = 50000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% Rhat n.eff ## OR 2.086 0.779 0.977 1.536 1.950 2.478 3.993 1.001 4700 ## alpha -2.393 0.279 -2.979 -2.575 -2.381 -2.199 -1.879 1.001 5100 ## beta 0.671 0.357 -0.023 0.429 0.668 0.907 1.385 1.001 4700 ## p[1] 0.086 0.022 0.048 0.071 0.085 0.100 0.133 1.001 5200 ## p[2] 0.154 0.029 0.101 0.133 0.153 0.173 0.215 1.001 30000 ## deviance 11.129 1.976 9.192 9.718 10.526 11.893 16.403 1.001 38000 ## ## For each parameter, n.eff is a crude measure of effective sample size, ## and Rhat is the potential scale reduction factor (at convergence, Rhat=1). ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 2.0 and DIC = 13.1 ## DIC is an estimate of expected predictive error (lower deviance is better). 對改變了先驗概率前後的貝葉斯分析結果，你有什麼看法？ 我們發現改變先驗概率前的模型得到的事後比值比的結果有更大的均值，及更不穩定的估計(較高的事後樣本標準差，及較寬的事後樣本95%可信區間)。 爲了分析改變先驗概率分佈前後到底哪種給予了模型更多的信息，我們可以把兩個模型改寫成不含數據，只有預測模型的語句，從而可以看到只有先驗概率分佈時的結果是怎樣的。這時候我們把數據加載這一步省略掉，然後對 alpha, beta, p 進行軌跡檢測，繪製他們的預測分佈密度曲線。 library(runjags) library(rjags) library(R2jags) # Step 1 check model jagsModel &lt;- jags.model(file = paste(bugpath, &quot;/backupfiles/great-model1_forward.txt&quot;, sep = &quot;&quot;), data = list(treat = c(0, 1)), n.chains = 2) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 0 ## Unobserved stochastic nodes: 2 ## Total graph size: 13 ## ## Initializing model # Step 2 update 1000 iterations update(jagsModel, n.iter = 25000, progress.bar=&quot;none&quot;) # Step 3 set monitor variables codaSamples &lt;- coda.samples( jagsModel, variable.names = c(&quot;alpha&quot;, &quot;beta&quot;, &quot;p[1]&quot;, &quot;p[2]&quot;), n.iter = 25000, progress.bar=&quot;none&quot;) # Show density plot mcmcplots::denplot(codaSamples) 圖 100.7: Density plots for parameters prediction in GREAT trial first prior. # ggSample &lt;- ggs(codaSamples) # ggSample %&gt;% # filter(Parameter %in% c(&quot;alpha&quot;, &quot;beta&quot;, &quot;p[1]&quot;, &quot;p[2]&quot;)) %&gt;% # ggs_density() 對於這個模型來說，儘管我們給兩個邏輯迴歸的參數 alpha, beta 兩個”沒有信息”的均一分佈 (uniform distribution) 作爲先驗概率分佈，但是事實上，從 p[1], p[2] 的預測概率密度分佈圖來看，其實我們不經意竟然告訴模型另外的信息：就是我們認爲這兩組患者中死亡率要麼很高，接近1，要麼很低很低，接近於0。所以，我們自認爲給了模型無信息的先驗概率分佈，但是事實上卻給了模型大量的信息。 # Step 1 check model jagsModel &lt;- jags.model(file = paste(bugpath, &quot;/backupfiles/great-model1_altforward.txt&quot;, sep = &quot;&quot;), data = list(treat = c(0, 1)), n.chains = 2) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 0 ## Unobserved stochastic nodes: 2 ## Total graph size: 14 ## ## Initializing model # Step 2 update 1000 iterations update(jagsModel, n.iter = 25000, progress.bar=&quot;none&quot;) # Step 3 set monitor variables codaSamples &lt;- coda.samples( jagsModel, variable.names = c(&quot;alpha&quot;, &quot;beta&quot;, &quot;p[1]&quot;, &quot;p[2]&quot;), n.iter = 25000, progress.bar=&quot;none&quot;) # Show density plot mcmcplots::denplot(codaSamples) 圖 100.8: Density plots for parameters prediction in GREAT trial second prior. 第二次修改過後的先驗概率明顯就安全得多了。因爲我們看到兩組的死亡概率基本可以認爲不再像前一個模型那樣含有太多不實際的信息。 作爲替代方案，我們可以把上述模型重新用對數比值比(Log odds ratio, LOR)作爲未知參數來重新建模： \\[ LOR = \\log(\\frac{p[1]/(1 - p[1])}{p[2]/(1 - p[2])}) = \\text{logit}(p[1]) - \\text{logit}(p[2]) \\] 這時候我們需要給 p[2], LOR 賦予先驗概率分布： model { for (i in 1:2) { deaths[i] ~ dbin(p[i],n[i]) } logit(p[1]) &lt;- logit(p[2]) + LOR p[2] ~ dbeta(1,1) LOR ~ dnorm(0,0.33) OR &lt;- exp(LOR) } 再看一遍上面寫好的模型，確定你能夠理解其含義，請確認先驗概率分布的實際意義。 注意我們用beta 分布來描述 p[2] 的先驗概率分布。 jagsModel &lt;- jags(data = list(n = c(148, 163), deaths = c(23, 13)), model.file = paste(bugpath, &quot;/backupfiles/great-model2.txt&quot;, sep = &quot;&quot;), parameters.to.save = c(&quot;OR&quot;, &quot;p&quot;), n.iter = 26000, n.chains = 2, n.burnin = 1000, n.thin = 1, inits = list(list(LOR = 0.5, p = c(NA, 0.2)), list(LOR = 5, p = c(NA, 0.8))), progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 2 ## Unobserved stochastic nodes: 2 ## Total graph size: 13 ## ## Initializing model print(jagsModel) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/great-model2.txt&quot;, fit using jags, ## 2 chains, each with 26000 iterations (first 1000 discarded) ## n.sims = 50000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% Rhat n.eff ## OR 2.085 0.777 0.988 1.541 1.949 2.476 3.975 1.001 7700 ## p[1] 0.154 0.029 0.101 0.133 0.152 0.173 0.215 1.001 21000 ## p[2] 0.086 0.021 0.049 0.071 0.084 0.099 0.132 1.001 12000 ## deviance 11.119 1.978 9.193 9.716 10.511 11.864 16.425 1.001 5500 ## ## For each parameter, n.eff is a crude measure of effective sample size, ## and Rhat is the potential scale reduction factor (at convergence, Rhat=1). ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 2.0 and DIC = 13.1 ## DIC is an estimate of expected predictive error (lower deviance is better). 修改模型的代碼使之用於向前採集樣本用於預測： model { # for (i in 1:2) { # deaths[i] ~ dbin(p[i],n[i]) # } logit(p[1]) &lt;- logit(p[2]) + LOR p[2] ~ dbeta(1,1) LOR ~ dnorm(0,0.33) OR &lt;- exp(LOR) } # Step 1 check model jagsModel &lt;- jags.model(file = paste(bugpath, &quot;/backupfiles/great-model2_forward.txt&quot;, sep = &quot;&quot;), n.chains = 2) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 0 ## Unobserved stochastic nodes: 2 ## Total graph size: 9 ## ## Initializing model # Step 2 update 1000 iterations update(jagsModel, n.iter = 25000, progress.bar=&quot;none&quot;) # Step 3 set monitor variables codaSamples &lt;- coda.samples( jagsModel, variable.names = c(&quot;p[1]&quot;, &quot;p[2]&quot;), n.iter = 25000, progress.bar=&quot;none&quot;) # Show density plot mcmcplots::denplot(codaSamples) 圖 100.9: Density plots for parameters prediction in GREAT trial second prior. 這時候先驗概率分布給出的兩組死亡率的密度分布和之前提出的第二個模型沒有什麼兩樣。 100.5.2 吸煙與癌症 在這道題中，你將練習自己使用和描述一個隊列研究設計，及一個病例對照研究設計的貝葉斯模型，同時學習如何把兩個試驗的數據和模型通過共同的未知參數連接起來。在整道題目中，癌症作爲發病結果 (disease of interest)，吸煙作爲暴露因素 (exposure of interest)。 100.5.2.1 隊列研究設計 在一個隊列研究中，2000名非吸煙者，和1000名吸煙者被跟蹤隨訪20年。在非吸煙者中和非吸煙者中分別觀察到100例，及150例新發生的癌症患者。我們關心的是和非吸煙者相比，吸煙者患癌症的比值比是多少。這個實驗的貝葉斯模型可以寫作： model{ # Data model for non-smokers Y0c ~ dbin(r0, X0c) logit(r0) &lt;- lr0 # Data model for smokers Y1c ~ dbin(r1, X1c) logit(r1) &lt;- lr1 lr1 &lt;- lr0 + lor # lor is log(OR) OR &lt;- exp(lor) # comparison statistic # Priors lr0 ~ dnorm(0, 0.3) # priors for logit of non-smokers lor ~ dnorm(0, 0.33) # prior for log(OR) } # Y0c number of non-smokers developed cancer # X0c number of nonpsmokers # Y1c number of smokers developed cancer # X1c number of smokers 數據文件可以寫作： list(X0c = 2000, Y0c = 100, X1c = 1000, Y1c = 150) 未知參數 lor, lr0 的起始值可以選定爲： list(lr0 = -1, lor = 0) list(lr0 = -5, lor = 5) 對這個模型進行50000次事後樣本採集，獲取比值比 OR 的事後概率分布描述： # Data file for the model Dat &lt;- list( X0c = 2000, Y0c = 100, X1c = 1000, Y1c = 150 ) # initial values for the model # the choice is arbitrary inits &lt;- list( list(lr0 = -1, lor = 0), list(lr0 = -5, lor = 5) ) # fit the model in jags jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/cohort-model.txt&quot;, sep = &quot;&quot;), parameters.to.save = c(&quot;OR&quot;, &quot;lor&quot;), n.iter = 1000, n.chains = 2, inits = inits, n.burnin = 0, n.thin = 1, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 2 ## Unobserved stochastic nodes: 2 ## Total graph size: 13 ## ## Initializing model # Show the trace plot Simulated &lt;- coda::as.mcmc(jagsModel) ggSample &lt;- ggs(Simulated) ggSample %&gt;% filter(Parameter %in% c(&quot;OR&quot;, &quot;lor&quot;)) %&gt;% ggs_traceplot() 圖 100.10: Density plots for parameters prediction in smoking and cancer cohort study. ## Potential scale reduction factors: ## ## Point est. Upper C.I. ## OR 1.02 1.02 ## deviance 1.10 1.30 ## lor 1.01 1.01 ## ## Multivariate psrf ## ## 1.04 圖 100.11: Gelman-Rubin convergence statistic for smoking and cancer cohort study. jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/cohort-model.txt&quot;, sep = &quot;&quot;), parameters.to.save = c(&quot;OR&quot;, &quot;lor&quot;), n.iter = 26000, n.chains = 2, inits = inits, n.burnin = 1000, n.thin = 1, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 2 ## Unobserved stochastic nodes: 2 ## Total graph size: 13 ## ## Initializing model # Summary Statistics print(jagsModel) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/cohort-model.txt&quot;, fit using jags, ## 2 chains, each with 26000 iterations (first 1000 discarded) ## n.sims = 50000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% Rhat n.eff ## OR 3.354 0.870 2.554 3.023 3.310 3.625 4.306 1.008 9800 ## lor 1.198 0.143 0.938 1.106 1.197 1.288 1.460 1.001 19000 ## deviance 15.252 7.075 13.130 13.666 14.482 15.836 20.431 1.007 3900 ## ## For each parameter, n.eff is a crude measure of effective sample size, ## and Rhat is the potential scale reduction factor (at convergence, Rhat=1). ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 25.0 and DIC = 40.3 ## DIC is an estimate of expected predictive error (lower deviance is better). 100.5.2.2 病例對照研究設計下的模型 在病例對照研究設計下，研究者收集了1000名癌症患者(病例組)，和2000名對照組志願者。研究者對這兩組研究對象分別調查了他們各自過去20年的吸煙史，發現： 病例組中600人過去20年中有過吸煙史； 對照組中800人過去20年中有過吸煙史。 同樣地，我們關心的是兩組之間吸煙習慣的比值比 (Odds ratio)。這個實驗設計的模型可以用BUGS語言寫作(保存爲case-control-model.txt)： model{ # Data model for non-cancer controls X0cc ~ dbin(p0, Y0cc) logit(p0) &lt;- lp0 # Data model for cancer cases X1cc ~ dbin(p1, Y1cc) logit(p1) &lt;- lp1 lp1 &lt;- lp0 + lor # lor is log(OR) OR &lt;- exp(lor) # comparison statistic # Priors lp0 ~ dnorm(0, 0.3) # prior for logit of probability of exposure for controls lor ~ dnorm(0, 0.33) # prior for log(OR) } # X0cc indicates number of smokers among controls (without cancer) # Y0cc indicates number of controls # X1cc is the number of smokers among cancer cases # Y1cc is the number of cancer cases 其中， X0cc 表示對照組中有吸煙史的人數； Y0cc 表示對照組的總人數； X1cc 表示癌症患者組中有吸煙史的人數； Y1cc 表示癌症患者組的總人數。 數據文件可以描述爲（保存爲dataforcasecontrol.txt）： list(X0cc = 800, Y0cc = 2000, X1cc = 600, Y1cc = 1000) 模型擬合過程和結果分別羅列如下： # Data file for the model Dat &lt;- list(X0cc = 800, Y0cc = 2000, X1cc = 600, Y1cc = 1000) # initial values for the model # the choice is arbitrary inits &lt;- list( list(lp0 = -2, lor = 0), list(lp0 = 2, lor = 5) ) # fit the model in jags jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/case-control-model.txt&quot;, sep = &quot;&quot;), parameters.to.save = c(&quot;OR&quot;, &quot;lor&quot;), n.iter = 1000, n.chains = 2, inits = inits, n.burnin = 0, n.thin = 1, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 2 ## Unobserved stochastic nodes: 2 ## Total graph size: 13 ## ## Initializing model # Show the trace plot Simulated &lt;- coda::as.mcmc(jagsModel) ggSample &lt;- ggs(Simulated) ggSample %&gt;% filter(Parameter %in% c(&quot;OR&quot;, &quot;lor&quot;)) %&gt;% ggs_traceplot() 圖 100.12: Density plots for parameters prediction in smoking and cancer case-control study. ## Potential scale reduction factors: ## ## Point est. Upper C.I. ## OR 1.01 1.06 ## deviance 1.03 1.09 ## lor 1.02 1.07 ## ## Multivariate psrf ## ## 1.03 圖 100.13: Gelman-Rubin convergence statistic for smoking and cancer cohort study. jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/case-control-model.txt&quot;, sep = &quot;&quot;), parameters.to.save = c(&quot;OR&quot;, &quot;lor&quot;), n.iter = 26000, n.chains = 2, inits = inits, n.burnin = 1000, n.thin = 1, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 2 ## Unobserved stochastic nodes: 2 ## Total graph size: 13 ## ## Initializing model print(jagsModel) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/case-control-model.txt&quot;, fit using jags, ## 2 chains, each with 26000 iterations (first 1000 discarded) ## n.sims = 50000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% Rhat n.eff ## OR 2.280 1.628 1.925 2.131 2.250 2.373 2.635 1.054 28000 ## lor 0.812 0.099 0.655 0.756 0.811 0.864 0.969 1.002 50000 ## deviance 18.199 52.611 15.381 15.909 16.742 18.138 22.836 1.039 26000 ## ## For each parameter, n.eff is a crude measure of effective sample size, ## and Rhat is the potential scale reduction factor (at convergence, Rhat=1). ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 1383.8 and DIC = 1402.0 ## DIC is an estimate of expected predictive error (lower deviance is better). 100.5.2.3 聯合模型 joint model 把兩個甚至多個不同的研究獲得的數據聯合起來的方法主要有兩種，一是使用其中一個或者多個的研究結果作爲有信息的先驗概率分布，放到之後的研究模型中去，二是把多個不同的研究用共同的位置變量聯通起來 (link sub-models for different data sources through common parameter(s))。在這個吸煙和癌症的研究話題中，我們發現隊列研究，和病例對照研究兩者之間有共同的未知變量-比值比 (OR)，如果這個比值比有這相同的含義，那麼我們可以通過它把兩個獨立的研究連接起來。 我們提供一個聯合模型的例子如下（保存爲jointmodel.txt）： # Joint model model{ # cohort sub-model Y0c ~ dbin(r0, X0c) # data model for non-smokers logit(r0) &lt;- lr0 Y1c ~ dbin(r1, X1c) # data model for smokers logit(r1) &lt;- lr1 lr1 &lt;- lr0 + lor # lor is log(OR) # prior for cohort sub-model lr0 ~ dnorm(0, 0.3) # prior for logOdds of nonsmokers # case-control sub-model X0cc ~ dbin(p0, Y0cc) # data model for non-cancer controls logit(p0) &lt;- lp0 X1cc ~ dbin(p1, Y1cc) # data model for cancer cases logit(p1) &lt;- lp1 lp1 &lt;- lp0 + lor # lor is log(OR) # prior for case-control sub-model lp0 ~ dnorm(0, 0.3) # prior for logOdds of exposure for controls # Common code lor ~ dnorm(0, 0.33) # prior for common log(OR) OR &lt;- exp(lor) # comparison statistic } 把兩個獨立研究的數據合並成爲一個（保存成爲dataforjoint.txt）： list(X0c = 2000, Y0c = 100, X1c = 1000, Y1c = 150, X0cc = 800, Y0cc = 2000, X1cc = 600, Y1cc = 1000 ) 接下來是對聯合模型的擬合及對OR值事後樣本的採集過程： # Data file for the model Dat &lt;- list(X0c = 2000, Y0c = 100, X1c = 1000, Y1c = 150, X0cc = 800, Y0cc = 2000, X1cc = 600, Y1cc = 1000) # initial values for the model # the choice is arbitrary inits &lt;- list( list(lr0 = -1, lp0 = -2, lor = 0), list(lr0 = -5, lp0 = 2, lor = 5) ) # fit the model in jags jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/jointmodel.txt&quot;, sep = &quot;&quot;), parameters.to.save = c(&quot;OR&quot;, &quot;lor&quot;), n.iter = 1000, n.chains = 2, inits = inits, n.burnin = 0, n.thin = 1, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 4 ## Unobserved stochastic nodes: 3 ## Total graph size: 21 ## ## Initializing model # Show the trace plot Simulated &lt;- coda::as.mcmc(jagsModel) ggSample &lt;- ggs(Simulated) ggSample %&gt;% filter(Parameter %in% c(&quot;OR&quot;, &quot;lor&quot;)) %&gt;% ggs_traceplot() 圖 100.14: Density plots for parameters prediction in smoking and cancer joint model. ## Potential scale reduction factors: ## ## Point est. Upper C.I. ## OR 1.01 1.03 ## deviance 1.02 1.03 ## lor 1.01 1.04 ## ## Multivariate psrf ## ## 1.01 圖 100.15: Gelman-Rubin convergence statistic for smoking and cancer cohort study. jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/jointmodel.txt&quot;, sep = &quot;&quot;), parameters.to.save = c(&quot;OR&quot;, &quot;lor&quot;), n.iter = 26000, n.chains = 2, inits = inits, n.burnin = 1000, n.thin = 1, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 4 ## Unobserved stochastic nodes: 3 ## Total graph size: 21 ## ## Initializing model print(jagsModel) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/jointmodel.txt&quot;, fit using jags, ## 2 chains, each with 26000 iterations (first 1000 discarded) ## n.sims = 50000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% Rhat n.eff ## OR 2.509 1.099 2.178 2.376 2.487 2.603 2.842 1.065 15000 ## lor 0.912 0.086 0.779 0.865 0.911 0.957 1.045 1.006 50000 ## deviance 38.958 57.785 35.151 36.168 37.317 39.067 44.113 1.082 5000 ## ## For each parameter, n.eff is a crude measure of effective sample size, ## and Rhat is the potential scale reduction factor (at convergence, Rhat=1). ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 1669.3 and DIC = 1708.2 ## DIC is an estimate of expected predictive error (lower deviance is better). 可以看到，聯合模型給出的事後OR均值(2.513)是位於兩個獨立研究給出的OR均值(3.356, 2.273)的中間。但是它更加靠近病例對照研究的結果，暗示我們兩個研究中病例對照研究給出的信息量相對權重較大。另外，事後OR分布的標準差本身比兩個獨立研究估計的事後OR分布標準差都要小，說明充分利用兩個研究的數據時，事後估計的精確度得到了提升。精確度提升的原因很容易理解，因爲聯合模型把二者獲得的數據都包含了進來，信息量比兩個獨立研究都要大。 100.5.2.4 你是否能證明兩個研究的比值比是相同的？ 對於隊列研究來說，我們估計其比值比所用的表格可以寫作： Cancer Y N Smoking Y S N NS C NC 那麼這個研究中的比值比計算式就是： \\[ \\text{OR}_{\\text{cohort}} = \\frac{\\text{Pr}(C|S)\\times\\text{Pr}(NC|NS)}{\\text{Pr}(C|NS)\\times\\text{Pr}(NC|S)} \\] 對於病例對照研究來說，其比值比估計時使用的表格是： Smoking Y N Cancer Y C N NC S NS 其比值比的計算式可以寫作： \\[ \\text{OR}_{\\text{case-control}} = \\frac{\\text{Pr}(S|C)\\times\\text{Pr}(NS|NC)}{\\text{Pr}(S|NC)\\times\\text{Pr}(NS|C)} \\] 可以證明兩者相同（反復使用貝葉斯定理）： \\[ \\begin{aligned} \\text{OR}_{\\text{cohort}} &amp; = \\frac{\\text{Pr}(C|S)\\times\\text{Pr}(NC|NS)}{\\text{Pr}(C|NS)\\times\\text{Pr}(NC|S)} \\\\ &amp; = \\frac{\\frac{\\text{Pr}(S|C)\\text{Pr}(C)}{\\text{Pr}(S)}\\times\\frac{\\text{Pr}(NS|NC)\\text{Pr}(NC)}{\\text{Pr}(NS)}}{\\frac{\\text{Pr}(NS|C)\\text{Pr}(C)}{\\text{Pr}(NS)}\\times\\frac{\\text{Pr}(S|NC)\\text{Pr}(NC)}{\\text{Pr}(S)}} \\\\ &amp; = \\frac{\\text{Pr}(S|C)\\times\\text{Pr}(NS|NC)}{\\text{Pr}(S|NC)\\times\\text{Pr}(NS|C)} \\\\ &amp; = \\text{OR}_{\\text{case-control}} \\end{aligned} \\] "],["Bayes-GLM.html", "第 101 章 貝葉斯廣義線性回歸 101.1 如何在BUGS語言中描述分類型變量 101.2 邏輯回歸 Bayesian Logistic Regression 101.3 貝葉斯泊鬆回歸 Bayesian Poisson Regression 101.4 GLM in a Bayesian way 101.5 Practical Bayesian Statistics 07", " 第 101 章 貝葉斯廣義線性回歸 第五章(Chapter 99.1)中我們已經展示過如何在貝葉斯統計學語境下如何描述和運算簡單線性回歸模型的過程： 描述預測變量和結果變量之間應有的關係； 描述結果變量的概率分佈假設 (probability assumptions)：也就是在前一步指定的方程式描述的預測變量和相應的參數的條件下，結果變量的分佈。 給每個回歸係數，以及其他未知的參數提供先驗概率分佈的信息。 對於一個結果變量 \\(y_i\\) 來說，如果有一個預測變量的向量 \\(x_1, \\dots, x_p\\)，來描述它 \\(i = 1,\\dots, n\\) 個個體的話，標準的貝葉斯版本的線性回歸模型要寫作： \\[ \\begin{aligned} y_i &amp; \\sim N(\\mu_i, \\sigma^2) \\\\ \\mu_i &amp; = \\beta_0 + \\sum_{i = 1}^p\\beta_jx_{ji} \\\\ (\\beta_0, \\beta_1, \\dots, \\beta_p) &amp; \\sim \\text{ Prior distributions } \\\\ \\end{aligned} \\tag{101.1} \\] 用貝葉斯方法建立回歸模型的優點有很多。首先，你可以方便地對未知的回歸係數等參數加入相關的先驗概率分佈用來表達已有的知識，或者對回歸係數加以合理的限制。其次，你可以從容地對回歸模型的擬合效果，預測能力做出統計學推斷。再加上，使用貝葉斯方法也很容易讓我們把模型擴展到非線性回歸模型，處理並分析缺失值，以及分析共變量的測量誤差等等。 更重要的是，MCMC方法讓我們人類也可以很容易地進行穩健的統計推斷 (robust inference)。例如上面的線性回歸模型中，如果有理由認為誤差服從的是自由度為4的 t 分佈，那就可以把第一行模型似然改寫成為： \\[ y_i \\sim t_4(\\mu_i, \\sigma^2) \\] 使用t分佈作為模型似然的話，相比高斯模型(正態分佈)可以調低(downweight)離群值(outliers)的權重。(詳見 Chapter 99.2.9) 實際上，貝葉斯廣義線性回歸模型(Bayesian GLM)直觀地可以被認為是貝葉斯線性回歸模型的擴展模型。記得在基礎的廣義線性回歸模型章節，我們學習過如何用一個鏈接方程(link function)把結果變量(outcome)，和解釋變量用數學表達式連接起來。廣義線性回歸模型中最常見的莫過於邏輯回歸模型，接下來我們就來看看如何在貝葉斯統計學框架下擬合我們想要的邏輯回歸模型。在這之前，我們先要學習如何在BUGS語言下描述一個分類型變量(categorical variable)。 101.1 如何在BUGS語言中描述分類型變量 雖然 BUGS 語言風格和 R 語言十分接近，但是二者並不完全通用。BUGS並無像R語言一樣有Factor因子型變量的概念來表述分類型數據。相似的概念在BUGS語言中可以有兩種方法來表達： 人工把分類型變量編輯成為啞變量的方式，然後把啞變量輸入數據框中； 利用BUGS語言方便的索引功能 (indexing facilities)。 下面我們用簡單線性回歸模型來解釋這兩種方法的異同，其中一個分類型解釋變量 \\(x_i\\)，它有 \\(A,B,C\\) 三種分型(例如ABO血型只有三種分類時的情況)，其中 A 是三個分類中的參照組(reference group)。 101.1.1 啞變量的數據矩陣 用啞變量矩陣的方式表達分類型變量是常用的手段，為一個有三個分類的變量生成啞變量我們需要給出兩個指示變量(indicator variable)，其中 \\(x2=1\\) 時表示 \\(x_i = B\\)，\\(x2=0\\)時表示 \\(x_i\\neq B\\)，\\(x3=1\\) 時表示\\(x_i = C\\)，\\(x3=0\\) 時表示 \\(x_i\\neq C\\)： y[] x2[] x3[] 32 0 0 # x_i=A 21 0 0 ... 6 0 0 15 1 0 # x_i=B 24 1 0 ... 12 1 0 7 0 1 # x_i=C 26 0 1 ... 19 0 1 END 此時，這個模型的BUGS表達式可以寫作： for (i in 1:n) { y[i] ~ dnorm(mu[i], tau) mu[i] &lt;- alpha + beta2*x2[i] + beta3*x3[i] } alpha ~ dunif(-1000, 1000) beta2 ~ dunif(-1000, 1000) beta3 ~ dunif(-1000, 1000) tau ~ dgamma(0.001, 0.001) 其中， alpha 是參照組 \\(x_i = A\\) 的結果變量的均值； beta2 是和參照組相比，\\(x_i = B\\) 的結果變量的均值和參照組之間結果變量均值的差； beta3 是和參照組相比，\\(x_i = C\\) 的結果變量的均值和參照組之間結果變量均值的差。 101.1.2 雙重索引BUGS語言標記法 與前面的啞變量矩陣描述相異的，我們可以利用BUGS語言中便捷的索引方法來描述一個分類型變量，例如用 \\(x = 1\\) 表示 \\(x_i = A\\)，用 \\(x = 2\\) 表示 \\(x_i = B\\)，用 \\(x = 3\\) 表示 \\(x_i = C\\)： y[] x[] 32 1 # x = A 21 1 ... 6 1 15 2 # x = B 24 2 ... 12 2 7 3 # x = C 26 3 ... 19 3 END 此時，相同的模型則需要被表達成爲： for(i in 1:n) { y[i] ~ dnorm(m[i], tau) mu[i] &lt;- alpha + beta[x[i]] } alpha ~ dunif(-1000, 1000) beta[1] &lt;- 0 # fixed as baseline class beta[2] ~ dunif(-1000, 1000) beta[3] ~ dunif(-1000, 1000) tau ~ dgamma(0.001, 0.001) 可以注意到我們在這個模型中把參考組的回歸系數篤定在了 0。這時候，我們給起始值數據時，就不需要給 beta[1] 指定起始值了： list(alpha = 10, beta = c(NA, -2, 4), tau = 1) 101.2 邏輯回歸 Bayesian Logistic Regression 對於一個二分類的結果變量 (binary outcome variable) 來說，最自然的模型是使用邏輯回歸模型。 假如每個個體都有一個二分類結果變量 \\(y_i = 0 \\text{ or } 1\\)。那麼每個個體 \\(i\\) 的結果 \\(y_i\\) 可以用伯努利分布 (Chapter 4) 來描述它： \\[ y_i \\sim Bern(p_i) \\] 其中，\\(p_i\\)是第\\(i\\)個個體的結果變量取1時\\((y_i = 1)\\)的概率。此時 \\(P(p_i = 1)\\) 是我們想要知道的需要用貝葉斯模型來擬合的未知參數。邏輯回歸模型中我們使用的鏈接方程是 \\(\\mathbf{logit}\\)： \\[ \\theta_i = \\text{logit}(p_i) = \\log(\\frac{p_i}{1-p_i}) \\] \\(\\mathbf{logit}\\)鏈接方程允許我們把一個只能在 \\((0,1)\\) 之間取值的概率數據，映射到可以在 \\((-\\infty, +\\infty)\\) 之間取值的變量，之後我們再把這個變量和預測變量使用線性方程連接起來： \\[ \\text{logit}(p_i) = \\alpha + \\sum_k\\beta_kx_{ki} \\tag{101.2} \\] 這個模型的似然方程，它的事後概率分布是無法獲得閉合解的 (closed form)，但是但是，MCMC強大的計算機模擬過程幫我們解決了這個棘手的問題。 ### 邏輯回歸模型中回歸系數的含義 在表達式 (101.2) 中我們可以對每個回歸系數做出如下的定義： \\(\\alpha\\) 是當所有的預測變量取值同時爲零時的結果變量的對數比值 (log odds)： \\[ \\Rightarrow \\text{logit}^{-1}(\\alpha) = \\frac{e^\\alpha}{(1+e^\\alpha)} = \\text{ probability of the outcome when all covariates are set to zero} \\] \\(\\beta_k\\) 則是預測變量 \\(x_k\\) 發生一個單位變化時，引起的結果變量的變化的對數比值比 (log odds ratio)： \\[ \\Rightarrow e^{\\beta_k} = \\text{ odds ratio of outcome per unit change in } x_k \\] 101.2.1 低出生體重數據 本例子中，我們關心的研究問題是，三氯甲烷 (trihalomethane, THM)濃度和生下的新生兒爲低出生體重之間是否相關。THM已知是使用氟化氫(chlorine)對飲用水消毒時可能產生副產品，被認爲可能對人類生殖系統造成一定的傷害。數據收集到931名新生兒體重數據，該數據包含的變量有： lbw 是該新生兒出生時體重是否爲低體重的二分類變量。 thm 是一個指示變量，當它爲0時表示暴露的THM爲低水平，當它爲1時表示暴露的THM爲高水平。 age 是一個關於母親們年齡的分類型變量 (1 = $$25歲，2 = 25-29歲，3 = 30-34 歲，4 = \\(\\geqslant\\) 35歲)。 male 表示新生兒的性別 (0 是女孩，1 是男孩)。 car 是一個表示貧困程度的指數。 smoke 是表示母親在懷孕期間是否有吸煙習慣的變量 (0 = 無吸煙習慣，1 = 有吸煙習慣)。 要回答我們關心的研究問題，那麼這個數據中， lbw 是結果變量； thm 是暴露變量； age, male, car, smoke 是可能影響暴露變量和結果之間關係的混雜因子 (confounders)。 這時候，本例中的貝葉斯模型的數學表達式可以寫作： \\[ \\begin{aligned} lbw_i &amp; \\sim Bernoulli(p_i) \\;\\; [\\text{equivalent to } Binomial(p_i, 1)] \\\\ \\text{logit}(p_i) &amp; = \\alpha + \\beta_{thm}thm_i + \\beta^T_C\\mathbf{C}_i \\\\ \\alpha, \\beta_{thm}, \\dots &amp; \\sim \\text{Normal}(0, 10000^2) \\\\ e^{\\beta_{thm}}&amp; = \\text{odds ratio of low birth weight for high v low thm exposure} \\end{aligned} \\] 其中 \\(\\mathbf{C}\\) 是混雜因子組成的向量。也就是母親的年齡，新生兒的性別，貧困指數，以及母親孕期吸煙史。 利用OpenBUGS的雙重索引功能來標記分類型變量的話，這個低體重數據可以被整理為： lbw[] thm[] age[] male[] car[] smoke[] 0 0 1 1 0.156 1 0 0 3 0 -2.165 1 0 1 1 0 -1.391 1 1 1 4 0 0.156 1 ...... 0 1 3 1 0.930 0 END 其對應的BUGS模型代碼為： model{ ### MODEL ### for (i in 1:931) { # loop through 931 individuals y[i] ~ dbern(p[i]) logit(p[i]) &lt;- alpha+beta.thm*thm[i]+beta.age[age[i]]+beta.male*male[i]+ beta.car*car[i]+beta.smoke*smoke[i] } ### PRIORS ### alpha ~ dnorm(0,0.00000001) beta.thm ~ dnorm(0,0.00000001) beta.age[1] ~ dnorm(0,0.00000001) beta.age[2] &lt;- 0 # alias second level of maternal age beta beta.age[3] ~ dnorm(0,0.00000001) beta.age[4] ~ dnorm(0,0.00000001) beta.male ~ dnorm(0,0.00000001) beta.car ~ dnorm(0,0.00000001) beta.smoke ~ dnorm(0,0.00000001) ### CALCULATE THE ODDS RATIOS ### OR.thm &lt;- exp(beta.thm) OR.age1 &lt;- exp(beta.age[1]) } OpenBUGS中刨除前5000次樣本採集之後，獲取30000個位置參數的事後樣本，我們獲得了如下的結果： mean sd MC_error val2.5pc median val97.5pc beta.thm 0.7587 0.4181 0.008799 -0.02731 0.7453 1.631 OR.thm 2.337 1.074 0.02403 0.9731 2.107 5.107 所以，我們獲得事後比值比2.337的含義就是，孕期暴露高劑量THM和低劑量的THM相比，新生兒出生體重為低出生體重的比值是2.3 (95% 可信區間 credible intervals: 0.97, 5.11)。 值得注意的是，我們上面獲得的事後beta.thm均值，並不等於OR.thm均值取對數：\\(0.7587 \\neq log(2.337)\\)。 101.3 貝葉斯泊鬆回歸 Bayesian Poisson Regression 泊鬆回歸用於對計數型數據做回歸模型，例如死亡人數，住院人數，發病人數等。對計數型結果變量使用泊鬆模型時，我們對發生事件的次數的均值的對數加以數學模型：\\(\\mu_i = E(y_i)\\) \\[ \\begin{aligned} y_i &amp; \\sim Poi(\\mu_i) \\\\ \\log (\\mu_i) &amp; = \\alpha + \\sum_k\\beta_kx_{ki} \\end{aligned} \\] 泊鬆模型的數學公式同時也暗示我們默認結果事件發生次數的均值，取對數以後和解釋變量之間呈線性關系。同樣地，高斯先驗概率分布(正態分布)長用於這樣廣義線性回歸模型中的未知參數。 101.4 GLM in a Bayesian way 各種你學過的廣義線性回歸模型均可以使用貝葉斯統計學的方法來描述並分析，通過MCMC獲得模型中每個未知參數的事後概率分布描述。 各種你學過的廣義線性回歸模型使用的標準鏈接方程，都可以照搬過來用在貝葉斯廣義線性會回歸模型中。 因爲我們用 MCMC 方法對各個未知參數的事後概率分布進行樣本採集，我們有極其靈活的先驗概率分布描述手段。回歸系數的先驗概率分布通常可以使用高斯分布(正態分布)，一般來說會設定均值爲0，方差合適的正態分布作爲先驗概率分布。 使用貝葉斯統計學框架，廣義線性回歸模型的右邊，可以被擴展至任何非線性回歸模型。強大的計算機模擬過程幫我們解決了無法獲得閉合解這一大難題。 101.5 Practical Bayesian Statistics 07 要點： 學會用OpenBUGS跑貝葉斯邏輯回歸模型； 懂得如何解讀，解釋貝葉斯廣義線性回歸模型結果中的參數估計； 使用DIC比較不同的貝葉斯模型。 數據來自研究 (Diggle et al. 2002)，該研究設計是爲了評價 National Impregnated Bednet Programme 是否能減少岡比亞兒童瘧疾發病率，及由於瘧疾導致的死亡。當時研究者從2035名岡比亞兒童身上採集了血樣，用於化驗是否有瘧原蟲感染。同時收集的變量包括，兒童的年齡，兒童是否有規律地使用蚊帳，以及使用的蚊帳是否是經過 (permethrin insecticide) 殺蟲。另外還收集的兩個村莊水平 (village level) 的變量分別是，兒童生活的村莊是否受 Primary Health Care System 管轄，以及村莊環境中的植被情況 (greenness of the village environment)。 該試驗數據除了對使用蚊帳和罹患瘧疾之間的關係進行評估之外，還希望能通過收集到的數據分析是否存在超二項變異 (extra-binomial variation)的證據。這裏，超二項變異的含義是，在調整了已測量的全部觀察變量以後，仍然存在其他未知或者是未測量的潛在因子，導致殘留的差異(residual differences)無法被解釋。 原始數據是個人級別的 (1 record per child)。這裏爲了練習的需要，我們對數據進行了整理彙總，這樣的數據其實使用 MCMC 採集事後樣本效率也比較高。且我們的練習題用的數據只是研究地區西部25個村莊構成的局部數據。這樣，經過處理後的數據庫保存有805名兒童的數據，他們的彙總後的數據有149個二項變量 (binomial categories)。 數據保存在 malaria-data.txt 文件中，使用的是方形格式 (rectangular format)，它有如下的幾個變量: POP[] MALARIA[] AGE[] BEDNET[] GREEN[] PHC[] VILLAGE[] 3 2 2 1 40.85 1 1 1 1 3 1 40.85 1 1 2 2 4 1 40.85 1 1 7 3 1 2 40.85 1 1 5 1 2 2 40.85 1 1 6 3 3 2 40.85 1 1 ... END POP 是所有變量組合下兒童的人數； MALARIA 是所有變量組合下兒童感染虐原蟲兒童的人數； AGE 表示年齡分組 (1 = 0-2 歲，2 = 2-3 歲，3 = 3-4 歲，4 = 4-5 歲)； BEDNET 表示使用蚊帳的情況分類 (1 = 不使用蚊帳，2 = 使用未經殺蟲劑處理過的蚊帳，3 = 使用經過殺蟲劑處理過的蚊帳)； GREEN 是表示村莊植被環境的一個連續型指標； PHC 是一個二分類數據，1/0 = 該村莊是/不是受到 Primary Health Care System 管轄。 VILLAGE 是村莊的代碼。 使用貝葉斯邏輯迴歸模型估計使用蚊帳與否和虐原蟲感染之間的關係。嘗試寫下這個貝葉斯模型的BUGS表達文件，並且注意計算: 參照組(也就是未使用蚊帳組)兒童的瘧疾感染率 (百分比) 每一個可能的共變量的比值比 使用蚊帳和不使用蚊帳相比，能夠降低兒童患瘧疾的比值(odds)的概率； 使用殺蟲劑處理過的蚊帳和使用未處理過的蚊帳相比，能夠降低兒童患瘧疾的比值的概率； 模型可以寫作: # Logistic regression model for malaria data model { for(i in 1:149) { MALARIA[i] ~ dbin(p[i], POP[i]) logit(p[i]) &lt;- alpha + beta.age[AGE[i]] + beta.bednet[BEDNET[i]] + beta.green*(GREEN[i] - mean(GREEN[])) + beta.phc*PHC[i] } # vague priors on regression coefficients alpha ~ dnorm(0, 0.00001) beta.age[1] &lt;- 0 # set coefficient for baseline age group to zero (corner point constraint) beta.age[2] ~ dnorm(0, 0.00001) beta.age[3] ~ dnorm(0, 0.00001) beta.age[4] ~ dnorm(0, 0.00001) beta.bednet[1] &lt;- 0 # set coefficient for baseline bednet group to zero (corner point constraint) beta.bednet[2] ~ dnorm(0, 0.00001) beta.bednet[3] ~ dnorm(0, 0.00001) beta.green ~ dnorm(0, 0.00001) beta.phc ~ dnorm(0, 0.00001) # calculate odds ratios of interest OR.age[2] &lt;- exp(beta.age[2]) # OR of malaria for age group 2 vs. age group 1 OR.age[3] &lt;- exp(beta.age[3]) # OR of malaria for age group 3 vs. age group 1 OR.age[4] &lt;- exp(beta.age[4]) # OR of malaria for age group 4 vs. age group 1 OR.bednet[2] &lt;- exp(beta.bednet[2]) # OR of malaria for children using untreated bednets vs. not using bednets OR.bednet[3] &lt;- exp(beta.bednet[3]) # OR of malaria for children using treated bednets vs. not using bednets OR.bednet[4] &lt;- exp(beta.bednet[3] - beta.bednet[2]) # OR of malaria for children using treated bednets vs. using untreated bednets OR.green &lt;- exp(beta.green) # OR of malaria per unit increase in greenness index of village OR.phc &lt;- exp(beta.phc) # OR of malaria sfor children living in villages belonging to the primary health care system versus children living in villages not in the health care system logit(baseline.prev) &lt;- alpha # baseline prevalence of malaria in baseline group (i.e. child in age group 1, sleeps without bednet, and lives in a village with average greenness index and not in the health care system) PP.untreated &lt;- step(1 - OR.bednet[2]) # probability that using untreated bed net vs. no bed net reduces odds of malaria PP.treated &lt;- step(1- OR.bednet[4]) # probability that using treated vs. untreated bednet reduces odds of malaria } # Read in the data: # Data &lt;- read.delim(paste(bugpath, &quot;/backupfiles/malaria-data.txt&quot;, sep = &quot;&quot;)) Data &lt;- read.table(paste(bugpath, &quot;/backupfiles/malaria-data.txt&quot;, sep = &quot;&quot;), header = TRUE) # Data file for the model Dat &lt;- list( POP = Data$POP, MALARIA = Data$MALARIA, AGE = Data$AGE, BEDNET = Data$BEDNET, GREEN = Data$GREEN, PHC = Data$PHC ) # initial values for the model # the choice is arbitrary inits &lt;- list( list(alpha = -0.51, beta.age = c(NA, 0.83, 0.28, -1.68), beta.bednet = c(NA, -2.41, 0.68), beta.green = -0.23, beta.phc = 1.82), list(alpha = 1.29, beta.age = c(NA, 0.49, -0.38, -0.04), beta.bednet = c(NA, 6.85, 0.09), beta.green = 2.66, beta.phc = -0.31) ) # Set monitors on nodes of interest parameters &lt;- c(&quot;OR.age&quot;, &quot;OR.bednet&quot;, &quot;OR.green&quot;, &quot;OR.phc&quot;, &quot;PP.treated&quot;, &quot;PP.untreated&quot;, &quot;baseline.prev&quot;) # fit the model in jags jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/malaria-model-editted.txt&quot;, sep = &quot;&quot;), parameters.to.save = parameters, n.iter = 1000, n.chains = 2, inits = inits, n.burnin = 0, n.thin = 1, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 149 ## Unobserved stochastic nodes: 8 ## Total graph size: 1037 ## ## Initializing model # Show the trace plot Simulated &lt;- coda::as.mcmc(jagsModel) ggSample &lt;- ggs(Simulated) ggSample %&gt;% filter(Parameter %in% c(&quot;OR.age[2]&quot;, &quot;OR.age[3]&quot;, &quot;OR.age[4]&quot;, &quot;OR.bednet[2]&quot;, &quot;OR.bednet[3]&quot;, &quot;OR.bednet[4]&quot;, &quot;OR.green&quot;, &quot;baseline.prev&quot;)) %&gt;% ggs_traceplot() 圖 101.1: Density plots for parameters for GLM about the odds of malaria regarding netbeds use in Gambia children. ## Potential scale reduction factors: ## ## Point est. Upper C.I. ## OR.age[2] 1.001 1.01 ## OR.age[3] 1.009 1.03 ## OR.age[4] 1.000 1.00 ## OR.bednet[2] 1.000 1.01 ## OR.bednet[3] 0.999 1.00 ## OR.bednet[4] 1.001 1.01 ## OR.green 1.003 1.01 ## OR.phc 1.000 1.00 ## PP.treated 1.003 1.01 ## PP.untreated 1.002 1.01 ## baseline.prev 1.000 1.00 ## deviance 1.000 1.00 ## ## Multivariate psrf ## ## 1.01 圖 101.2: Gelman-Rubin convergence statistic of parameters for GLM about the odds of malaria regarding netbeds use in Gambia children. 圖 101.3: Gelman-Rubin convergence statistic of parameters for GLM about the odds of malaria regarding netbeds use in Gambia children. 基本可以認爲刨除前1000次取樣 (burn-in) 可以達到收斂。 jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/malaria-model-editted.txt&quot;, sep = &quot;&quot;), parameters.to.save = parameters, n.iter = 26000, n.chains = 2, inits = inits, n.burnin = 1000, n.thin = 1, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 149 ## Unobserved stochastic nodes: 8 ## Total graph size: 1037 ## ## Initializing model print(jagsModel) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/malaria-model-editted.txt&quot;, fit using jags, ## 2 chains, each with 26000 iterations (first 1000 discarded) ## n.sims = 50000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% Rhat n.eff ## OR.age[2] 1.736 0.407 1.087 1.454 1.689 1.968 2.642 1.001 14000 ## OR.age[3] 2.002 0.466 1.275 1.685 1.951 2.260 3.006 1.001 38000 ## OR.age[4] 2.321 0.558 1.462 1.945 2.261 2.625 3.520 1.001 50000 ## OR.bednet[2] 0.880 0.161 0.606 0.766 0.866 0.978 1.237 1.001 48000 ## OR.bednet[3] 0.694 0.168 0.422 0.576 0.675 0.791 1.077 1.001 7300 ## OR.bednet[4] 0.798 0.178 0.510 0.674 0.781 0.902 1.184 1.001 12000 ## OR.green 0.975 0.024 0.930 0.959 0.975 0.991 1.022 1.001 50000 ## OR.phc 0.712 0.130 0.491 0.621 0.701 0.792 0.999 1.001 17000 ## PP.treated 0.877 0.328 0.000 1.000 1.000 1.000 1.000 1.001 50000 ## PP.untreated 0.787 0.410 0.000 1.000 1.000 1.000 1.000 1.001 50000 ## baseline.prev 0.288 0.043 0.208 0.258 0.286 0.316 0.377 1.001 49000 ## deviance 461.068 5.795 455.179 458.084 460.358 463.242 470.614 1.049 50000 ## ## For each parameter, n.eff is a crude measure of effective sample size, ## and Rhat is the potential scale reduction factor (at convergence, Rhat=1). ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 16.8 and DIC = 477.9 ## DIC is an estimate of expected predictive error (lower deviance is better). 參照組 (年齡小於2歲，不使用蚊帳，生活的村莊植被水平爲全部的平均值，且不在 PHC 管轄範圍內) 患瘧疾的百分比估計在 28.8% 左右 (baseline.prev)。極強的證據表明隨着年齡的增加，患瘧疾的危險度（比值）也升高。使用蚊帳可能可以降低一些些換瘧疾的危險度（比值），(OR.bednet[2] = 0.88) 但是其95%可信區間範圍是包括了1的 (0.605, 1.237)。使用未經殺蟲劑處理的蚊帳，也有79%的概率能夠降低兒童患瘧疾。和使用未經殺蟲劑處理的蚊帳相比，經過殺蟲劑處理的蚊帳也可能(有87.6%的概率)可以進一步降低兒童患瘧疾的危險 (OR.bednet[4] = 0.799, 95% 可信區間 0.51, 1.19)。和不在PHC管轄內的村莊相比，在PHC管轄的村莊可能可以降低兒童患瘧疾的危險 (OR.phc = 0.711，95% 可信區間 0.49, 0.99)。 把模型中發現和兒童發生瘧疾無太大關係的變量從貝葉斯邏輯迴歸模型中拿掉以後重新跑新的模型，和之前包含了全部變量的而模型相比較，你覺得哪個模型更合適？ 由於植被指標變量和是否使用蚊帳的變量和是否發生瘧疾似乎關係不太大，我們把這兩個變量從模型中拿掉，再跑這個貝葉斯模型: # Logistic regression model for malaria data model { for(i in 1:149) { MALARIA[i] ~ dbin(p[i], POP[i]) logit(p[i]) &lt;- alpha + beta.age[AGE[i]] + beta.phc*PHC[i] } # vague priors on regression coefficients alpha ~ dnorm(0, 0.00001) beta.age[1] &lt;- 0 # set coefficient for baseline age group to zero (corner point constraint) beta.age[2] ~ dnorm(0, 0.00001) beta.age[3] ~ dnorm(0, 0.00001) beta.age[4] ~ dnorm(0, 0.00001) beta.phc ~ dnorm(0, 0.00001) # calculate odds ratios of interest OR.age[2] &lt;- exp(beta.age[2]) # OR of malaria for age group 2 vs. age group 1 OR.age[3] &lt;- exp(beta.age[3]) # OR of malaria for age group 3 vs. age group 1 OR.age[4] &lt;- exp(beta.age[4]) # OR of malaria for age group 4 vs. age group 1 OR.phc &lt;- exp(beta.phc) # OR of malaria sfor children living in villages belonging to the primary health care system versus children living in villages not in the health care system logit(baseline.prev) &lt;- alpha # baseline prevalence of malaria in baseline group (i.e. child in age group 1, sleeps without bednet, and lives in a village with average greenness index and not in the health care system) } # Data file for the model Dat &lt;- list( POP = Data$POP, MALARIA = Data$MALARIA, AGE = Data$AGE, PHC = Data$PHC ) # initial values for the model # the choice is arbitrary inits &lt;- list( list(alpha = -0.51, beta.age = c(NA, 0.83, 0.28, -1.68), beta.phc = 1.82), list(alpha = 1.29, beta.age = c(NA, 0.49, -0.38, -0.04), beta.phc = -0.31) ) # Set monitors on nodes of interest parameters &lt;- c(&quot;OR.age&quot;, &quot;OR.phc&quot;, &quot;baseline.prev&quot;) # fit the model in jags jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/malaria-model-dropped.txt&quot;, sep = &quot;&quot;), parameters.to.save = parameters, n.iter = 1000, n.chains = 2, inits = inits, n.burnin = 0, n.thin = 1, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 149 ## Unobserved stochastic nodes: 5 ## Total graph size: 626 ## ## Initializing model # Show the trace plot Simulated &lt;- coda::as.mcmc(jagsModel) ggSample &lt;- ggs(Simulated) ggSample %&gt;% filter(Parameter %in% c(&quot;OR.age[2]&quot;, &quot;OR.age[3]&quot;, &quot;OR.age[4]&quot;, &quot;baseline.prev&quot;)) %&gt;% ggs_traceplot() 圖 101.4: Density plots for parameters for GLM about the odds of malaria regarding netbeds use in Gambia children. ## Potential scale reduction factors: ## ## Point est. Upper C.I. ## OR.age[2] 1.01 1.06 ## OR.age[3] 1.00 1.01 ## OR.age[4] 1.01 1.03 ## OR.phc 1.00 1.00 ## baseline.prev 1.01 1.04 ## deviance 1.00 1.00 ## ## Multivariate psrf ## ## 1.01 圖 101.5: Gelman-Rubin convergence statistic of parameters for GLM about the odds of malaria regarding netbeds use in Gambia children. jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/malaria-model-dropped.txt&quot;, sep = &quot;&quot;), parameters.to.save = parameters, n.iter = 26000, n.chains = 2, inits = inits, n.burnin = 1000, n.thin = 1, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 149 ## Unobserved stochastic nodes: 5 ## Total graph size: 626 ## ## Initializing model print(jagsModel) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/malaria-model-dropped.txt&quot;, fit using jags, ## 2 chains, each with 26000 iterations (first 1000 discarded) ## n.sims = 50000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% Rhat n.eff ## OR.age[2] 1.680 0.382 1.058 1.408 1.638 1.905 2.554 1.001 50000 ## OR.age[3] 1.964 0.435 1.261 1.652 1.916 2.221 2.946 1.001 50000 ## OR.age[4] 2.316 0.524 1.466 1.944 2.255 2.625 3.505 1.001 40000 ## OR.phc 0.651 0.106 0.469 0.577 0.643 0.717 0.881 1.001 15000 ## baseline.prev 0.269 0.036 0.202 0.244 0.268 0.293 0.343 1.001 37000 ## deviance 461.490 3.177 457.291 459.152 460.836 463.106 469.356 1.001 43000 ## ## For each parameter, n.eff is a crude measure of effective sample size, ## and Rhat is the potential scale reduction factor (at convergence, Rhat=1). ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 5.0 and DIC = 466.5 ## DIC is an estimate of expected predictive error (lower deviance is better). 這個新模型的DIC和之間包含全部變量的模型相比降低了大概3左右，也就是去掉三個共變量對模型的影響。DIC的變化爲3時可認爲幾乎模型的擬合效果沒有太大的變化。出於簡約化模型的考慮，我們選擇這個新的變量較少的模型。 References "],["Bayes-Hier.html", "第 102 章 貝葉斯等級回歸模型 102.1 關於等級迴歸模型 102.2 多層數據在模型中可能要用到的前提條件 102.3 抗抑鬱臨牀試驗實例 102.4 Practical Bayesian Statistics 08", " 第 102 章 貝葉斯等級回歸模型 102.1 關於等級迴歸模型 等級迴歸模型，指的是是一大類模型的設定，它也有很多不同的名字，例如多層模型(multilevel models)，隨機效應模型(random effect models)，隨機係數模型(random coefficient models)，方差成分模型(variance-component models)，混合效應模型(mixed effect models)。等級迴歸模型的最主要特點在於，這一類模型爲我們提供了一種正式的統計學框架，允許我們對複雜結構的數據進行恰當的統計分析，做出合理推斷。 等級迴歸模型最常見的情形可以是: 社會屬性上的：屬於相同家庭環境下的個人，成長於相似年代背景的一代人等各種社會網絡屬性； 地理屬性上的：在同一社區生活的人，同一城市，甚至是同一個國家生活的個體； 組織結構上的：如在同一個學校上學的學生，屬於同一個教育機構的工作人員等； 實驗設計上的：多中心，多地區合作的聯合臨牀實驗設計(mult-centre clinical trial)； 時間序列上的：相同個體在不同時間點接受相同指標的測量獲得的一系列隨着時間變化而變化的數據。 另外，等級迴歸模型有幾個重要的概念需要澄清： 等級迴歸模型有助於考慮數據中的複雜結構 (modelling data with a complex structure) 數據的各種各樣的嵌套式結構可以通過等級迴歸模型體現出來，例如從屬於不同學校的學生，或者是在不同街道的家庭。 等級迴歸模型有助於考慮數據的異質性 (heterogeneity) 等級迴歸模型不僅可以告訴我們常見的一般均值信息 (averages, i.e. provides the general relationships)，等級迴歸模型還可以告訴我們不同等級之間的方差的異同 (variances)，例如有些街道和另一些街道相比房價的差異變化更大，或者更小。 等級迴歸模型又有助於考慮數據之間可能存在的非獨立性（依賴性，dependency） 許多數據它們本質上都不是相互獨立的，這種內在的依存性(也許是時間上，空間上，或者是周圍的環境相關的)可以通過等級迴歸模型來克服。例如，相同街區內的房屋價格，有理由認爲應該是有內在相關性的，它們更傾向於接近彼此的報價。 等級迴歸模型可以幫助我們更加深刻的理解數據的內在的，微觀上的(micro)關係和外在結構上的，或者說宏觀 (macro) 層面上的關係。 例如，每個房屋的價格它的決定因素既有內在的影響因子，如房屋本身的性質，特徵，年份，主人等等；另外，決定它價格的可能還有它所在的街區，街道，小區，甚至是城市的特徵決定了它的價格。 正因爲我們所認知的數據本身，幾乎都可以有其內在的結構屬性，因此我們有理由使用理論和分析方法上更家貼近這種多層結構的統計學模型來瞭解這個世界。例如從國家層面上來說，可能有些國家的平均脂肪消費水平很高，有研究者發現這些國家比起另外脂肪消費量較低的國家來說，女性的乳腺癌發病率較高。但是，另外有些研究者可能發現，在一個國家內部，從個體與個體之間的脂肪攝入量上來觀察的話，又無法認可脂肪攝入量和乳腺癌發病呈現任何有意義的關係。 許多標準的統計學模型，都需要默認數據與數據之間，觀察對象與觀察對象之間有獨立性 (independent observation)。然而現實之中這一點經常是無法做到的。許多實際數據中你會發現默認對象之間的獨立性本身，是不合理的。因爲觀察對象之間可能存在的內在相關性，決定了一些觀察對象可能比起另外一些觀察對象更加傾向於有同質性。 那麼多層迴歸模型就是這樣一類能夠幫助我們理解數據結構的模型。它的靈活性體現在， 多層迴歸模型提供我們把相關性或者異質性部分的數據結構用模塊化的方法 (modular) 放入統計學模型中； 多層迴歸模型也會允許我們把數據中的缺失值，甚至是測量誤差給考慮進來，提供更加強有力（但是複雜的）統計學模型。 102.2 多層數據在模型中可能要用到的前提條件 在多層模型擬合多層數據時，有一個基本的問題就是如何正確地理解模型中各種各樣的回歸系數（參數, parameters）：例如 \\(J\\) 個單位（可能是：個人，個體，子集 subset，區域，時間點，實驗組，等）的回歸參數 \\(\\theta_1, \\dots, \\theta_J\\)。對這些回歸系數的正確理解，是要建立在對我們研究的問題，研究的數據的結構的理解之上的。 舉幾個簡單的例子來說，\\(\\theta_j\\) 有可能有這樣的意義： 不同類型的患者（可以是不同的年齡組，疾病的分級，或者治療條件等）的治療效果； 在meta分析中則可以體現不同研究的研究效應(study effect)； 某疾病在不同地區，年齡組，時間段的相對危險度； 在某些生長曲線模型 (growth curves models) 中的個體效應 (subject effect)。 綜上所述，我們可以發現，雖然多層回歸模型可能可以克服個體之間存在依賴性的問題，但是模型中的參數符合的前提條件可以有三種類別之分： 參數是相同的 (identical parameters)； 參數是獨立的 (independent parameters)； 參數是可交換的 (exchangeable parameters)。 下圖 102.1 展示了個體從屬於家庭醫生，家庭醫生又接着從屬於 Primary Care Trusts (PCTs) 的數據結構示意圖。 圖 102.1: GP example of multi-level structure: individuals within GPs within PCTs 102.2.1 參數是相同的 (identical parameters) 如果說參數相同的前提被認爲可以接受，那麼什麼 GP 什麼 PCT 的數據結構都可以被忽略，也就是每個個體都可以被視爲相互獨立的： 圖 102.2: GP example assuming identical parameters 但是，這意味着 一個參數可以產生全部的觀察對象 (one parameter generates all the observations)； 參數\\(\\theta\\)的估計會很容易，因爲全部觀察對象都被用來估計一個未知參數； 不能體現實際數據的層級結構情況 (it does not take into account differences in the PCT, GPs, etc.) 102.2.2 參數是獨立的 (independent parameters) 每一個參數如果要被認爲是全部沒有關聯（獨立）的話，如示意圖 102.3 所展現的那樣，每個GP都被單獨對待，即使同處在一個 PCT 的 GP 之間也被認爲是沒有任何相關聯信息的。 圖 102.3: GP example assuming independent parameters 102.2.3 參數是可交換的 (exchangeable parameters) 如果認爲參數是可置換的，那麼如圖 102.4 所示，這樣需要我們 對不同層級進行相應的分析； 認爲從屬於一個 PCT 的 GP 們更加彼此相似/接近，且他們的參數 \\(\\theta\\) 通過共同的 \\(\\mu\\) 來產生； 允許不同層級之間的參數信息可以相互交換，因爲他們通過數據結構互相鏈接。 圖 102.4: GP example assuming exchangeable parameters 在較爲廣義的條件下(broad conditions)，參數的可交換定義在數學上等價於認爲 \\(\\theta_1, \\dots, \\theta_J\\) 來自於一個共同的先驗概率分佈 (common prior distribution)，只是它的參數是未知的 (with unkown parameters)。 多層迴歸模型允許未知參數之間相互借鑑，取長補短 (borrowing of strength across units)。\\(\\theta_i\\)的事後概率分佈事實上從全部的未知參數構成的似然中借取能量 (borrows stength from the likelihood function contributions for all the units, via their joint influence on the posterior estimates of the unknown hyper-parameters)。通過 MCMC 計算機模擬試驗的方法，加上多層迴歸模型對真實世界的模擬，統計估計的效率被大大提升了。別忘了, MCMC的靈活性同時讓我們可以放鬆對隨機效應要服從正態分佈這一前提條件。 可見，這第三種情形，參數的可交換性是進行多層模型分析的基石，而不是認爲未知參數是相互獨立或者完全相同。 構建多層迴歸模型本身提供了廣闊的視野，讓我們通過統計學工具一窺真實世界數據的複雜結構： 我們可以在模型中加入2層甚至更多層的數據結構； 允許加入非嵌套變量，交叉變量 (non-nested/cross-classified)，例如不同GP的病人，他們參加治療的醫院或許各不相同。 同一對象的重複觀察值 (repeated observations)，可以出現在一部分未知參數，或者全部未知參數中，然後我們通過線性或者非線性（廣義線性）隨機效應模型來表達其關係。 數據中的時間前後關係，甚至於是空間上的關係也可以通過多層迴歸模型來表達。 當然，你也可以在不同層級水平上增加需要考慮的共變量。 當我們在學習和建立複雜數據結構的模型時，貝葉斯統計學提供的強有力工具再一次印證了其高效且強大的分析效能。這裏我們僅有機會使用一個簡單的例子來展示如何在貝葉斯框架下構建擬合縱向研究數據的多層迴歸模型。 102.3 抗抑鬱臨牀試驗實例 102.3.1 縱向數據 縱向數據常見於對同一(單元的)樣本個體經過不同的時間點重複多次收集獲得的數據。一般來說，從同一個體收集的觀察數據相互之間存在依存關係。分析縱向數據可以有很多方法，但是不論哪種方法，都必須考慮到這個存在依存關係的數據結構。其中兩種最常見的手段分別是隨機效應線性迴歸模型 (random effects/hierarchical linear model) 和自迴歸模型 (autoregressive model)。這裏的實例我們使用隨機效應模型。 102.3.2 HAMD example 抗抑鬱臨牀試驗是一個有6個不同試驗中心，367名患者被隨機分配到3種治療方案。每名參加試驗的患者每週都會被使用 Hamilton depression score (HAMD) 評估打分，持續5周時間。其中 HAMD 分數範圍是 0-50 之間，分數越高，抑鬱症狀越嚴重。5周連續的HAMD打分過程是這樣的，第一次評分 (Week 0) 是在治療前，之後的4次打分是在治療開始之後 (Week 1-4)。這個數據之前曾經發表於文獻 (Diggle and Kenward 1994) 中。 實際上該試驗中從第二週開始就有患者退出治療 (dropout)。我們在這裏暫且忽略掉有患者中途退出這件事，先分析246名從頭至尾都完成了試驗的患者的數據。圖 102.5 展示的是完成全部試驗評分的患者中隨機選取50人的5次評分結果，按照時間的先後順序繪製的不同治療方案下每個人的分數變化軌跡，和每組治療方案的患者平均治療成績的軌跡。 圖 102.5: HAMD data for complete cases 這個實驗中，我們關心的問題是三種治療方案對抑鬱症患者 HAMD 分數的變化的影響是否存在不同？ 此時數據中的變量有： \\(y\\) HAMD 分數 \\(t\\) 治療組 \\(w\\) 治療周 這裏我們先暫且忽略掉試驗中心可能造成的不同療效，且假設HAMD評分隨着時間呈線性變化。那麼我們來思考或許可行的三個模型： 標準的簡單線性迴歸，非多層迴歸模型 (standard linear regression)； 多層線性迴歸模型，且允許有隨機截距 (hierarchical model with random intercepts)； 多層線性迴歸模型，且允許同時有隨機截距和隨機斜率兩種模型 (hierarchical mdoel with random intercepts and random slopes)。 102.3.3 貝葉斯簡單線性迴歸模型 爲此 HAMD 數據設定簡單線性迴歸模型如下： 患者的評分服從的概率分佈: \\(y_{iw} \\sim \\text{Normal}(\\mu_{iw}, \\sigma^2)\\)，其中，\\(y_{iw}\\) 是第 \\(i\\) 名患者 在第 \\(w, w \\in \\{0, 1, 2, 3, 4\\}\\) 周時的 HAMD 評分。 線性預測變量: \\(\\mu_{iw} = \\alpha + \\beta_{\\text{treat}(i)}w\\)，其中，\\(\\text{treat}(i)\\) 是第 \\(i\\) 名患者的治療組編號，可以取值 \\(1,2,3\\)，\\(w\\) 則是周數，治療前爲第 \\(w = 0\\) 周，治療開始之後取 \\(w = 1,2,3,4\\) 周。 在簡單線性迴歸模型中，重複測量數據嵌套於 (nested) 每個患者個體這一事實被忽略了，我們爲每個未知參數加以無信息的先驗概率分佈： \\[ \\begin{aligned} \\alpha, \\beta_1, \\beta_2, \\beta_2 &amp; \\sim \\text{Normal}(0, 10000) \\\\ \\frac{1}{\\sigma^2} &amp; \\sim \\text{Gamma}(0.001, 0.001) \\end{aligned} \\] 這個簡單線性迴歸模型對應的 BUGS 模型可以寫作： for (i in 1:N){ # N individuals for (w in 1:W) { # W weeks hamd[i, w] ~ dnorm(mu[i, w], tau) mu[i, w] &lt;- alpha + beta[treat[i]]*(w-1) } # specification of priors alpha ~ dnorm(0, 0.00001) for (i in 1:T){ # T treatments beta[t]~dnorm(0, 0.00001) } tau ~ dgamma(0.001, 0.001) sigma.sq&lt;-1/tau # normal errors } 102.3.4 貝葉斯等級線性回歸–隨機截距模型 對簡單線性回歸模型進行適當修改之後就能直接把它引申爲隨機截距模型。其中，每一名患者都有自己的截距: \\[ \\begin{aligned} y_{iw} &amp; \\sim \\text{Normal}(\\mu_{iw}, \\sigma^2) \\\\ \\mu_{iw} &amp; = \\alpha_i + \\beta_{treat(i)}w \\end{aligned} \\] 此時模型中的前提是，以每名患者自己的截距 \\(\\alpha_i\\) 爲條件時 (conditional on)，患者的HAMD測試結果 \\(\\{y_{iw}, w = 0, \\dots, 4\\}\\) 會相互獨立。同時，我們還假設所有的隨機截距 \\(\\alpha_i\\) 服從相同的（共同的）先驗概率分佈。 \\[ \\alpha_i \\sim \\text{Normal}(\\mu_\\alpha, \\sigma^2_\\alpha) \\;\\; i = 1, \\dots, 246 \\] 這裏我們又假定了每個人的均值（截距）是來自相同分佈（可以互換的，exchangeability）。 再接下來，對於人羣的截距這一數據設定非常模糊的先驗概率超參數 (hyperparameters): \\[ \\begin{aligned} \\mu_\\alpha &amp; \\sim \\text{Normal}(0, 10000) \\\\ \\sigma_\\alpha &amp; \\sim \\text{Uniform}(0, 100) \\end{aligned} \\] 這是一個典型的多層線性回歸模型 (Hierarchical LM or Linear Mixed Model, LMM)，或者又叫做隨機截距模型(Random Intercepts model)。 這個模型可以使用BUGS語言描述如下： for (i in 1:N) { # N individuals for (w in 1:W) { # W weeks hamd[i, w] ~ dnorm(mu[i,w], tau) mu[i,w] &lt;- alpha[i] + beta[treat[i]]*(w-1) } alpha[i] ~ dnorm(alpha.mu, alpha.tau) # random intercepts } # Specification of priors alpha ~ dnorm(0, 0.00001) alpha.mu ~ dnorm(0, 0.00001) alpha.sigma ~ dunif(0, 100) alpha.sigma.sq &lt;- pow(alpha.sigma, 2) alpha.tau &lt;- 1/alpha.sigma.sq for (t in 1:T){ # T treatments beta[t] ~ dnorm(0, 0.00001) } tau ~ dgamma(0.001, 0.001) sigma.sq &lt;- 1/tau # Normal errors 無隨機截距的簡單線性回歸模型，和包括了隨機截距模型的多層線性回歸模型之間的差別，用 DAG 圖來表示可以直觀的展示如下： 圖 102.6: DAGs for models for the HAMD example 102.3.5 貝葉斯等級線性回歸模型–隨機截距和隨機斜率模型 與隨機截距模型相類似地，我們可以把該模型從隨機截距的基礎上再擴展到隨機斜率模型，也就是可以認爲每名患者的HAMD分數變化的直線的斜率可以因人而異。 \\[ \\begin{aligned} y_{iw} &amp; \\sim \\text{Normal}(\\mu_{iw}, \\sigma^2) \\\\ \\mu_{iw} &amp; = \\alpha_i + \\beta_{treat(i), i}w \\end{aligned} \\] 模型中的隨機截距\\(\\{\\beta_{(1,i)}\\}, \\{\\beta_{(2,i)}\\}, \\{\\beta_{(3,i)}\\}\\), 同隨機截距 \\(\\{\\alpha_i\\}\\) 一樣我們都賦予其相同的且模糊的無有效信息的先驗概率分佈： 這個隨機效應模型的BUGS模型代碼寫作如下： for (i in 1:N) { # N individuals for (w in 1:W) { # W weeks hamd[i, w] ~ dnorm(mu[i, w], tau) mu[i, w] &lt;- alpha[i] + beta[treat[i], i] * (w - 1) } alpha[i] ~ dnorm(alpha.mu, alpha.tau) for(t in 1:T) {beta[t, i] ~ dnorm(beta.mu[t], beta.tau[t])} } # Priors for (t in 1:T) { # T treatments beta.mu[t] ~ dnorm(0, 0.0001) beta.sigma[t] ~ dunif(0, 100) beta.sigma.sq[t] &lt;- pow(beta.sigma[t], 2) beta.tau[t] &lt;- 1/beta.sigma.sq[t] } # specification of other priors as before in the random intercept model alpha ~ dnorm(0, 0.00001) alpha.mu ~ dnorm(0, 0.00001) alpha.sigma ~ dunif(0, 100) alpha.sigma.sq &lt;- pow(alpha.sigma, 2) alpha.tau &lt;- 1/alpha.sigma.sq for (t in 1:T){ # T treatments beta[t] ~ dnorm(0, 0.00001) } tau ~ dgamma(0.001, 0.001) sigma.sq &lt;- 1/tau # Normal errors 102.3.6 HAMD 數據不同模型結果的比較 在非隨機效應模型（即簡單線性回歸模型）中， 一共有3條回歸直線被統計模型擬合，其中每個治療方案爲一條回歸直線； 每個治療方案獲得的回歸直線本身，具有相同的截距； 每個治療方案的回歸直線具有不同的斜率。 在隨機截距模型中， 每名參加實驗的患者有自己的回歸直線； 每名患者的回歸直線只有自己的隨機截距，也就是HAMD的起始值被允許取不同的值。 再隨機截距隨機斜率模型中， 每名患者的回歸直線被允許擁有不同的斜率，和不同的截距。 下圖(表) 102.7 提供了三種不同模型分析 HAMD 數 據結果的報告。可以注意到當模型中增加隨機效應時，明顯地，殘差方差 (residual variance) \\(\\sigma^2\\) 大幅下降。因爲這些使用簡單線性回歸模型 時只能被歸類到一個隨機殘差當中去的方差，分別被歸類到了隨機截距的方差， 和隨機斜率的方差中去了。三個模型的 DIC 指標也提示我們，該數據更加支持 隨機效應模型，且兩個隨機效應模型相比，隨機截距和隨機斜率都有的隨機效應 模型更加貼合收集來的觀測數據。同時表格的最下面也列出了每個不同模型中實 際使用到的有效變量個數 (effective number of parameters, \\(p_D\\))，而且這 個有效變量個數隨着隨機效應的增加而顯著增加。 圖 102.7: Posterior mean (95% credible intervals) for the non-hierarchical and hierarchical models fitted to the HAMD data. 102.3.7 HAMD 數據實例結果的解釋 值得注意的是，在 HAMD 數據中，我們關心的實驗問題其實是，“三種不同治療方案，對於HAMD分析得分的變化（也就是回歸線的斜率），是否起到不同的作用。(whether there are any difference in the effects of the 3 treatments on the change in HAMD score over time)”。也就是說我們特別對斜率的不同感興趣。 \\(\\beta_1 - \\beta_2, \\beta_1 - \\beta_3, \\beta_2 - \\beta_3\\)； 以及隨機斜率模型中的：\\(\\mu_{\\beta_1} - \\mu_{\\beta_2}, \\mu_{\\beta_1} - \\mu_{\\beta_3}, \\mu_{\\beta_2} - \\mu_{\\beta_3}\\) 這些斜率差值其實可以通過 BUGS 代碼簡單方便的計算出來，便於我們進行樣本採集和統計推斷： # calculate contrasts contrasts[1] &lt;- beta[1] - beta[2] contrasts[2] &lt;- beta[1] - beta[3] contrasts[3] &lt;- beta[2] - beta[3] 或者寫成： contrasts[1] &lt;- beta.mu[1] - beta.mu[2] ... 三個不同模型的斜率比較結果總結如下圖（表）102.8，其中隨機即截距隨機斜率模型的三個斜率比較的事後概率分佈圖繪製如圖102.9。由於 HAMD 得分越低表示抑鬱症症狀越輕，所以表格中的斜率差如果是負的，表示斜率比較中前者的療效更好（下降效果更顯著），如果斜率差是正的，那麼就是反過來證明斜率比較中後者的療效更好。所以很顯然，療法2比起療法1對於 HAMD 分數的下降更加有顯著效果。這個結果和之前對數據的粗略均值繪製圖102.5提示的結果相一致。當然一個更加完整的貝葉斯統計學分析還要包括對模型進行擬合診斷，以及對模型進行更加仔細的推敲（例如對線性變量中心化，或者增加實驗設施這個層級的隨機效應，或者允許增加非線性的結果）。另外值得注意的是，我們之前介紹過的所有對於非多層回歸模型的擬合檢查在混合效應模型中都會變得更加複雜。還有值得提醒的一點在於，DIC在大部分模型擬合中都可以用於比較不同的模型，但是有時候也會出現 BUGS 軟件無法計算 DIC 的情況。先驗概率分佈的選擇也是混合效應模型擬合時需要慎重考慮的一點，這些內容這裏由於篇幅限制無法一一詳細介紹。 圖 102.8: Posterior mean (95% credible interval) for the contrasts (treatment comparisons) from models fitted to the HAMD data 圖 102.9: Density plots for the hierarchical model with random intercepts and random slopes. 102.4 Practical Bayesian Statistics 08 本章練習題會延續使用前一個章節 (Chapter 101.5) 中使用的練習題數據，岡比亞兒童使用蚊帳睡眠是否能夠降低或者減輕瘧疾。 把前章練習中的貝葉斯邏輯回歸模型改造成爲一個包含村莊級別隨機效應的多層邏輯回歸模型。 # Logistic regression model for malaria data model { for(i in 1:149) { MALARIA[i] ~ dbin(p[i], POP[i]) logit(p[i]) &lt;- alpha + beta.age[AGE[i]] + beta.bednet[BEDNET[i]] + beta.green*(GREEN[i] - mean(GREEN[])) + beta.phc*PHC[i] + theta[VILLAGE[i]] } # village-level random effect for (j in 1:25) { theta[j] ~ dnorm(0, tau) OR.village[j] &lt;- exp(theta[j]) # Odds ratio of malaria in village j relative to the average } # vague priors on regression coefficients alpha ~ dnorm(0, 0.00001) sigma ~ dunif(0, 100) tau &lt;- 1/pow(sigma, 2) beta.age[1] &lt;- 0 # set coefficient for baseline age group to zero (corner point constraint) beta.age[2] ~ dnorm(0, 0.00001) beta.age[3] ~ dnorm(0, 0.00001) beta.age[4] ~ dnorm(0, 0.00001) beta.bednet[1] &lt;- 0 # set coefficient for baseline bednet group to zero (corner point constraint) beta.bednet[2] ~ dnorm(0, 0.00001) beta.bednet[3] ~ dnorm(0, 0.00001) beta.green ~ dnorm(0, 0.00001) beta.phc ~ dnorm(0, 0.00001) # calculate odds ratios of interest OR.age[2] &lt;- exp(beta.age[2]) # OR of malaria for age group 2 vs. age group 1 OR.age[3] &lt;- exp(beta.age[3]) # OR of malaria for age group 3 vs. age group 1 OR.age[4] &lt;- exp(beta.age[4]) # OR of malaria for age group 4 vs. age group 1 OR.bednet[2] &lt;- exp(beta.bednet[2]) # OR of malaria for children using untreated bednets vs. not using bednets OR.bednet[3] &lt;- exp(beta.bednet[3]) # OR of malaria for children using treated bednets vs. not using bednets OR.bednet[4] &lt;- exp(beta.bednet[3] - beta.bednet[2]) # OR of malaria for children using treated bednets vs. using untreated bednets OR.green &lt;- exp(beta.green) # OR of malaria per unit increase in greenness index of village OR.phc &lt;- exp(beta.phc) # OR of malaria sfor children living in villages belonging to the primary health care system versus children living in villages not in the health care system logit(baseline.prev) &lt;- alpha # baseline prevalence of malaria in baseline group (i.e. child in age group 1, sleeps without bednet, and lives in a village with average greenness index and not in the health care system) PP.untreated &lt;- step(1 - OR.bednet[2]) # probability that using untreated bed net vs. no bed net reduces odds of malaria PP.treated &lt;- step(1- OR.bednet[4]) # probability that using treated vs. untreated bednet reduces odds of malaria } # Read in the data: # Data &lt;- read_delim(paste(bugpath, &quot;/backupfiles/malaria-data.txt&quot;, sep = &quot;&quot;), delim = &quot; &quot;) Data &lt;- read.table(paste(bugpath, &quot;/backupfiles/malaria-data.txt&quot;, sep = &quot;&quot;), header = TRUE) # Data file for the model Dat &lt;- list( POP = Data$POP, MALARIA = Data$MALARIA, AGE = Data$AGE, BEDNET = Data$BEDNET, GREEN = Data$GREEN, PHC = Data$PHC, VILLAGE = Data$VILLAGE ) # initial values for the model # the choice is arbitrary inits &lt;- list( list(alpha = -0.51, beta.age = c(NA, 0.83, 0.28, -1.68), beta.bednet = c(NA, -2.41, 0.68), beta.green = -0.23, beta.phc = 1.82, sigma = 3), initlist1 &lt;- list(alpha = 1.29, beta.age = c(NA, 0.49, -0.38, -0.04), beta.bednet = c(NA, 6.85, 0.09), beta.green = 2.66, beta.phc = -0.31, sigma = 1) ) # Set monitors on nodes of interest parameters &lt;- c(&quot;OR.age&quot;, &quot;OR.bednet&quot;, &quot;OR.green&quot;, &quot;OR.phc&quot;, &quot;PP.treated&quot;, &quot;PP.untreated&quot;, &quot;baseline.prev&quot;, &quot;sigma&quot;, &quot;OR.village&quot;) # fit the model in jags jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/malaria-model-hierarchical.txt&quot;, sep = &quot;&quot;), parameters.to.save = parameters, n.iter = 1000, n.chains = 2, inits = inits, n.burnin = 0, n.thin = 1, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 149 ## Unobserved stochastic nodes: 34 ## Total graph size: 1435 ## ## Initializing model # Show the trace plot Simulated &lt;- coda::as.mcmc(jagsModel) ggSample &lt;- ggs(Simulated) ggSample %&gt;% filter(Parameter %in% c(&quot;OR.age[2]&quot;, &quot;OR.age[3]&quot;, &quot;OR.age[4]&quot;, &quot;OR.bednet[2]&quot;, &quot;OR.bednet[3]&quot;, &quot;OR.bednet[4]&quot;, &quot;OR.green&quot;, &quot;baseline.prev&quot;, &quot;OR.phc&quot;, &quot;OR.village[1]&quot;)) %&gt;% ggs_traceplot() 圖 102.10: Density plots for parameters for hierarchical GLM about the odds of malaria regarding netbeds use in Gambia children. ## Potential scale reduction factors: ## ## Point est. Upper C.I. ## OR.age[2] 1.000 1.000 ## OR.age[3] 0.999 0.999 ## OR.age[4] 1.000 1.004 ## OR.bednet[2] 1.002 1.005 ## OR.bednet[3] 1.002 1.010 ## OR.bednet[4] 1.001 1.008 ## OR.green 1.001 1.003 ## OR.phc 1.003 1.005 ## OR.village[1] 0.999 1.000 ## OR.village[2] 1.002 1.002 ## OR.village[3] 1.000 1.004 ## OR.village[4] 1.003 1.003 ## OR.village[5] 1.002 1.004 ## OR.village[6] 1.002 1.008 ## OR.village[7] 0.999 0.999 ## OR.village[8] 1.004 1.004 ## OR.village[9] 1.023 1.039 ## OR.village[10] 1.000 1.004 ## OR.village[11] 1.003 1.018 ## OR.village[12] 1.011 1.020 ## OR.village[13] 1.003 1.005 ## OR.village[14] 1.011 1.034 ## OR.village[15] 1.002 1.007 ## OR.village[16] 1.000 1.000 ## OR.village[17] 1.012 1.045 ## OR.village[18] 1.004 1.005 ## OR.village[19] 1.030 1.038 ## OR.village[20] 1.001 1.002 ## OR.village[21] 1.000 1.003 ## OR.village[22] 1.001 1.001 ## OR.village[23] 1.002 1.006 ## OR.village[24] 1.014 1.014 ## OR.village[25] 1.016 1.018 ## PP.treated 0.999 1.001 ## PP.untreated 1.008 1.019 ## baseline.prev 1.000 1.001 ## deviance 1.000 1.001 ## sigma 0.999 0.999 ## ## Multivariate psrf ## ## 1.04 圖 102.11: Gelman-Rubin convergence statistic of parameters for GLM about the odds of malaria regarding netbeds use in Gambia children. 圖 102.12: Gelman-Rubin convergence statistic of parameters for GLM about the odds of malaria regarding netbeds use in Gambia children. 圖 102.13: Gelman-Rubin convergence statistic of parameters for GLM about the odds of malaria regarding netbeds use in Gambia children. 圖 102.14: Gelman-Rubin convergence statistic of parameters for GLM about the odds of malaria regarding netbeds use in Gambia children. 圖 102.15: Gelman-Rubin convergence statistic of parameters for GLM about the odds of malaria regarding netbeds use in Gambia children. 基本可以認爲刨除前1000次取樣 (burn-in) 可以達到收斂。 jagsModel &lt;- jags(data = Dat, model.file = paste(bugpath, &quot;/backupfiles/malaria-model-hierarchical.txt&quot;, sep = &quot;&quot;), parameters.to.save = parameters, n.iter = 26000, n.chains = 2, inits = inits, n.burnin = 1000, n.thin = 1, progress.bar = &quot;none&quot;) ## Compiling model graph ## Resolving undeclared variables ## Allocating nodes ## Graph information: ## Observed stochastic nodes: 149 ## Unobserved stochastic nodes: 34 ## Total graph size: 1435 ## ## Initializing model print(jagsModel) ## Inference for Bugs model at &quot;/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles/malaria-model-hierarchical.txt&quot;, fit using jags, ## 2 chains, each with 26000 iterations (first 1000 discarded) ## n.sims = 50000 iterations saved ## mu.vect sd.vect 2.5% 25% 50% 75% 97.5% Rhat n.eff ## OR.age[2] 1.799 0.440 1.089 1.484 1.749 2.057 2.810 1.001 50000 ## OR.age[3] 2.283 0.550 1.404 1.892 2.216 2.602 3.524 1.001 50000 ## OR.age[4] 2.359 0.575 1.431 1.953 2.290 2.691 3.676 1.001 50000 ## OR.bednet[2] 0.731 0.212 0.404 0.580 0.700 0.850 1.225 1.001 22000 ## OR.bednet[3] 0.644 0.247 0.291 0.469 0.601 0.771 1.244 1.001 50000 ## OR.bednet[4] 0.917 0.352 0.421 0.667 0.856 1.096 1.770 1.001 50000 ## OR.green 0.954 0.062 0.835 0.912 0.953 0.993 1.082 1.001 50000 ## OR.phc 0.697 0.337 0.254 0.469 0.631 0.845 1.528 1.001 50000 ## OR.village[1] 2.739 1.309 1.059 1.842 2.462 3.322 6.002 1.001 50000 ## OR.village[2] 1.255 0.507 0.543 0.901 1.163 1.510 2.480 1.001 28000 ## OR.village[3] 1.379 0.786 0.436 0.848 1.200 1.696 3.383 1.001 34000 ## OR.village[4] 0.782 0.410 0.258 0.505 0.698 0.963 1.787 1.001 50000 ## OR.village[5] 1.333 0.682 0.465 0.867 1.189 1.631 3.026 1.001 17000 ## OR.village[6] 1.094 0.598 0.350 0.687 0.962 1.351 2.615 1.001 50000 ## OR.village[7] 3.307 1.620 1.269 2.209 2.958 4.012 7.341 1.001 50000 ## OR.village[8] 0.481 0.224 0.173 0.324 0.441 0.588 1.031 1.001 11000 ## OR.village[9] 0.237 0.119 0.077 0.153 0.214 0.295 0.529 1.001 50000 ## OR.village[10] 1.086 0.552 0.376 0.706 0.971 1.338 2.474 1.001 50000 ## OR.village[11] 0.734 0.446 0.196 0.432 0.633 0.918 1.853 1.001 50000 ## OR.village[12] 2.040 0.979 0.760 1.364 1.839 2.484 4.484 1.001 50000 ## OR.village[13] 1.831 1.648 0.333 0.878 1.410 2.245 5.926 1.001 50000 ## OR.village[14] 0.730 0.400 0.217 0.454 0.646 0.909 1.724 1.001 50000 ## OR.village[15] 0.341 0.206 0.093 0.201 0.297 0.428 0.851 1.001 29000 ## OR.village[16] 0.666 0.351 0.206 0.421 0.596 0.831 1.544 1.001 9000 ## OR.village[17] 1.312 0.675 0.446 0.844 1.171 1.613 3.032 1.001 12000 ## OR.village[18] 4.373 2.513 1.464 2.691 3.771 5.341 10.921 1.001 50000 ## OR.village[19] 0.919 0.478 0.303 0.588 0.821 1.134 2.129 1.001 50000 ## OR.village[20] 1.334 0.661 0.483 0.882 1.199 1.627 2.977 1.001 50000 ## OR.village[21] 2.753 1.365 1.029 1.827 2.466 3.340 6.196 1.001 50000 ## OR.village[22] 1.093 0.548 0.390 0.719 0.979 1.339 2.443 1.001 50000 ## OR.village[23] 1.174 0.571 0.425 0.779 1.057 1.436 2.586 1.001 50000 ## OR.village[24] 0.393 0.301 0.068 0.195 0.317 0.502 1.162 1.001 21000 ## OR.village[25] 2.547 1.503 0.818 1.564 2.204 3.112 6.335 1.001 50000 ## PP.treated 0.664 0.472 0.000 0.000 1.000 1.000 1.000 1.001 9600 ## PP.untreated 0.892 0.310 0.000 1.000 1.000 1.000 1.000 1.001 14000 ## baseline.prev 0.321 0.086 0.171 0.260 0.316 0.376 0.507 1.001 50000 ## sigma 0.921 0.195 0.609 0.785 0.898 1.030 1.363 1.001 50000 ## deviance 367.626 7.526 354.810 362.269 367.018 372.225 384.025 1.001 50000 ## ## For each parameter, n.eff is a crude measure of effective sample size, ## and Rhat is the potential scale reduction factor (at convergence, Rhat=1). ## ## DIC info (using the rule, pD = var(deviance)/2) ## pD = 28.3 and DIC = 395.9 ## DIC is an estimate of expected predictive error (lower deviance is better). 從多層邏輯回歸分析的結果來看，每個變量的事後概率分佈的標準差都比無考慮村莊這一隨機效應時要大一些。這主要是因爲，多層回歸模型考慮了數據中村莊這個層面的過度離散效應(overdispersion)。但是整體的來說，每個比值比的含義並沒有發生太多改變。另外，村莊層級的隨機效應，其方差的事後均值爲 0.915，這是相對高的過度離散效應的表現。DIC結果也比無隨機效應的邏輯回歸模型提升顯著 476.8-&gt;396.8。這也是村莊層級隨機效應十分顯著的證據之一。 References "],["MCMC-revisit.html", "第 103 章 再訪 MCMC 103.1 Metropolis-Hastings algorithm 103.2 適應階段 adaptive phase", " 第 103 章 再訪 MCMC 和我們之前在介紹MCMC(Markov Chain Monte Carlo)時 (Chapter 98)介紹過的那樣，大部分的統計模型其事後概率分佈的直接樣本 \\(p(\\theta|x)\\) 採集是十分困難的。但是我們可以使用間接的算法實施採樣過程。吉布斯樣本採集 (Chapter 98.1.2) 是美特羅波利斯-海斯廷斯(Metroplis-Hastings)算法(algorithm)的特殊形態。本章我們來深入探討Metropolis-Hastings算法具體的實施過程是怎樣進行的。 103.1 Metropolis-Hastings algorithm 美特羅波利斯-海斯廷斯算法在歷史上爲統計學打開了一扇嶄新的大門。因爲它的發明，我們現在可以繞過複雜的微積分計算過程，對幾乎任何一種分佈實施樣本採集。這一種要算法的發明，不僅僅對於貝葉斯統計學來說是一個重大突破，同時也爲傳統的概率論統計學提供了強有力的算法。 具體的算法過程較爲複雜，我們可以不用完全掌握其所有細節，但是我們應該明白它的大致採集樣本的原理。理解了它的採樣原理，有助於我們實際操作時選取合適的參數(parameters)，從目標分佈中獲取品質優良的隨機樣本。它的基本原理框架是這樣的： 先從變量可能的取值樣本中，爲\\(X_0\\)選取一個起始值 (starting value)，我們稱之爲”現在值 current” \\((X_{t-1} = X_0)\\)； 以第一步選取的預測變量現在值爲條件 \\(g(Y|X_{t-1})\\)，隨機設定一個候選變量(candidate \\(Y_t\\))的分佈，例如可以是典型的高斯（正態）分佈：\\(Y_t \\sim N(X_{t-1}, \\sigma)\\)； 隨機從第二步設定的分佈中選取 \\(Y_t\\) 作爲樣本 \\((X_t)\\) 的第二個元素，同時滿足下面的概率關係： \\[ P(X_t = Y_t) = min(1, \\frac{P(Y_t|data)/g(Y_t|X_{t-1})}{P(X_{t-1}|data)/g(X_{t-1}|Y_t)}) \\] 假設你沒有選擇 \\(Y_t\\) 那麼 \\(X_{t-1}\\) 會被重複選取作爲樣本的元素，\\(X_t = X_{t-1}\\)； 回到第二步，然後進行下一個樣本(increase \\(t\\) by 1)的採集。 在上面的公式中， \\(P(Y_t|data)\\)是利用指定（的先驗概率）分佈的概率密度方程(probability density function, pdf)中隨機選取的 \\(Y_t\\) 計算獲得的概率。這個方程包含了一個很大概率我們人類無法計算的積分分母：\\(\\int P(data|\\theta)P(\\theta)\\)。(however, the method also works if we substitute any function proportional to the posterior because the proportionality constant will cancel out)但是在計算過程中如果我們用與該事後概率密度分佈成比例的方程將之替代掉，那麼這部分複雜的積分方程會由於成比例性最終同時在分子分母中被抹去。例如常用的是事後概率分佈密度方程的分子部分： \\(f(Y_t) = P(data|Y_t)\\times P(Y_t) \\propto P(Y_t|data)\\)。另外，如果用於採集樣本的分佈 \\(g\\) 是左右對稱的：\\(g(Y_t|X_{t-1}) = g(X_{t-1}|Y_t)\\)，算法會簡化成爲 Metropolis 算法： \\[ P(X_t = Y_t) = min(1, \\frac{f(Y_t)}{f(X_{t-1})}) \\] 圖 103.1: Sampling with the Metropolis-Hastings algorithm 103.2 適應階段 adaptive phase "],["compare-Bayes-freq.html", "第 104 章 貝葉斯和概率論的比較 104.1 兩種方法的不同點總覽 104.2 亞組分析 subgroup analysis 104.3 多重比較問題 multiple comparisons", " 第 104 章 貝葉斯和概率論的比較 Bayesianisom provides advice about how you should change your degree of belief as you acquire new evidence. 104.1 兩種方法的不同點總覽 嚴格來說，每個研究問題，都可以通過兩種統計學方法，要麼概率論手段，要麼貝葉斯思想，來描述及進行推斷。它們之間的不同，通過前面幾個章節的描述應該能夠切身體會得到： 貝葉斯思想利用的是事後概率分佈 \\(p(\\theta|y) \\propto p(y|\\theta)p(\\theta)\\)；而傳統概率論統計學只需要使用其中的似然(likelihood)部分。 貝葉斯思想需要使用者把進行實驗之前，已經有的知識和背景總結成爲先驗概率分佈 (prior distribution, \\(p(\\theta)\\))；而傳統概率論並無數學或者統計學的方案來考慮這些實驗進行之前已經有的背景知識，有的只是做完實驗之後，事後的討論，及對實驗結果的解讀，演繹時進行的描述。 貝葉斯思想一般是對噪音參數 (nuisance parameters) 進行取均值的做法；而傳統概率論是把這些參數也極大化 (maximise)。 貝葉斯統計學方法相對來說對計算能力要求較高，但是 MCMC 計算機模擬採樣過程使得現實中特別複雜的統計學模型也能變得直觀且易於獲得結果。 下面我們來討論一下上面提到的這些不同點在常見的臨牀實驗，以及流行病學研究的統計學案例中如何啓示分析者作出選擇。 104.2 亞組分析 subgroup analysis 很常見的一種現象是，一些藥物的治療效果，在總體中被發現具有顯著性的療效，但是當分析人員把研究對象根據一些特徵進行分層分析之後，卻發現這種顯著療效只存在與一部分亞組對象中，（如男性中有療效，但是女性中沒有療效等類似的現象）。同時，交互作用分析的結果又提示說分層變量和療效之間並沒有有意義的交互作用 (while an interaction analysis reveals that the effect is not significantly different for men and women)。 例如，我們看這樣一個實際的例子，有一個臨牀實驗比較的是 sinvastatin 和安慰劑對患者血清膽固醇水平下降能力上的異同。實驗對象有男性也有女性，它們的共同點是(曾經)患有心絞痛，或者心肌梗塞。實驗組和對照組的五年死亡人數等數據總結如下： 圖 104.1: Five-year mortality for simvastatin vs. placebo trial. 根據這個結果，就有人會提出尖銳的問題，到底女性患者是否應該使用該藥物來降低膽固醇？ 是。理由是總體（男女共同的）治療是有效果的，且交互作用並無提示療效有男女差異。 否。理由是分層分析結果現實女性中療效是無顯著意義的，並且還甚至可能有害 (RR &gt; 1)。 如果使用貝葉斯思想來進行接下來的分析的話，貝葉斯統計學會要求給療效\\(\\times\\)性別這一代表交互作用的變量的回歸係數加上有信息的先驗概率分佈 (informative prior)，但是給其他的回歸係數以不含信息的先驗概率分佈 (non-informative priors on all the other parameters.)。這樣的一種方法，可以從男性結果中借來 (borrowing information from men) 一些療效信息，因爲顯然上面這個實驗中女性患者的數量很少，只有男性患者的不到三分之一人數。同時把模型中男性相對女性患者的信息量比重下調 (down-weighting information from men compared with information from women)。 104.3 多重比較問題 multiple comparisons 臨牀實驗和流行病學研究同時都面對多重比較的問題。貝葉斯統計學方法提供了 "],["nonparaBayes-intro.html", "第 105 章 非參貝葉斯入門", " 第 105 章 非參貝葉斯入門 If I’m doing an experiment to save the world, I better use my prior. Andrew Gelman 這裏的筆記來自於下列參考書的閱讀心得，思考，及其中的練習：Bayesian nonparametric data analysis (Müller et al. 2015), by Peter Müller, Fernando Andres Quintana, Alejandro Jara, Tim Hanson. 統計學問題，通常可以使用概率模型來描述。這句話的真實意涵是，我們觀察到的數據，其實是由一組我們想象的 (envisioned) 隨機變量 \\(y_1, \\dots, y_n\\) 實現的。這一組隨機變量可以對應到我們收集的第 \\(i\\) 個實驗單元 (experimental unit)，而衆多的實驗單元又組成了 \\(n\\) 個來自總體的樣本。一個最常見的假設是，\\(y_n\\) 是從某個概率分佈 \\(G\\) 中採集而來，它們之間相互獨立 (drawn independently)。那麼我們關心的統計學問題，就起源於這個概率分佈 \\(G\\) 本身的不確定性 (uncertainty)。我們使用 \\(g\\) 表示該概率分佈的概率密度函數 (p.d.f, probability density function)。當 \\(g\\) 已知是屬於某個分佈家族 (family of distribution) \\(\\mathcal{G} = \\{ g_\\theta : \\theta \\in \\Theta \\}\\) 的一員 \\(g_\\theta\\)，且該概率分佈函數的特徵參數可以用 \\(\\theta\\) 表示，\\(\\theta\\) 是該分佈家族中會使用到的特徵參數集合 \\(\\Theta\\) 的一個子集時，我們就有了一個完整的統計學模型。 統計學模型本身，可以由多個特徵參數組成的向量來描述，通常這個特徵參數的向量中的元素是有限個的 (finite-dimensional)，我們稱這樣的統計學模型爲，參數模型 parametric model。這樣的參數統計學模型可以用數學語言描述爲：\\(\\mathcal{G} = \\{ g_\\theta : \\bar{\\theta} \\in \\Theta \\subset \\mathbb{R}^p \\}\\)。那麼統計分析的目的，就轉化成使用樣本數據尋找一個合理的參數估計值 \\(\\bar{\\theta}\\)，或者至少找到 \\(\\Theta\\) 中包含 \\(\\bar{\\theta}\\) 的一部分子集。可是，在許多情況下，給統計學模型人爲地施加過多的約束，特別是限制它爲某一類分佈族等參數被強制爲某些特殊形態時，我們的模型推斷也就被人爲地施加了範圍和限制。於是，有智者認爲，我們應該放鬆這樣的模型參數的前提條件等限制 (relax the parametric assumptions)，從而允許統計學模型有更大的靈活性 (flexibility)，和穩健性 (robustness)，且降低模型被錯誤描述的可能性 (mis-specification)。爲了解除參數的限制，我們考慮的統計學模型應該被賦予極大的靈活性，也就是它所屬的那個分佈家族的概率密度函數，可以描述它的參數個數限制應當被放寬，以至於可以允許有無限多個參數 \\(\\bar{\\theta}\\) (finite dimensional space)。 Example 105.1 密度估計 (density estimation) 思考這樣一個簡單的隨機樣本 \\(y_i | G \\stackrel{i.i.d}{\\sim} G, i = 1, \\dots, n\\)。這個樣本可能來自一個未知的分佈\\(G\\)。有的人在分析這個樣本數據的時候，可能就選擇把這個未知的分佈限制爲一個正（常）態分佈，即 \\(\\mathcal{G} = \\{\\mathbf{N}(\\theta, 1): \\theta \\in \\mathbb{R}\\}\\)。那麼圖 105.1 (a) 則展示了使用正（常）態分佈對該簡單隨機樣本做的推斷結果，該推斷基於的假設就是該樣本\\(y_1, \\dots, y_n\\)是隨機採集自一個正（常）態分佈。那麼很顯然，這樣的估計和假設雖然可能是沒有太大問題的，但是這個未知的分佈\\(G\\)由於受制於正（常）態分佈這樣一個假設，就不可能允許有多個峯值 (multi-modality)，或者偏度 (skewness)。與之形成對比的是，圖 105.1 (b) 則是使用了非參數模型 (nonparametric model)，並且用概率模型\\(\\pi\\)作爲該未知分佈 \\(\\mathcal{G}\\) 的先驗概率模型 (prior probability model) 對該樣本數據進行的推斷示例。圖 105.1 (b) 使用的是一種叫做狄雷克雷過程 (Dirichlet process) 的方法做先驗混合概率 (mixture prior)，然後通過非參數貝葉斯 (Bayesian Nonparametric, BNP) 作出的較爲靈活的推斷。圖中的點線，對應的是採集的事後樣本 (posterior draws)。 圖 105.1: Inference on the unknown distribution \\(G\\) under a parametric model (a) and nonparametric model (b). The historgram of the observed data is also displayed. The dotted line in (b) correspond to posterior draws. 在示例 105.1 中，那個未知的，有無限維度（參數個數不加限制的）的就是 \\(G\\) 本身。另一個較爲容易理解的無限維度參數空間 (infinite-dimensional parameter space) 的例子其實是一条定義在長度不限的實線上的連續函數 (continuous function defined on the real line): \\(S = \\{ m(z) : z \\in \\mathbb{R}, m(\\cdot) \\text{ is a continuous function}\\}\\)。例如可以是一條均值未知的 (\\(m(z)\\)) 回歸直線。允許了無限維度參數的模型被叫做非參數模型 (non-parametric models)。你可能會看見有人把這樣的無限維度參數 \\(\\bar{\\theta}\\) 寫作：\\((\\bar{\\theta}_1, \\bar{\\theta}_2)\\)，其中 \\(\\bar{\\theta}_1\\) 是 \\(q\\) 維度參數向量，\\(\\bar{\\theta}_2\\) 是無限維度參數向量。這樣的模型，由於同時包括參數部分和非參數部分又被稱作半參數 (semi-parametric) 模型。典型的半參數模型，我們熟悉的有比例風險模型 (proportional hazards model) (Chapter 88)。比例風險模型最常見用於對生存時間 \\(T\\) 的分析。假如該模型中我們希望加入考慮的參數向量是 \\(\\bar{z}\\)，那麼下式用於表示條件風險率 (conditional hazard rate)： \\[ \\begin{equation} \\lambda(t | \\bar{z}) = \\lim_{h \\rightarrow 0} \\{ \\frac{p(t \\leq T &lt; t + h | T \\geq t, \\bar{z})}{h} \\} \\tag{105.1} \\end{equation} \\] 比例風險模型認爲： \\[ \\lambda(t | \\bar{z}) = \\lambda_0 (t) \\exp(\\bar{z}^\\prime \\bar{\\beta}) \\] 其中，\\(\\lambda_0(\\cdot)\\) 是基線風險函數 (baseline hazard function)，\\(\\bar{\\beta}\\) 是 \\(q\\) 維的回歸係數組成的向量。在經典的半參數版本的Cox風險比例回歸模型中，這個基線風險函數是被忽略掉，不進行估計的。所以這個函數就可以是任意的關於時間 \\(t\\) 的正函數，它就是一個無限維度的函數。所以，使用比例風險函數的模型，它的參數集合可以用 \\(\\bar\\theta = (\\bar{\\beta}, \\lambda_0)\\) 表示。事實上，生存數據本身的概率密度函數 \\(f_T\\) 和風險函數之間是有關係的： \\[ f_T(t | \\bar{z}) = \\lambda_0 (t) \\exp(z^\\prime \\bar{\\beta}) \\exp\\{ -\\exp(z^\\prime \\bar{\\beta}) \\int_0^t \\lambda_0(u) du \\} \\] 於是，上述概率密度函數中我們關心的參數就有兩個部分：\\(\\bar\\theta_1 = \\bar{\\beta}\\)，和 \\(\\bar\\theta_2 = \\lambda_0\\)，那麼把這兩部分合起來就可以寫作 \\(\\bar\\theta = (\\bar\\theta_1, \\bar\\theta_2) \\in \\mathbf{\\Theta} = \\mathbb{R}^q \\times \\mathcal{S}\\)。其中 \\(\\mathcal{S}\\) 是指代所有可能的在正實數空間 \\(\\mathbb{R}^+\\) 裏的無限維度的非負函數。 Example 105.2 口腔癌例子 數據是源於 (Klein and Moeschberger 2006) Section 1.11。該數據報告了 80 名口腔癌患者的生存時間。患者中有染色體數量異常 (aneuploid) 和染色體數量二倍體正常 (diploid)。我們定義 \\(z_i \\in \\{0, 1\\}\\) 爲指示患者是否是染色體異常的變量。之後使用比例風險函數 (105.1) 做生存時間的推斷，且對本來不估計的基線風險 \\(\\lambda_0\\) 使用非參貝葉斯的方法做推斷。圖 105.2 就展示了染色體異常與否的兩組患者的風險度曲線。我們使用了 penalized B-spline 作爲 \\(\\log\\{\\lambda_0(\\cdot)\\}\\) 的先驗概率，在 R2BayesX 的R包的輔助下完成。 圖 105.2: Hazard curves for aneuploid and diploid groups under the proportional hazard model with point-wise 50% CIs. 爲了能夠在非參數模型中完成貝葉斯推斷，我們需要爲概率模型補充一個無限維度參數的先驗概率。這樣的先驗概率被叫做非參貝葉斯先驗概率 (BNP prior)。也就是說，我們定義BNP先驗概率作爲無限維度參數的概率模型，這樣的推斷過程被稱爲 BNP 模型。這也就是非參數貝葉斯推斷和經典非參數推斷之間的不同點。無論是 BNP 還是經典非參數推斷，都設定了無限維度參數用來描述我們的樣本所代表的那個概率模型。二者最大的不同點是，貝葉斯推斷是把先驗概率分佈的參數給無限維度化。這樣BNP推斷就擁有了能夠用完整的概率描述法，解釋所有相關不確定性的潛力。經典的非參數法，則是把無限維度的參數當作可以忽略的“雜音”參數，通過一些巧妙的手段避開對他們直接進行估計，而且把重點放在估計那些有限的，我們關心的參數上去。 References "],["密度估計-density-estimation---狄雷克雷過程模型-dp-models.html", "第 106 章 密度估計 Density estimation - 狄雷克雷過程模型 DP models 106.1 狄雷克雷過程 Dirichlet process", " 第 106 章 密度估計 Density estimation - 狄雷克雷過程模型 DP models 這裏我們來探討如何在密度估計 (density estimation) 中使用非參貝葉斯 (BNP) 模型。主要介紹狄雷克雷過程的先驗概率在 BNP 模型中的應用。狄雷克雷過程是目前最常見的BNP。它主要有兩種類型：狄雷克雷過程混合模型 Dirichlet process mixture modeling，和有限狄雷克雷過程 finite Dirichlet process。 密度估計是常見的需要對來自陌生分佈 \\(G\\) 的獨立同分佈 (i.i.d) 樣本進行推斷時的過程： \\[ \\begin{equation} y_i | G \\stackrel{i.i.d}{\\sim} G, i = 1, \\dots,n \\tag{106.1} \\end{equation} \\] 當我們需要對該過程使用貝葉斯理論推斷時，我們需要給 \\(G\\) 補充一個先驗概率分佈 \\(\\pi\\)。假設這個 \\(G\\) 的先驗概率分佈需要無限維度參數，也就是需要一個 BNP 先驗概率。 106.1 狄雷克雷過程 Dirichlet process 106.1.1 定義 definition 狄雷克雷過程先驗概率 (DP prior) 是最常見的 BNP 模型。它最早由 Ferguson (1973) 作爲測度概率空間的先驗概率分佈提出 (as a prior on the space of probability measures)。 Definition 106.1 (Dirichlet process-DP) 令 \\(M &gt; 0\\) 且 \\(G_0\\) 是定義在空間 \\(S\\) 上的概率測度 (probability measure)。一個 DP 過程的參數由 \\((M, G_0)\\) 構成。該過程是定義在空間 \\(S\\) 上的一個隨機概率測度，對於任意一個可以測量的子集 \\(B\\) 賦予對應的概率 \\(G(B)\\)。\\(\\{ B_1, \\dots, B_k \\}\\) 構成了整個空間 \\(S\\)。那麼這些子集的聯合概率分佈 joint distribution \\((G(B_1), \\dots, G(B_k))\\) 是一個狄雷克雷分佈，它的參數表達如下： \\[ (MG_0(B_1), MG_0(B_2), \\dots, MG_0(B_k)) \\] 這個 DP 過程又可簡寫爲 DP\\((MG_0)\\)，或者 DP\\((M,G_0)\\)。其中參數 \\(M\\) 叫做精確度 (precision) 或者總量參數 (total mass parameter)。參數 \\(G_0\\) 則又叫做中心測度 (centering measure)，他們的乘積 \\(\\alpha \\equiv MG_0\\) 被叫做狄雷克雷過程的基礎測度 (base measure)。 狄雷克雷過程一個重要性質是 \\(G\\) 的離散特性 (discrete nature)。由於是一個離散型隨機概率測度，我們總是可以把 \\(G\\) 改寫成是每個測量位點的權重之和 (sum of point masses)：\\(G(\\cdot) = \\sum_{h = 1}^\\infty w_h \\delta_{m_h}(\\cdot)\\)。這個權重之和中，\\(w_1, w_2, \\dots\\) 就是概率權重，\\(\\delta_x(\\cdot)\\) 標記的是 \\(x\\) 的狄拉克位置測度 (Dirac measure at \\(x\\))。狄雷克雷另一個重要性質是它強大的極微小支持 (largely weak support)。這意味着，在較爲溫和的條件下，任意的分佈都可以通過中心測度 \\(G_0\\)，和隨機概率測度模擬和近似 (well approximated)。 掰棍子過程 (stick-breaking process) 是利用狄雷克雷過程中 \\(G(\\cdot)\\) 的離散性質，即 \\(G(\\cdot) = \\sum_{h = 1}^\\infty w_h \\delta_{m_h} (\\cdot)\\)。在掰棍子過程中，位置函數 \\(m_h\\) 是從中心測度 \\(G_0\\) 中隨機採集的 i.i.d 樣本。每一個權重 \\(w_h\\) 是被定義爲剩餘長度棍子中的一部分 (a fraction of what is left after the proceeding point mass)：\\(\\{ 1- \\sum_{\\ell &lt; h} W_\\ell \\}\\)。令 \\(w_h = v_h \\prod_{\\ell &lt; h}(1 - v_\\ell)\\)，且 \\(v_h \\stackrel{i.i.d}{\\sim} \\text{Beta}(1, M)\\)，\\(m_h \\stackrel{i.i.d}{\\sim} G_0\\)，\\(\\{ v_h \\}, \\{ m_h \\}\\) 之間相互獨立。那麼就定義隨機概率測度 DP\\((MG_0)\\) 爲： \\[ \\begin{equation} G(\\cdot) = \\sum_{h = 1}^\\infty w_h \\delta_{m_h} (\\cdot) \\tag{106.2} \\end{equation} \\] 這樣表達的話， \\(G \\sim \\mathbf{DP}(MG_0), m \\sim G_0, W \\sim \\text{Beta}(1, M)\\) 會使 \\(W\\delta_m(\\cdot) + (1 - W) G(\\cdot)\\) 本身仍然是一個 DP\\((MG_0)\\) 的分佈。 106.1.2 推導 Special thanks to Professor Yida Xu. 特別鳴謝 徐亦達 教授，免費提供了狄雷克雷過程的詳細講解視頻。 假如有樣本量是 \\(N\\) 的一組觀察數據 \\(x_1, x_2, x_3, \\dots, x_i, \\dots, x_N\\)，這個數據中國每一個元素，對應產生它的分佈的相應參數是 \\(\\theta_1, \\theta_2, \\theta_3, \\dots, \\theta_i, \\dots, \\theta_N\\)。如果 \\(\\theta_i \\sim H(\\theta)\\) 是一個連續分佈，那麼該過程產生的 \\(\\theta\\) 將不可能有相同的值，即 \\(\\text{Pr}(\\theta_1 = \\theta_2) = 0\\)。 這時，我們思考，讓 \\(\\theta_i \\sim G\\) 是一個離散型 (discrete) 分佈。 \\[ G \\sim \\mathbf{DP} (\\alpha, H) \\] 其中，\\(\\alpha\\) 是一個大於零的標量 (scalar)，\\(\\alpha &gt; 0\\)。\\(\\alpha\\) 決定了離散分佈 \\(G\\) 本身和連續分佈 \\(H\\) 之間相似程度，\\(\\alpha\\) 越小，\\(G\\) 越離散，\\(\\alpha\\) 越大，\\(G\\) 越接近 \\(H\\)，也就是越平滑（越連續）。當 \\(\\alpha\\) 等於零，\\(G\\) 就離散到只剩下一個單一的值，也就是極端離散情況。反過來，\\(\\alpha \\rightarrow \\infty\\) 時，\\(G = H\\)。當然這兩種極端情況是我們在使用 DP 時不太會採用的。 \\(H\\) 也可以使用離散分佈，並不一定非要是連續型分佈。 如果我們從某個分佈 \\(x_i \\sim P(X | \\theta)\\) 中採集樣本，我們只能得到一系列的觀測點，只是一個實現的值。但是如果 \\(G \\sim \\mathbf{DP}(\\alpha, H)\\)，它產生的則不是一個個的值，而是隨機採集整個離散型的分佈, random discrete probability measure。如圖 106.1 所示的那樣，我們從一個 \\(G \\sim \\mathbf{DP}(\\alpha, H)\\) 採集兩個 \\(G_1, G_2\\) 離散分佈，每個離散分佈之間互不相同，它們有各自的點，和每個點上”棍子”的長度，由於他們都是一個完整的離散分佈，那麼很顯然，每一次採集的 \\(G\\) 它的那些瑣碎的棍子的長度加起來都必須等於1。 圖 106.1: Sampling through Dirichlet Process is sampling random discrete probability measures for us, each sample is a whole discrete distribution. 如果在每次採集的隨機離散分佈 \\(G\\) 上有 \\(a_1, a_2, a_3, \\dots, a_d\\) 個區域的話，如圖 106.2。那麼有 \\(G(a_1), G(a_2), \\dots, G(a_d) \\sim \\text{Dirichlet}(\\alpha H(a_1), \\alpha H(a_2), \\dots, \\alpha H(a_d))\\) 圖 106.2: G samples from the same Dirichlet Process with a series of partitions. 之前在貝葉斯統計學章節討論橫斷面研究時 (Chapter 100.3) 曾經使用果狄雷克雷分佈作爲一個先驗概率，當時提到果狄雷克雷分佈的一些性質。這裏重新再補充一下： 當 \\(\\text{Pr}(x_1, \\dots, x_i, \\dots, x_k) \\sim \\text{Dirichlet}(\\alpha_1, \\dots, \\alpha_i, \\dots, \\alpha_k)\\) 時，我們知道該分佈的期望（均值）和方差分別是： \\[ E[x_i] = \\frac{\\alpha_i}{\\sum_k \\alpha_k} \\\\ \\text{Var}[x_i] = \\frac{\\alpha_i (\\sum_k \\alpha_k - \\alpha_i)}{(\\sum_k\\alpha_k)^2(\\sum_k\\alpha_k + 1)} \\] 根據狄雷克雷期望（均值）和方差的性質，圖 106.2 中任意一個區間(partition) \\(a_i\\) 上的期望（均值）和方差則分別可以被推導作是： 期望 \\(E[G(a_i)]\\): \\[ \\begin{aligned} E[G(a_i)] &amp; = \\frac{\\alpha H(a_i)}{\\sum_k \\alpha H(a_k)} \\\\ &amp; = \\frac{\\alpha H(a_i)}{\\alpha \\sum_k H(a_k)} \\\\ \\because &amp; \\sum_k H(a_k) = 1 \\\\ \\therefore &amp; = \\frac{\\alpha H(a_i)}{\\alpha} \\\\ &amp; = H(a_i) \\end{aligned} \\] 方差 \\(\\text{Var}[G(a_i)]\\) : \\[ \\begin{aligned} \\text{Var}[G(a_i)] &amp; = \\frac{\\alpha H(a_i)(\\alpha - \\alpha H(a_i))}{\\alpha^2 (\\alpha + 1)} \\\\ &amp; = \\frac{H(a_i)(1 - H(a_i))}{\\alpha + 1} \\\\ \\text{if } \\alpha &amp; \\rightarrow \\infty \\text{ then } \\\\ \\text{Var}[G(a_i)] &amp; = 0 \\\\ \\text{if } \\alpha &amp; \\rightarrow 0 \\text{ then } \\\\ \\text{Var}[G(a_i)] &amp; = H(a_i)(1 - H(a_i)) \\end{aligned} \\] 圖 106.3: Stick breaking construction (1). 圖 106.4: Stick breaking construction, weights from beta distribution (1). 那麼，狄雷克雷過程是怎樣進行測度採集的呢？下面詳述掰棍子構造 (stick-breaking construction) 的推導和理解。如圖 106.3 所示，橫軸是 \\(\\theta\\)，有一個未知的連續型分佈 \\(H\\)。假如我們採集第一個原子 (atom) 在圖中的 \\(\\theta_1 \\sim H\\)。接下來DP要給這個原子分配一個權重 \\(\\pi_1\\)。過程是通過 Beta 分佈 \\(\\pi_1 = \\beta_1 \\sim \\text{Beta}(1, \\alpha)\\)。這裏的 Beta 分佈中的 \\(\\alpha\\) 參數就是 DP\\((\\alpha, H)\\) 過程中的 \\(\\alpha\\) 參數。我們都知道 Beta 分佈是取值在 \\(0\\sim1\\) 之間的一個特殊分佈 (詳見 Chapter 42.3.1 和 Chapter 96.2.2)。總結一下第一個原子的位點和權重的採集過程： \\[ \\begin{aligned} \\theta_1 &amp; \\sim H \\\\ \\beta_1 &amp; \\sim \\text{Beta}(1, \\alpha) \\\\ \\pi_1 &amp; = \\beta_1 \\end{aligned} \\] 圖 106.5: Stick breaking construction (2). 圖 106.6: Stick breaking construction, weights from beta distribution (2). 採集第二個 \\(\\theta_2\\) 原子時它的位點假設如圖 106.5 中所示。它的權重 \\(\\pi_2\\)，和第二次 Beta 分佈採集的 \\(\\beta_2\\) 之間的關係是：\\(\\pi_2 = (1 - \\pi_1)\\beta_2\\)，也就是第一次棍子掰掉以後剩餘的部分，乘以一個百分比作為第二次權重採樣的取值。總結一下第二個原子的位點和權重的採集過程： \\[ \\begin{aligned} \\theta_2 &amp; \\sim H \\\\ \\beta_2 &amp; \\sim \\text{Beta}(1, \\alpha) \\\\ \\pi_2 &amp; = (1 - \\pi_1)\\beta_2 \\end{aligned} \\] \\(\\theta_3, \\theta_4, \\dots\\) 也就是依據相同的規則以此類推，直到完成一次 \\(G\\) 的測度全樣本採集。 106.1.2.1 性質 如圖 106.7 所示，無論我們給 \\(H\\) 作多少個區分 partitions，只要我們從它的分佈中採集狄雷克雷過程測度，有如下的結論： \\[ G \\sim \\mathbf{DP}(\\alpha, H) \\\\ \\Leftrightarrow (G(a_1), G(a_2), \\dots, G(a_n)) \\\\ \\Leftrightarrow \\text{Dirichlet}(\\alpha H(a_1), \\dots, \\alpha H(a_n)) \\\\ \\forall \\text{ partitions } a_1, \\dots, a_n \\] 如果說，每個測度點的位置是 \\(\\delta \\theta_i\\), 每個測度點的權重是 \\(\\pi_i\\)，那麼有： \\[ G = \\sum_{i = 1}^\\infty \\pi_i \\delta\\theta_i \\] 圖 106.7: The key properties for Gs sampled from a Dirichlet Process. 再繼續解釋狄雷克雷過程的性質之前，需要複習一下狄雷克雷分佈和多項式分佈的特徵。 假如有一個 \\(k\\) 維的離散分佈，服從狄雷克雷分佈： \\[ (P_1, P_2, \\dots, P_k) \\sim \\text{Dirichlet}(\\alpha_1, \\alpha_2, \\dots, \\alpha_k) \\\\ \\sum P_i = 1 \\] 假如有一個組 \\(k\\) 個觀測數據，服從多項式分佈，該多項式的參數就是 \\(P_1, \\dots, P_k\\)： \\[ (n_1, n_2, \\dots, n_k) \\sim \\text{Multinomial}(P_1, P_2, \\dots, P_k) \\] 那麼事後概率分佈： \\[ \\begin{aligned} \\text{Pr}(P_1, \\dots, P_k | n_1, \\dots, n_k) &amp; \\propto \\color{red}{\\boxed{\\text{Prior}}} \\times \\color{darkgreen}{\\boxed{\\text{Likelihood}}} \\\\ &amp; \\color{red}{\\frac{\\Gamma(\\sum_{i = 1}^k \\alpha_i)}{\\prod_{i = 1}^k\\Gamma (\\alpha_i)} \\prod_{i = 1}^k P_i^{(\\alpha_i - 1)}} \\times \\\\ &amp; \\color{darkgreen}{\\frac{(\\sum n_i)!}{n_1 ! n_2 ! \\dots n_k !}\\prod_{i = 1}^k P_i^{n_i}} \\\\ \\text{Remove } &amp; \\text{those without } P_i, n_i\\\\ &amp; \\propto \\prod_{i = 1}^k P_i^{(n_i + \\alpha_i - 1)} \\\\ = \\text{Dirichlet}(&amp;\\alpha_1 + n_1, \\alpha_2 + n_2, \\dots, \\alpha_k + n_k) \\end{aligned} \\] 故我們發現當先驗概率分佈是狄雷克雷分佈，數據服從多項式分佈時，其事後概率分佈也是一個狄雷克雷分佈。這是一個共軛分佈(conjugate)的性質。 所以對於任意的區間 (partition)： \\[ \\begin{aligned} \\text{Pr}(G(a_1), G(a_2), \\dots, G(a_k) &amp; | n_1, n_2, \\dots, n_k) \\\\ \\propto \\text{ Multinomial}(n_1, &amp;\\dots, n_k | G(a_1), \\dots, G(a_k) ) \\\\ &amp;\\times \\text{Dirichlet}(\\alpha H(a_1), \\dots, \\alpha H(a_k)) \\\\ = \\text{Dirichlet}(\\alpha H(a_1) &amp; + n_1, \\dots, \\alpha H(a_k) + n_k) \\\\ = \\mathbf{DP}(\\alpha + n, &amp; \\frac{\\alpha H + \\sum_{i = 1}^n \\delta \\theta}{\\alpha +n}) \\end{aligned} \\] 106.1.3 事後概率分佈和邊際分佈 事後更新 posterior updating：狄雷克雷過程本身是共軛的 (conjugate)。也就是說，只要是按照獨立同分佈原則從模型 ((106.1)) 中進行 DP 採樣，獲得的事後概率分佈還是一個狄雷克雷 DP。 也就是說，如果令 \\(y_1, \\dots, y_n | G \\stackrel{i.i.d}{\\sim} G\\) 且 \\(G \\sim \\mathbf{DP}(M, G_0)\\)，那麼，事後概率分佈爲： \\[ \\begin{equation} G | y_1,\\dots, y_n \\sim \\mathbf{DP}(M + n, \\frac{MG_0 + \\sum_{i = 1}^n \\delta_{y_i}}{M + n}) \\end{equation} \\] Example 106.1 T細胞受體個數問題 Guindani et al. (2014) 探討了計算T細胞受體個數和對應種類的問題。已知T細胞受體的種類和個數是免疫系統重要的指標之一。常見的分析該指標的方法是對受體集羣(clonal-size)計數，來評價其複雜程度 (diversity)。集羣分佈可以用統計表格計算集羣的頻率 \\(\\hat{G}_y, y = 1, 2, \\dots, n\\)。例如，\\(\\hat{G}_2 = 11\\)，就表示有11個不同的T細胞受體集羣，每個集羣出現了2次。 下表展示了 \\(\\hat{G}_y\\) 的觀察頻率，及其對應的計數 counts \\(y_i = 1, 2, \\dots\\)。 Counts \\(y_i\\) 1 2 3 4 \\(\\geq\\) 5 Frequencies 37 11 5 2 0 假如我們思考這樣一個模型 \\(y_i \\sim G\\)，其中給集羣分佈(clonal size distribution)的先驗概率分佈是一個狄雷克雷過程分佈 \\(G\\sim\\)DP\\((MG_0)\\)。由於計數型數據必須爲正(positive counts)，我們使用均值等於 2 的泊松分佈作爲中心測度 centering measure \\(G_0 = \\mathbf{Poi}(2)\\)。總量參數 (total mass parameter) 使用 \\(M =1\\)。 下列採樣過程的代碼來自 https://rpubs.com/kaz_yos/dp1，你也可以參考原作者的網站 library(MCMCpack) library(tidyverse) tcell &lt;- tribble( ~count, ~frequency, 1, 37, 2, 11, 3, 5, 4, 2, ## &gt;= 5, 0, ) tcell ## # A tibble: 4 × 2 ## count frequency ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1 37 ## 2 2 11 ## 3 3 5 ## 4 4 2 # Prior G0_vector &lt;- function(lambda, min, max) { ## values below min are truncated ## values above max are collapsed ## Probabilities from Poisson(lambda) for min:max p_vec &lt;- dpois(x = min:max, lambda = lambda) ## Probability for max+1 ... p_upper_tail &lt;- 1 - ppois(q = max, lambda = lambda) ## Collapse to max p_vec[length(p_vec)] &lt;- p_vec[length(p_vec)] + p_upper_tail ## Renormalize p_vec &lt;- p_vec / sum(p_vec) ## Name names(p_vec) &lt;- min:max ## return(p_vec) } ## Collapse all values beyond 8 to 8+ bin G0_vector(lambda = 2, min = 1, max = 8) ## 1 2 3 4 5 6 7 ## 0.3130352855 0.3130352855 0.2086901903 0.1043450952 0.0417380381 0.0139126794 0.0039750512 ## 8 ## 0.0012683748 References "],["grama-causal-infer.html", "第 107 章 Causal Languages 因果推斷的語法 107.1 當我們在談論因果推斷的時候，我們在談論什麼？ 107.2 傳統的統計學方法 107.3 更加正規的方法", " 第 107 章 Causal Languages 因果推斷的語法 All models are wrong, but some are useful. George E. P. Box The Causal Inference lectures were orgainised and taught by Professor Karla DiazOrdaz. 107.1 當我們在談論因果推斷的時候，我們在談論什麼？ 衆多的醫學研究，科研工作者們苦苦收集數據，都是爲了能夠給觀察到的現象作出因果關系的結論。研究者帶着的研究問題通常是: 這個治療方案有沒有效果？ 暴露在某種可能有害的因素中到底有沒有危險？ 提出的新的衛生政策到底能不能解決實際的醫療問題？ 這些都是內在爲因果關系的設問。隨機對照實驗，之所以要隨機設計，且對其隨機性要求精準且苛刻，就是爲了一個能夠清晰可靠地作出因果關系的結論。在很多流行病學研究中，隨機設計可能因爲倫理因素不能使用。但每一個精心設計的實驗或者觀察性研究，其終極目的都是爲了解答暴露和結果之間到底有沒有因果關系這一設問。 這裏我們用 “因果推斷” 來命名一類 “專門以探尋因果關系爲目的的” 統計學方法。其與傳統的統計學方法最大的不同點在於因果推斷用一套正式的科學語言，來解釋現象中到底有沒有因果關系。 之所以發明這一套因果推斷專用的科學語言，有這樣幾個目的: 更清晰地描述，我們到底要估計的 (estimate) 是什麼。 更徹底地強調，因果推斷結論背後的統計學前提和假設。 建立在前兩條前提的基礎上，我們可以使用專門爲統計推斷設計的新的統計學技巧，達到爲因果推斷提供證據的目的。 因果推斷包括三個部分: 清晰描述因果關系概念的正式科學語言 (causal language)。 因果關系示意圖 (causal diagram) – 清晰地展示研究者對變量之間存在的所有可能因果關系的假設，在實驗設計，和數據分析兩個階段都需要用到。 因果關系統計學方法 (causal inference methods) – 從獲得的數據中，用和傳統方法不同的假設，作出因果關系的推斷。 107.2 傳統的統計學方法 用一個簡單實例來理解傳統統計學方法實際上做的是什麼: Example 107.1 臨牀上認爲，給有貧血的患者靜脈內補充鐵劑是進行髖關節置換手術 (hip replacement operation) 之前建議的手段。研究者收集了某個醫院 2009 年至 2014 年間接受髖關節置換手術且有貧血的患者數據。在這個研究中，暴露變量 (exposure) 是患者是否在術前接受了靜脈內鐵劑補充，結果變量是髖關節置換手術之後，患者是否存活時間達到 90 天及以上。其他同時收集的數據有: 年齡，性別，伴隨疾病 (心血管疾病，糖尿病，腎病)，手術過程中是否接受了外來血源的輸血，以及住院時間。 107.2.1 初步分析 很多人第一步想到的，一定是先制作 2×2 的暴露 (FeIV) 和結果 (Death90) 的表格: Death90 0 1 FeIV 0 9206 376 FeIV 1 7365 312 從這個四格表我們計算的初步對數比值比是: 0.04 (95% CI: -0.12, 0.19)。 請問在這個對數比值比的計算過程中，我們估計的到底是什麼？ 這裏的被估計量 (estimand) 是: \\[ \\log \\text{OR}_{Y|X} = \\log\\{\\frac{\\text{Pr}(Y=1 | X = 1)}{1- \\text{Pr}(Y = 1|X = 1)}\\} - \\log\\{\\frac{\\text{Pr}(Y=1 | X = 0)}{1- \\text{Pr}(Y = 1|X = 0)}\\} \\] Definition 107.1 1. Estimand (被估計量): 我們想要知道的到底是什麼，例如，英國人口中收縮期血壓的平均值，這是一個無法知道，但是肯定存在確定量的量 (unknown fixed quantity)。 2. Estimator (估計量): 數據用來計算被估計量的某種方程，例如，隨機從街上找來100個人，測量他們的血壓，求出來的平均值，這是一個隨機變量 (random variable)，會隨着隨機挑選的樣本而變化。 3. Estimate (估計): 給定數據下，計算獲得的具體的量，例如，我做了隨機抽取100名英國人血壓測量的實驗，獲得 130.4 mmHg 這個平均收縮期血壓的測量值，這是一個可以計算成爲已知的確定量 (known fixed quantity)。 107.2.2 混雜 我們知道，單純這樣簡單初步計算獲得的對數比值比，我們是無法對其作出因果關系的解釋的，因爲通常這樣的分析都忽略掉了潛在的混雜。在目前爲止我們學習過的傳統統計學方法中，混雜被我們粗略地定義成: “和暴露，結果兩個變量同時且獨立地相關，但是確定不存在在暴露和結果的因果通路上的變量 (associated with the exposure and independently associated with the outcome, without being on the causal pathway from exposure to outcome)”，下一章我們會看到，這其實是一個不能令人滿意的定義。 例如，可能之所以有些病人在髖關節置換術之前會被提供靜脈鐵劑支持，其原因不僅是貧血，還可能他們本身體質虛弱，年紀較大，或者是貧血得太嚴重，或者還有許多其他的並發症，那麼表面看起來靜脈鐵劑支持，和術後90天生存率沒有關系的對數比值比就成了一個表面現象。這些因素會混淆，甚至是掩蓋靜脈鐵劑可能對貧血患者的潛在保護作用。此時我們說初步分析的對數比值比被混雜偏倚所影響 (suffer from confounding bias)。(關於偏倚在統計推斷中的概念，滾回章節 10.2.1。) 當我們說，初步分析的對數比值比被混雜偏倚影響，那麼其實是在說，我們心裏想要的那個被估計量 (estimand)，和實際計算中使用的被估計量是兩個不同的概念。我們心裏想要的那個–沒有被偏倚影響的–被估計量，是可以有因果關系的推論的。所以偏倚，就是一種漸進偏倚 (an asymptotic bias)，它是我們心裏想要的那個被估計量，和實際被用到的被估計量之間的差。 107.2.3 以共變量爲條件 conditioning on covariates 對於混雜偏倚，常見的做法是要麼進行分層分析，或者直接丟到回歸模型中去做調整，這樣的做法，其實是把我們使用的被估計量從一個初步對數比值比，改成了一個條件對數比值比: \\[ \\log\\text{OR}_{Y|X\\cdot C} = \\log\\{\\frac{\\text{Pr}(Y=1 | X = 1, \\mathbf{C})}{1- \\text{Pr}(Y = 1|X = 1, \\mathbf{C})}\\} - \\log\\{\\frac{\\text{Pr}(Y=1 | X = 0, \\mathbf{C})}{1- \\text{Pr}(Y = 1|X = 0, \\mathbf{C})}\\} \\] 其中，\\(\\mathbf{C}\\) 就是被調整的變量組成的向量。 應該調整哪些變量？ 從簡單的理解來看，輸血與否，和住院時間長短，應該是處在暴露和結果兩個變量的因果通路之上的，所以不應該調整這兩個變量。所以，隨着這個思路，我們雖然不能調整輸血與否，和住院時間長短兩個變量，但是可以調整諸如年齡，性別，心血管疾病，糖尿病，腎病，貧血嚴重程度，和手術的種類等。 調整了上述變量之後，我們獲得的條件對數比值比 (conditional log-odds ratio) 是 -0.24 (95%CI -0.41, -0.07)。 可以給予這個條件對數比值比以因果關系的解釋嗎？ 顯然，由於還有其他我們不知道的因素，可能混淆這裏的暴露和結果變量 (我們沒有收集)，所以此時漸進偏倚定義是上面的這個條件對數比值比和我們心裏那個真實想要測量的因果被估計量 (causal estimand) 之間的差: \\[ \\log\\text{OR}_{Y|X\\cdot C} - \\{ \\text{True value of some causally -interpretable estimand} \\} \\] 在哪些前提條件下，這個漸進偏倚可以被認爲等於零？此時我們需要因果推斷的科學定義和語言來幫助我們理解。 107.3 更加正規的方法 107.3.1 因果推斷使用的語言 概率與統計學 概率論和統計學中使用的詞匯和語言，允許我們估計，描述很多觀察變量之間的聯合分布 (joint distribution)，例如均值，方差，協方差，四分位，回歸系數，相關系數等。 但是這一標準的統計學語言，卻無法描述這些聯合分布在受到外在影響或者幹預 (external intervention) 之後，會發生怎樣的變化。用這裏使用的例子來說就是，當所有患者都被提供了靜脈內鐵劑支持，(注意到這是和現實情況不一樣的) 患者的生存概率會是多少？ 因果關系的思考，其實是在追問這樣一個問題: 當暴露變量 \\(X\\)，可以改變，並且以與我們觀察到的相反的形式出現，那麼結果變量 \\(Y\\) 會發生怎樣的變化？本書，我們使用 (Neyman 1923) 當年創立，後來被 (Rubin 1974) 發展的概念: 潛在結果框架 (potential outcome framework)。 Definition 107.2 潛在結果 Potential outcome: 定義 \\(Y(x)\\) 爲當暴露變量 \\(X\\) 取假設的值 (x) 時，結果變量的取值。 對於一個而二分類暴露變量 \\(X\\)，每個個體/研究對象，我們賦予它一個潛在的可能取值結果的概念: \\(Y(0)\\) 和 \\(Y(1)\\)。\\(Y(0)\\) 的意思是當暴露變量是 \\(0\\) 的時候該對象可能的取值，\\(Y(1)\\) 的意思是當暴露變量是 \\(1\\) 的時候，該對象可能的取值。但是，在現實情況下，我們只能觀察到二者中的一種結果。在我們的例題中，當一個患者真的接受了靜脈鐵劑補充，那麼他/她的觀察結果 \\(Y = Y(1)\\)，也就是此時觀察結果等於暴露爲 \\((1)\\) 時的潛在結果 \\(Y(1)\\)。對與這個患者來說，他/她在沒有接受經脈鐵劑補充的情況下的另一種潛在結果 \\(Y(0)\\) 是沒有被觀測到的。但是，這個患者的潛在結果 \\(Y(0)\\)，表示的是他/她如果接受沒有接受靜脈鐵劑補充的話，他/她在90天時死亡/存活的潛在結果。 Definition 107.3 用潛在結果表示邊緣和條件因果對比 marginal and conditional causal contrast: 邊緣對比: \\[E\\{Y(1)\\} - E\\{ Y(0) \\}\\] 條件對比: \\[E\\{ Y(1) | \\mathbf{V=v} \\} - E\\{ Y(0) | \\mathbf{V=v} \\}\\] 這種潛在結果的統計框架，曾經被 (Dawid 2000) 批判爲一種不恰當的方法。以爲潛在結果框架建議說存在另一個完全不存在的平行宇宙，使得觀察對象在一個空間裏做一件事，在另一個空間裏做一件相反的事情，看會發生怎樣的結果，這實際是在說存在這種潛在的完美聯合分布。另外，我們會在第四章中看見的，在潛在結果的框架下，我們可能問的問題是，當所有人都接受了暴露變量時，暴露和結果之間的因果效應的平均值: \\[ E\\{ Y(1) - Y(0) | X = 1 \\} \\] 潛在結果框架不是完美的。但是它非常實用: 使不確定性變得明確而清晰; 把研究的問題變得更加容易理解; 能夠保證研究者明確做因果推斷時的前提條件; 改善實驗設計; 有助於設計更能回答研究問題的統計分析方案; 可以給結果恰當的因果關系解釋。 但是我們需要注意的是: 不要過度相信你做的因果推斷的前提假設是正確的 (over confidence in assumptions); 不要錯誤的解讀你的分析結果。 107.3.2 因果推斷的被估計量 causal estimands 於是，現在用這些重新定義過的名詞和語言，我們來描述 (二分類結果變量在) 因果推斷中的被估計量: 邊緣被估計量 (marginal estimands): \\[ \\begin{aligned} \\text{Potential risk difference: } &amp; \\text{Pr}\\{Y(1) = 1| \\mathbf{V=v}\\} - \\text{Pr}\\{Y(0) = 1| \\mathbf{V=v}\\} \\\\ \\text{Potential risk ratio: } &amp; \\frac{\\text{Pr}\\{ Y(1) = 1 | \\mathbf{V=v}\\}}{\\text{Pr}\\{Y(0) = 1 | \\mathbf{V=v}\\} } \\\\ \\text{Potential log odds ratio: } &amp; \\\\ \\log[\\frac{ \\text{Pr}\\{Y(1) = 1| \\mathbf{V=v}\\}}{1- \\text{Pr}\\{Y(1) = 1| \\mathbf{V=v}\\}}] &amp; - \\log[\\frac{\\text{Pr}\\{Y(0) = 1| \\mathbf{V=v} \\}}{1-\\text{Pr}\\{Y(0) = 1| \\mathbf{V=v} \\}}] \\end{aligned} \\] 條件被估計量: \\[ \\begin{aligned} \\text{Potential risk difference: } &amp; \\text{Pr}\\{Y(1) = 1\\} - \\text{Pr}\\{Y(0) = 1\\} \\\\ \\text{Potential risk ratio: } &amp; \\frac{\\text{Pr}\\{ Y(1) = 1 \\}}{\\text{Pr\\{Y(0) = 1 \\}}} \\\\ \\text{Potential log odds ratio: } &amp; \\\\ \\log[\\frac{ \\text{Pr}\\{Y(1) = 1\\}}{1- \\text{Pr}\\{Y(1) = 1\\}}] &amp; - \\log[\\frac{\\text{Pr\\{Y(0) = 1 \\}}}{1-\\text{Pr\\{Y(0) = 1 \\}}}] \\end{aligned} \\] 107.3.3 鑑定因果推斷時的前提假設 assumptions for identification 無相互幹擾 no interference \\(Y_i(x)\\) 表示的是，如果第 \\(i\\) 個個體的暴露變量被設定爲 \\(x\\) 時，結果變量的值。所以是 \\(X_i\\) 被設定成爲 \\(x (i = 1, \\cdots, n)\\) 時， \\(Y_i\\) 的潛在結果。此時，我們已經有了一個前提假設，那就是，潛在結果 \\(Y_i\\)，和另一個個體的潛在暴露 \\(X_j (j\\neq i)\\) 是相互獨立的。這個前提被稱爲無相互幹擾前提。這個前提，在暴露變量是某些特殊情況 (如注射疫苗) 的情況下，是無法成立的。因爲人羣中如果有些人注射了疫苗，同樣也能保護那些沒有注射疫苗的人。 一致性 consistency \\[ X_i = x \\Rightarrow Y_i = Y_i(x) \\] 一致性的含義是，對於某個觀察對象來說，他/她的暴露變量是 \\(x\\) 時，觀測到的結果變量的觀測值 \\(Y_i\\)，和在虛擬世界中，該觀察對象接受潛在 \\((x)\\) 暴露變量時獲得的潛在結果 \\(Y_i(x)\\)，是一樣的。更具體地說: 暴露變量的定義，要清晰明確。 爲了保持一致性，也就是在實際實驗中，如果暴露變量是 \\(x\\)，那麼你觀察到的結果 \\(Y\\)，必須和理論討論的虛擬世界中我們預想的那樣潛在變量 \\((x)\\) 導致的潛在結果 \\(Y(x)\\) 是相同的。 在臨牀試驗的設定下，用本文一開始的靜脈鐵劑補充例子來說明就是，我們構築的潛在世界框架下的幹預手段 (靜脈鐵劑補充)，對患者起到的不論是積極的還是負面的作用，它的理論效果，和我們在實際現實世界中觀察到的對患者進行靜脈鐵劑補充起到的效果，是相同的。 在非臨牀試驗的設定下，一致性有許多值得探討的地方。假如，潛在暴露變量是體質指數 (BMI)，這時候的一致性前提就十分微妙。因爲能夠改變 BMI (運動，飲食，服藥，接受抽脂手術，吸煙，吸毒，甚至是截肢)，以及BMI變化導致的結果 (如心血管疾病) 途徑非常多。所以，當我們在這種觀察實驗的設定下，寫下某個潛在暴露量 X (BMI = 20) 時的潛在結果 Y 時，就必須把暴露變量達到 20 的特定條件指明才可以 (need to be clear under what sort of intervention we imagine that BMI is set to 20)。所以，在非臨牀試驗的觀察性研究中，如果探討的是類似 BMI 這樣的暴露變量，那麼在我們想象的平行世界中對BMI造成影響的因素將會和現實世界一樣是非常復雜的，單一的想象幹預，如抽脂手術，不可能滿足一致性的前提假設。所以，觀察對象的 BMI 達到 20 的條件，更加合理的是多種方法的組合 (it is more likely that the individuals in our observational study achieved their different BMI level through a combination of different ways.)，那麼在一致性的前提下，在那個我們想象出來的平行世界裏，潛在暴露 BMI 獲得的幹預，就是各種和 BMI 有關的所有變量。 條件可置換性 conditional exchangeability 第三個前提假設是條件可置換性: \\[ Y(x) \\perp\\!\\!\\!\\perp X |\\mathbf{C}, \\forall x \\] \\(\\perp\\!\\!\\!\\perp\\) 表示條件獨立 (conditional independence)，所以 \\(A\\perp\\!\\!\\!\\perp B|C\\) 的正確讀法是: “在C的條件下，A條件獨立於B”。\\(A\\perp\\!\\!\\!\\perp B\\) 的意思就是， A 和 B 之間互爲 (邊際 marginally) 獨立。 在條件向量 \\(\\mathbf{C}\\) 的條件下，觀測對象的實際暴露狀況 \\(X\\) 和他/她/它的所有潛在結果之間相互獨立。 我們可以把第三個前提條件設想爲: 潛在結果 \\(Y(x)\\) 已經能夠把對象身上所有的和結果 \\(Y\\) 相關的特點都包含進來，唯一不包含的是他/她/它在現實世界中的觀測暴露變量。也就是，如果我們知道潛在結果 \\(Y(0), Y(1)\\)，且我們知道 \\(X\\)，那麼我們就可以知道 Y，因爲 \\(Y = XY(1) + (1-X) Y(0)\\)。 Example 107.2 還是靜脈鐵劑補充的例子，如果我們手裏拿到的數據如下表。一共只有24名患者，假定只有一個條件變量 C (貧血嚴重與否)，表格中羅列的是觀察變量 \\(X,Y,C\\)，同時還羅列了兩個平行世界的潛在結果變量 \\(Y(1), Y(0)\\)。這裏我們爲了解釋條件可置換性，我們先假裝真的可以獲得所有的潛在結果，實際情況下是不可能的。 Patient ID X Y C Y(0) Y(1) 1 0 1 0 1 1 2 0 0 0 0 0 3 0 1 1 1 0 4 0 0 0 0 0 5 0 1 1 1 1 6 1 1 1 1 1 7 1 0 0 1 0 8 1 0 1 0 0 9 0 1 0 1 1 10 1 0 0 0 0 11 1 0 1 1 0 12 1 0 1 1 0 13 0 0 0 0 0 14 0 0 0 0 0 15 1 1 1 1 1 16 1 0 1 0 0 17 1 1 1 1 1 18 1 1 1 1 1 19 0 1 0 1 0 20 0 1 1 1 1 21 0 0 1 0 0 22 1 0 0 0 0 23 1 1 0 1 1 24 0 1 0 1 0 在這個表格的數據中，我們注意到一致性的前提得到滿足，因爲對於每個 \\(X=1\\) 的研究對象 \\(Y = Y(1)\\)，對於每個 \\(X=0\\) 的研究對象 \\(Y=Y(0)\\)。 邊際概率 marginal probability: 接下來，第一步，假設我們的數據中沒有條件變量 C，我們來看看數據是否能滿足可置換性 (\\(Y(0), Y(1)\\) 和 \\(X\\) 互相獨立)。 \\[ \\begin{aligned} \\text{Pr}\\{ Y(0)=1|X=1 \\} &amp;= \\frac{2}{3}, \\;\\; \\text{Pr}\\{ Y(0)=1|X=0 \\} = \\frac{7}{12} \\\\ \\text{Pr}\\{ Y(1)=1|X=1 \\} &amp;= \\frac{5}{12}, \\;\\; \\text{Pr}\\{ Y(1)=1|X=0 \\} = \\frac{1}{3} \\end{aligned} \\] 這裏條件概率計算的結果告訴我們，邊際概率此時不具有可置換性，因爲潛在結果變量 \\(Y(0) = 1\\) 的概率取決與 觀測暴露變量 \\(X\\)。 條件概率 conditional probability: \\[ \\begin{aligned} \\text{Pr}\\{ Y(0) = 1 | X=1, C=0\\} &amp; = \\frac{1}{2} \\;\\; \\text{Pr}\\{Y(0) = 1 | X=0, C=0 \\} = \\frac{1}{2}\\\\ \\text{Pr}\\{ Y(1) = 1 | X=1, C=0\\} &amp; = \\frac{1}{4} \\;\\; \\text{Pr}\\{ Y(1) = 1 | X=0, C=0\\} = \\frac{1}{4} \\\\ \\text{Pr}\\{ Y(0) = 1 | X=1, C=1\\} &amp; = \\frac{3}{4} \\;\\; \\text{Pr}\\{ Y(0) = 1 | X=0, C=1\\} = \\frac{3}{4} \\\\ \\text{Pr}\\{ Y(1) = 1 | X=1, C=1\\} &amp; = \\frac{1}{2} \\;\\; \\text{Pr}\\{ Y(1) = 1 | X=0, C=1\\} = \\frac{1}{2} \\end{aligned} \\] 在 C 條件下，我們發現這個時候 \\(Y(0) = 1\\) 和 \\(X\\) 之間相互獨立，\\(Y(1) = 1\\) 也和 \\(X\\) 之間相互獨立了。這就是條件可置換性的最直觀展示。 107.3.4 鑑定 identification 假設 \\(X,Y\\) 兩個變量都是二分類變量。我們關心他們二者之間的邊際因果危險度差: \\[ \\text{Pr}\\{ Y(1) = 1 \\} - \\text{Pr}\\{ Y(0) = 1 \\} \\] 假定，互相無幹擾前提成立，用 \\(\\mathbf{C}\\) 標記要被控制的混雜變量向量。用概率論的全概率法則， \\[ \\text{Pr}\\{ Y(x) = 1 \\} = \\sum_c \\text{Pr}\\{ Y(x) = 1|C=c \\} \\text{Pr}(C=c) \\] 假定，條件可置換的前提成立，那麼上面的式子可以變成 \\[ \\sum_c\\text{Pr}\\{ Y(x) =1 | X=x, C=c \\}\\text{Pr}(C = c) \\] 這是因爲條件可置換性告訴我們，在 C 的條件下，潛在結果 \\(Y(x)\\) 和實際觀測的暴露變量值之間相互獨立，所以可以在上面條件概率公式的右半邊可以加入 \\(X=x\\)。 假定，一致性的前提成立，那麼上面的式子有可以繼續變成 \\[ \\sum_c \\text{Pr}\\{ Y = 1 | X = x, C=c \\}\\text{Pr}(C=c) \\] 這是因爲一致性告訴我們，現實條件下 \\(X=x\\) 時導致的結果變量 \\(Y\\)， 和平行世界中的潛在暴露變量 \\((x)\\) 導致導致的潛在結果 \\(Y(x)\\) 相同。那麼，接下來就可以把編輯因果危險度差的式子推導成爲: \\[ \\begin{aligned} \\text{Pr}\\{ &amp; Y(1) = 1 \\} - \\text{Pr}\\{ Y(0) = 1 \\} \\\\ &amp; = \\sum_c\\text{Pr}(Y=1 | X=1,C = c)\\text{Pr}(C=c) \\\\ &amp; \\;\\;\\;\\; -\\sum_c\\text{Pr}(Y=0 | X=1,C = c)\\text{Pr}(C=c) \\end{aligned} \\tag{107.1} \\] Definition 107.4 標準化和 g computation 公式: \\[\\text{Pr}\\{ Y(x) = 1 \\} = \\sum_c\\text{Pr}(Y=1|X=x,C=c)\\text{Pr}(C=c)\\] 是我們在因果推斷中說的 g computation 公式的簡單例子。這個過程在流行病學中，被命名爲標準化 standardisation。所以，條件因果效應 (conditional causal effect): \\[\\text{Pr}(Y=1 | X=1, C=c) - \\text{Pr}(Y=1 | X=1, C=c)\\] 在這個 g computation 的過程中，被根據條件變量 C 在人羣衆的分布給標準化了。就是在這個根據條件變量的分布標準化 (或者叫邊際化 marginalisation) 的過程中，條件效應的含義華麗轉身變成了邊際因果效應 (marginal causal risk difference)。 Definition 107.5 鑑定和估計 identification vs. estimation: 在因果推斷的語境中，鑑定過程和估計過程被嚴格區分。 鑑定 identification 指的是，因果被估計量利用因果推斷的假設把無法觀察的概率分布用可以觀察的數據的分布推導計算的過程。 估計 estimation 指的是，當我們對因果關系鑑定完畢之後，接下來進行的用實際觀察數據來估計被估計量的過程。這個過程通常不需要再進行公式推導，會使用統計模型，這些統計模型自己又自帶另外的一些前提假設。 所以，鑑定過程的前提假設是因果推斷的命根，最最底層的前提。接下來的數據計算或者模型擬合帶來的別的假設和鑑定過程的假設有本質的區別。區分這兩個過程的另一目的還包括鑑定過程的前提假設基本上是無法找到統計學方法進行檢驗的 (untestable structual assumptions) 結構性假設。 對機器學習的一點點暗示: 在因果推斷中新興的一個重要話題 – 機器學習 (machine learning，或者叫做 data-adaptive estimation techniques 數據適應性估計技巧) 在當今大數據時代顯得特別突出。常有人認爲，數據適應性估計技巧可以用於預測，但是不能用於因果推斷。這其實只能是說對了一部分。機器學習本身，其實是在給定了 (一大堆) 變量之後，尋找某個變量的最佳預測量。但是從我們目前爲止在因果推斷中的推導來看，相信你也能看出來，因果推斷本身也包括了預測的過程。因果推斷的第一個部分 – 鑑定過程是處理的是因果之間的前提假設，以及判斷因果推斷中用到的參數怎樣和已觀察到的數據在這裏因果條件下連接起來 – 這個部分是不能放到機器中去的。但是因果推斷的第二部分 – 估計 – 就是純粹的預測過程啦。這裏想強調的是機器學習的方法，可以被用在因果推斷的第二部分，而不是第一部分。第一部分還是要由人來完成。(Laan and Rose 2017) Example 107.3 用前面的靜脈內鐵劑補充的24名患者數據來看，由於我們不切實際地假定了我們可以知道每個對象的所有潛在結果。所以，我們可以直接先用這個結果計算因果危險度差 (causal risk difference): \\[\\text{Pr}\\{Y(1) = 1\\} - \\text{Pr}\\{ Y(0) =1 \\} = \\frac{9}{24} - \\frac{15}{24} = -\\frac{1}{4}\\] 如果我們忽略掉患者貧血嚴重程度 C 的混雜效果，從觀察數據 X, Y, 計算獲得的粗危險度差 (crude risk difference) 就是 \\[\\text{Pr}(Y=1 | X=1) - \\text{Pr}(Y=1|X=0) = \\frac{5}{12} - \\frac{7}{12} = -\\frac{1}{6}\\] 可見在這個例子中，忽略了貧血嚴重程度時，粗危險度差是往無效的方向偏倚的。但是其實那些被給予了靜脈內鐵劑補充支持的患者本身體質就弱，貧血就嚴重，粗危險度差的結果掩蓋掉了補充鐵劑對患者實際存在的保護作用。 當考慮了貧血嚴重程度時，我們知道，在前提條件條件可置換性和一致性成立時，我們可以用(107.1) 來進行因果危險度差的計算: \\[ \\begin{aligned} \\text{Pr}\\{ Y(1) = 1 \\} &amp; - \\text{Pr}\\{ Y(0) = 1 \\} \\\\ &amp; = \\sum_{c=0}^1\\text{Pr}(Y=1|X=1,C=c)\\text{Pr}(C=c) \\\\ &amp; \\;\\;\\; - \\sum_{c=0}^1\\text{Pr}(Y=1|X=0,C=c)\\text{Pr}(C=c) \\\\ &amp; = \\text{Pr}(Y=1|X=1,C=0)\\text{Pr}(C=0) \\\\ &amp; \\;\\;\\; + \\text{Pr}(Y=1|X=1,C=1)\\text{Pr}(C=1) \\\\ &amp; \\;\\;\\; - \\text{Pr}(Y=1|X=0,C=0)\\text{Pr}(C=0) \\\\ &amp; \\;\\;\\; - \\text{Pr}(Y=1|X=0,C=1)\\text{Pr}(C=1) \\\\ &amp; = \\frac{1}{4}\\times\\frac{1}{2} + \\frac{1}{2}\\times\\frac{1}{2} - \\frac{1}{2}\\times\\frac{1}{2} - \\frac{3}{4}\\times\\frac{1}{2} \\\\ &amp; = -\\frac{1}{4} \\\\ \\end{aligned} \\] 和前面計算的相吻合。 當 C 是連續型變量時，\\(\\text{Pr}(C=c)\\) 變成關於 \\(c\\) 的概率密度方程，加號就變成了積分符號: \\[ \\text{Pr}\\{ Y(x) = 1 \\} = \\int_c \\text{Pr}\\{ Y(x) = 1 | \\mathbf{C=c} \\}p_\\mathbf{C}(\\mathbf{c})d\\mu_\\mathbf{C}(\\mathbf{c}) \\] Where \\(p_\\mathbf{C}(\\cdot)\\) is the joint probability density/mass function for \\(\\mathbf{C}\\), \\(\\mu_\\mathbf{C}(\\mathbf{c})\\) is a dominating measure (Lebesque for continuous components of \\(\\mathbf{C}\\) and counting measure otherwise). By conditional exchangeability, this can be rewritten as: \\[ \\int_c \\text{Pr}\\{ Y(x) = 1 | X=x, \\mathbf{C=c} \\}p_\\mathbf{C}(\\mathbf{c})d\\mu_\\mathbf{C}(\\mathbf{c}) \\] By consistency, this is \\[ \\int_c \\text{Pr}\\{ Y = 1 | X=x, \\mathbf{C=c} \\}p_\\mathbf{C}(\\mathbf{c})d\\mu_\\mathbf{C}(\\mathbf{c}) \\] Thus we have \\[ \\text{Pr}\\{ Y(x) = 1 \\} - \\text{Pr}\\{ Y(0) = 1 \\} \\\\ = \\int_c \\text{Pr}\\{ Y = 1 | X=1, \\mathbf{C=c} \\}p_\\mathbf{C}(\\mathbf{c})d\\mu_\\mathbf{C}(\\mathbf{c}) - \\\\ \\int_c \\text{Pr}\\{ Y = 1 | X=0, \\mathbf{C=c} \\}p_\\mathbf{C}(\\mathbf{c})d\\mu_\\mathbf{C}(\\mathbf{c}) \\] References "],["graphical-models.html", "第 108 章 Graphical Models 因果推斷的圖形模型 108.1 統計學中的有向無環圖 108.2 以非對撞爲條件 conditioning on a non-collider", " 第 108 章 Graphical Models 因果推斷的圖形模型 條件可置換性 (conditional exchangeability) 是因果推斷中最重要的前提假設。 \\[ Y(x) \\perp \\!\\!\\! \\perp X|\\mathbf{C}, \\forall x \\] 當你的變量太多的時候，用圖形來表示變量之間的條件關系顯得十分直觀。有向無環圖 (Directed acyclic graphs, DAG) 就是能夠幫助我們理解變量之間條件獨立性關系的好工具。 108.1 統計學中的有向無環圖 Definition 108.1 DAG, 是一種包括了多個節點 (nodes)，並且用箭頭直線連接這些節點的一種示意圖，值得注意的是，我們用的 DAG 示意圖中，沒有閉環 (也就是沒有哪個節點會隨着箭頭回到該節點本身成爲一個閉環，所以叫做有向無環圖)。且，DAG示意圖中也沒有雙向箭頭鏈接任何兩個節點。 統計學中，DAG 用來表示一系列變量的聯合分布 (joint distribution)，它的箭頭指向表示了不同變量之間的向量關系。(DAGs are used to represent the factorisation of a joint distribution.) 如果一組變量組成向量 \\(\\mathbf{V}=(V_1, V_2, V_3, V_4, V_5, V_6)\\)，且這些變量之間的聯合分布關系是這樣子: \\[ \\begin{aligned} &amp;p_\\mathbf{V}(\\mathbf{v}) = \\\\ &amp;\\;p_{V_1}(v_1)p_{V_2}(v_2)p_{V_3|V_1,V_2}(v_3|v_1,v_2)p_{V_4|V_1,V_3}(v_4|v_1,v_3)p_{V_5|V_1,V_2}(v_5|v_1, v_2)p_{V_6|V_5}(v_6|v_5) \\end{aligned} \\] 那麼這些變量之間關系對應的 DAG 圖就是這樣子: g &lt;- dagitty(&#39;dag { V6 [pos=&quot;2,0&quot;] V4 [pos=&quot;1,-1&quot;] V5 [pos=&quot;1,1&quot;] V2 [pos=&quot;-1,-1&quot;] V3 [pos=&quot;-1,1&quot;] V1 [pos=&quot;-2,0&quot;] V1 -&gt; V4 V1 -&gt; V5 -&gt; V6 V1 -&gt; V3 -&gt; V4 V2 -&gt; V3 -&gt; V4 V2 -&gt; V5 -&gt; V6 }&#39;) plot(g) 圖 108.1: Example of a DAG 上面長長的因子化 (factorisation) 公式可以簡略爲: \\[ p_{\\mathbf{V}}(\\mathbf{v}) = \\prod_jp_{V_j|S_j}(v_j|s_j) \\] 其中 \\(S_j\\) 是 \\(V_j\\) 的子集，在DAG圖中，我們可以添加從 \\(V_k\\) 到 \\(V_j\\) 箭頭的充分且必要條件是 \\(V_k \\in \\mathbf{S}_j\\)。 108.1.1 DAG 和條件獨立性 conditional independence DAG 圖包含了變量之間的條件獨立性關系。如果 \\(V_k\\) 到 \\(V_j\\) 沒有箭頭，意味着這兩個變量在所有其他有指向 \\(V_j\\) 箭頭的變量的條件下，互相獨立: \\[ V_4 \\perp \\!\\!\\! \\perp V_2 | V_1, V_3 \\] 108.1.2 DAG 圖的術語 Definition 108.2 父與子 parent and child: \\(V_i\\rightarrow V_j\\)，那麼 \\(V_i\\) 是 \\(V_j\\) 的父，\\(V_j\\) 是 \\(V_i\\) 的子。圖108.1中 \\(V_2\\) 是 \\(V_5\\) 的父，\\(V_5\\) 是 \\(V_2\\) 的子。 Definition 108.3 通路 path: 從節點 \\(V_i\\) 到另一個節點 \\(V_j\\) 如果可以用 DAG 箭頭 (方向可左可右) 從頭到尾連接起來，成爲一個通路。\\(V_i, V_{k_1}, \\cdots ,V_{k_n}, V_j\\) 之間如果有通路，那麼這個通路上的每兩個變量之間都有一個箭頭連接 (無論哪個方向)。圖 108.1 中 \\(V_1\\rightarrow V_3 \\leftarrow V_2 \\rightarrow V_5\\) 是一條從 \\(V_1\\) 到 \\(V_5\\) 的通路。 Definition 108.4 有向通路 directed path: 從節點 \\(V_i\\) 到節點 \\(V_j\\) 之間如果有通路，且箭頭的方向只有從左往右，那麼這個通路被叫做有向通路。圖 108.1 中 \\(V_1\\rightarrow V_5 \\rightarrow V_6\\) 是一條從 \\(V_1\\) 到 \\(V_6\\) 的有向通路。 Definition 108.5 祖先與後代 ancestor and descendant: 如果 \\(V_i\\) 和 \\(V_j\\) 之間有一條有向通路，那麼我們說 \\(V_i\\) 是 \\(V_j\\) 的祖先，\\(V_j\\) 是 \\(V_i\\) 的後代。圖 108.1 中 \\(V_2\\) 是 \\(V_6/V_5\\) 的祖先，\\(V_6/V_5\\) 是 \\(V_2\\) 的後代。 Definition 108.6 對撞因子 collider: 如果一條通路上的某個變量 \\(V_{K_i}\\) 有左右兩個箭頭同時指向它本身，那麼\\(V_{K_i}\\) 被叫做對撞因子。圖 108.1 中 \\(V_1\\rightarrow V_3 \\leftarrow V_2\\)，的通路上 \\(V_3\\) 是一個對撞因子。 108.1.3 阻斷通路 blocking paths Definition 108.7 當 \\(\\mathbf{Z}\\in\\mathbf{V}\\) 時，如果一條通路 \\(p\\) 上存在一個節點 \\(W\\) 滿足這兩個條件中的一個: (1) \\(W\\) 是通路 \\(p\\) 上的一個對撞因子，且 \\(W\\) 和它的任何後代都 \\(\\notin \\mathbf{Z}\\)。(2) \\(W\\) 不是通路 \\(p\\) 上的對撞因子，且 \\(W\\in\\mathbf{Z}\\)。我們說 \\(\\mathbf{Z}\\) 阻斷了通路 \\(p\\)。 108.1.4 以對撞因子爲條件 conditioning on a collider 如下圖 108.2 所示，\\(V_3\\) 取決於 \\(V_1, V_2\\)，且 \\(V_1, V_2\\) 互相獨立。那麼給定了 \\(V_3\\) 之後 \\(V_1, V_2\\) 其實就變成了條件依賴的關系 (conditionally dependent)。盡管 \\(V_1, V_2\\) 這兩個變量之間是邊際獨立 (marginally independent) 的關系。 圖 108.2: Conditioning on a collider 108.2 以非對撞爲條件 conditioning on a non-collider 如果 \\(V_1,V_2\\) 同時取決於 \\(V_3\\): 圖 108.3: Conditioning on a non-collider (1) 那麼此時 \\(V_1,V_2\\) 的關系是邊際依賴 (marginally dependent)，但是以 \\(V_3\\) 爲條件獨立 (conditionally independent)。 假設三個變量之間的關系又變成: \\(V_3\\) 取決於 \\(V_1\\)，\\(V_2\\) 取決於 \\(V_3\\): 圖 108.4: Conditioning on a non-collider (2) 類似地，此種情形底下， \\(V_1,V_2\\) 的關系也是邊際依賴 (conditionally dependent)，但是以 \\(V_3\\) 爲條件獨立 (conditionally independent)。 108.2.1 條件的總結 以 \\(V_3\\) 爲條件會殺死 圖 108.3 和 108.4 中 \\(V_1, V_2\\) 之間的關系; 以 \\(V_3\\) 爲條件會創建 圖 108.2 中 \\(V_1, V_2\\) 之間的關系; 以 \\(V_3\\) 爲條件會阻斷 圖 108.3 和 108.4 中 \\(V_1, V_2\\) 之間的關系; 以 \\(V_3\\) 爲條件會解鎖 圖 108.2 中 \\(V_1, V_2\\) 之間的關系。 108.2.2 D 分離 d-separation Definition 108.8 一組變量組成的向量 \\(\\mathbf{V}\\)，如果它的三個沒有交集的子集向量 \\(\\mathbf{X,Y,Z}\\) 之間中的一個 \\(\\mathbf{Z}\\) 把 \\(\\mathbf{X}\\) 到 \\(\\mathbf{Y}\\) 的通路全部阻斷 (block)，我們說 \\(\\mathbf{Z}\\) 把 \\(\\mathbf{X}\\) 中的任何一個節點到 \\(\\mathbf{Y}\\) 中任何一個節點 d 分離了 (d-seperate)。 Example 108.1 圖 108.4 中，\\(V_2\\) 是否阻斷了 \\(V_3\\) 到 \\(V_6\\) 的通路呢？ 從 \\(V_3\\) 到 \\(V_6\\) 的通路一共有如下幾條: \\[ \\begin{aligned} 1.&amp; V_3 \\leftarrow V_1 \\rightarrow V_5 \\rightarrow V_6 \\\\ 2.&amp; V_3 \\leftarrow V_2 \\rightarrow V_5 \\rightarrow V_6 \\\\ 3.&amp; V_3 \\rightarrow V_4 \\leftarrow V_1 \\rightarrow V_5 \\rightarrow V_6 \\end{aligned} \\] 其中，第 2,3 條通路，是被 \\(V_2\\) 阻斷了的，但是第 1 條沒有被 \\(V_2\\) 阻斷。 因此，我不能說 \\(V_2\\) 把 \\(V_3\\) 到 \\(V_6\\) 之間的全部通路阻斷 (d-分離，d-separation)。 圖 108.5: Example of a DAG Theorem 108.1 D分離和條件獨立性: 如果 \\(\\mathbf{X, Y, Z}\\) 之間互無交集，且 \\(\\mathbf{Z}\\) d 分離了從 \\(\\mathbf{X}\\) 到 \\(\\mathbf{Y}\\) 之間的所有通路那麼有: \\[\\mathbf{X}\\perp \\!\\!\\! \\perp\\mathbf{Y|Z}\\] 根據 D 分離的定義來看，通過 DAG 圖，可以直觀地分析一組變量和另一組變量在已第三組變量爲條件的基礎上通路的變化和變量之間的獨立性。以某組變量爲條件之後，很可能阻斷了某些通路的同時，又解鎖了某些通路，當殺死一些通路的同時，可能建立起其他變量之間的聯系。這是一個有內在邏輯聯系的關系網絡。 變量之間通路的打開，阻斷，d 分離過程，用手繪制當然可行，但是變量如果很多，這個過程就顯得太過於繁瑣，幸好我們已經有了完美的解決方案，可以使用在線DAG工具: www.dagitty.net。 "],["reg-cont.html", "第 109 章 Regression Methods with continuous outcomes 結果變量爲連續型變量 109.1 用於對連續型結果變量做因果推斷的被估計量 109.2 鑑定 identification - revision 109.3 通過線性回歸模型來估計 ACE 109.4 Practical03 - causal inference", " 第 109 章 Regression Methods with continuous outcomes 結果變量爲連續型變量 109.1 用於對連續型結果變量做因果推斷的被估計量 邊際潛在結果 marginal potential outcomes: \\[ E\\{ Y(1) - Y(0) \\} \\] 或者是條件潛在結果 conditional potential outcomes: \\[ E\\{ Y(1) - Y(2) | \\mathbf{V = v} \\} \\] 邊際潛在結果，有專門的名字: the Average Causal Effect (ACE) 平均因果效應 或者叫 Average Treatment Effect 平均治療效應。這裏的 “treatment” 其實不是特指某種藥物或者醫學治療，而是泛指所有我們想要比較的暴露。 109.2 鑑定 identification - revision 109.2.1 條件因果均差 conditional causal mean difference \\[ \\begin{aligned} E\\{ Y(1) - Y(0) | \\mathbf{C = c} \\} &amp; = E\\{ Y(1) | \\mathbf{C=c} \\} - E\\{ Y(0) | \\mathbf{C=c} \\} \\\\ \\text{(By} &amp; \\text{ conditional exchangeability given } \\mathbf{C}:) \\\\ &amp;= E\\{ Y(1) | X = 1, \\mathbf{C=c} \\} - E\\{ Y(0) | X = 0, \\mathbf{C=c} \\} \\\\ \\text{(By} &amp; \\text{ consistency:)} \\\\ &amp; = E\\{ Y | X = 1, \\mathbf{C=c} \\} - E\\{ Y | X = 0, \\mathbf{C=c} \\} \\\\ \\end{aligned} \\] 109.2.2 簡單分類型條件變量 \\(C\\) 的 ACE \\[ \\begin{aligned} E\\{ Y(1) - Y(0)\\} &amp; = \\sum_cE\\{ Y(1) | C=c \\}\\text{Pr}(C = c) - \\sum_c E\\{ Y(0) | C=c \\}\\text{Pr}(C=c) \\\\ \\text{(By} &amp; \\text{ the law of total probability }\\uparrow) \\\\ &amp; = \\sum_cE\\{ Y(1) | X = 1, \\mathbf{C=c} \\}\\text{Pr}(C=c) \\\\ &amp; \\;\\;\\;\\;\\;\\;\\;\\;\\;- \\sum_cE\\{ Y(0) | X = 0, \\mathbf{C=c} \\} \\text{Pr}(C = c) \\\\ \\text{(By} &amp; \\text{ conditional exchangeability }\\uparrow) \\\\ &amp; = \\sum_cE\\{ Y | X = 1, \\mathbf{C=c} \\}\\text{Pr}(C=c) \\\\ &amp; \\;\\;\\;\\;\\;\\;\\;\\;\\;- \\sum_cE\\{ Y | X = 0, \\mathbf{C=c} \\} \\text{Pr}(C = c) \\\\ \\text{(By} &amp; \\text{ consistency }\\uparrow) \\\\ &amp; = \\sum_c\\{ E(Y|X = 1, C=c) -E(Y|X=0, C=c) \\}\\text{Pr}(C=c) \\end{aligned} \\tag{109.1} \\] 109.2.3 簡單連續型條件變量 \\(C\\) 的ACE \\[ \\begin{aligned} E\\{ Y(1) - Y(0)\\} &amp; = \\int_cE\\{ Y(1) | C=c \\}f_C(c)\\text{d}c - \\int_c E\\{ Y(0) | C=c \\}f_C(c)\\text{d}c \\\\ &amp; = \\int_cE\\{ Y(1) | X = 1, \\mathbf{C=c} \\}f_C(c)\\text{d}c \\\\ &amp; \\;\\;\\;\\;\\;\\;\\;\\;\\;- \\int_cE\\{ Y(0) | X = 0, \\mathbf{C=c} \\} f_C(c)\\text{d}c \\\\ &amp; = \\int_cE\\{ Y | X = 1, \\mathbf{C=c} \\}f_C(c)\\text{d}c \\\\ &amp; \\;\\;\\;\\;\\;\\;\\;\\;\\;- \\int_cE\\{ Y | X = 0, \\mathbf{C=c} \\} f_C(c)\\text{d}c \\\\ &amp; = \\int_c\\{ E(Y|X = 1, C=c) -E(Y|X=0, C=c) \\}f_C(c)\\text{d}c \\end{aligned} \\tag{109.2} \\] 109.3 通過線性回歸模型來估計 ACE 109.3.1 條件因果均值差 假設\\(Y,X\\)分別表示結果變量和暴露變量，有三個變量需要調整 (做爲條件變量): \\(C_1\\) 連續型，\\(C_2\\) 二分類型(0/1)，\\(C_3\\) 分類型(0/1/2/3)，然後我們擬合的線性回歸模型如下: \\[ \\begin{aligned} E(Y|X = x, C_1 = c_1, C_2 = c_2, C_3 = c_3) &amp; = \\alpha + \\beta_Xx + \\gamma_{C_1}c_1 + \\gamma_{C_2}c_2 \\\\ \\;\\;\\; +\\gamma_{C_{31}}I(c_3 =1)+&amp;\\gamma_{C_{32}}I(c_3 =2)+\\gamma_{C_{33}}I(c_3 =3) \\end{aligned} \\tag{109.3} \\] 如果，無相互幹擾 no interference，一致性 consistency，條件可置換性 conditional exchangeability三個最主要的前提條件得到滿足，加上，公式 (109.3) 中三個條件變量得到了正確的模型敘述 (specification of the model is correct)。那麼，這個模型估計的回歸系數 \\(\\beta_Xx\\) 就可以被賦予因果關系的解讀: \\[ E\\{ Y(1) -Y(0) |\\mathbf{C=c}\\} \\] ::: {.example #16-ASM-Causal-infer-19} 孕期吸煙和嬰兒出生體重的關系: 數據來自(Cattaneo 2010) 結果變量是出生體重 bweight，暴露變量是孕期母親是否吸煙 mbsmoke。這裏先只考慮3個條件變量: 懷孕時的年齡 mage，嬰兒是否是該母親的第一個孩子 fbaby，三個懷孕階段中，該母親第一次訪問婦產科醫生的時間段 prenatal，那麼我們可以擬合的最簡單模型其實是這樣的: ::: ```r cattaneo2 &lt;- read_dta(&quot;../backupfiles/cattaneo2.dta&quot;) Cat_mod &lt;- lm(bweight ~ as.factor(mbsmoke) + mage + as.factor(fbaby) + as.factor(prenatal), data = cattaneo2) summary(Cat_mod) ## ## Call: ## lm(formula = bweight ~ as.factor(mbsmoke) + mage + as.factor(fbaby) + ## as.factor(prenatal), data = cattaneo2) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3062.28 -308.27 28.87 354.08 2000.92 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2735.8442 78.2260 34.9736 &lt; 2.2e-16 *** ## as.factor(mbsmoke)1 -252.2599 21.5677 -11.6962 &lt; 2.2e-16 *** ## mage 5.2681 1.6146 3.2627 0.0011114 ** ## as.factor(fbaby)1 -59.9184 17.7004 -3.3851 0.0007173 *** ## as.factor(prenatal)1 578.8464 68.5077 8.4494 &lt; 2.2e-16 *** ## as.factor(prenatal)2 534.2280 70.6032 7.5666 4.592e-14 *** ## as.factor(prenatal)3 458.5222 80.9992 5.6608 1.597e-08 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 562.03 on 4635 degrees of freedom ## Multiple R-squared: 0.0584, Adjusted R-squared: 0.057181 ## F-statistic: 47.912 on 6 and 4635 DF, p-value: &lt; 2.22e-16 在無相互幹擾 no interference，一致性 consistency，條件可置換性 conditional exchangeability，和該模型是正確模型的前提下，線性回歸的結果 -252.26 可以被賦予因果推斷的解釋: 在懷孕年齡，嬰兒是否是第一胎，第一次訪問婦產科醫生的孕期時期都相同的條件下，如果比較一個懷孕母親全部都在吸煙，和另一個懷孕母親全部都沒有在吸煙的兩個潛在世界，孕期吸煙的世界的母親生的嬰兒平均出生體重比另一個全部都不吸煙的母親生的嬰兒的出生體重輕 252.3 克。且在我們擬合的模型中，認爲這個新生兒體重的差在其他條件變量取任何值時都保持不變。 模型是正確的這個前提其實是可以放寬的，因爲你可能會擬合這樣一個線性回歸模型: Cat_mod2 &lt;- lm(bweight ~ as.factor(mbsmoke) + mage + I(mage^2) + as.factor(fbaby)*as.factor(prenatal), data = cattaneo2) summary(Cat_mod2) ## ## Call: ## lm(formula = bweight ~ as.factor(mbsmoke) + mage + I(mage^2) + ## as.factor(fbaby) * as.factor(prenatal), data = cattaneo2) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3081.576 -307.339 31.472 350.836 2022.096 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2265.09914 174.11509 13.0092 &lt; 2.2e-16 *** ## as.factor(mbsmoke)1 -251.54047 21.58407 -11.6540 &lt; 2.2e-16 *** ## mage 32.66383 11.70667 2.7902 0.0052893 ** ## I(mage^2) -0.50575 0.21294 -2.3751 0.0175863 * ## as.factor(fbaby)1 409.55446 153.91082 2.6610 0.0078181 ** ## as.factor(prenatal)1 689.11361 79.41616 8.6772 &lt; 2.2e-16 *** ## as.factor(prenatal)2 684.61449 82.81672 8.2666 &lt; 2.2e-16 *** ## as.factor(prenatal)3 555.06907 95.65524 5.8028 6.956e-09 *** ## as.factor(fbaby)1:as.factor(prenatal)1 -460.27080 154.79291 -2.9735 0.0029598 ** ## as.factor(fbaby)1:as.factor(prenatal)2 -538.85385 159.42416 -3.3800 0.0007308 *** ## as.factor(fbaby)1:as.factor(prenatal)3 -393.84997 180.50617 -2.1819 0.0291656 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 561.14 on 4631 degrees of freedom ## Multiple R-squared: 0.062187, Adjusted R-squared: 0.060162 ## F-statistic: 30.709 on 10 and 4631 DF, p-value: &lt; 2.22e-16 這個模型裏，我們給懷孕時年齡擬合了二次項，又允許 fbaby 和 prenatal 之間有交互作用，但是，這並不妨礙我們對我們最關心的因果關系 mbsmke 的回歸系數的解讀，因爲這兩個模型的結果基本沒有差別。 還有別人可能給出的模型是這樣的: Cat_mod3 &lt;- lm(bweight ~ as.factor(mbsmoke)*as.factor(fbaby) + mage + I(mage^2) + as.factor(prenatal), data = cattaneo2) summary(Cat_mod3) ## ## Call: ## lm(formula = bweight ~ as.factor(mbsmoke) * as.factor(fbaby) + ## mage + I(mage^2) + as.factor(prenatal), data = cattaneo2) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3067.913 -309.329 23.246 349.241 2010.918 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2370.45016 167.13049 14.1832 &lt; 2.2e-16 *** ## as.factor(mbsmoke)1 -304.70729 27.49473 -11.0824 &lt; 2.2e-16 *** ## as.factor(fbaby)1 -77.54831 19.35568 -4.0065 6.260e-05 *** ## mage 35.28829 11.62801 3.0348 0.002421 ** ## I(mage^2) -0.55192 0.21169 -2.6073 0.009156 ** ## as.factor(prenatal)1 559.64429 68.58918 8.1594 4.298e-16 *** ## as.factor(prenatal)2 525.31989 70.55368 7.4457 1.144e-13 *** ## as.factor(prenatal)3 455.26790 80.89765 5.6277 1.934e-08 *** ## as.factor(mbsmoke)1:as.factor(fbaby)1 132.78365 43.73770 3.0359 0.002411 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 561.23 on 4633 degrees of freedom ## Multiple R-squared: 0.061474, Adjusted R-squared: 0.059853 ## F-statistic: 37.933 on 8 and 4633 DF, p-value: &lt; 2.22e-16 模型 Cat_mod3 中，mbsmoke 和新生兒體重之間的因果關系的解釋發生了變化，因爲我們對 mbsmoke 和 fbaby 之間的交互作用進行了檢驗，是有意義的 p = 0.0024*。這時候，在無相互幹擾 no interference，一致性 consistency，條件可置換性 conditional exchangeability，和該模型是正確模型的前提下，且模型 Cat_mod3 是正確的話，數據中的因果關系解釋及就不止一個了: -304.71 的條件因果關系均差 (conditional causal mean difference) 是針對那些已經有過孩子媽媽來說的; -304.71 + 132.784 = -171.9 這一條件因果關系均差 (conditional causal mean difference) 是對那些第一次懷孕當媽媽的人來說的。吸煙這個本來應該十分有害的行爲，對新生兒體重的影響因果關系似乎在第一次當媽媽的人當中影響較小 (這個因果關系陳述以相同懷孕年齡，和有相同的第一次訪問產科醫生時期爲前提)。 109.3.2 效應修正 effect modification 和 交互作用 interaction 在上文中模型 Cat_mod3 中，如果模型是正確的，且無互相幹擾，一致性，條件可置換性前提都得到滿足時，嬰兒是否是第一胎 fbaby 這一變量，對於我們研究的暴露變量 mbsmoke (孕期吸煙) 和結果變量 bweight (新生兒體重) 之間的關系起到了效應修正作用 (effect modification)。因爲我們看到該模型的結果是孕期吸煙對新生兒體重的影響因爲嬰兒是否是第一胎而發生了很大的變化。流行病學中把這個稱爲交互作用 (interaction)。但是，在因果推斷的研究領域中，傾向於把效應修正和交互作用加以區分。效應修正指對我們關心的關系造成效應修正的變量本身，並沒有因果關系的解釋 (effect modification is not causal with respect to the second variable)，對因果關系造成了效應修正的變量本身，沒有”無互相幹擾，一致性，條件可置換性”前提的要求。它只是衆多的條件變量之一。 相反，因果推斷的研究中，把交互作用的專有名詞保留給兩個暴露變量之間，也就是發生了交互作用的兩個變量，都是要研究的暴露變量，都有和結果變量之間因果關系的討論，所以兩個發生了交互作用的暴露變量，都需要滿足”無互相幹擾，一致性，條件可置換性”前提。 假如不光研究孕期吸煙，研究者還想一起研究孕期飲酒習慣 \\((X_2)\\)，和吸煙習慣 \\((X_1)\\) 共同對新生兒體重的因果關系影響: \\[ \\{ X_1, X_2 \\} \\perp\\perp Y(x_1, x_2) | \\mathbf{C}, \\forall x_1,x_2 \\] 所以，只有當暴露變量有兩個時 (因爲要同時對飲酒習慣和吸煙習慣兩個暴露變量做潛在結果分析 potential outcome)，才會用到交互作用 (interaction)。 109.3.3 分類型條件變量的平均因果效應 (ACE) Average Causal Effect (ACE) 平均因果效應: \\[ E\\{ Y(1) - Y(0) \\} \\] 在只有一個分類型條件變量的情況下，我們推導過其 ACE (See equations: (109.1)): \\[ \\sum_c\\{ E(Y|X=1, C=c) - E(Y|X=0, C=c) \\}\\text{Pr}(C=c) \\] 假設分類條件變量 \\(C\\) 有四個水平 \\(0/1/2/3\\)，那麼我們可以針對 \\(C\\) 的每一層水平擬合線性回歸模型: \\[ \\begin{aligned} E(Y|X=x, C=c) &amp; = \\alpha + \\beta_0 x + \\gamma_1 I(c=1) + \\gamma_2 I(c=2) + \\gamma_3 I(c=3) \\\\ &amp; \\;\\;\\; + \\beta_1 xI(c = 1) + \\beta_2 x I(c=2) + \\beta_3 x I (c=3) \\end{aligned} \\tag{109.4} \\] 模型 (109.4) 是一個飽和模型，因爲 X 和 C 之間一共只有四種分組組合，我們又擬合了一個含有 8 個參數的模型。也就是說，這個模型允許這 8 種 X 和 C 之間的分組，每組都有不同的結果。 \\[ \\begin{aligned} \\beta_0 &amp; = E(Y|X=1,C=0) - E(Y|X=0, C=0) \\\\ \\beta_0 + \\beta_1 &amp; = E(Y|X=1,C=1) - E(Y|X=0, C=1) \\\\ \\beta_0 + \\beta_2 &amp; = E(Y|X=1,C=2) - E(Y|X=0, C=2) \\\\ \\beta_0 + \\beta_3 &amp; = E(Y|X=1,C=3) - E(Y|X=0, C=3) \\\\ \\end{aligned} \\] 爲了簡便起見，給他們分別命名: \\[ \\begin{aligned} \\beta_0 &amp; = \\eta_0 \\\\ \\beta_0 + \\beta_1 &amp; = \\eta_1 \\\\ \\beta_0 + \\beta_2 &amp; = \\eta_2 \\\\ \\beta_0 + \\beta_3 &amp; = \\eta_3 \\end{aligned} \\] 在只有一個分類型條件變量時，當無相互幹擾，一致性，和條件可置換性的前提被滿足，我們可以把公式 (109.1) 中的 \\(E(Y|X=1, C=c) - E(Y|X=0, c=c)\\) 全部替換成爲 \\(\\eta_c\\): \\[ \\begin{aligned} E\\{ Y(1) - Y(0) \\} &amp; = \\sum_c\\{ E(Y|X=1, C=c) - E(Y|X=0, c=c)\\}\\text{Pr}(C = c) \\\\ &amp; = \\sum_c \\eta_c \\text{Pr}(C=c) \\end{aligned} \\] Cat_mod4 &lt;- lm(bweight ~ as.factor(mbsmoke)*as.factor(prenatal), data = cattaneo2) summary(Cat_mod4) ## ## Call: ## lm(formula = bweight ~ as.factor(mbsmoke) * as.factor(prenatal), ## data = cattaneo2) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3095.789 -313.854 23.211 360.458 2064.211 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2864.605 85.970 33.3210 &lt; 2.2e-16 *** ## as.factor(mbsmoke)1 -317.160 138.425 -2.2912 0.0220 * ## as.factor(prenatal)1 571.184 86.560 6.5987 4.612e-11 *** ## as.factor(prenatal)2 478.303 89.535 5.3421 9.628e-08 *** ## as.factor(prenatal)3 428.609 102.354 4.1875 2.873e-05 *** ## as.factor(mbsmoke)1:as.factor(prenatal)1 35.913 140.700 0.2552 0.7985 ## as.factor(mbsmoke)1:as.factor(prenatal)2 163.470 146.522 1.1157 0.2646 ## as.factor(mbsmoke)1:as.factor(prenatal)3 87.177 168.400 0.5177 0.6047 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 563.74 on 4634 degrees of freedom ## Multiple R-squared: 0.052846, Adjusted R-squared: 0.051415 ## F-statistic: 36.936 on 7 and 4634 DF, p-value: &lt; 2.22e-16 \\[ \\begin{aligned} \\widehat{\\eta_0} &amp; = -317.2 \\\\ \\widehat{\\eta_1} &amp; = -317.2 + 35.9 = -281.2 \\\\ \\widehat{\\eta_2} &amp; = -317.2 + 163.5 = -153.7\\\\ \\widehat{\\eta_3} &amp; = -317.2 + 87.2 = -230.0 \\\\ \\end{aligned} \\] 爲了估計平均因果效應，我們還需要 prenatal 的分布概率: with(cattaneo2, tab1(prenatal, graph = F)) ## prenatal : ## Frequency Percent Cum. percent ## 0 70 1.5 1.5 ## 1 3720 80.1 81.6 ## 2 697 15.0 96.7 ## 3 155 3.3 100.0 ## Total 4642 100.0 100.0 所以: \\[ \\begin{aligned} \\widehat{ACE} &amp; = \\sum_c \\widehat{\\eta_c}\\widehat{\\text{Pr}}(C=c) \\\\ &amp; = -317.2 \\times \\frac{70}{4642} -281.2\\times\\frac{3720}{4642} -153.7\\times\\frac{697}{4642}-230.0\\times\\frac{155}{4642} \\\\ &amp; = -260.9 \\end{aligned} \\] 109.3.4 Positivity 非零性 當我們用下面的飽和模型的時候，八個可能的分組中，每個格子裏都不能是零，這一前提條件被成爲非零性 (positivity)。 Cat_mod4 &lt;- lm(bweight ~ as.factor(mbsmoke)*as.factor(prenatal), data = cattaneo2) 用概率來表達，就是，在所有可能的 \\(c\\) 層中的對象，其中暴露變量爲 1 的概率必須在 0, 1 之間: \\[ \\textbf{Positivity: } \\text{if Pr}(C=c) &gt; 0 \\text{ then: } 0&lt;\\text{Pr}(X=1|C=c) &lt;1 \\] 109.3.5 連續型變量的平均因果效應 Cat_mod5 &lt;- lm(bweight ~ factor(mbsmoke) + mage*factor(mbsmoke) + I(mage^2)*factor(mbsmoke), data = cattaneo2) summary(Cat_mod5) ## ## Call: ## lm(formula = bweight ~ factor(mbsmoke) + mage * factor(mbsmoke) + ## I(mage^2) * factor(mbsmoke), data = cattaneo2) ## ## Residuals: ## Min 1Q Median 3Q Max ## -3131.920 -309.155 31.845 351.130 2024.364 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2423.99611 164.87921 14.7016 &lt; 2.2e-16 *** ## factor(mbsmoke)1 1121.03497 414.78336 2.7027 0.006903 ** ## mage 64.23439 12.37207 5.1919 2.171e-07 *** ## I(mage^2) -0.97679 0.22658 -4.3110 1.659e-05 *** ## factor(mbsmoke)1:mage -92.69003 32.06902 -2.8903 0.003866 ** ## factor(mbsmoke)1:I(mage^2) 1.44359 0.60351 2.3920 0.016796 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 564.93 on 4636 degrees of freedom ## Multiple R-squared: 0.04846, Adjusted R-squared: 0.047434 ## F-statistic: 47.22 on 5 and 4636 DF, p-value: &lt; 2.22e-16 with(cattaneo2, epiDisplay::summ(mage, graph = F)) ## obs. mean median s.d. min. max. ## 4642 26.505 26 5.619 13 45 with(cattaneo2, epiDisplay::summ(mage^2, graph = F)) ## obs. mean median s.d. min. max. ## 4642 734.056 676 305.224 169 2025 Y &lt;- cattaneo2$bweight # X &lt;- with(cattaneo2, cbind(fbaby, mmarried, alcohol, fedu, mage)) X &lt;- with(cattaneo2, cbind(mage, mage^2)) treat &lt;- cattaneo2$mbsmoke fit1&lt;-ATE(Y,treat,X) summary(fit1) ## Call: ## ATE(Y = Y, Ti = treat, X = X) ## ## Estimate StdErr 95%.Lower 95%.Upper Z.value p.value ## E[Y(1)] 3133.7541 20.7403 3093.1038 3174.4044 151.0948 &lt; 2.22e-16 *** ## E[Y(0)] 3409.4859 9.2843 3391.2890 3427.6827 367.2313 &lt; 2.22e-16 *** ## ATE -275.7317 22.7443 -320.3098 -231.1537 -12.1231 &lt; 2.22e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 \\[ \\begin{aligned} \\widehat{\\beta_0} &amp; = 1121.035 \\\\ \\widehat{\\beta_1} &amp; = -92.690 \\\\ \\widehat{\\beta_2} &amp; = 1.444 \\\\ \\Rightarrow \\widehat{ACE} &amp; = 1121.035 - 92.690\\times26.505 + 1.444\\times734.056 \\\\ &amp; = -275.7 \\end{aligned} \\] 和 STATA 的 teffects ra 結果做個對比: . teffects ra (bweight mage mage2) (mbsmoke) Iteration 0: EE criterion = 9.667e-23 Iteration 1: EE criterion = 7.554e-27 Treatment-effects estimation Number of obs = 4,642 Estimator : regression adjustment Outcome model : linear Treatment model: none ---------------------------------------------------------------------------------------- | Robust bweight | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] -----------------------+---------------------------------------------------------------- ATE | mbsmoke | (smoker vs nonsmoker) | -275.9901 22.74918 -12.13 0.000 -320.5777 -231.4025 -----------------------+---------------------------------------------------------------- POmean | mbsmoke | nonsmoker | 3409.482 9.284654 367.22 0.000 3391.284 3427.679 ---------------------------------------------------------------------------------------- 小數點以後的略差異應該是四舍五入的差異。別的估計包括 Robust Std. Err. 都是十分接近的。 109.4 Practical03 - causal inference 注意: 這裏的練習使用的是STATA 因爲，我在 R 裏找不到像 STATA 的 teffects 這樣靈活且方便的命令，如果你知道，歡迎告訴我: abelardccwang@gmail.com。 數據還是吸煙和新生兒體重的關系的數據: ## ## . use &quot;../backupfiles/cattaneo2.dta&quot; ## (Excerpt from Cattaneo (2010) Journal of Econometrics 155: 138-154) ## ## . ## . describe ## ## Contains data from ../backupfiles/cattaneo2.dta ## obs: 4,642 Excerpt from Cattaneo (2010) ## Journal of Econometrics 155: ## 138-154 ## vars: 23 21 Feb 2013 14:43 ## ------------------------------------------------------------------------------- ## storage display value ## variable name type format label variable label ## ------------------------------------------------------------------------------- ## bweight int %9.0g infant birth weight (grams) ## mmarried byte %10.0g mmarried 1 if mother married ## mhisp byte %9.0g 1 if mother hispanic ## fhisp byte %9.0g 1 if father hispanic ## foreign byte %9.0g 1 if mother born abroad ## alcohol byte %9.0g 1 if alcohol consumed during ## pregnancy ## deadkids byte %9.0g previous births where newborn ## died ## mage byte %9.0g mother&#39;s age ## medu byte %9.0g mother&#39;s education attainment ## fage byte %9.0g father&#39;s age ## fedu byte %9.0g father&#39;s education attainment ## nprenatal byte %9.0g number of prenatal care visits ## monthslb int %9.0g months since last birth ## order byte %9.0g order of birth of the infant ## msmoke byte %27.0g smoke cigarettes smoked during ## pregnancy ## mbsmoke byte %9.0g mbsmoke 1 if mother smoked ## mrace byte %9.0g 1 if mother is white ## frace byte %9.0g 1 if father is white ## prenatal byte %9.0g trimester of first prenatal care ## visit ## birthmonth byte %9.0g month of birth ## lbweight byte %9.0g 1 if low birthweight baby ## fbaby float %9.0g YesNo 1 if first baby ## prenatal1 float %9.0g YesNo 1 if first prenatal visit in 1 ## trimester ## ------------------------------------------------------------------------------- ## Sorted by: ## ## . tab mbsmoke ## ## 1 if mother | ## smoked | Freq. Percent Cum. ## ------------+----------------------------------- ## nonsmoker | 3,778 81.39 81.39 ## smoker | 864 18.61 100.00 ## ------------+----------------------------------- ## Total | 4,642 100.00 ## ## . ## . summ bweight, detail ## ## infant birth weight (grams) ## ------------------------------------------------------------- ## Percentiles Smallest ## 1% 1474 340 ## 5% 2438 340 ## 10% 2693 397 Obs 4,642 ## 25% 3033 454 Sum of Wgt. 4,642 ## ## 50% 3390 Mean 3361.68 ## Largest Std. Dev. 578.8196 ## 75% 3726 5188 ## 90% 4026 5216 Variance 335032.2 ## 95% 4224 5387 Skewness -.784952 ## 99% 4621 5500 Kurtosis 5.788678 ## ## . ## . *1. 用簡單線性回顧分析一下 `mbsmoke` 和 `bweight` 之間的關系 ## &gt; : ## ## . *a) ## ## . regress bweight i.mbsmoke ## ## Source | SS df MS Number of obs = 4,642 ## -------------+---------------------------------- F(1, 4640) = 164.62 ## Model | 53275939.9 1 53275939.9 Prob &gt; F = 0.0000 ## Residual | 1.5016e+09 4,640 323622.478 R-squared = 0.0343 ## -------------+---------------------------------- Adj R-squared = 0.0341 ## Total | 1.5549e+09 4,641 335032.156 Root MSE = 568.88 ## ## ------------------------------------------------------------------------------ ## bweight | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## mbsmoke | ## smoker | -275.2519 21.4528 -12.83 0.000 -317.3096 -233.1942 ## _cons | 3412.912 9.255254 368.75 0.000 3394.767 3431.056 ## ------------------------------------------------------------------------------ ## ## . ## . ## . *b) ## ## . ## . regress bweight i.mbsmoke i.fbaby ## ## Source | SS df MS Number of obs = 4,642 ## -------------+---------------------------------- F(2, 4639) = 91.56 ## Model | 59045489.8 2 29522744.9 Prob &gt; F = 0.0000 ## Residual | 1.4958e+09 4,639 322448.533 R-squared = 0.0380 ## -------------+---------------------------------- Adj R-squared = 0.0376 ## Total | 1.5549e+09 4,641 335032.156 Root MSE = 567.85 ## ## ------------------------------------------------------------------------------ ## bweight | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## mbsmoke | ## smoker | -281.0638 21.45789 -13.10 0.000 -323.1314 -238.9961 ## | ## fbaby | ## Yes | -71.20491 16.8333 -4.23 0.000 -104.2062 -38.20364 ## _cons | 3445.178 11.98063 287.56 0.000 3421.69 3468.666 ## ------------------------------------------------------------------------------ ## ## . 調整了 fbaby 之後，暴露和結果之間的關系發生了怎樣的變化？ 說明 fbaby 是什麼類型的混雜因子？ 看兩個結果的報告，吸煙的線性回歸系數從調整 fbaby 前的 -275.25， 絕對值變大爲 -281.06，這是一種負方向混雜 (negative confounding)。 這種混雜可以分析 fbaby 和 mbsmoke 以及 bweight 各自的關系看出，懷第一胎的母親比較少吸煙，且第一胎嬰兒的出生體重 均值比不是第一胎嬰兒的出生體重要低: ## ## . use &quot;../backupfiles/cattaneo2.dta&quot; ## (Excerpt from Cattaneo (2010) Journal of Econometrics 155: 138-154) ## ## . ## . tab fbaby mbsmoke, row ## ## +----------------+ ## | Key | ## |----------------| ## | frequency | ## | row percentage | ## +----------------+ ## ## 1 if first | 1 if mother smoked ## baby | nonsmoker smoker | Total ## -----------+----------------------+---------- ## No | 2,066 543 | 2,609 ## | 79.19 20.81 | 100.00 ## -----------+----------------------+---------- ## Yes | 1,712 321 | 2,033 ## | 84.21 15.79 | 100.00 ## -----------+----------------------+---------- ## Total | 3,778 864 | 4,642 ## | 81.39 18.61 | 100.00 ## ## . ## . tabstat bweight, by(fbaby) ## ## Summary for variables: bweight ## by categories of: fbaby (1 if first baby) ## ## fbaby | mean ## -------+---------- ## No | 3386.681 ## Yes | 3329.595 ## -------+---------- ## Total | 3361.68 ## ------------------ ## ## . ## . tabstat bweight, by(mbsmoke) ## ## Summary for variables: bweight ## by categories of: mbsmoke (1 if mother smoked) ## ## mbsmoke | mean ## ----------+---------- ## nonsmoker | 3412.912 ## smoker | 3137.66 ## ----------+---------- ## Total | 3361.68 ## --------------------- ## ## . // 這裏需要重新強調的是，通過比較調整新變量前後的回歸系數的變化， // 能且僅僅只能在線性回歸模型 (可壓縮模型) 時使用，邏輯回歸中不適用。 *3 在怎樣的假設條件下，這裏的線性回歸模型的回歸系數 mbsmoke // 可以被賦予因果關系？ // 1. 無相互幹擾 no interference: 一個懷孕母親吸煙與否，和另一個母親 // 生下的嬰兒的出生體重之間沒有關系。 // 2. 一致性 consistency: 實際觀察到的孕期吸煙母親的嬰兒出生體重，和 // 潛在條件下 (當一個懷孕母親被強制吸煙時) 的嬰兒出生體重 (潛在結果) // 是相同的。同樣地，在另一種潛在條件下 (懷孕母親被禁止吸煙時) 的 // 嬰兒出生體重 (潛在結果)，和實際觀察到的不吸煙的母親生下的嬰兒體重 // 是相同的。 // 3. 條件可置換性 conditional exchangeability: 在 fbaby 的各個組別中， // 兩種潛在暴露造成的潛在結果，調整了其它共變量之後，和她們真實的暴露情況 // (母親是否吸煙)之間是相互獨立的。在這個模型裏，我們只調整了 fbaby // 一個共變量，所以如果要給它的回歸系數加上因果關系結論，還必須假設 (雖然 // 很可能不合理) 控制 fbaby 這個單一的變量，就完全調整了了母親孕期吸煙和 // 新生兒體重之間關系的全部混雜因素。 // 4. 模型被正確擬合 correct specification of the regression model: 這是指， // 模型中加入的變量與變量之間的關系，被正確地擬合了，因爲目前只有兩個 // 分類型變量在模型中，且該模型沒有加入交互作用項，那麼這條前提假設的含義 // 就是，我們認爲 fbaby 對孕期吸煙和新生兒體重之間的關系沒有交互作用。 *4 在前面解釋過的因果關系的前提條件下，要給 mbsmoke 一個因果關系的解釋 // 的話，(b) 模型的回歸系數該怎麼解釋呢？用潛在結果的概念解釋。 // 在 3. 的前提條件下， mbsmoke 的回歸系數的因果關系解讀可以是: // 當條件變量 fbaby 嬰兒是否是第一胎的變量保持不變時，281.0638 是暴露 // (孕期吸煙) 導致的新生兒體重下降的量，其95%信賴區間是 (238.9961, 323.1314)。 // 這是一個潛在結果的差，所以假如所有的媽媽孕期都吸煙，和所有的媽媽孕期都 // 不吸煙相比(潛在暴露)，嬰兒的出生平均體重要輕 281.0638 克: // E{Y(1) | C = c} - E{Y(0) | C = c} = 281.0638 *5 用 STATA 的 teffects ra 命令擬合相同的模型: ## ## . use &quot;../backupfiles/cattaneo2.dta&quot; ## (Excerpt from Cattaneo (2010) Journal of Econometrics 155: 138-154) ## ## . ## . ## . teffects ra (bweight fbaby) (mbsmoke) ## ## Iteration 0: EE criterion = 2.764e-25 ## Iteration 1: EE criterion = 3.079e-26 ## ## Treatment-effects estimation Number of obs = 4,642 ## Estimator : regression adjustment ## Outcome model : linear ## Treatment model: none ## ------------------------------------------------------------------------------ ## | Robust ## bweight | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## ATE | ## mbsmoke | ## (smoker | ## vs | ## nonsmoker) | -273.1552 20.93503 -13.05 0.000 -314.1872 -232.1233 ## -------------+---------------------------------------------------------------- ## POmean | ## mbsmoke | ## nonsmoker | 3414.403 9.279263 367.96 0.000 3396.216 3432.59 ## ------------------------------------------------------------------------------ ## ## . // 因果均差 (ACE) 的估計在 STATA 被叫做 ATE，但是估計的結果略低於 // 模型 (b) 的結果: -273.1552 vs. -281.0638。 *6 在線性回歸模型中加入 i.mbsmoke##i.fbaby 的交互作用項，試着計算 // fbaby 爲 0/1 時各自的 mbsmoke 回歸系數: ## ## . use &quot;../backupfiles/cattaneo2.dta&quot; ## (Excerpt from Cattaneo (2010) Journal of Econometrics 155: 138-154) ## ## . ## . ## . regress bweight i.mbsmoke##i.fbaby ## ## Source | SS df MS Number of obs = 4,642 ## -------------+---------------------------------- F(3, 4638) = 65.17 ## Model | 62890495.3 3 20963498.4 Prob &gt; F = 0.0000 ## Residual | 1.4920e+09 4,638 321689.034 R-squared = 0.0404 ## -------------+---------------------------------- Adj R-squared = 0.0398 ## Total | 1.5549e+09 4,641 335032.156 Root MSE = 567.18 ## ## ------------------------------------------------------------------------------ ## bweight | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## mbsmoke | ## smoker | -339.8145 27.35206 -12.42 0.000 -393.4375 -286.1914 ## | ## fbaby | ## Yes | -98.18832 18.53668 -5.30 0.000 -134.529 -61.84761 ## | ## mbsmoke#| ## fbaby | ## smoker#Yes | 152.2046 44.02482 3.46 0.001 65.89506 238.5142 ## | ## _cons | 3457.406 12.47823 277.08 0.000 3432.942 3481.869 ## ------------------------------------------------------------------------------ ## ## . ## . *to get the stratum specific effects: ## ## . ## . lincom 1.mbsmoke // when baby is not first born ## 1.mbsmoke/ invalid name ## r(198); ## ## . ## . lincom 1.mbsmoke + 1.mbsmoke#1.fbaby // when baby is first born ## 1.fbaby/ invalid name ## r(198); ## ## . 7 計算 fbaby 各組所佔的百分比: (爲了計算孕期吸煙導致的新生兒體重下降 的邊際效應 marginal effect) ## ## . use &quot;../backupfiles/cattaneo2.dta&quot; ## (Excerpt from Cattaneo (2010) Journal of Econometrics 155: 138-154) ## ## . ## . ## . tab fbaby ## ## 1 if first | ## baby | Freq. Percent Cum. ## ------------+----------------------------------- ## No | 2,609 56.20 56.20 ## Yes | 2,033 43.80 100.00 ## ------------+----------------------------------- ## Total | 4,642 100.00 ## ## . ## . *8 用 6, 7 的結果，手動計算一下 ACE 的估計量: ## ## . ## . ## . ## . regress bweight i.mbsmoke##i.fbaby ## ## Source | SS df MS Number of obs = 4,642 ## -------------+---------------------------------- F(3, 4638) = 65.17 ## Model | 62890495.3 3 20963498.4 Prob &gt; F = 0.0000 ## Residual | 1.4920e+09 4,638 321689.034 R-squared = 0.0404 ## -------------+---------------------------------- Adj R-squared = 0.0398 ## Total | 1.5549e+09 4,641 335032.156 Root MSE = 567.18 ## ## ------------------------------------------------------------------------------ ## bweight | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## mbsmoke | ## smoker | -339.8145 27.35206 -12.42 0.000 -393.4375 -286.1914 ## | ## fbaby | ## Yes | -98.18832 18.53668 -5.30 0.000 -134.529 -61.84761 ## | ## mbsmoke#| ## fbaby | ## smoker#Yes | 152.2046 44.02482 3.46 0.001 65.89506 238.5142 ## | ## _cons | 3457.406 12.47823 277.08 0.000 3432.942 3481.869 ## ------------------------------------------------------------------------------ ## ## . ## . lincom 0.562*1.mbsmoke + 0.438*(1.mbsmoke + 1.mbsmoke#1.fbaby) ## ## ( 1) 1.mbsmoke + .438*1.mbsmoke#1.fbaby = 0 ## ## ------------------------------------------------------------------------------ ## bweight | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## (1) | -273.1488 21.55453 -12.67 0.000 -315.406 -230.8917 ## ------------------------------------------------------------------------------ ## ## . ## . margins, dydx(mbsmoke) ## ## Average marginal effects Number of obs = 4,642 ## Model VCE : OLS ## ## Expression : Linear prediction, predict() ## dy/dx w.r.t. : 1.mbsmoke ## ## ------------------------------------------------------------------------------ ## | Delta-method ## | dy/dx Std. Err. t P&gt;|t| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## mbsmoke | ## smoker | -273.1552 21.55433 -12.67 0.000 -315.412 -230.8985 ## ------------------------------------------------------------------------------ ## Note: dy/dx for factor levels is the discrete change from the base level. ## ## . * 你也可以用這個 margins 的命令，很方便，但是它估計的標 ## &gt; 準誤不使用穩健統計學方法，所以略有不同。 ## ## . *9 爲什麼沒有加交互作用項的模型 (b) 給出的回歸系數估計和 teffects ra 的結果相差很大？ 這是因爲如果給模型 (b) 的回歸系數賦予因果關系的解釋的話，第四個前提假設 – 模型選擇正確且變量在模型中的形式也是正確 – 太過樂觀了。這個前提假設 認爲沒有交互作用，但是，如果你看加交互作用項的第三個模型中，交互作用項 的回顧系數其實是有意義的 (有證據顯示交互作用存在): mbsmoke#| fbaby | smoker#Yes | 152.2046 44.02482 3.46 0.001 65.89506 238.5142 *10 現在給模型中加入更多的共變量，用兩種命令分別擬合，比較其結果: ## ## . use &quot;../backupfiles/cattaneo2.dta&quot; ## (Excerpt from Cattaneo (2010) Journal of Econometrics 155: 138-154) ## ## . ## . ## . regress bweight mbsmoke fbaby mmarried alcohol fedu mage ## ## Source | SS df MS Number of obs = 4,642 ## -------------+---------------------------------- F(6, 4635) = 46.86 ## Model | 88933839.4 6 14822306.6 Prob &gt; F = 0.0000 ## Residual | 1.4660e+09 4,635 316278.403 R-squared = 0.0572 ## -------------+---------------------------------- Adj R-squared = 0.0560 ## Total | 1.5549e+09 4,641 335032.156 Root MSE = 562.39 ## ## ------------------------------------------------------------------------------ ## bweight | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## mbsmoke | -221.2625 22.28894 -9.93 0.000 -264.9594 -177.5656 ## fbaby | -49.45095 17.62184 -2.81 0.005 -83.99814 -14.90375 ## mmarried | 152.3058 21.86593 6.97 0.000 109.4382 195.1734 ## alcohol | -64.26606 47.48732 -1.35 0.176 -157.3638 28.83168 ## fedu | 4.515101 2.573722 1.75 0.079 -.5306195 9.560821 ## mage | 1.282969 1.750586 0.73 0.464 -2.149013 4.714952 ## _cons | 3230.456 49.40366 65.39 0.000 3133.601 3327.311 ## ------------------------------------------------------------------------------ ## ## . ## . ## . teffects ra (bweight fbaby mmarried alcohol fedu mage) (mbsmoke) ## ## Iteration 0: EE criterion = 4.396e-24 ## Iteration 1: EE criterion = 7.758e-26 ## ## Treatment-effects estimation Number of obs = 4,642 ## Estimator : regression adjustment ## Outcome model : linear ## Treatment model: none ## ------------------------------------------------------------------------------ ## | Robust ## bweight | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## ATE | ## mbsmoke | ## (smoker | ## vs | ## nonsmoker) | -231.1408 24.50303 -9.43 0.000 -279.1659 -183.1158 ## -------------+---------------------------------------------------------------- ## POmean | ## mbsmoke | ## nonsmoker | 3403.054 9.532216 357.01 0.000 3384.372 3421.737 ## ------------------------------------------------------------------------------ ## ## . 此時我們發現，簡單現行回歸估計的因果均值差(ATE)總是和考慮了更復雜關系的模型相比相差較多。 *11 你可以用下面的非 teffects 代碼還原上面的計算: ## ## . use &quot;../backupfiles/cattaneo2.dta&quot; ## (Excerpt from Cattaneo (2010) Journal of Econometrics 155: 138-154) ## ## . ## . ## . qui regress bweight mbsmoke fbaby mmarried alcohol fedu mage if mbsmoke==0 ## ## . predict Y0 ## (option xb assumed; fitted values) ## ## . ## . qui regress bweight mbsmoke fbaby mmarried alcohol fedu mage if mbsmoke==1 ## ## . predict Y1 ## (option xb assumed; fitted values) ## ## . ## . sum Y0 ## ## Variable | Obs Mean Std. Dev. Min Max ## -------------+--------------------------------------------------------- ## Y0 | 4,642 3403.054 101.6744 3163.591 3549.308 ## ## . gen E0=r(mean) ## ## . ## . sum Y1 ## ## Variable | Obs Mean Std. Dev. Min Max ## -------------+--------------------------------------------------------- ## Y1 | 4,642 3171.914 67.17853 2839.728 3306.694 ## ## . gen E1=r(mean) ## ## . ## . gen ACE = E1-E0 ## ## . sum ACE ## ## Variable | Obs Mean Std. Dev. Min Max ## -------------+--------------------------------------------------------- ## ACE | 4,642 -231.1409 0 -231.1409 -231.1409 ## ## . *或者使用方便的 margins ## ## . use &quot;../backupfiles/cattaneo2.dta&quot; ## (Excerpt from Cattaneo (2010) Journal of Econometrics 155: 138-154) ## ## . ## . ## . qui regress bweight i.mbsmoke fbaby mmarried alcohol fedu mage i.mbsmoke#i.fb ## &gt; aby i.mbsmoke#i.mmarried i.mbsmoke#i.alcohol i.mbsmoke#c.fedu i.mbsmoke#c.mag ## &gt; e ## ## . ## . margins, dydx(mbsmoke) ## ## Average marginal effects Number of obs = 4,642 ## Model VCE : OLS ## ## Expression : Linear prediction, predict() ## dy/dx w.r.t. : 1.mbsmoke ## ## ------------------------------------------------------------------------------ ## | Delta-method ## | dy/dx Std. Err. t P&gt;|t| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## mbsmoke | ## smoker | -231.1408 24.05129 -9.61 0.000 -278.2928 -183.9888 ## ------------------------------------------------------------------------------ ## Note: dy/dx for factor levels is the discrete change from the base level. ## ## . 值得注意的是，即使是使用 teffects ra 我們可能對模型形式的指定還是過於簡 單，例如上面的模型中加入了許多變量，但是 STATA 其實並沒有考慮有三個或者三 個以上變量之間發生交互作用的情況，而且， fedu, mage 被認爲和結果變量 bweight 呈簡單一次的線性關系。 References "],["regre-binary.html", "第 110 章 Regression Methods with binary outcomes 結果變量爲二進制變量 110.1 二進制結果變量的因果被估計量 (causal estimand): 110.2 鑑定 identification - conditional effects 110.3 鑑定 identification - marginal effects 110.4 通過邏輯回歸估計這些被估計量 110.5 Average causal/treatment effect in the exposed/treated (ATET) 110.6 Practical04 - causal inference", " 第 110 章 Regression Methods with binary outcomes 結果變量爲二進制變量 110.1 二進制結果變量的因果被估計量 (causal estimand): Average causal effect (因果邊際危險度差，marginal causal risk difference), ACE : \\[ \\text{Pr}\\{Y(1) = 1\\} - \\text{Pr}\\{Y(0) = 1\\} \\] 因果邊際危險度比 (marginal causal risk ratio): \\[ \\frac{\\text{Pr}\\{Y(1) = 1\\}}{\\text{Pr}\\{Y(0) = 1\\}} \\] 或，因果邊際比值比 (marginal causal odds ratio): \\[ \\frac{[\\frac{\\text{Pr}\\{Y(1) = 1\\}}{1-\\text{Pr}\\{Y(1) = 1\\}}]}{[\\frac{\\text{Pr}\\{Y(0) = 1\\}}{1-\\text{Pr}\\{Y(0) = 1\\}}]} \\] 或，因果邊際對數危險度比/比值比: \\[ \\log\\{\\text{Pr}\\{Y(1) = 1\\}\\} - \\log\\{\\text{Pr}\\{Y(0) = 1\\} \\} \\] \\[ \\log[\\frac{\\text{Pr}\\{Y(1) = 1\\}}{1-\\text{Pr}\\{Y(1) = 1\\}}] - \\log[\\frac{\\text{Pr}\\{Y(0) = 1\\}}{1-\\text{Pr}\\{Y(0) = 1\\}}] \\] 和上一章節一樣，我們可能實際上還會關心這些被估計量的調整後的條件平均因果效應 (conditinal ACE): \\[ \\text{Pr}\\{Y(1) = 1 | \\mathbf{V=v} \\} - \\text{Pr}\\{Y(0) = 1 | \\mathbf{V=v}\\}\\\\ \\log\\{\\text{Pr}\\{Y(1) = 1| \\mathbf{V=v}\\}\\} - \\log\\{\\text{Pr}\\{Y(0) = 1| \\mathbf{V=v}\\} \\}\\\\ \\log[\\frac{\\text{Pr}\\{Y(1) = 1 | \\mathbf{V=v}\\}}{1-\\text{Pr}\\{Y(1) = 1 | \\mathbf{V=v}\\}}] - \\log[\\frac{\\text{Pr}\\{Y(0) = 1 | \\mathbf{V=v}\\}}{1-\\text{Pr}\\{Y(0) = 1 | \\mathbf{V=v}\\}}] \\] 110.1.1 比值比的不可壓縮性 non-collapsibility of the odds ratio 即便是沒有效應修飾，在 GLM 章節我們也學到過，由於邏輯回歸模型的不可壓縮性質，一般地，選擇的條件變量不同的話，(對數)比值比的大小都會發生變化。所以沒辦法用回歸系數的變化來推斷是否有明顯的混雜效應。 110.2 鑑定 identification - conditional effects 如果我們對暴露 \\(X\\) 和結果 \\(Y\\) 之間的條件因果危險度差 (conditional causal risk difference): \\[ \\begin{aligned} \\text{Pr}\\{ Y(1) = 1 &amp; | \\mathbf{C=c}\\} - \\text{Pr}\\{ Y(0) = 1 | \\mathbf{C=c}\\} \\\\ &amp; = \\text{Pr}\\{ Y(1) = 1 | X=1, \\mathbf{C=c}\\} - \\text{Pr}\\{ Y(0) = 1 | X=1, \\mathbf{C=c}\\} \\\\ &amp; \\text{By conditional exchangeability given }\\mathbf{C} \\uparrow \\\\ &amp; = \\text{Pr}\\{ Y = 1 | X=1, \\mathbf{C=c}\\} - \\text{Pr}\\{ Y = 1 | X=1, \\mathbf{C=c}\\} \\\\ &amp; \\text{By consistency } \\uparrow \\\\ \\end{aligned} \\] 相似地，條件因果對數危險度比 (conditional causal log risk ratio): \\[ \\begin{aligned} \\log[\\text{Pr}\\{ Y(1) = 1 &amp;| \\mathbf{C=c} \\}] - \\log[\\text{Pr}\\{ Y(0) = 1 | \\mathbf{C=c} \\}] \\\\ &amp; = \\log\\{\\text{Pr}( Y = 1 | X=1, \\mathbf{C=c})\\} - \\log\\{\\text{Pr}( Y = 1 | X=1, \\mathbf{C=c})\\} \\\\ \\end{aligned} \\] 條件因果對數比值比 (conditioanl causal log odds ratio): \\[ \\begin{aligned} &amp; \\log[\\frac{\\text{Pr}\\{Y(1) = 1 | \\mathbf{C=c}\\}}{1-\\text{Pr}\\{Y(1) = 1 | \\mathbf{C=c}\\}}] - \\log[\\frac{\\text{Pr}\\{Y(0) = 1 | \\mathbf{C=c}\\}}{1-\\text{Pr}\\{Y(0) = 1 | \\mathbf{C=c}\\}}] \\\\ &amp; =\\log[\\frac{\\text{Pr}\\{Y = 1 | X = 1, \\mathbf{C=c}\\}}{1-\\text{Pr}\\{Y = 1 |X = 1, \\mathbf{C=c}\\}}] - \\log[\\frac{\\text{Pr}\\{Y = 1 |X = 0,\\mathbf{C=c}\\}}{1-\\text{Pr}\\{Y = 1 |X = 0, \\mathbf{C=c}\\}}] \\\\ \\end{aligned} \\] 110.3 鑑定 identification - marginal effects 110.3.1 Marginal causal risk difference (ACE) \\[ \\begin{aligned} \\text{Pr}\\{ Y(1) =1 \\} &amp; - \\text{Pr}\\{ Y(0) =1 \\} \\\\ = &amp; \\sum_c\\text{Pr}\\{ Y(1)=1 |C = c \\}\\text{Pr}(C=c) \\\\ &amp; - \\sum_c\\text{Pr}\\{ Y(0)=1 | C=c\\}\\text{Pr}(C=c) \\\\ &amp; (\\text{by the law of total probability } \\uparrow) \\\\ = &amp;\\sum_c\\text{Pr}\\{ Y(1)=1|X=1, C=c \\} \\text{Pr}(C=c) \\\\ &amp; - \\sum_c\\text{Pr}\\{ Y(0)=1|X=1, C=c \\} \\text{Pr}(C=c) \\\\ &amp; (\\text{by conditional exchangeability } \\uparrow) \\\\ = &amp;\\sum_c\\text{Pr}( Y=1|X=1, C=c ) \\text{Pr}(C=c) \\\\ &amp; - \\sum_c\\text{Pr} (Y=1|X=1, C=c) \\text{Pr}(C=c) \\\\ &amp; (\\text{by consistency } \\uparrow) \\\\ = &amp; \\sum_c\\{ \\text{Pr}( Y=1|X=1, C=c) - \\\\ &amp; \\;\\;\\;\\;\\; \\text{Pr}( Y=1|X=1, C=c) \\}\\text{Pr}(C=c) \\end{aligned} \\] 110.3.2 Marginal causal log risk ratio \\[ \\begin{aligned} &amp; \\log[\\text{Pr}\\{ Y(1) = 1 \\}] - \\log[\\text{Pr}\\{ Y(0) =1 \\}] \\\\ &amp; = \\log[\\sum_c\\text{Pr}(Y = 1|X=1, C=c)\\text{Pr}(C=c)] \\\\ &amp; \\;\\;\\;\\; - \\log[\\sum_c\\text{Pr}(Y = 1|X=0, C=c)\\text{Pr}(C=c)] \\\\ \\end{aligned} \\] ### Marginal causal log odds ratio (cannot be calculated) \\[ \\begin{aligned} &amp; \\log[\\frac{\\text{Pr}\\{Y(1) = 1\\}}{1-\\text{Pr}\\{Y(1) = 1\\}}] - \\log[\\frac{\\text{Pr}\\{Y(0) = 1\\}}{1-\\text{Pr}\\{Y(0) = 1\\}}] \\\\ &amp; = \\log\\{ \\frac{\\sum_c\\text{Pr}(Y = 1|X=1, C=c)\\text{Pr}(C=c)}{1-\\sum_c\\text{Pr}(Y = 1|X=1, C=c)\\text{Pr}(C=c)} \\} \\\\ &amp; \\;\\;\\;\\; - \\log\\{ \\frac{\\sum_c\\text{Pr}(Y = 1|X=0, C=c)\\text{Pr}(C=c)}{1-\\sum_c\\text{Pr}(Y = 1|X=0, C=c)\\text{Pr}(C=c)} \\} \\end{aligned} \\] 110.4 通過邏輯回歸估計這些被估計量 Log_lbw &lt;- glm(lbweight ~ as.factor(mbsmoke) + mage + as.factor(fbaby) + as.factor(prenatal), family = binomial(link = &quot;logit&quot;), data = cattaneo2) summary(Log_lbw) ## ## Call: ## glm(formula = lbweight ~ as.factor(mbsmoke) + mage + as.factor(fbaby) + ## as.factor(prenatal), family = binomial(link = &quot;logit&quot;), data = cattaneo2) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.15417 -0.33142 -0.30949 -0.29641 2.60453 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.470282 0.402678 -1.1679 0.24285 ## as.factor(mbsmoke)1 0.775782 0.137371 5.6474 1.629e-08 *** ## mage -0.021202 0.012607 -1.6817 0.09263 . ## as.factor(fbaby)1 -0.088391 0.136386 -0.6481 0.51692 ## as.factor(prenatal)1 -1.950799 0.274350 -7.1106 1.155e-12 *** ## as.factor(prenatal)2 -1.912776 0.299804 -6.3801 1.770e-10 *** ## as.factor(prenatal)3 -2.101474 0.430343 -4.8833 1.043e-06 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 2115.30 on 4641 degrees of freedom ## Residual deviance: 2026.64 on 4635 degrees of freedom ## AIC: 2040.64 ## ## Number of Fisher Scoring iterations: 5 但是，在邏輯回歸的模型下，即使是滿足無互相幹擾，一致性和條件可置換性的前提，並且你就算是 100% 自信地認爲你的模型絕對正確，計算獲得的條件比值比 (conditional odds ratio) 總也無法被賦予因果關系的含義。這是由於邏輯回歸的不可壓縮性 (non-collapsiblity)，這也是越來越多的人傾向與不使用比值比作爲評價治療效果 (treatment effect) 的指標的原因之一。 也因此，STATA 裏的 teffects ra 中即使你用的結果模型中加入 logit 的選項，它計算的是因果平均危險度差 (Marginal causal risk difference (ACE))。 ## ## . use &quot;../backupfiles/cattaneo2.d(Excerpt from Cattaneo (2010) Journal of Econometrics 155: 138-154) ## ## . teffects ra (lbweight mage i.fbaby i.prenatal, logit) (mbsmoke) ## ## Iteration 0: EE criterion = 2.950e-26 ## Iteration 1: EE criterion = 2.742e-34 ## ## Treatment-effects estimation Number of obs = 4,642 ## Estimator : regression adjustment ## Outcome model : logit ## Treatment model: none ## ------------------------------------------------------------------------------ ## | Robust ## lbweight | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## ATE | ## mbsmoke | ## (smoker | ## vs | ## nonsmoker) | .0583827 .0117242 4.98 0.000 .0354036 .0813617 ## -------------+---------------------------------------------------------------- ## POmean | ## mbsmoke | ## nonsmoker | .0503207 .0036151 13.92 0.000 .0432353 .0574061 ## ------------------------------------------------------------------------------ ## ## . 110.5 Average causal/treatment effect in the exposed/treated (ATET) 這是爲了回答公共衛生學上一個抽象的政策性問題: 對那些真的接受了治療/暴露/衛生政策幹預的人來說，他們身上發生的治療效果是怎樣的？因爲有些情況下你無法讓”所有人”都接受治療或幹預。 It is often of public health interest to ask “what is the effect of this exposure on those who choose to take it?” rather than “what would be its effect on everyone?” \\[ E\\{ Y(1) - Y(0) | X=1 \\} \\] 此時，條件可置換性的前提發生了微妙變化: \\[ Y(0) \\perp\\!\\!\\!\\perp X|\\mathbf{C} \\] 對於一個簡單的分類型條件變量 \\(C\\) 來說，它的 ATET 的鑑定過程如下: \\[ \\begin{aligned} E\\{ Y(1) -Y(0) |X =1 \\} = &amp; \\sum_cE\\{ Y(1) |X=1, C=c \\}\\text{Pr}(C=c|X=1) \\\\ &amp; - \\sum_cE\\{ Y(0) |X=1, C=c \\}\\text{Pr}(C=c|X=1) \\\\ &amp; \\text{(by the law of total probability } \\uparrow) \\\\ = &amp; \\sum_cE\\{ Y(1) |X=1, C=c \\}\\text{Pr}(C=c|X=1) \\\\ &amp; - \\sum_cE\\{ Y(0) |X=0, C=c \\}\\text{Pr}(C=c|X=1) \\\\ &amp; \\text{(by conditional exchangeability } \\uparrow) \\\\ = &amp;\\sum_cE (Y |X=1, C=c)\\text{Pr}(C=c|X=1) \\\\ &amp; - \\sum_cE(Y |X=0, C=c)\\text{Pr}(C=c|X=1) \\\\ &amp; \\text{(by consistency } \\uparrow) \\\\ = &amp; \\sum_c\\{ E (Y |X=1, C=c) \\\\ &amp; \\;\\;\\;- E(Y |X=0, C=c) \\}\\text{Pr}(C=c|X=1) \\end{aligned} \\] 這時，我們只關心那些真正暴露的人 (predicted potential outcomes are predicted only for the exposed)。 在 STATA 的 teffects ra 後面加上 atet 的選項即可: teffects ra (lbweight mage i.fbaby i.prenatal, logit) (mbsmoke), atet ## ## . use &quot;../backupfiles/cattaneo2.d(Excerpt from Cattaneo (2010) Journal of Econometrics 155: 138-154) ## ## . teffects ra (lbweight mage i.fbaby i.prenatal, logit) (mbsmoke), atet ## ## Iteration 0: EE criterion = 2.950e-26 ## Iteration 1: EE criterion = 1.167e-34 ## ## Treatment-effects estimation Number of obs = 4,642 ## Estimator : regression adjustment ## Outcome model : logit ## Treatment model: none ## ------------------------------------------------------------------------------ ## | Robust ## lbweight | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## ATET | ## mbsmoke | ## (smoker | ## vs | ## nonsmoker) | .0537169 .0114307 4.70 0.000 .0313131 .0761206 ## -------------+---------------------------------------------------------------- ## POmean | ## mbsmoke | ## nonsmoker | .0562368 .0045959 12.24 0.000 .047229 .0652447 ## ------------------------------------------------------------------------------ ## ## . 這裏你看到的是 ATET 和 ACE 很接近的數字，還有別的情況下，你會發現，某種治療方案對於接受治療的人來說是有好處的，但是對其他人是有害/沒有用的。 110.6 Practical04 - causal inference 注意: 這裏的練習使用的是 STATA 因爲，我在 R 裏找不到像 STATA 的 teffects 這樣靈活且方便的命令，如果你知道，歡迎告訴我: abelardccwang@gmail.com。 數據來自一個觀察性研究，樣本量是 3551 的一個肺癌患者數據庫，四家醫院的肺癌患者正準備選用 1) 常規手術 或者 2) 射頻消蝕 (radiofrequency ablation, RFA) 兩種方法取出肺部的轉移腫塊。該數據的變量如下: ## ## . use &quot;../backupfiles/RFA.dt. describe ## ## Contains data from ../backupfiles/RFA.dta ## obs: 3,551 ## vars: 14 5 Nov 2013 15:05 ## ------------------------------------------------------------------------------- ## storage display value ## variable name type format label variable label ## ------------------------------------------------------------------------------- ## id float %9.0g Patient ID ## age float %9.0g ## gender float %9.0g gender ## smoke float %9.0g smoke Smoking status ## hospital float %9.0g Hospital ID ## nodules float %9.0g Number of nodules ## mets float %9.0g Number of other metastatic sites ## duration float %9.0g Duration of disease (in months) ## maxdia float %9.0g Diameter of largest nodule (in ## cm) ## primary float %22.0g primary Location of primary cancer ## position float %9.0g position Ease with which nodules can be ## reached ## coag float %9.0g coag Coagulopathy ## rfa float %23.0g rfa Treatment variable: RFA or ## standard surgery ## dodp float %9.0g dodp Outcome variable: death or ## disease progression within 36 ## months ## ------------------------------------------------------------------------------- ## Sorted by: id ## ## . 其中，主要的混雜因子是: hospital: 有些醫院可能本身更傾向於/不傾向於使用 RFA，或者有些醫院的患者整體症狀較輕/較重; maxdia: 如果腫塊太大，那就不適合使用 RFA，而且腫塊較大的患者，生存的概率一般來說比較低; position: 腫塊位置，相比較傳統常規手術摘除的方法，RFA 能夠治療那些手術難以摘除的腫塊的部位。 這三個主要的變量被認爲非常重要，需要在分析中被調整。 其他的變量被認爲不太會是混雜因子，但是醫生認爲對患者的預後有很強的預測效果: age, gender, smoke, nodules, mets, duration, primary。 最後一點，對於有凝血障礙的患者 coag 來說，RFA 是不安全的。 110.6.1 在STATA裡打開數據，初步分析和熟悉數據 ## ## . use &quot;../backupfiles/RFA.dt. ## . summarize age ## ## Variable | Obs Mean Std. Dev. Min Max ## -------------+--------------------------------------------------------- ## age | 3,551 51.99944 4.379916 33 84 ## ## . ## . tab gender ## ## gender | Freq. Percent Cum. ## ------------+----------------------------------- ## male | 2,124 59.81 59.81 ## female | 1,427 40.19 100.00 ## ------------+----------------------------------- ## Total | 3,551 100.00 ## ## . ## . tab hospital ## ## Hospital ID | Freq. Percent Cum. ## ------------+----------------------------------- ## 1 | 570 16.05 16.05 ## 2 | 631 17.77 33.82 ## 3 | 1,395 39.28 73.11 ## 4 | 955 26.89 100.00 ## ------------+----------------------------------- ## Total | 3,551 100.00 ## ## . ## . summarize maxdia ## ## Variable | Obs Mean Std. Dev. Min Max ## -------------+--------------------------------------------------------- ## maxdia | 3,551 1.816981 .5713256 .7 4 ## ## . ## . tab position ## ## Ease with | ## which | ## nodules can | ## be reached | Freq. Percent Cum. ## ------------+----------------------------------- ## easy | 857 24.13 24.13 ## moderate | 1,820 51.25 75.39 ## difficult | 874 24.61 100.00 ## ------------+----------------------------------- ## Total | 3,551 100.00 ## ## . ## . tab dodp ## ## Outcome | ## variable: | ## death or | ## disease | ## progression | ## within 36 | ## months | Freq. Percent Cum. ## ------------+----------------------------------- ## no | 2,604 73.33 73.33 ## yes | 947 26.67 100.00 ## ------------+----------------------------------- ## Total | 3,551 100.00 ## ## . 110.6.2 用標準邏輯回歸模型分析 rfa (暴露) 和 dodp (結果) 之間的關係 ## ## . use &quot;../backupfiles/RFA.dt. ## . *(a) ## ## . logit dodp rfa ## ## Iteration 0: log likelihood = -2059.3462 ## Iteration 1: log likelihood = -2030.2625 ## Iteration 2: log likelihood = -2030.123 ## Iteration 3: log likelihood = -2030.123 ## ## Logistic regression Number of obs = 3,551 ## LR chi2(1) = 58.45 ## Prob &gt; chi2 = 0.0000 ## Log likelihood = -2030.123 Pseudo R2 = 0.0142 ## ## ------------------------------------------------------------------------------ ## dodp | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## rfa | -.5881255 .0777773 -7.56 0.000 -.7405661 -.4356849 ## _cons | -.7496965 .0498312 -15.04 0.000 -.8473639 -.652029 ## ------------------------------------------------------------------------------ ## ## . ## . *(b) ## ## . logit dodp rfa i.hospital maxdia i.position ## ## Iteration 0: log likelihood = -2059.3462 ## Iteration 1: log likelihood = -1782.1086 ## Iteration 2: log likelihood = -1770.8713 ## Iteration 3: log likelihood = -1770.8481 ## Iteration 4: log likelihood = -1770.8481 ## ## Logistic regression Number of obs = 3,551 ## LR chi2(7) = 577.00 ## Prob &gt; chi2 = 0.0000 ## Log likelihood = -1770.8481 Pseudo R2 = 0.1401 ## ## ------------------------------------------------------------------------------ ## dodp | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## rfa | -.0215334 .0976595 -0.22 0.825 -.2129425 .1698757 ## | ## hospital | ## 2 | -.1087261 .147873 -0.74 0.462 -.3985519 .1810998 ## 3 | .4063856 .1222275 3.32 0.001 .1668242 .645947 ## 4 | -.1398633 .1340884 -1.04 0.297 -.4026717 .1229451 ## | ## maxdia | 1.426368 .0891745 16.00 0.000 1.251589 1.601147 ## | ## position | ## moderate | .072014 .1096704 0.66 0.511 -.142936 .286964 ## difficult | 1.226249 .1191946 10.29 0.000 .9926321 1.459866 ## | ## _cons | -4.234223 .2365292 -17.90 0.000 -4.697812 -3.770634 ## ------------------------------------------------------------------------------ ## ## . 110.6.3 比較上面(a)和(b)兩個邏輯回歸模型的結果，你認為混雜因素對暴露和結果的關係的影響是怎樣的？ 總體來說，混雜的模式 (pattern) 應該是正混雜 (positive confounding)。模型 (a)，不經過任何調整，RFA 似乎比標準手術療法好很多 (幾乎減少一半三年內死亡的對數比值 log-odds)。但是調整了其他混雜因素的模型 (b)，結果暗示兩者之間對於患者預後沒有太大的影響 (treatment effect reduced to suggest very little evidence to departure from no effect)。所以調整的這些變量對暴露和結果之間的關係的混雜是正向的(傾向於把關係改變成為接近另假設 tend to change the association to null)。 110.6.4 在怎樣的前提假設條件下，上面模型 (b) 可以被賦予因果關係的解釋？ 這些假設包括： 無相互幹擾 no interference：某個病人接受的療法，不影響另一個病人療法的結果。 一致性 consistency：對於真的接受了 RFA 療法的病人來說，他/她的療效，和潛在暴露 (potential exposure) 為接受 RFA 療法時的潛在療效 (potential outcome) 是一致的。接受標準手術療法的患者中也是需要一樣的假設。 條件可置換性 conditional exchangeability：對於同一所醫院，腫塊大小相同，腫塊位置相同的患者來說，他/她的兩種潛在治療結果 (potential outcome)，和該病人最終到底是接受了常規手術治療，還是接受 RFA 之間是相互獨立的。用更通俗的話說是，暴露變量 rfa 和結果變量 dodp 之間的所有可能的混雜，都被模型中加入的 hospital, maxdia, position 囊括進去了。 正確的模型結構 correct specification of the model：因為模型 (b) 中不包括任何交互作用的相乘項，要給這個模型擬合的回歸係數以因果關係的解釋，我們需要認為模型中的變量之間沒有任何較互作用，也就是說rfa的療效，不因為醫院，腫塊位置，和腫塊大小不同而不同。 110.6.5 在前面提出的所有前提假設都滿足的情況下，請給模型 (b) 的回歸係數賦予一個因果效應的解釋。 當四個前提假設都可以滿足，模型 (b) 的rfa的回歸係數 -0.022 是一個條件對數比值比 (conditional log-odds ratio)。該條件對數比值比調整了醫院，腫瘤大小，和腫瘤位置。患者在三年內死亡或者疾病加重的對數比值 (log odds) 被估計為 0.022 (95% CI: -0.17, 0.21)。這個對數比值比較的是，情形 A.所有患者都被實施 RFA 手術，和情形 B. 所有患者都被實施常規手術摘除腫塊，兩種潛在情形的潛在結果。用潛在結果的數學語言來解釋就是： \\[ \\log\\{ \\frac{\\text{Pr}[Y(1) = 1|\\mathbf{C = c}]}{1-\\text{Pr}[Y(1) = 1|\\mathbf{C = c}]} \\} - \\log\\{ \\frac{\\text{Pr}[Y(0) = 1|\\mathbf{C = c}]}{1-\\text{Pr}[Y(0) = 1|\\mathbf{C = c}]} \\} \\] 其中，\\(\\mathbf{C}=\\) {hospital, maxdia, position} 110.6.6 用 STATA 的 teffects ra 擬合上面兩個模型 ## ## . use &quot;../backupfiles/RFA.dt. ## . *(a) ## ## . teffects ra (dodp, logit) (rfa) ## ## Iteration 0: EE criterion = 5.296e-17 ## Iteration 1: EE criterion = 6.380e-32 ## ## Treatment-effects estimation Number of obs = 3,551 ## Estimator : regression adjustment ## Outcome model : logit ## Treatment model: none ## ------------------------------------------------------------------------------ ## | Robust ## dodp | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## ATE | ## rfa | ## (radiofre.. | ## vs | ## standard..) | -.113019 .0146495 -7.71 0.000 -.1417316 -.0843064 ## -------------+---------------------------------------------------------------- ## POmean | ## rfa | ## standard .. | .3208874 .0108592 29.55 0.000 .2996039 .342171 ## ------------------------------------------------------------------------------ ## ## . ## . *(b) ## ## . teffects ra (dodp i.hospital maxdia i.position, logit) (rfa) ## ## Iteration 0: EE criterion = 6.343e-18 ## Iteration 1: EE criterion = 9.535e-33 ## ## Treatment-effects estimation Number of obs = 3,551 ## Estimator : regression adjustment ## Outcome model : logit ## Treatment model: none ## ------------------------------------------------------------------------------ ## | Robust ## dodp | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## ATE | ## rfa | ## (radiofre.. | ## vs | ## standard..) | .0261149 .0164826 1.58 0.113 -.0061903 .0584201 ## -------------+---------------------------------------------------------------- ## POmean | ## rfa | ## standard .. | .290968 .0110295 26.38 0.000 .2693506 .3125854 ## ------------------------------------------------------------------------------ ## ## . 110.6.7 在怎樣的假設前提條件下，前一步擬合的模型 (b) 結果中的 ATE 可以被賦予因果關係的解釋？ 這些假設包括： 無相互幹擾 no interference，解釋同前。 一致性 consistency，解釋同前。 條件可置換性 conditional exchangeability，解釋同前。 正確的模型結構 correct specification of the mode：調整了醫院，腫塊大小，和腫塊位置以後，患者的死亡或者疾病加重的對數比值 (log odds of death or diseae progression) 和腫塊大小，醫院，腫塊位置不再有任何依賴性(independent)，但是接受 RFA 療法和常規手術療法之間的療效差，被允許在不同的醫院，腫塊大小，以及腫塊位置的不同而有所不同。 110.6.8 前一問和你擬合完簡單的邏輯回歸之後做的模型假設的回答，有什麼不同？ 用 STATA 的 teffects ra 命令的時候，我們允許了療效差在不同的醫院，不同腫塊的大小，和不同腫塊的位置之間有所不同。The effect of treatment is allowed to differ nby hospital, position of the nodule and its diameter. 這種不同在擬合簡單邏輯回歸模型時是被忽略掉的。 110.6.9 用因果關係語言解釋 teffects ra 擬合的模型 (b) 的結果 模型 (b) 擬合的結果是邊際因果危險度差 (marginal causal risk difference)。情形 A. 所有患者都被實施 RFA 療法，和情形 B. 所有患者都被實施常規手術療法相比，患者中三年內死亡或者病情加重的比例 (proportion) 被估計要高出 0.026 (95%CI: -0.01, 0.06): \\[ E\\{ Y(1) \\} - E\\{ Y(0) \\} \\] 110.6.10 如果模型中加入 age, gender, smoke, nodules, mets, duration, primary 等和預後相關但是和決定療法並不太有關係的變量，結果會有什麼不同呢？ ## ## . use &quot;../backupfiles/RFA.dt. ## . teffects ra (dodp age gender i.smoke i.hospital nodules mets duration /// ## invalid something: unmatched open parenthesis or bracket ## ## r(198); ## ## . maxdia i.primary i.position, logit) (rfa) ## command maxdia is unrecognized ## r(199); ## ## . ## . ACE 的估計結果沒有發生非常劇烈的變化，但是，它的標準誤被大大降低了，有效地提高了療效估計的精確度。而且此時的結果已經提示平均因果危險度差是有統計學意義的 (p = 0.006)。這時候，對於整體患者來說，如果全部實施了 RFA，那麼和全部實施標準手術療法相比較會有略差的結果，這個相差是有統計學意義的。 110.6.11 如果再向模型中加入和暴露變量相關，和預後沒什麼關係的變量 coag，結果該怎麼解讀？ ## ## . use &quot;../backupfiles/RFA.dt. teffects ra (dodp age gender i.smoke i.hospital nodules mets duration /// ## invalid something: unmatched open parenthesis or bracket ## ## r(198); ## ## . maxdia i.primary i.position coag, logit) (rfa) ## command maxdia is unrecognized ## r(199); ## ## . ACE 的估計量的標準誤因為調整了只和暴露變量相關的變量 coag 變得比之前大了一些。但是此時的結果依然提示全部實施 RFA 療法的話結果會比全部實施常規手術治療要差。這裡應該考慮的是，因為 coag 本身不是暴露和結果變量之間的混雜因子，我們本不該調整這個變量，一旦調整了只和暴露變量相關的變量，我們反而會降低療效估計的精確度，所以不是說模型中想加多少變量就加多少變量的。(Violation of positivity) 另外，已經有證據證明模型中調整了和暴露相關，但是並不是混雜因子的變量會嚴重增加估計量的偏倚 (Pearl 2011)。 110.6.12 使用 atet 的選項重新擬合上面的因果效應模型，解釋結果發生的變化，並作出相應的結論。 ## ## . use &quot;../backupfiles/RFA.dt. ## . ## . teffects ra (dodp, logit) (rfa), atet ## ## Iteration 0: EE criterion = 5.296e-17 ## Iteration 1: EE criterion = 2.524e-32 ## ## Treatment-effects estimation Number of obs = 3,551 ## Estimator : regression adjustment ## Outcome model : logit ## Treatment model: none ## ------------------------------------------------------------------------------ ## | Robust ## dodp | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## ATET | ## rfa | ## (radiofre.. | ## vs | ## standard..) | -.113019 .0146495 -7.71 0.000 -.1417316 -.0843064 ## -------------+---------------------------------------------------------------- ## POmean | ## rfa | ## standard .. | .3208874 .0108592 29.55 0.000 .2996039 .342171 ## ------------------------------------------------------------------------------ ## ## . ## . teffects ra (dodp i.hospital maxdia i.position, logit) (rfa), atet ## ## Iteration 0: EE criterion = 6.343e-18 ## Iteration 1: EE criterion = 6.099e-33 ## ## Treatment-effects estimation Number of obs = 3,551 ## Estimator : regression adjustment ## Outcome model : logit ## Treatment model: none ## ------------------------------------------------------------------------------ ## | Robust ## dodp | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## ATET | ## rfa | ## (radiofre.. | ## vs | ## standard..) | -.0506326 .0164035 -3.09 0.002 -.0827828 -.0184824 ## -------------+---------------------------------------------------------------- ## POmean | ## rfa | ## standard .. | .2585011 .0141292 18.30 0.000 .2308084 .2861938 ## ------------------------------------------------------------------------------ ## ## . ## . teffects ra (dodp age gender i.smoke i.hospital nodules mets duration /// ## invalid something: unmatched open parenthesis or bracket ## ## r(198); ## ## . maxdia i.primary i.position, logit) (rfa), atet ## command maxdia is unrecognized ## r(199); ## ## . ## . ## . ## . teffects ra (dodp age gender i.smoke i.hospital nodules mets duration /// ## invalid something: unmatched open parenthesis or bracket ## ## r(198); ## ## . maxdia i.primary i.position coag, logit) (rfa), atet ## command maxdia is unrecognized ## r(199); ## ## . 模型的最後加了 atet 之後最大的不同是導致結果分析的結論完全改變了。這時候 RFA 的療效反而變得有利起來。每個模型都給出了小於零的治療組因果危險度差 (causal risk difference in the treated)。這主要是因為接受 RFA療法和常規手術治療的兩類患者本身有太大的不同 (strong effect heterogeneity)。因為患者如果腫塊尺寸小， RFA 可以給出很好的預後，如果腫塊的位置太難找無法使用標準療法的時候又只能選用RFA。這些都是決定醫生最終給患者使用哪種療法的重要參考因素。所以如果 ATT 是小於零的，意味著，在那些(被)選擇了 RFA療法的患者中，療效是良好的，可以有效的減少三年內死亡和病情加重的概率。 另外值得一提的是，這裡調整了 coag 對ATT 估計的影響較小。這主要是因為，如果一個患者有凝血功能障礙，他/她就不可能接受 RFA 療法: ## ## . use &quot;../backupfiles/RFA.dt. tab coag rfa, col chi ## ## +-------------------+ ## | Key | ## |-------------------| ## | frequency | ## | column percentage | ## +-------------------+ ## ## | Treatment variable: ## | RFA or standard ## Coagulopat | surgery ## hy | standard radiofreq | Total ## -----------+----------------------+---------- ## no | 1,466 1,701 | 3,167 ## | 79.33 99.88 | 89.19 ## -----------+----------------------+---------- ## yes | 382 2 | 384 ## | 20.67 0.12 | 10.81 ## -----------+----------------------+---------- ## Total | 1,848 1,703 | 3,551 ## | 100.00 100.00 | 100.00 ## ## Pearson chi2(1) = 388.2057 Pr = 0.000 ## ## . 但是一個患者如果沒有凝血功能障礙，那麼他/她接受哪種療法就變得不受 coag 的影響。而此時我們使用 etat 估算的是所有接受 RFA 療法的患者中的療效。這裡受到模型變量共線性影響就較小。 References "],["prop-score.html", "第 111 章 Prospensity Score 傾向性評分 111.1 Practical05 - causal inference", " 第 111 章 Prospensity Score 傾向性評分 111.1 Practical05 - causal inference 數據還是和前一章節一樣的數據。傾向性評分的 R 包有很多，下面用 R 來進行大多數的計算。 111.1.1 初步熟悉數據內容 ## ## . use &quot;../backupfiles/RFAcat.dt. describe ## ## Contains data from ../backupfiles/RFAcat.dta ## obs: 3,551 ## vars: 18 5 Nov 2013 15:05 ## ------------------------------------------------------------------------------- ## storage display value ## variable name type format label variable label ## ------------------------------------------------------------------------------- ## id float %9.0g Patient ID ## age float %9.0g ## gender float %9.0g gender ## smoke float %9.0g smoke Smoking status ## hospital float %9.0g Hospital ID ## nodules float %9.0g Number of nodules ## mets float %9.0g Number of other metastatic sites ## duration float %9.0g Duration of disease (in months) ## maxdia float %9.0g Diameter of largest nodule (in ## cm) ## primary float %22.0g primary Location of primary cancer ## position float %9.0g position Ease with which nodules can be ## reached ## coag float %9.0g coag Coagulopathy ## rfa float %23.0g rfa Treatment variable: RFA or ## standard surgery ## dodp float %9.0g dodp Outcome variable: death or ## disease progression within 36 ## months ## agecat float %9.0g agecat Age in categories ## nodcat float %9.0g nodcat Number of nodules in categories ## durcat float %12.0g durcat Duration of disease in categories ## diacat float %9.0g diacat Diameter of largest nodule in ## categories ## ------------------------------------------------------------------------------- ## Sorted by: id ## ## . ## . ********************** ## ## . * Explore the data * ## ## . ********************** ## ## . ## . /* Question 1 */ ## / is not a valid command name ## r(199); ## ## . * Exposure and outcome ## ## . tab rfa ## ## Treatment variable: RFA | ## or standard surgery | Freq. Percent Cum. ## ------------------------+----------------------------------- ## standard surgery | 1,848 52.04 52.04 ## radiofrequency ablation | 1,703 47.96 100.00 ## ------------------------+----------------------------------- ## Total | 3,551 100.00 ## ## . tab dodp rfa, col ## ## +-------------------+ ## | Key | ## |-------------------| ## | frequency | ## | column percentage | ## +-------------------+ ## ## Outcome | ## variable: | ## death or | ## disease | Treatment variable: ## progressio | RFA or standard ## n within | surgery ## 36 months | standard radiofreq | Total ## -----------+----------------------+---------- ## no | 1,255 1,349 | 2,604 ## | 67.91 79.21 | 73.33 ## -----------+----------------------+---------- ## yes | 593 354 | 947 ## | 32.09 20.79 | 26.67 ## -----------+----------------------+---------- ## Total | 1,848 1,703 | 3,551 ## | 100.00 100.00 | 100.00 ## ## . ## . * New (categorised) variables: ## ## . tab1 agecat nodcat durcat diacat, m ## ## -&gt; tabulation of agecat ## ## Age in | ## categories | Freq. Percent Cum. ## ------------+----------------------------------- ## &lt;45 | 96 2.70 2.70 ## 45-49 | 860 24.22 26.92 ## 50-54 | 1,755 49.42 76.34 ## 55-59 | 662 18.64 94.99 ## 60-64 | 135 3.80 98.79 ## 65+ | 43 1.21 100.00 ## ------------+----------------------------------- ## Total | 3,551 100.00 ## ## -&gt; tabulation of nodcat ## ## Number of | ## nodules in | ## categories | Freq. Percent Cum. ## ------------+----------------------------------- ## 1 | 997 28.08 28.08 ## 2 | 1,350 38.02 66.09 ## 3 | 635 17.88 83.98 ## 4 | 204 5.74 89.72 ## 5-9 | 304 8.56 98.28 ## 10+ | 61 1.72 100.00 ## ------------+----------------------------------- ## Total | 3,551 100.00 ## ## -&gt; tabulation of durcat ## ## Duration of | ## disease in | ## categories | Freq. Percent Cum. ## -------------+----------------------------------- ## &lt;10 months | 53 1.49 1.49 ## 10-19 months | 1,437 40.47 41.96 ## 20-29 months | 1,528 43.03 84.99 ## 30-39 months | 397 11.18 96.17 ## 40+ months | 136 3.83 100.00 ## -------------+----------------------------------- ## Total | 3,551 100.00 ## ## -&gt; tabulation of diacat ## ## Diameter of | ## largest | ## nodule in | ## categories | Freq. Percent Cum. ## ------------+----------------------------------- ## &lt;1.5 cm | 967 27.23 27.23 ## 1.5-1.9cm | 1,147 32.30 59.53 ## 2-2.4cm | 940 26.47 86.00 ## 2.5-2.9cm | 403 11.35 97.35 ## 3cm+ | 94 2.65 100.00 ## ------------+----------------------------------- ## Total | 3,551 100.00 ## ## . ## . 111.1.2 把連續型變量以分類型數據的形式放入模型中: *************************** * Regression adjustment * *************************** /* Question 2 */ // teffects ra (dodp i.agecat gender i.smoke i.hospital i.nodcat /// // i.mets i.durcat i.diacat i.primary i.position, /// // logit) (rfa) 你會發現 STATA 停不下來，計算永遠都不會收斂。這是因爲我們在這個模型中結果部分加入了太多的分類型變量，但數據又沒辦法進行足夠的計算。 111.1.3 用相同的模型結構估計每個人的傾向性評分 RFAcat &lt;- read_dta(&quot;../backupfiles/RFAcat.dta&quot;) RFAcat &lt;- RFAcat %&gt;% mutate(gender = factor(gender, labels = c(&quot;men&quot;, &quot;women&quot;)), smoke = factor(smoke, labels = c(&quot;never&quot;, &quot;ex&quot;, &quot;current&quot;)), hospital = as.factor(hospital), primary = factor(primary, labels = c(&quot;bladder&quot;, &quot;breast&quot;, &quot;colorectal&quot;, &quot;gullet&quot;, &quot;kidney&quot;, &quot;prostate&quot;, &quot;skin&quot;, &quot;stomach&quot;, &quot;testicular&quot;)), position = factor(position, labels = c(&quot;easy&quot;, &quot;moderate&quot;, &quot;difficult&quot;)), nodcat = factor(nodcat, labels = c(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5-9&quot;,&quot;10+&quot;)), mets = as.factor(mets), agecat = factor(agecat, labels = c(&quot;&lt; 45&quot;, &quot;45-49&quot;, &quot;50-54&quot;, &quot;55-59&quot;, &quot;60-64&quot;,&quot;65+&quot;)), durcat = factor(durcat, labels = c(&quot;&lt; 10m&quot;, &quot;10-19m&quot;, &quot;20-29m&quot;, &quot;30-39m&quot;, &quot;40+m&quot;)), diacat = factor(diacat, labels = c(&quot;&lt;1.5cm&quot;, &quot;1.5-1.9cm&quot;, &quot;2-2.4cm&quot;, &quot;2.5-2.9cm&quot;, &quot;3cm+&quot;))) Pros_Score &lt;- glm(rfa ~ agecat + gender + smoke + hospital + nodcat + mets + durcat + diacat + primary + position, family = binomial(link = logit), data = RFAcat) summary(Pros_Score) ## ## Call: ## glm(formula = rfa ~ agecat + gender + smoke + hospital + nodcat + ## mets + durcat + diacat + primary + position, family = binomial(link = logit), ## data = RFAcat) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.45628 -0.90333 -0.26702 0.90927 2.67426 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.243514 0.505730 0.4815 0.630154 ## agecat45-49 0.090044 0.261908 0.3438 0.730996 ## agecat50-54 0.107064 0.255438 0.4191 0.675115 ## agecat55-59 -0.040906 0.269042 -0.1520 0.879154 ## agecat60-64 0.074712 0.327138 0.2284 0.819351 ## agecat65+ 0.398326 0.431966 0.9221 0.356464 ## genderwomen 0.083521 0.151596 0.5509 0.581673 ## smokeex 0.117319 0.150316 0.7805 0.435105 ## smokecurrent 0.144515 0.104757 1.3795 0.167732 ## hospital2 -0.190892 0.140877 -1.3550 0.175407 ## hospital3 0.345035 0.138004 2.5002 0.012413 * ## hospital4 -0.094451 0.191935 -0.4921 0.622648 ## nodcat2 -0.085830 0.097834 -0.8773 0.380324 ## nodcat3 -0.012021 0.118491 -0.1014 0.919195 ## nodcat4 0.143596 0.182086 0.7886 0.430336 ## nodcat5-9 -0.482427 0.156551 -3.0816 0.002059 ** ## nodcat10+ 0.043502 0.299620 0.1452 0.884561 ## mets1 0.100543 0.099312 1.0124 0.311349 ## mets2 0.139866 0.105583 1.3247 0.185272 ## mets3 -0.091375 0.296308 -0.3084 0.757795 ## durcat10-19m 0.038115 0.342352 0.1113 0.911352 ## durcat20-29m -0.009245 0.341993 -0.0270 0.978434 ## durcat30-39m 0.127019 0.356684 0.3561 0.721758 ## durcat40+m 0.159252 0.394089 0.4041 0.686138 ## diacat1.5-1.9cm -1.053938 0.100734 -10.4626 &lt; 2.2e-16 *** ## diacat2-2.4cm -2.223150 0.109874 -20.2337 &lt; 2.2e-16 *** ## diacat2.5-2.9cm -3.781319 0.199920 -18.9142 &lt; 2.2e-16 *** ## diacat3cm+ -4.216794 0.470139 -8.9693 &lt; 2.2e-16 *** ## primarybreast 0.070017 0.288955 0.2423 0.808540 ## primarycolorectal 0.087730 0.292264 0.3002 0.764044 ## primarygullet -0.091053 0.378701 -0.2404 0.809993 ## primarykidney -0.269296 0.377865 -0.7127 0.476046 ## primaryprostate -0.027718 0.344383 -0.0805 0.935850 ## primaryskin 1.557764 0.670168 2.3244 0.020102 * ## primarystomach 0.134603 0.380885 0.3534 0.723792 ## primarytesticular 0.304981 0.403875 0.7551 0.450167 ## positionmoderate 0.891048 0.099587 8.9474 &lt; 2.2e-16 *** ## positiondifficult 1.178730 0.116364 10.1296 &lt; 2.2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 4916.81 on 3550 degrees of freedom ## Residual deviance: 3852.35 on 3513 degrees of freedom ## AIC: 3928.35 ## ## Number of Fisher Scoring iterations: 5 RFAcat$Score &lt;- Pros_Score$fitted.values # extract the fitted scores ggthemr(&#39;fresh&#39;, layout = &#39;scientific&#39;) RFAcat %&gt;% ggplot(aes(x = Score, y= ..density.., fill = as.factor(rfa))) + geom_histogram(position = &quot;identity&quot;, color = &quot;black&quot;, alpha = 0.5) + geom_density(alpha = 0.2) + theme(axis.title = element_text(size = 17), axis.text = element_text(size = 14), axis.line = element_line(colour = &quot;black&quot;), panel.border = element_blank(), panel.background = element_blank()) + theme(legend.text = element_text(size = 19), legend.title = element_text(size = 19), legend.position = &quot;bottom&quot;, legend.direction = &quot;horizontal&quot;) + labs(fill = &quot;Treatment Methods&quot;) + scale_fill_discrete(labels = c(&quot;Standard surgery&quot;, &quot;RFA&quot;)); ggthemr_reset() 圖 111.1: Density and histogram of the estimated propensity score in the two exposure groups, with confounders and predictors of outcome included in the PS model. 概率密度分布圖和直方圖的內容告訴我們兩個暴露組患者的評分分布的交叉部分十分令人滿意，positivity 的前提假設可認爲得到滿足 (每個患者都有非零的概率接受 RFA 或者標準手術療法)。 一種比較組與組之間不同量的指標: standardized (mean) difference (Austin 2011)，可以用下面的方法來計算，使用 tableone 這個方便的 R 包: # covariates Cov &lt;- c(&quot;agecat&quot;, &quot;gender&quot;, &quot;smoke&quot;, &quot;hospital&quot;, &quot;nodcat&quot;, &quot;mets&quot;, &quot;durcat&quot;, &quot;diacat&quot;, &quot;primary&quot;, &quot;position&quot;) ## Construct a table tabUnmatched &lt;- CreateTableOne(vars = Cov, strata = &quot;rfa&quot;, data = RFAcat, test = FALSE) ## Show table with SMD print(tabUnmatched, smd = TRUE) ## Stratified by rfa ## 0 1 SMD ## n 1848 1703 ## agecat (%) 0.065 ## &lt; 45 51 ( 2.8) 45 ( 2.6) ## 45-49 463 (25.1) 397 (23.3) ## 50-54 891 (48.2) 864 (50.7) ## 55-59 352 (19.0) 310 (18.2) ## 60-64 72 ( 3.9) 63 ( 3.7) ## 65+ 19 ( 1.0) 24 ( 1.4) ## gender = women (%) 726 (39.3) 701 (41.2) 0.038 ## smoke (%) 0.031 ## never 1279 (69.2) 1157 (67.9) ## ex 135 ( 7.3) 136 ( 8.0) ## current 434 (23.5) 410 (24.1) ## hospital (%) 0.115 ## 1 308 (16.7) 262 (15.4) ## 2 349 (18.9) 282 (16.6) ## 3 677 (36.6) 718 (42.2) ## 4 514 (27.8) 441 (25.9) ## nodcat (%) 0.096 ## 1 505 (27.3) 492 (28.9) ## 2 703 (38.0) 647 (38.0) ## 3 325 (17.6) 310 (18.2) ## 4 104 ( 5.6) 100 ( 5.9) ## 5-9 181 ( 9.8) 123 ( 7.2) ## 10+ 30 ( 1.6) 31 ( 1.8) ## mets (%) 0.061 ## 0 1089 (58.9) 969 (56.9) ## 1 393 (21.3) 375 (22.0) ## 2 327 (17.7) 331 (19.4) ## 3 39 ( 2.1) 28 ( 1.6) ## durcat (%) 0.070 ## &lt; 10m 31 ( 1.7) 22 ( 1.3) ## 10-19m 731 (39.6) 706 (41.5) ## 20-29m 820 (44.4) 708 (41.6) ## 30-39m 197 (10.7) 200 (11.7) ## 40+m 69 ( 3.7) 67 ( 3.9) ## diacat (%) 1.086 ## &lt;1.5cm 222 (12.0) 745 (43.7) ## 1.5-1.9cm 507 (27.4) 640 (37.6) ## 2-2.4cm 661 (35.8) 279 (16.4) ## 2.5-2.9cm 369 (20.0) 34 ( 2.0) ## 3cm+ 89 ( 4.8) 5 ( 0.3) ## primary (%) 0.126 ## bladder 46 ( 2.5) 35 ( 2.1) ## breast 423 (22.9) 401 (23.5) ## colorectal 694 (37.6) 671 (39.4) ## gullet 75 ( 4.1) 55 ( 3.2) ## kidney 66 ( 3.6) 47 ( 2.8) ## prostate 365 (19.8) 324 (19.0) ## skin 5 ( 0.3) 17 ( 1.0) ## stomach 86 ( 4.7) 67 ( 3.9) ## testicular 88 ( 4.8) 86 ( 5.0) ## position (%) 0.332 ## easy 565 (30.6) 292 (17.1) ## moderate 899 (48.6) 921 (54.1) ## difficult 384 (20.8) 490 (28.8) ## Count covariates with important imbalance addmargins(table(ExtractSmd(tabUnmatched) &gt; 0.08)) ## ## FALSE TRUE Sum ## 5 5 10 嚴重不平衡的變量有 5 個: hospital, nodcat, diaact, primary, position。 111.1.4 用 PS 評分來把對象分層 stratification RFAcat &lt;- RFAcat %&gt;% mutate(psblock = ntile(Score, 4)) RFAcat %&gt;% group_by(psblock) %&gt;% summarise(n(), min(Score), max(Score)) ## # A tibble: 4 × 4 ## psblock `n()` `min(Score)` `max(Score)` ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 888 0.0167 0.280 ## 2 2 888 0.281 0.508 ## 3 3 888 0.508 0.695 ## 4 4 887 0.696 0.951 但是你看每層的傾向性評分其實範圍有點寬，提示使用分層的方法可能殘餘的混雜有點多。 看每層內數據的平衡: # Cov &lt;- c(&quot;diacat&quot;, &quot;position&quot;) #---------------------------------------------# # in strata == 1 # # # #---------------------------------------------# ## Construct a table tabUnmatched &lt;- CreateTableOne(vars = Cov, strata = &quot;rfa&quot;, data = RFAcat[RFAcat$psblock == 1,], test = FALSE) ## Show table with SMD print(tabUnmatched, smd = TRUE) ## Stratified by rfa ## 0 1 SMD ## n 777 111 ## agecat (%) 0.321 ## &lt; 45 27 ( 3.5) 3 ( 2.7) ## 45-49 211 (27.2) 25 (22.5) ## 50-54 334 (43.0) 59 (53.2) ## 55-59 162 (20.8) 23 (20.7) ## 60-64 37 ( 4.8) 1 ( 0.9) ## 65+ 6 ( 0.8) 0 ( 0.0) ## gender = women (%) 304 (39.1) 45 (40.5) 0.029 ## smoke (%) 0.248 ## never 533 (68.6) 88 (79.3) ## ex 56 ( 7.2) 6 ( 5.4) ## current 188 (24.2) 17 (15.3) ## hospital (%) 0.265 ## 1 135 (17.4) 10 ( 9.0) ## 2 152 (19.6) 27 (24.3) ## 3 270 (34.7) 38 (34.2) ## 4 220 (28.3) 36 (32.4) ## nodcat (%) 0.209 ## 1 201 (25.9) 24 (21.6) ## 2 293 (37.7) 47 (42.3) ## 3 119 (15.3) 17 (15.3) ## 4 41 ( 5.3) 7 ( 6.3) ## 5-9 112 (14.4) 16 (14.4) ## 10+ 11 ( 1.4) 0 ( 0.0) ## mets (%) 0.141 ## 0 463 (59.6) 70 (63.1) ## 1 154 (19.8) 24 (21.6) ## 2 138 (17.8) 15 (13.5) ## 3 22 ( 2.8) 2 ( 1.8) ## durcat (%) 0.209 ## &lt; 10m 17 ( 2.2) 3 ( 2.7) ## 10-19m 297 (38.2) 41 (36.9) ## 20-29m 356 (45.8) 54 (48.6) ## 30-39m 76 ( 9.8) 12 (10.8) ## 40+m 31 ( 4.0) 1 ( 0.9) ## diacat (%) 0.515 ## &lt;1.5cm 0 ( 0.0) 0 ( 0.0) ## 1.5-1.9cm 9 ( 1.2) 4 ( 3.6) ## 2-2.4cm 310 (39.9) 68 (61.3) ## 2.5-2.9cm 369 (47.5) 34 (30.6) ## 3cm+ 89 (11.5) 5 ( 4.5) ## primary (%) 0.279 ## bladder 23 ( 3.0) 1 ( 0.9) ## breast 180 (23.2) 25 (22.5) ## colorectal 273 (35.1) 43 (38.7) ## gullet 40 ( 5.1) 3 ( 2.7) ## kidney 34 ( 4.4) 7 ( 6.3) ## prostate 159 (20.5) 25 (22.5) ## skin 1 ( 0.1) 1 ( 0.9) ## stomach 32 ( 4.1) 3 ( 2.7) ## testicular 35 ( 4.5) 3 ( 2.7) ## position (%) 0.181 ## easy 319 (41.1) 36 (32.4) ## moderate 342 (44.0) 55 (49.5) ## difficult 116 (14.9) 20 (18.0) ## Count covariates with important imbalance addmargins(table(ExtractSmd(tabUnmatched) &gt; 0.08)) ## ## FALSE TRUE Sum ## 1 9 10 #---------------------------------------------# # in strata == 2 # # # #---------------------------------------------# ## Construct a table tabUnmatched &lt;- CreateTableOne(vars = Cov, strata = &quot;rfa&quot;, data = RFAcat[RFAcat$psblock == 2,], test = FALSE) ## Show table with SMD print(tabUnmatched, smd = TRUE) ## Stratified by rfa ## 0 1 SMD ## n 550 338 ## agecat (%) 0.114 ## &lt; 45 12 ( 2.2) 5 ( 1.5) ## 45-49 129 (23.5) 82 (24.3) ## 50-54 294 (53.5) 173 (51.2) ## 55-59 87 (15.8) 61 (18.0) ## 60-64 21 ( 3.8) 10 ( 3.0) ## 65+ 7 ( 1.3) 7 ( 2.1) ## gender = women (%) 217 (39.5) 132 (39.1) 0.008 ## smoke (%) 0.091 ## never 384 (69.8) 222 (65.7) ## ex 39 ( 7.1) 29 ( 8.6) ## current 127 (23.1) 87 (25.7) ## hospital (%) 0.101 ## 1 91 (16.5) 48 (14.2) ## 2 89 (16.2) 49 (14.5) ## 3 226 (41.1) 154 (45.6) ## 4 144 (26.2) 87 (25.7) ## nodcat (%) 0.139 ## 1 150 (27.3) 102 (30.2) ## 2 205 (37.3) 124 (36.7) ## 3 117 (21.3) 61 (18.0) ## 4 37 ( 6.7) 18 ( 5.3) ## 5-9 30 ( 5.5) 26 ( 7.7) ## 10+ 11 ( 2.0) 7 ( 2.1) ## mets (%) 0.145 ## 0 322 (58.5) 191 (56.5) ## 1 127 (23.1) 72 (21.3) ## 2 93 (16.9) 73 (21.6) ## 3 8 ( 1.5) 2 ( 0.6) ## durcat (%) 0.162 ## &lt; 10m 8 ( 1.5) 4 ( 1.2) ## 10-19m 210 (38.2) 138 (40.8) ## 20-29m 251 (45.6) 133 (39.3) ## 30-39m 63 (11.5) 44 (13.0) ## 40+m 18 ( 3.3) 19 ( 5.6) ## diacat (%) 0.057 ## &lt;1.5cm 4 ( 0.7) 4 ( 1.2) ## 1.5-1.9cm 199 (36.2) 127 (37.6) ## 2-2.4cm 347 (63.1) 207 (61.2) ## 2.5-2.9cm 0 ( 0.0) 0 ( 0.0) ## 3cm+ 0 ( 0.0) 0 ( 0.0) ## primary (%) 0.099 ## bladder 9 ( 1.6) 8 ( 2.4) ## breast 124 (22.5) 79 (23.4) ## colorectal 221 (40.2) 126 (37.3) ## gullet 19 ( 3.5) 13 ( 3.8) ## kidney 14 ( 2.5) 12 ( 3.6) ## prostate 104 (18.9) 63 (18.6) ## skin 0 ( 0.0) 0 ( 0.0) ## stomach 33 ( 6.0) 19 ( 5.6) ## testicular 26 ( 4.7) 18 ( 5.3) ## position (%) 0.041 ## easy 172 (31.3) 100 (29.6) ## moderate 242 (44.0) 155 (45.9) ## difficult 136 (24.7) 83 (24.6) ## Count covariates with important imbalance addmargins(table(ExtractSmd(tabUnmatched) &gt; 0.08)) ## ## FALSE TRUE Sum ## 3 7 10 #---------------------------------------------# # in strata == 3 # # # #---------------------------------------------# ## Construct a table tabUnmatched &lt;- CreateTableOne(vars = Cov, strata = &quot;rfa&quot;, data = RFAcat[RFAcat$psblock == 3,], test = FALSE) ## Show table with SMD print(tabUnmatched, smd = TRUE) ## Stratified by rfa ## 0 1 SMD ## n 347 541 ## agecat (%) 0.163 ## &lt; 45 6 ( 1.7) 13 ( 2.4) ## 45-49 90 (25.9) 135 (25.0) ## 50-54 171 (49.3) 261 (48.2) ## 55-59 71 (20.5) 102 (18.9) ## 60-64 8 ( 2.3) 25 ( 4.6) ## 65+ 1 ( 0.3) 5 ( 0.9) ## gender = women (%) 132 (38.0) 205 (37.9) 0.003 ## smoke (%) 0.049 ## never 245 (70.6) 372 (68.8) ## ex 22 ( 6.3) 40 ( 7.4) ## current 80 (23.1) 129 (23.8) ## hospital (%) 0.125 ## 1 59 (17.0) 107 (19.8) ## 2 78 (22.5) 109 (20.1) ## 3 101 (29.1) 176 (32.5) ## 4 109 (31.4) 149 (27.5) ## nodcat (%) 0.087 ## 1 101 (29.1) 161 (29.8) ## 2 143 (41.2) 205 (37.9) ## 3 59 (17.0) 101 (18.7) ## 4 14 ( 4.0) 24 ( 4.4) ## 5-9 22 ( 6.3) 40 ( 7.4) ## 10+ 8 ( 2.3) 10 ( 1.8) ## mets (%) 0.061 ## 0 205 (59.1) 314 (58.0) ## 1 78 (22.5) 122 (22.6) ## 2 57 (16.4) 89 (16.5) ## 3 7 ( 2.0) 16 ( 3.0) ## durcat (%) 0.088 ## &lt; 10m 3 ( 0.9) 6 ( 1.1) ## 10-19m 150 (43.2) 227 (42.0) ## 20-29m 142 (40.9) 239 (44.2) ## 30-39m 40 (11.5) 51 ( 9.4) ## 40+m 12 ( 3.5) 18 ( 3.3) ## diacat (%) 0.142 ## &lt;1.5cm 68 (19.6) 135 (25.0) ## 1.5-1.9cm 275 (79.3) 403 (74.5) ## 2-2.4cm 4 ( 1.2) 3 ( 0.6) ## 2.5-2.9cm 0 ( 0.0) 0 ( 0.0) ## 3cm+ 0 ( 0.0) 0 ( 0.0) ## primary (%) 0.121 ## bladder 12 ( 3.5) 18 ( 3.3) ## breast 73 (21.0) 124 (22.9) ## colorectal 131 (37.8) 198 (36.6) ## gullet 10 ( 2.9) 19 ( 3.5) ## kidney 13 ( 3.7) 16 ( 3.0) ## prostate 68 (19.6) 106 (19.6) ## skin 3 ( 0.9) 1 ( 0.2) ## stomach 17 ( 4.9) 25 ( 4.6) ## testicular 20 ( 5.8) 34 ( 6.3) ## position (%) 0.162 ## easy 65 (18.7) 127 (23.5) ## moderate 216 (62.2) 294 (54.3) ## difficult 66 (19.0) 120 (22.2) ## Count covariates with important imbalance addmargins(table(ExtractSmd(tabUnmatched) &gt; 0.08)) ## ## FALSE TRUE Sum ## 3 7 10 #---------------------------------------------# # in strata == 4 # # # #---------------------------------------------# ## Construct a table tabUnmatched &lt;- CreateTableOne(vars = Cov, strata = &quot;rfa&quot;, data = RFAcat[RFAcat$psblock == 4,], test = FALSE) ## Show table with SMD print(tabUnmatched, smd = TRUE) ## Stratified by rfa ## 0 1 SMD ## n 174 713 ## agecat (%) 0.105 ## &lt; 45 6 ( 3.4) 24 ( 3.4) ## 45-49 33 (19.0) 155 (21.7) ## 50-54 92 (52.9) 371 (52.0) ## 55-59 32 (18.4) 124 (17.4) ## 60-64 6 ( 3.4) 27 ( 3.8) ## 65+ 5 ( 2.9) 12 ( 1.7) ## gender = women (%) 73 (42.0) 319 (44.7) 0.056 ## smoke (%) 0.077 ## never 117 (67.2) 475 (66.6) ## ex 18 (10.3) 61 ( 8.6) ## current 39 (22.4) 177 (24.8) ## hospital (%) 0.104 ## 1 23 (13.2) 97 (13.6) ## 2 30 (17.2) 97 (13.6) ## 3 80 (46.0) 350 (49.1) ## 4 41 (23.6) 169 (23.7) ## nodcat (%) 0.254 ## 1 53 (30.5) 205 (28.8) ## 2 62 (35.6) 271 (38.0) ## 3 30 (17.2) 131 (18.4) ## 4 12 ( 6.9) 51 ( 7.2) ## 5-9 17 ( 9.8) 41 ( 5.8) ## 10+ 0 ( 0.0) 14 ( 2.0) ## mets (%) 0.061 ## 0 99 (56.9) 394 (55.3) ## 1 34 (19.5) 157 (22.0) ## 2 39 (22.4) 154 (21.6) ## 3 2 ( 1.1) 8 ( 1.1) ## durcat (%) 0.094 ## &lt; 10m 3 ( 1.7) 9 ( 1.3) ## 10-19m 74 (42.5) 300 (42.1) ## 20-29m 71 (40.8) 282 (39.6) ## 30-39m 18 (10.3) 93 (13.0) ## 40+m 8 ( 4.6) 29 ( 4.1) ## diacat (%) 0.062 ## &lt;1.5cm 150 (86.2) 606 (85.0) ## 1.5-1.9cm 24 (13.8) 106 (14.9) ## 2-2.4cm 0 ( 0.0) 1 ( 0.1) ## 2.5-2.9cm 0 ( 0.0) 0 ( 0.0) ## 3cm+ 0 ( 0.0) 0 ( 0.0) ## primary (%) 0.177 ## bladder 2 ( 1.1) 8 ( 1.1) ## breast 46 (26.4) 173 (24.3) ## colorectal 69 (39.7) 304 (42.6) ## gullet 6 ( 3.4) 20 ( 2.8) ## kidney 5 ( 2.9) 12 ( 1.7) ## prostate 34 (19.5) 130 (18.2) ## skin 1 ( 0.6) 15 ( 2.1) ## stomach 4 ( 2.3) 20 ( 2.8) ## testicular 7 ( 4.0) 31 ( 4.3) ## position (%) 0.056 ## easy 9 ( 5.2) 29 ( 4.1) ## moderate 99 (56.9) 417 (58.5) ## difficult 66 (37.9) 267 (37.4) ## Count covariates with important imbalance addmargins(table(ExtractSmd(tabUnmatched) &gt; 0.08)) ## ## FALSE TRUE Sum ## 5 5 10 可以看出其實分層法中每層的數據依然還有很多的不平衡。分層法不是合理的利用傾向性評分的理想辦法。 111.1.4.1 計算每層評分組內，暴露和結果之間的關系 (lm(dodp ~ rfa, data = RFAcat[RFAcat$psblock == 1, ])) ## ## Call: ## lm(formula = dodp ~ rfa, data = RFAcat[RFAcat$psblock == 1, ]) ## ## Coefficients: ## (Intercept) rfa ## 0.40927 0.11326 (lm(dodp ~ rfa, data = RFAcat[RFAcat$psblock == 2, ])) ## ## Call: ## lm(formula = dodp ~ rfa, data = RFAcat[RFAcat$psblock == 2, ]) ## ## Coefficients: ## (Intercept) rfa ## 0.285455 0.099161 (lm(dodp ~ rfa, data = RFAcat[RFAcat$psblock == 3, ])) ## ## Call: ## lm(formula = dodp ~ rfa, data = RFAcat[RFAcat$psblock == 3, ]) ## ## Coefficients: ## (Intercept) rfa ## 0.198847 -0.041731 (lm(dodp ~ rfa, data = RFAcat[RFAcat$psblock == 4, ])) ## ## Call: ## lm(formula = dodp ~ rfa, data = RFAcat[RFAcat$psblock == 4, ]) ## ## Coefficients: ## (Intercept) rfa ## 0.28161 -0.16800 111.1.4.2 計算 ACE (888*0.1132561 + 888*0.0991608 + 888*(-0.0417308) + 887*(-0.1680047))/3551 ## [1] 0.00071785072 111.1.5 用配對法計算 ACE ## ## . use &quot;../backupfiles/RFAcat.dt. * Question 10 ## ## . teffects psmatch (dodp) (rfa i.agecat gender i.smoke i.hospital i.nodcat i.me ## &gt; ts i.durcat i.diacat i.primary i.position, logit) ## ## Treatment-effects estimation Number of obs = 3,551 ## Estimator : propensity-score matching Matches: requested = 1 ## Outcome model : matching min = 1 ## Treatment model: logit max = 3 ## ------------------------------------------------------------------------------ ## | AI Robust ## dodp | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] ## -------------+---------------------------------------------------------------- ## ATE | ## rfa | ## (radiofre.. | ## vs | ## standard..) | .0263775 .0187999 1.40 0.161 -.0104697 .0632248 ## ------------------------------------------------------------------------------ ## ## . 111.1.6 模型校正 PS RFAcat$rfanew &lt;- RFAcat$rfa Log_ps &lt;- glm(dodp ~ as.factor(rfanew)*Score, data = RFAcat, family = binomial(link = &quot;logit&quot;)) summary(Log_ps) ## ## Call: ## glm(formula = dodp ~ as.factor(rfanew) * Score, family = binomial(link = &quot;logit&quot;), ## data = RFAcat) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.45859 -0.86831 -0.63218 1.29348 2.29729 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.28539 0.08742 -3.2646 0.001096 ** ## as.factor(rfanew)1 1.04607 0.19586 5.3409 9.247e-08 *** ## Score -1.37952 0.22182 -6.2190 5.003e-10 *** ## as.factor(rfanew)1:Score -2.24706 0.37406 -6.0073 1.886e-09 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 4118.69 on 3550 degrees of freedom ## Residual deviance: 3863.82 on 3547 degrees of freedom ## AIC: 3871.82 ## ## Number of Fisher Scoring iterations: 4 RFAcat &lt;- RFAcat %&gt;% mutate(rfanew = 1) newdata &lt;- subset(RFAcat, select = c(rfanew, Score)) RFAcat$Po1&lt;- predict(Log_ps, newdata, type = &quot;response&quot;) RFAcat &lt;- RFAcat %&gt;% mutate(rfanew = 0) newdata1 &lt;- subset(RFAcat, select = c(rfanew, Score)) RFAcat$Po0 &lt;- predict(Log_ps, newdata1, type = &quot;response&quot;) with(RFAcat, epiDisplay::summ(Po1, graph = F)) ## obs. mean median s.d. min. max. ## 3551 0.306 0.253 0.182 0.064 0.668 with(RFAcat, epiDisplay::summ(Po0, graph = F)) ## obs. mean median s.d. min. max. ## 3551 0.285 0.272 0.072 0.168 0.423 with(RFAcat, epiDisplay::summ(Po1 - Po0, graph = F)) ## obs. mean median s.d. min. max. ## 3551 0.021 -0.018 0.11 -0.105 0.245 References "],["inverse-probability-weighted-estimation-and-doubly-robust-methods.html", "第 112 章 Inverse probability weighted estimation and doubly robust methods", " 第 112 章 Inverse probability weighted estimation and doubly robust methods "],["causal-mediation-analysis.html", "第 113 章 Causal mediation analysis", " 第 113 章 Causal mediation analysis "],["rationale-behind-and-challenges-to-health-data-analysis.html", "第 114 章 Rationale behind and challenges to health data analysis", " 第 114 章 Rationale behind and challenges to health data analysis On its face Bayes’ rule is a simple, one-line theorem: by updating our initial belief about something with objective new information, we get a new and improved belief. To its adherents, this is an elegant statement about learning from experience. McGrayne, Sharon Bertsch from “The Theory That Would Not Die: How Bayes’ Rule Cracked the Enigma Code, Hunted Down Russian Submarines, and Emerged Triumphant from Two Centuries of Controversy”(McGrayne 2011) Health is not valued till sickness comes. Thomas Fuller References "],["簡介馬克夫成本效益模型-introduction-to-markov-cost-effectiveness-models.html", "第 115 章 簡介馬克夫成本效益模型 Introduction to Markov Cost Effectiveness Models 115.1 入門簡介 115.2 爲什麼要使用馬克夫模型 why Markov models? 115.3 健康狀態 health states", " 第 115 章 簡介馬克夫成本效益模型 Introduction to Markov Cost Effectiveness Models 115.1 入門簡介 使用成本效益模型是系統性評價成本 (costs) 和結果 (outcomes) 的常用框架。 馬克夫模型通常比決策樹 (decision tree) 更加複雜。它比決策樹模型的優點是能夠增加對時間的考量。 115.2 爲什麼要使用馬克夫模型 why Markov models? 馬克夫模型在下述情況下非常有用： 當健康相關的事件 (health events) 會隨着時間經過重複出現，或者健康事件會對人體健康產生較爲長期的效果的情況下 治療本身的效果是短期的情況下 患者的各種健康事件發生的概率不太依存於患者早期的歷史的情況下 115.3 健康狀態 health states 設計馬可夫模型時需要考慮的最重要的就是疾病的自然變化過程 (natural history of the condition)。特別是模型需要儘量真實的反應出不同的健康的狀態還有人體可能在不同狀態之間的轉換過程 (health states and movements between them)。 在馬可夫模型裡，健康狀態被分割成清楚的不同類別 (categories)。這些健康狀態的類別之間必須是互斥的 (mutually exclusive)，所有的健康狀態類別必須涵蓋所有患者人群在某個時間點時的狀態。 任何一名研究對象，在設計的馬可夫模型裡只能在某個狀態類別下停留一段（固定的）時間。這個固定的時間段被命名為一個循環（或叫週期, cycle）。在這個週期結束的時候患者可能有一定的概率轉到其他的健康狀態，或者保留在相同的健康狀態。 例如簡單的健康狀態馬可夫模型可以定義三個健康狀態類別：健康，疾病，死亡。那麼這三種健康狀態類別之間的轉換關係等可以使用箭頭連結表示其方向性。 上圖的馬可夫模型中三種健康狀態之間是互相排斥的。患者只能是健康，或疾病，或死亡三種狀態。每個患者或個體在每個時間段或者週期結束的時候都有可能沿着箭頭的方向發生健康狀態的改變。 "],["粗率比和分層率比-crude-and-stratified-rate-ratios.html", "第 116 章 粗率比和分層率比 Crude and stratified rate ratios 116.1 Q1-Q3 讀取數據，簡單歸納，分割年齡，計算年齡組的粗死亡率 116.2 Q4 計算不同年齡組相對於最年輕的年齡組的死亡率比 Rate ratio, RR 116.3 Q5 分析另一個關於職業等級 grade 和死亡之間的關係。使用 Stata 的 stmh 命令來計算並比較較低等級職業 (low grade) 和較高等級職業 (high grade) 相比，死亡率比是多少。你認爲結果是否提供強有力的證據證明這兩種職業等級之間的死亡率存在顯著差異？ 116.4 Q6-Q8 試分析上一題中觀察到的職業等級和死亡率之間的關係，是否受到年齡的影響。先嘗試使用 stmh, by() 函數來分析不同年齡層中職業等級之間的死亡率比。是否有證據證明職業等級的高低和年齡之間在死亡率比的關係上存在交互作用？又或者是否有年齡的混淆因素會對職業等級和死亡之間的關係造成影響？ 116.5 Q9 試分析職業等級和CHD，冠心病死亡之間的關係。此時在Stata需要重新修改你的觀察結果爲 chd。職業等級和冠心病死亡之間的關係是否受到吸菸習慣的影響，或者有交互作用呢？ 116.6 Further Q1 請分析膽固醇水平和 冠心病死亡之間的關係。這一關係是否受到年齡的混雜影響？ 116.7 Further Q2 你認爲，當我們在分析膽固醇和冠心病死亡率之間的關係的時候，需要考慮調整收縮期血壓嗎 (systolic blood pressure)？如果你不同意，爲什麼？", " 第 116 章 粗率比和分層率比 Crude and stratified rate ratios Epidemiology is like a bikini: what is revealed is interesting; what is concealed is crucial. Peter Duesberg The Statistical Methods in Epidemiology lectures were orgainised and taught by Professor Simon Cousens, Professor Katherine Fielding, Dr Susannah Woodd, also special thanks to Dr Emily Webb. 本章內容不討論任何理論的東西，着重強調用 R/Stata 進行實際數據的分析，並加強對輸出結果的理解。 此次實戰演練的目的是學會怎樣計算死亡率比 (Rate Ratios, RR)。學會用 Mantel-Haenszel 法總結 RR，並討論其意義。同時我們儘可能展示Stata的使用方法，並且儘量也給出R的解決方案。 數據是從 Whitehall Cohort Study (whitehal.dta) 隨機採集10%的樣本數據。該研究的研究對象是英國的公務員羣體，調查的是心血管疾病的發病率和一些生活習慣之間的關係，更詳細的內容可以參考原始論文 (Marmot et al. 1978)，或者維基百科主頁。 116.1 Q1-Q3 讀取數據，簡單歸納，分割年齡，計算年齡組的粗死亡率 ## ## . use &quot;../backupfiles/whitehal.dta&quot;, cl(Whitehall Study - 10% sample) ## ## . stset timeout, fail(all) enter(timein) origin(timein) id(id) scale(365.25) ## ## id: id ## failure event: all != 0 &amp; all &lt; . ## obs. time interval: (timeout[_n-1], timeout] ## enter on or after: time timein ## exit on or before: failure ## t for analysis: (time-origin)/365.25 ## origin: time timein ## ## ------------------------------------------------------------------------------ ## 1,677 total observations ## 0 exclusions ## ------------------------------------------------------------------------------ ## 1,677 observations remaining, representing ## 1,677 subjects ## 403 failures in single-failure-per-subject data ## 27,605.371 total analysis time at risk and under observation ## at risk from t = 0 ## earliest observed entry t = 0 ## last observed exit t = 19.38123 ## ## . 經過 Stata stset 命令的生存時間總結。我們指定了數據 whitehal 中的總死亡 all 作爲觀察結果，時間變量分別是 timein 和 timeout，單位是“日”。我們發現在這個樣本中，1677名隨訪對象一共有403名在研究結束以前死亡。時間尺度 timein 是從被錄用爲公務員的第一天，隨訪結束時間是 timeout，最長的人觀察了 19.4 年。相似的信息在R裏面實現的方法也很簡單： whitehal &lt;- read_dta(&quot;../backupfiles/whitehal.dta&quot;) # read in the dataset whitehal$followupyrs &lt;- (whitehal$timeout - whitehal$timein)/365.25 # change time as years max(whitehal$followupyrs*365.25) # time difference in days ## Time difference of 7078.9927 days summary(whitehal$followupyrs &lt;- as.numeric(whitehal$followupyrs)) # time difference in years ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.15063 17.16357 17.96020 16.46116 18.56262 19.38123 epiDisplay::tab1(whitehal$all, graph = FALSE) ## whitehal$all : ## Frequency Percent Cum. percent ## 0 1274 76 76 ## 1 403 24 100 ## Total 1677 100 100 該數據中的變量 agein 其實是研究參與對象在進入隊列時的年齡。我們打算把這個變量改成 5 歲爲階梯的分類型變量 (40-44, 45-49, 50-54, …, 65-69)。在 Stata 會用到 egen 命令。同時，我們可以使用 strate 命令來查看這個樣本中隨着年齡增加，粗死亡率的變化是怎樣的。另一個獲取相同結果的命令是 stptime 命令。 ## ## . use &quot;../backupfiles/whitehal.dta&quot;, cl(Whitehall Study - 10% sample) ## ## . quietly stset timeout, fail(all) enter(timein) origin(timein) id(id) scale(36 ## &gt; 5.25) ## ## . egen agecat = cut(agein), at(40, 45, 50, 55, 60, 65, 70) label ## ## . strate agecat, per(1000) ## ## failure _d: all ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## enter on or after: time timein ## id: id ## ## Estimated failure rates ## Number of records = 1677 ## ## +------------------------------------------------------+ ## | agecat D Y Rate Lower Upper | ## |------------------------------------------------------| ## | 40- 24 4.9186 4.8794 3.2705 7.2798 | ## | 45- 45 7.8549 5.7289 4.2774 7.6729 | ## | 50- 82 6.0598 13.5319 10.8983 16.8019 | ## | 55- 118 5.2820 22.3400 18.6519 26.7573 | ## | 60- 101 3.0948 32.6349 26.8525 39.6625 | ## |------------------------------------------------------| ## | 65- 33 0.3952 83.4921 59.3567 117.4412 | ## +------------------------------------------------------+ ## Notes: Rate = D/Y = failures/person-time (per 1000). ## Lower and Upper are bounds of 95% confidence intervals. ## ## ## . stptime, by(agecat) per(1000) ## ## failure _d: all ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## enter on or after: time timein ## id: id ## ## agecat | Person-time Failures Rate [95% Conf. Interval] ## -----------+----------------------------------------------------------- ## 40- | 4918.6177 24 4.8794197 3.270524 7.279792 ## 45- | 7854.8937 45 5.7289126 4.277427 7.672941 ## 50- | 6059.7504 82 13.53191 10.89832 16.80191 ## 55- | 5282.0143 118 22.339962 18.6519 26.75728 ## 60- | 3094.8473 101 32.63489 26.85248 39.66248 ## 65- | 395.24719 33 83.492055 59.35673 117.4412 ## -----------+----------------------------------------------------------- ## Total | 27605.371 403 14.598609 13.24067 16.09581 ## ## . 在 R 裏面你可以使用 epitools:pois.exact 的函數來計算並獲得相似，但不完全相同的結果（點估計完全一致，信賴區間的估計存在略微但不明顯的差別）： # categorize agein into groups (40-44, 45-49, 50-54, ... , 65-69) whitehal$agecat &lt;- cut(whitehal$agein, breaks = seq(40, 70, 5), right = FALSE) with(whitehal, table(agecat)) ## agecat ## [40,45) [45,50) [50,55) [55,60) [60,65) [65,70) ## 277 445 362 340 215 38 # examine how mortality rates change with age at entry # whitehall_sum &lt;- whitehal %&gt;% group_by(agecat) %&gt;% summarise(D = sum(all), Y = sum(followupyrs)) cbind(whitehall_sum, pois.exact(x = whitehall_sum$D, pt = whitehall_sum$Y/1000)[,-c(1, 6)]) ## agecat D Y pt rate lower upper ## 1 [40,45) 24 4918.61771 4.91861771 4.8794197 3.1263373 7.2601897 ## 2 [45,50) 45 7854.89374 7.85489374 5.7289126 4.1787079 7.6657358 ## 3 [50,55) 82 6059.75041 6.05975041 13.5319105 10.7623304 16.7966726 ## 4 [55,60) 118 5282.01431 5.28201431 22.3399622 18.4913772 26.7533361 ## 5 [60,65) 101 3094.84730 3.09484730 32.6348896 26.5816512 39.6543589 ## 6 [65,70) 33 395.24719 0.39524719 83.4920545 57.4720887 117.2539259 116.2 Q4 計算不同年齡組相對於最年輕的年齡組的死亡率比 Rate ratio, RR 在 Stata 你需要使用 stmh 命令來計算死亡率比。 ## ## . use &quot;../backupfiles/whitehal.dta&quot;, cl(Whitehall Study - 10% sample) ## ## . egen agecat = cut(agein), at(40, 45, 50, 55, 60, 65, 70) label ## ## . quietly stset timeout, fail(all) enter(timein) origin(timein) id(id) scale(36 ## &gt; 5.25) ## ## . stmh agecat, c(1, 0) ## ## failure _d: all ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## enter on or after: time timein ## id: id ## ## Mantel-Haenszel estimate of the rate ratio ## comparing agecat==1 vs. agecat==0 ## ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 1.174 0.40 0.5250 0.715 1.927 ## ------------------------------------------------------------------------ ## ## . stmh agecat, c(2, 0) ## ## failure _d: all ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## enter on or after: time timein ## id: id ## ## Mantel-Haenszel estimate of the rate ratio ## comparing agecat==2 vs. agecat==0 ## ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 2.773 21.05 0.0000 1.760 4.371 ## ------------------------------------------------------------------------ ## ## . stmh agecat, c(3, 0) ## ## failure _d: all ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## enter on or after: time timein ## id: id ## ## Mantel-Haenszel estimate of the rate ratio ## comparing agecat==3 vs. agecat==0 ## ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 4.578 55.78 0.0000 2.952 7.101 ## ------------------------------------------------------------------------ ## ## . stmh agecat, c(4, 0) ## ## failure _d: all ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## enter on or after: time timein ## id: id ## ## Mantel-Haenszel estimate of the rate ratio ## comparing agecat==4 vs. agecat==0 ## ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 6.688 93.81 0.0000 4.286 10.438 ## ------------------------------------------------------------------------ ## ## . stmh agecat, c(5, 0) ## ## failure _d: all ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## enter on or after: time timein ## id: id ## ## Mantel-Haenszel estimate of the rate ratio ## comparing agecat==5 vs. agecat==0 ## ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 17.111 210.78 0.0000 10.114 28.949 ## ------------------------------------------------------------------------ ## ## . 但是在 R 裏面，需要使用最簡單的泊松回歸模型來計算上述死亡率比。 ## rate ratios and 95% CIs for each age category compare with [40,44) age group Model0 &lt;- glm(all ~ agecat + offset(log(followupyrs)), family = poisson(link = &quot;log&quot;), data = whitehal); ci.exp(Model0) ## exp(Est.) 2.5% 97.5% ## (Intercept) 0.0048794197 0.0032705278 0.0072797841 ## agecat[45,50) 1.1740971320 0.7154062934 1.9268827913 ## agecat[50,55) 2.7732622719 1.7597191900 4.3705743919 ## agecat[55,60) 4.5784055712 2.9519678778 7.1009572062 ## agecat[60,65) 6.6882727538 4.2856745766 10.4377949444 ## agecat[65,70) 17.1110624279 10.1140257533 28.9487553770 ## The rate ratios are increasing with age although there is no statistical evidence ## at 5% level that the rate among 45-49 year olds is different to the rate among men ## who are &lt;40 years 我們發現，死亡率比隨着年齡的增加而顯著升高。 116.3 Q5 分析另一個關於職業等級 grade 和死亡之間的關係。使用 Stata 的 stmh 命令來計算並比較較低等級職業 (low grade) 和較高等級職業 (high grade) 相比，死亡率比是多少。你認爲結果是否提供強有力的證據證明這兩種職業等級之間的死亡率存在顯著差異？ ## ## . use &quot;../backupfiles/whitehal.dta&quot;, cl(Whitehall Study - 10% sample) ## ## . egen agecat = cut(agein), at(40, 45, 50, 55, 60, 65, 70) label ## ## . quietly stset timeout, fail(all) enter(timein) origin(timein) id(id) scale(36 ## &gt; 5.25) ## ## . strate grade, per(1000) ## ## failure _d: all ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## enter on or after: time timein ## id: id ## ## Estimated failure rates ## Number of records = 1677 ## ## +-----------------------------------------------------+ ## | grade D Y Rate Lower Upper | ## |-----------------------------------------------------| ## | 1 221 20.3398 10.8654 9.5233 12.3966 | ## | 2 182 7.2656 25.0496 21.6624 28.9665 | ## +-----------------------------------------------------+ ## Notes: Rate = D/Y = failures/person-time (per 1000). ## Lower and Upper are bounds of 95% confidence intervals. ## ## ## . stmh grade ## ## failure _d: all ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## enter on or after: time timein ## id: id ## ## Mantel-Haenszel estimate of the rate ratio ## comparing grade==2 vs. grade==1 ## ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 2.305 73.78 0.0000 1.895 2.805 ## ------------------------------------------------------------------------ ## ## . 由於很顯然地，相比高等級的職業來說，較低等級職業的死亡率比是2.31倍之高，且95%信賴區間也不包含1，(p &lt; 0.0001)。所以，我們認爲數據提供了很強的證據證明兩種職業等級之間的死亡率存在顯著差異。相同的結果可以在R裏面通過下面的R代碼來計算獲得。 Model1 &lt;- glm(all ~ factor(grade) + offset(log(followupyrs)), family = poisson(link = &quot;log&quot;), data = whitehal); ci.exp(Model1) ## exp(Est.) 2.5% 97.5% ## (Intercept) 0.010865404 0.0095233128 0.012396632 ## factor(grade)2 2.305446287 1.8947528380 2.805158793 ## There is strong evidence that the all cause mortality rate differs between high ## and low grade workers. ## To examine whether the estimated RR for grade is confounded by age at entry ## we compare the crude RR =2.31 (1.90, 2.81) with the Mantel-Haenszel summary ## estimate. 116.4 Q6-Q8 試分析上一題中觀察到的職業等級和死亡率之間的關係，是否受到年齡的影響。先嘗試使用 stmh, by() 函數來分析不同年齡層中職業等級之間的死亡率比。是否有證據證明職業等級的高低和年齡之間在死亡率比的關係上存在交互作用？又或者是否有年齡的混淆因素會對職業等級和死亡之間的關係造成影響？ ## ## . use &quot;../backupfiles/whitehal.dta&quot;, cl(Whitehall Study - 10% sample) ## ## . egen agecat = cut(agein), at(40, 45, 50, 55, 60, 65, 70) label ## ## . quietly stset timeout, fail(all) enter(timein) origin(timein) id(id) scale(36 ## &gt; 5.25) ## ## . stmh grade , by(agecat) ## ## failure _d: all ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## enter on or after: time timein ## id: id ## ## Mantel-Haenszel estimates of the rate ratio ## comparing grade==2 vs. grade==1 ## by agecat ## ## +-------------------------------------+ ## | agecat Rate ratio Lower Upper | ## |-------------------------------------| ## | 40- 1.22 0.42 3.57 | ## | 45- 1.36 0.67 2.75 | ## | 50- 1.92 1.23 3.01 | ## | 55- 1.43 1.00 2.06 | ## | 60- 1.21 0.82 1.80 | ## |-------------------------------------| ## | 65- 1.40 0.54 3.62 | ## +-------------------------------------+ ## Note: Lower and Upper are bounds of 95% confidence intervals. ## ## Overall Mantel-Haenszel estimate, controlling for agecat ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 1.429 11.36 0.0008 1.160 1.761 ## ------------------------------------------------------------------------ ## Approx. test for unequal RRs (effect modification): chi2(5) = 2.44 ## Pr&gt;chi2 = 0.7854 ## ## . 在Stata的計算過程中，我們很輕鬆地獲得了不同年齡層級內職業等級之間死亡率比，和對應的信賴區間。並且發現 Mantel-Haenszel 總結的控制了年齡因素之後的年齡調整死亡率比 (rate ratio adjusted by age categories) 是 1.43 (1.16, 1.76)，和上一題計算的粗死亡率比 2.31 (1.90, 2.81) 之間確實有些許不同。所以大概可以認爲年齡對這一關係造成一定程度的混雜 confounding。然而，最後命令行對所有年齡層級的死亡率比的變化做了交互作用的鑑定，並且比較過後發現並無顯著證據證明年齡和職業等級之間存在交互作用 (p = 0.79)。各年齡層的死亡率比並沒有太過誇張的變化，也就是 1.2 - 1.9 之間的差別。所以，我們認爲不需要報告年齡層個字的死亡率比。 這裏需要指出的是，Stata這三行的計算過程在 R 裏的實現稍微有一點點複雜： whitehal_table &lt;- aggregate(cbind(all, followupyrs) ~ grade + agecat, data = whitehal, sum) stmh_array &lt;- array(c(4, 20, 693.1284, 4225.4893, 10,35, 1363.821, 6491.072, 30,52, 1399.63, 4660.12, 51,67, 1832.169, 3449.846, 59,42, 1660.597, 1434.251, 28,5, 316.23840, 79.00879), dim=c(2,2,6), dimnames = list( Grade=c(&quot;2&quot;,&quot;1&quot;), c(&quot;death&quot;, &quot;Person_years&quot;), Agecat=names(table(whitehal$agecat)) )) stmh_array ## , , Agecat = [40,45) ## ## ## Grade death Person_years ## 2 4 693.1284 ## 1 20 4225.4893 ## ## , , Agecat = [45,50) ## ## ## Grade death Person_years ## 2 10 1363.821 ## 1 35 6491.072 ## ## , , Agecat = [50,55) ## ## ## Grade death Person_years ## 2 30 1399.63 ## 1 52 4660.12 ## ## , , Agecat = [55,60) ## ## ## Grade death Person_years ## 2 51 1832.169 ## 1 67 3449.846 ## ## , , Agecat = [60,65) ## ## ## Grade death Person_years ## 2 59 1660.597 ## 1 42 1434.251 ## ## , , Agecat = [65,70) ## ## ## Grade death Person_years ## 2 28 316.23840 ## 1 5 79.00879 # mhgrade_age &lt;- epi.2by2(stmh_array, method = &quot;cohort.time&quot;, units = 1000) mhgrade_age &lt;- epi.2by2(stmh_array, method = &quot;cohort.count&quot;, units = 1000) mhgrade_age ## Outcome + Outcome - Total Inc risk * Odds ## Exposed + 182 7266 7448 24.4 0.0250 ## Exposed - 221 20340 20561 10.7 0.0109 ## Total 403 27605 28008 14.4 0.0146 ## ## ## Point estimates and 95% CIs: ## ------------------------------------------------------------------- ## Inc risk ratio (crude) 2.27 (1.87, 2.76) ## Inc risk ratio (M-H) 1.42 (1.15, 1.74) ## Inc risk ratio (crude:M-H) 1.60 ## Odds ratio (crude) 2.31 (1.89, 2.81) ## Odds ratio (M-H) 1.43 (1.16, 1.77) ## Odds ratio (crude:M-H) 1.61 ## Attrib risk in the exposed (crude) * 13.69 (9.91, 17.47) ## Attrib risk in the exposed (M-H) * 6.03 (0.55, 11.52) ## Attrib risk (crude:M-H) 2.27 ## ------------------------------------------------------------------- ## M-H test of homogeneity of PRs: chi2(5) = 2.425 Pr&gt;chi2 = 0.788 ## M-H test of homogeneity of ORs: chi2(5) = 2.447 Pr&gt;chi2 = 0.784 ## Test that M-H adjusted OR = 1: chi2(1) = 11.133 Pr&gt;chi2 = &lt;0.001 ## Wald confidence limits ## M-H: Mantel-Haenszel; CI: confidence interval ## * Outcomes per 1000 population units ## Overall estimate and Wald 95% confidence intervals, ## controlling for agecate mhgrade_age$massoc.detail$RR.mh.wald ## est lower upper ## 1 1.4180516 1.1538795 1.7427039 mhgrade_age$massoc.detail$chi2.mh ## p-value for age-adjusted MH rate ratio comparing with mull value 1. ## test.statistic df p.value.1s p.value.2s ## 1 11.132745 1 0.0004240849 0.00084816981 ## The Mantel-Haenszel summary estimate RR = 1.43 (1.16, 1.76). ## The result shows that the crude estimate of the effect of grade was ## partly confounded by age at entry. ## To assess whether there is effect modification betwee grade and ## agecat we examine the stratum specific estimates and assess ## whether there is evidence of important variation between them. mhgrade_age$massoc.detail$RR.strata.wald ## est lower upper ## 1 1.2179935 0.41756313 3.5527757 ## 2 1.3572307 0.67373201 2.7341362 ## 3 1.9015625 1.21802618 2.9686881 ## 4 1.4215411 0.99187791 2.0373265 ## 5 1.2059693 0.81689044 1.7803635 ## 6 1.3666378 0.54398066 3.4333923 ## The result indicates that the data are compatible with the assumption ## of no interaction/effect modification (p=0.79) ## test for unequal RRs (effect modification): mhgrade_age$massoc.detail$wRR.homog ## test.statistic df p.value ## 1 2.4254139 5 0.78768357 ## Hence, we do not need to present the stratum-specific estimates. 116.5 Q9 試分析職業等級和CHD，冠心病死亡之間的關係。此時在Stata需要重新修改你的觀察結果爲 chd。職業等級和冠心病死亡之間的關係是否受到吸菸習慣的影響，或者有交互作用呢？ ## ## . use &quot;../backupfiles/whitehal.dta&quot;, cl(Whitehall Study - 10% sample) ## ## . egen agecat = cut(agein), at(40, 45, 50, 55, 60, 65, 70) label ## ## . stset timeout, fail(chd) origin(timein) id(id) scale(365.25) ## ## id: id ## failure event: chd != 0 &amp; chd &lt; . ## obs. time interval: (timeout[_n-1], timeout] ## exit on or before: failure ## t for analysis: (time-origin)/365.25 ## origin: time timein ## ## ------------------------------------------------------------------------------ ## 1,677 total observations ## 0 exclusions ## ------------------------------------------------------------------------------ ## 1,677 observations remaining, representing ## 1,677 subjects ## 154 failures in single-failure-per-subject data ## 27,605.371 total analysis time at risk and under observation ## at risk from t = 0 ## earliest observed entry t = 0 ## last observed exit t = 19.38123 ## ## . stmh grade ## ## failure _d: chd ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## id: id ## ## Mantel-Haenszel estimate of the rate ratio ## comparing grade==2 vs. grade==1 ## ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 1.991 18.44 0.0000 1.445 2.743 ## ------------------------------------------------------------------------ ## ## . stmh grade, by(smok) ## ## failure _d: chd ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## id: id ## ## Mantel-Haenszel estimates of the rate ratio ## comparing grade==2 vs. grade==1 ## by smok ## ## +-----------------------------------+ ## | smok Rate ratio Lower Upper | ## |-----------------------------------| ## | 1 3.88 1.18 12.72 | ## | 2 1.64 0.93 2.91 | ## | 3 2.03 1.04 3.94 | ## | 4 1.33 0.70 2.56 | ## | 5 1.93 0.72 5.18 | ## +-----------------------------------+ ## Note: Lower and Upper are bounds of 95% confidence intervals. ## ## Overall Mantel-Haenszel estimate, controlling for smok ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 1.761 12.06 0.0005 1.274 2.435 ## ------------------------------------------------------------------------ ## Approx. test for unequal RRs (effect modification): chi2(4) = 2.76 ## Pr&gt;chi2 = 0.5988 ## ## . 修改了觀察結果爲冠心病死亡之後，我們計算了職業等級高低之間相比較下的冠心病死亡率比，它未進行吸菸習慣調整時的結果是 1.99 (1.45, 2.74)，調整了吸菸習慣之後的 Mantel Haenszel 死亡率比變成了 1.76 (1.27, 2.44)。同時，檢驗結果表示並無證據證明吸菸和職業等級之間存在統計學意義上的交互作用。 116.6 Further Q1 請分析膽固醇水平和 冠心病死亡之間的關係。這一關係是否受到年齡的混雜影響？ ## ## . use &quot;../backupfiles/whitehal.dta&quot;, cl(Whitehall Study - 10% sample) ## ## . egen agecat = cut(agein), at(40, 45, 50, 55, 60, 65, 70) label ## ## . quietly stset timeout, fail(chd) origin(timein) id(id) scale(365.25) ## ## . ## . strate cholgrp, per(1000) ## ## failure _d: chd ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## id: id ## ## Estimated failure rates ## Number of records = 1677 ## ## +----------------------------------------------------+ ## | cholgrp D Y Rate Lower Upper | ## |----------------------------------------------------| ## | 1 14 3.9523 3.5422 2.0979 5.9809 | ## | 2 52 11.1837 4.6496 3.5430 6.1018 | ## | 3 59 8.9152 6.6179 5.1275 8.5415 | ## | 4 29 3.5541 8.1596 5.6703 11.7418 | ## +----------------------------------------------------+ ## Notes: Rate = D/Y = failures/person-time (per 1000). ## Lower and Upper are bounds of 95% confidence intervals. ## ## ## . ## . stmh cholgrp, c(2,1) ## ## failure _d: chd ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## id: id ## ## Mantel-Haenszel estimate of the rate ratio ## comparing cholgrp==2 vs. cholgrp==1 ## ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 1.313 0.82 0.3648 0.728 2.368 ## ------------------------------------------------------------------------ ## ## . stmh cholgrp, c(3,1) ## ## failure _d: chd ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## id: id ## ## Mantel-Haenszel estimate of the rate ratio ## comparing cholgrp==3 vs. cholgrp==1 ## ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 1.868 4.57 0.0326 1.043 3.346 ## ------------------------------------------------------------------------ ## ## . stmh cholgrp, c(4,1) ## ## failure _d: chd ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## id: id ## ## Mantel-Haenszel estimate of the rate ratio ## comparing cholgrp==4 vs. cholgrp==1 ## ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 2.304 6.96 0.0083 1.217 4.359 ## ------------------------------------------------------------------------ ## ## . stmh cholgrp ## ## failure _d: chd ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## id: id ## ## Score test for trend of rates with cholgrp ## ## Overall Mantel-Haenszel estimate ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 1.341 10.45 0.0012 1.122 1.601 ## ------------------------------------------------------------------------ ## Note: The Rate ratio estimate is an approximation to the rate ratio ## for a one-unit increase in cholgrp. ## ## . ## . stmh cholgrp, c(2,1) by(agecat) ## ## failure _d: chd ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## id: id ## ## Mantel-Haenszel estimates of the rate ratio ## comparing cholgrp==2 vs. cholgrp==1 ## by agecat ## ## +-------------------------------------+ ## | agecat Rate ratio Lower Upper | ## |-------------------------------------| ## | 40- 0.83 0.08 9.16 | ## | 45- 1.57 0.18 14.05 | ## | 50- 1.94 0.24 15.53 | ## | 55- 0.90 0.39 2.09 | ## | 60- . . . | ## |-------------------------------------| ## | 65- 0.46 0.09 2.26 | ## +-------------------------------------+ ## Note: Lower and Upper are bounds of 95% confidence intervals. ## ## Overall Mantel-Haenszel estimate, controlling for agecat ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 1.333 0.86 0.3538 0.725 2.451 ## ------------------------------------------------------------------------ ## Approx. test for unequal RRs (effect modification): chi2(5) = 6.79 ## Pr&gt;chi2 = 0.2371 ## ## . stmh cholgrp, c(3,1) by(agecat) ## ## failure _d: chd ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## id: id ## ## Mantel-Haenszel estimates of the rate ratio ## comparing cholgrp==3 vs. cholgrp==1 ## by agecat ## ## +-------------------------------------+ ## | agecat Rate ratio Lower Upper | ## |-------------------------------------| ## | 40- 2.82 0.34 23.42 | ## | 45- 3.23 0.39 26.86 | ## | 50- 5.92 0.79 44.22 | ## | 55- 0.83 0.35 1.96 | ## | 60- . . . | ## |-------------------------------------| ## | 65- 0.64 0.15 2.70 | ## +-------------------------------------+ ## Note: Lower and Upper are bounds of 95% confidence intervals. ## ## Overall Mantel-Haenszel estimate, controlling for agecat ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 1.740 3.51 0.0609 0.968 3.129 ## ------------------------------------------------------------------------ ## Approx. test for unequal RRs (effect modification): chi2(5) = 9.23 ## Pr&gt;chi2 = 0.1001 ## ## . stmh cholgrp, c(4,1) by(agecat) ## ## failure _d: chd ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## id: id ## ## Mantel-Haenszel estimates of the rate ratio ## comparing cholgrp==4 vs. cholgrp==1 ## by agecat ## ## +-------------------------------------+ ## | agecat Rate ratio Lower Upper | ## |-------------------------------------| ## | 40- 2.91 0.26 32.06 | ## | 45- 4.57 0.53 39.08 | ## | 50- 4.22 0.51 35.02 | ## | 55- 2.05 0.81 5.18 | ## | 60- . . . | ## |-------------------------------------| ## | 65- 0.00 . . | ## +-------------------------------------+ ## Note: Lower and Upper are bounds of 95% confidence intervals. ## ## Overall Mantel-Haenszel estimate, controlling for agecat ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 3.103 11.57 0.0007 1.560 6.175 ## ------------------------------------------------------------------------ ## Approx. test for unequal RRs (effect modification): chi2(5) = 6.21 ## Pr&gt;chi2 = 0.2862 ## ## . stmh cholgrp, by(agecat) ## ## failure _d: chd ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## id: id ## ## Score test for trend of rates with cholgrp ## ## Mantel-Haenszel estimates of the rate ratio ## by agecat ## ## +-------------------------------------+ ## | agecat Rate ratio Lower Upper | ## |-------------------------------------| ## | 40- 1.70 0.87 3.32 | ## | 45- 1.69 1.01 2.84 | ## | 50- 1.63 1.10 2.40 | ## | 55- 1.21 0.88 1.66 | ## | 60- 1.55 1.01 2.37 | ## |-------------------------------------| ## | 65- 0.78 0.37 1.63 | ## +-------------------------------------+ ## Note: Lower and Upper are bounds of 95% confidence intervals. ## ## Overall Mantel-Haenszel estimate, controlling for agecat ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 1.408 13.38 0.0003 1.172 1.691 ## ------------------------------------------------------------------------ ## Approx. test for unequal RRs (effect modification): chi2(5) = 4.90 ## Pr&gt;chi2 = 0.4276 ## ## Note: The Rate ratio estimates are approximations to the rate ratios ## for a one-unit increase in cholgrp. ## ## . 把上面這些分析結果總結成爲一個簡潔的表格來，可以寫作： .tg {border-collapse:collapse;border-color:#93a1a1;border-spacing:0;} .tg td{background-color:#fdf6e3;border-color:#93a1a1;border-style:solid;border-width:1px;color:#002b36; font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;} .tg th{background-color:#657b83;border-color:#93a1a1;border-style:solid;border-width:1px;color:#fdf6e3; font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;} .tg .tg-0lax{text-align:left;vertical-align:top} Events Person-years Rate/1000py Crude RR (CI) Age Adjusted RR (95% CI) Cholesterol(mmol)&lt;150150-199200-249250+ 14525929 39521118389153554 3.544.656.628.16 1.001.31 (0.73-2.37)1.87 (1.04-3.35)2.30 (1.22-4.36)Ptrend = 0.001 1.001.33 (0.73–2.45)1.74 (0.97–3.13)3.10 (1.56–6.18)Ptrend = 0.0003 所以，我們的分析結果提供了很強的證據證明，參加實驗的這些公務員的血液膽固醇水平，在沒有任何調整的情況下和冠心病死亡成正相關（傾向性 Ptrend 值 爲 0.001）。雖然似乎有跡象表明膽固醇更高的人羣可能調整年齡因素之後和冠心病死亡的關係更加顯著（負混雜, negative confounding），總體來說年齡調整前後的各個膽固醇水平和冠心病死亡之間的死亡率比並沒有太多不一樣，其結果同樣提供了極強的證據證明膽固醇水平和冠心病死亡之間呈正相關，傾向性 Ptrend 值爲 0.0003。 116.7 Further Q2 你認爲，當我們在分析膽固醇和冠心病死亡率之間的關係的時候，需要考慮調整收縮期血壓嗎 (systolic blood pressure)？如果你不同意，爲什麼？ 思考這個問題的時候，首先需要考慮的是，收縮期血壓本身是否處在膽固醇和冠心病死亡這二者之間的的因果關係通路上 (on the causal pathway between cholesterol and CHD mortality)？ 如果收縮期血壓在生物學機制上不在膽固醇和冠心病死亡之間的因果關係通路上，但是收縮期血壓本身獨立地對冠心病死亡率造成影響 (it has an independent effect on the risk of CHD mortality)。你如果同意這一觀點，那麼調整收縮期血壓是值得建議的。 如果說，收縮期血壓由於某種機制，確實處在膽固醇和冠心病死亡之間的因果關係通路上。那它就不是一個獨立地和冠心病死亡率之間有關的危險因子 (so SBP is not an independent risk factor for CHD mortality)。如果你同意這一情況，那麼，調整SBP是多餘甚至是錯誤的。因爲這將會導致我們低估膽固醇和冠心病死亡率之間的真實關係。 References "],["從流行病學的角度初步分析生存數據-introduction-to-survival-analysis.html", "第 117 章 從流行病學的角度初步分析生存數據 introduction to survival analysis 117.1 Q1 117.2 Q2 117.3 Q3 117.4 Q4 117.5 Q5 117.6 Q6 117.7 Q7 117.8 Q8 117.9 Q9 117.10 Q10 117.11 Q11 117.12 Q12-13 117.13 Q14 117.14 Q15 117.15 Q16 117.16 Q17 117.17 Q18 117.18 Q19", " 第 117 章 從流行病學的角度初步分析生存數據 introduction to survival analysis 在本次練習題中，我們學習如何繪製 Kaplan-Meier 生存曲線，並且學會使用 Logrank 檢驗方法來比較不同組之間的生存曲線是否有統計學上的不一致。 117.1 Q1 打開數據 trinmlsh。使用 Stata 的 describe 和 sum 命令熟悉該數據的各個變量的名字和大致內容。主要是確認一下哪些變量含有重要的結果變量信息，和生存時間信息。help trinmlsh 可以調取關於該數據更加詳細的背景和內容介紹。 ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use trinmlsh ## ## . ## . describe ## ## Contains data from trinmlsh.dta ## obs: 318 ## vars: 18 14 Sep 1999 11:20 ## ------------------------------------------------------------------------------- ## storage display value ## variable name type format label variable label ## ------------------------------------------------------------------------------- ## ethgp float %9.0g lethgp Ethnic group ## ageent float %9.0g Age in years at first survey ## death float %9.0g Died from any cause ## cvdeath float %9.0g Died from CV disease ## alc float %9.0g lalc drinks per week ## smokenum float %9.0g lsmokn No. of cigarettes per day ## hdlc float %9.0g HDL cholesterol ## diabp float %9.0g Diastolic blood pressure ## sysbp float %9.0g Systolic blood pressure ## chdstart float %9.0g Heart disease at time of entry ## days float %9.0g ## years float %9.0g ## bmi float %9.0g ## id float %9.0g ## timein float %d ## timeout float %d ## y float %9.0g ## timebth float %d ## ------------------------------------------------------------------------------- ## Sorted by: ## ## . sum ## ## Variable | Obs Mean Std. Dev. Min Max ## -------------+--------------------------------------------------------- ## ethgp | 318 2.103774 1.347477 1 5 ## ageent | 318 65.09343 3.19148 60.005 73.93 ## death | 318 .2767296 .4480867 0 1 ## cvdeath | 318 .0691824 .254164 0 1 ## alc | 318 1.031447 1.111576 0 3 ## -------------+--------------------------------------------------------- ## smokenum | 317 1.388013 1.649007 0 5 ## hdlc | 301 .9880432 .3728258 .185 2.411 ## diabp | 314 91.08917 15.12942 55 159 ## sysbp | 314 154.8121 28.18775 95 243 ## chdstart | 290 .1310345 .3380214 0 1 ## -------------+--------------------------------------------------------- ## days | 318 2532.101 940.5925 6 3579 ## years | 318 6.932514 2.575202 .0164271 9.798768 ## bmi | 283 23.25392 4.174109 11.25 36.38 ## id | 318 159.5 91.94292 1 318 ## timein | 318 6210 0 6210 6210 ## -------------+--------------------------------------------------------- ## timeout | 318 8742.101 940.5925 6216 9789 ## y | 318 6.932514 2.575202 .0164271 9.798768 ## timebth | 318 -17565.37 1165.688 -20792.93 -15706.83 ## ## . ## . help trinmlsh COHORT STUDY OF RISK FACTORS FOR MORTALITY AMONG MALES IN TRINIDAD All males aged 35-74 years who were living in two neighbouring suburbs of Port of Spain, Trinidad, in March 1977 were eligible and entered into the study. Baseline data were recorded for 1,343 men on a range of risk factors including ethnic group, blood pressure, glucoose and lipoprotein concentrations, diabetes mellitus, and cigarette and alchool consumption. All subjects were then visited annually at home, and morbidity and mortality records were compiled. Regular inspection of hospital records, death registers and obitaries were also used to update the records. Those who had moved away (or abroad) were contacted annually by postal questionnaire and were also seen if they returned to to Port of Spain. By these means, loss to follow-up was kept very low. Follow-up of the study cohort finished at the end of 1986, giving a study period of almost ten years. The file trinmlsh contains data on selected risk factors for the subset of men aged 60 years or over. There were 318 men in this group, and 88 deaths were recorded. Of these deaths, 22 were attributed to cardiovascular disease. The file holds the following variables: ethgp ethnic group (1=African,2=Indian,3=European,4=mixed,5=Chin/Sem) ageent age in years at first survey death death from any cause (0=no,1=yes) cvdeath death from CV disease (0=no,1=yes) alc Drinks per week (0=none,1=1-4,2=5-14,3=15+) smokenum No. cigs per day (0=non-sm,1=ex,2=1-9,3=10-19,4=20-29,5=30+) hdlc HDL cholesterol diabp diastolic BP (mm Hg) sysbp systolic BP (mm Hg) chdstart heart disease at time of entry (0=no,1=yes) days days of follow-up years years of follow-up bmi body mass index (wt/(ht*ht)) id Subject identifier timein Date of entry (days since 1/1/1960) timeout Date of exit (days since 1/1/1960) timebth Date of birth (days since 1/1/1960) 我們從數據的簡介和變量名字中不難猜出，death 是該研究對象的總死亡結果變量，cvdeath 則特別是死於心血管疾病的結果變量。另外 years 和 y 是內容相同的追蹤時間長度變量，單位是“年”，另一個含有相同信息的時間變量是 days “日”。 117.2 Q2 分析該數據中男性的總死亡 death，繪製總體人羣的一張 Kaplan-Meier 生存曲線圖。 ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use trinmlsh ## ## . ## . stset timeout, fail(death) origin(timein) enter(timein) scale(365.25) id(id) ## ## id: id ## failure event: death != 0 &amp; death &lt; . ## obs. time interval: (timeout[_n-1], timeout] ## enter on or after: time timein ## exit on or before: failure ## t for analysis: (time-origin)/365.25 ## origin: time timein ## ## ------------------------------------------------------------------------------ ## 318 total observations ## 0 exclusions ## ------------------------------------------------------------------------------ ## 318 observations remaining, representing ## 318 subjects ## 88 failures in single-failure-per-subject data ## 2,204.539 total analysis time at risk and under observation ## at risk from t = 0 ## earliest observed entry t = 0 ## last observed exit t = 9.798768 ## ## . 在 Stata 繪製 Kaplan-Meier 生存曲線極其簡單： sts graph, saving(plot1) 圖 117.1: sts graph, saving(plot1) 117.3 Q3 使用 sts list 命令來查看該數據中第1，3，和5年時的累計生存概率 (cumulative survival probability)。 ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use trinmlsh ## ## . quietly stset timeout, fail(death) origin(timein) enter(timein) scale(365.25) ## &gt; id(id) ## ## . sts list, at(1, 3, 5) ## ## failure _d: death ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## enter on or after: time timein ## id: id ## ## Beg. Survivor Std. ## Time Total Fail Function Error [95% Conf. Int.] ## ------------------------------------------------------------------------------- ## 1 303 16 0.9497 0.0123 0.9192 0.9689 ## 3 284 18 0.8930 0.0173 0.8536 0.9224 ## 5 256 26 0.8107 0.0220 0.7630 0.8497 ## ------------------------------------------------------------------------------- ## Note: Survivor function is calculated over full data and evaluated at indicated ## times; it is not calculated from aggregates shown at left. ## ## . 117.4 Q4 給Q2 的 Kaplan-Meier 曲線添加 95% 信賴區間: sts graph, ci saving(plot1, replace) 圖 117.2: sts graph, ci saving(plot1, replace) 117.5 Q5 關注變量 smokenum， 查看它的詳細內容。 ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use trinmlsh ## ## . quietly stset timeout, fail(death) origin(timein) enter(timein) scale(365.25) ## &gt; id(id) ## ## . tab smokenum ## ## No. of | ## cigarettes | ## per day | Freq. Percent Cum. ## ------------+----------------------------------- ## non-smok | 140 44.16 44.16 ## ex-smoke | 68 21.45 65.62 ## 1-9 cigs | 29 9.15 74.76 ## 10-19 ci | 30 9.46 84.23 ## 20-29 ci | 26 8.20 92.43 ## 30+ cigs | 24 7.57 100.00 ## ------------+----------------------------------- ## Total | 317 100.00 ## ## . tab smokenum, nolabel ## ## No. of | ## cigarettes | ## per day | Freq. Percent Cum. ## ------------+----------------------------------- ## 0 | 140 44.16 44.16 ## 1 | 68 21.45 65.62 ## 2 | 29 9.15 74.76 ## 3 | 30 9.46 84.23 ## 4 | 26 8.20 92.43 ## 5 | 24 7.57 100.00 ## ------------+----------------------------------- ## Total | 317 100.00 ## ## . 生成一個新的變量區分對象是否是現在有吸菸習慣 “current smoker”。比較現在有吸菸習慣和無吸菸習慣的兩組對象的生存曲線，這兩條曲線之間是否有（統計學上的）不同？ ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use trinmlsh ## ## . quietly stset timeout, fail(death) origin(timein) enter(timein) scale(365.25) ## &gt; id(id) ## ## . gen smokstatus = smokenum &gt;= 2 if smokenum != . ## (1 missing value generated) ## ## . label define smokstatus 0 &quot;non-smokers&quot; 1 &quot;current smokers&quot; ## ## . label value smokstatus smokstatus ## ## . 繪製兩組人的生存概率曲線，需要用到 by(smokstatus) 選項。 sts graph, by(smokstatus) 圖 117.3: sts graph, by(smokstatus) 可以看到吸菸和不吸菸兩組人的生存曲線在追蹤到第四年左右之前都十分相似。但是再往後的觀察隨訪時間裏，吸菸者的希望概率似乎要更高。 117.6 Q6 檢驗吸菸習慣不同的兩組實驗對象的生存曲線在整個隨訪過程中是否有統計學意義上的不同？ ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use trinmlsh ## ## . quietly stset timeout, fail(death) origin(timein) enter(timein) scale(365.25) ## &gt; id(id) ## ## . gen smokstatus = smokenum &gt;= 2 if smokenum != . ## (1 missing value generated) ## ## . label define smokstatus 0 &quot;non-smokers&quot; 1 &quot;current smokers&quot; ## ## . label value smokstatus smokstatus ## ## . sts test smokstatus ## ## failure _d: death ## analysis time _t: (timeout-origin)/365.25 ## origin: time timein ## enter on or after: time timein ## id: id ## ## ## Log-rank test for equality of survivor functions ## ------------------------------------------------ ## ## | Events Events ## smokstatus | observed expected ## ----------------+------------------------- ## non-smokers | 48 57.86 ## current smokers | 40 30.14 ## ----------------+------------------------- ## Total | 88 88.00 ## ## chi2(1) = 4.91 ## Pr&gt;chi2 = 0.0267 ## ## . Logrank 檢驗結果提示吸菸和不吸菸兩組人的生存曲線確實存在統計學上的差異 (p = 0.03)。 117.7 Q7 打開 mortality 數據。該隊列研究在北部尼日利亞地區實施了三年。我們主要在這裏觀察分析高血壓和總死亡之間的關係。 ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use mortality, clear ## ## . describe ## ## Contains data from mortality.dta ## obs: 4,298 ## vars: 28 23 Oct 2013 11:45 ## ------------------------------------------------------------------------------- ## storage display value ## variable name type format label variable label ## ------------------------------------------------------------------------------- ## id int %8.0g Individual ID ## area float %9.0g area Area ## district str7 %7s District ## vcode byte %8.0g Village ID ## compound_size float %9.0g Compound size ## age byte %8.0g Age in years ## sex byte %8.0g sex Sex ## ethnic byte %8.0g ethnic Ethnic ## religion byte %11.0g religion Religion ## occupation byte %27.0g occupation ## Occupation ## education byte %22.0g education ## Education ## mfpermg float %9.0g Microfilarial load per mg ## vimp float %17.0g vimp Visually impaired ## died float %9.0g Died ## systolic int %8.0g Systolic BP (mmHg) ## diastolic int %8.0g Diastolic BP (mmHg) ## pulse int %8.0g Pulse rate/minute ## weight int %8.0g Weight (kgs) ## height int %8.0g Height (cms) ## map float %9.0g Mean Arterial Pressure ## bmi float %9.0g BMI ## agegrp float %9.0g agegrp Age group (years) ## mfgrp float %10.0g mfgrp Microfilarial load/mg (grouped) ## mfpos float %9.0g Microfilarial infection ## agebin float %9.0g agebin Age (2 groups) ## bmigrp float %12.0g bmigrp BMI (3 groups) ## enter long %dD_m_Y Date of entry to study ## exit float %dD_m_Y Date of exit from study ## ------------------------------------------------------------------------------- ## Sorted by: id ## ## . 117.8 Q8 使用 gen 命令生成一個新的變量，根據收縮期血壓 (based on systolic blood pressure) 定義實驗對象是否有高血壓。 ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use mortality, clear ## ## . gen hyper = . ## (4,298 missing values generated) ## ## . replace hyper = 0 if systolic &lt; 140 ## (3,747 real changes made) ## ## . replace hyper = 1 if systolic &gt;= 140 &amp; systolic != . ## (516 real changes made) ## ## . 117.9 Q9 使用 stset 命令準備你的數據，讓它可以在 Stata 裏實施生存分析。 ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use mortality, clear ## ## . stset exit, failure(died) enter(enter) origin(enter) id(id) scale(365.25) ## ## id: id ## failure event: died != 0 &amp; died &lt; . ## obs. time interval: (exit[_n-1], exit] ## enter on or after: time enter ## exit on or before: failure ## t for analysis: (time-origin)/365.25 ## origin: time enter ## ## ------------------------------------------------------------------------------ ## 4,298 total observations ## 0 exclusions ## ------------------------------------------------------------------------------ ## 4,298 observations remaining, representing ## 4,298 subjects ## 137 failures in single-failure-per-subject data ## 11,457.357 total analysis time at risk and under observation ## at risk from t = 0 ## earliest observed entry t = 0 ## last observed exit t = 3.249829 ## ## . 117.10 Q10 使用 strate 命令計算有高血壓和無高血壓兩組人個字的總死亡率 all-cause mortality rate。 ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use mortality, clear ## ## . gen hyper = . ## (4,298 missing values generated) ## ## . quietly replace hyper = 0 if systolic &lt; 140 ## ## . quietly replace hyper = 1 if systolic &gt;= 140 &amp; systolic != . ## ## . quietly stset exit, failure(died) enter(enter) origin(enter) id(id) scale(365 ## &gt; .25) ## ## . strate hyper, per(1000) ## ## failure _d: died ## analysis time _t: (exit-origin)/365.25 ## origin: time enter ## enter on or after: time enter ## id: id ## ## Estimated failure rates ## Number of records = 4263 ## ## +---------------------------------------------------+ ## | hyper D Y Rate Lower Upper | ## |---------------------------------------------------| ## | 0 94 9.9879 9.4114 7.6888 11.5199 | ## | 1 40 1.3819 28.9456 21.2322 39.4611 | ## +---------------------------------------------------+ ## Notes: Rate = D/Y = failures/person-time (per 1000). ## Lower and Upper are bounds of 95% confidence intervals. ## ## ## . 計算結果是高血壓的實驗對象中，總死亡率達到每 1000 人年 28.95，沒有高血壓的人羣的死亡率是9.4 每 1000人年。 117.11 Q11 使用 stmh 命令計算高血壓和總死亡之間的關係，比較有高血壓的人相對無高血壓人的總體死亡率比 rate ratio。 ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use mortality, clear ## ## . gen hyper = . ## (4,298 missing values generated) ## ## . quietly replace hyper = 0 if systolic &lt; 140 ## ## . quietly replace hyper = 1 if systolic &gt;= 140 &amp; systolic != . ## ## . quietly stset exit, failure(died) enter(enter) origin(enter) id(id) scale(365 ## &gt; .25) ## ## . stmh hyper ## ## failure _d: died ## analysis time _t: (exit-origin)/365.25 ## origin: time enter ## enter on or after: time enter ## id: id ## ## Mantel-Haenszel estimate of the rate ratio ## comparing hyper==1 vs. hyper==0 ## ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 3.076 39.30 0.0000 2.124 4.453 ## ------------------------------------------------------------------------ ## ## . 計算死亡率比的結果表示，有高血壓的實驗對象色死亡率是無高血壓的人死亡率的三倍還多。 117.12 Q12-13 這時候，我們使用 browse 瀏覽正在分析的數據時，會發現最後幾個新增的變量。 圖 117.4: New variables generated by Stata to calcuate rate.(1) 圖 117.5: New variables generated by Stata to calcuate rate.(2) 新增的幾個變量分別定義爲: _st is an indicator variable taking the value 0 or 1. 1 indicates records included in the analyses, 0 indicates records excluded from analyses, for example if the exit time was earlier than the entry time _d records whether the individual experienced the event (=1) or not (=0). In this simple situation _d = died (try tab _d died) _t is the time the person exited the study (in years since entry to the study) _t0 is the time the person entered the study (in years since entry to the study, so zero for everyone) 117.13 Q14 製作一個生存表格，只保留高血壓人羣。 ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use mortality, clear ## ## . gen hyper = . ## (4,298 missing values generated) ## ## . quietly replace hyper = 0 if systolic &lt; 140 ## ## . quietly replace hyper = 1 if systolic &gt;= 140 &amp; systolic != . ## ## . quietly stset exit, failure(died) enter(enter) origin(enter) id(id) scale(365 ## &gt; .25) ## ## . sts list if hyper == 1 ## ## failure _d: died ## analysis time _t: (exit-origin)/365.25 ## origin: time enter ## enter on or after: time enter ## id: id ## ## At Net Survivor Std. ## Time Risk Fail Lost Function Error [95% Conf. Int.] ## ------------------------------------------------------------------------ ## .23 516 1 0 0.9981 0.0019 0.9863 0.9997 ## .2533 515 1 0 0.9961 0.0027 0.9846 0.9990 ## .3559 514 1 0 0.9942 0.0033 0.9821 0.9981 ## .3587 513 0 1 0.9942 0.0033 0.9821 0.9981 ## .3669 512 0 1 0.9942 0.0033 0.9821 0.9981 ## .3723 511 1 0 0.9922 0.0039 0.9795 0.9971 ## .3792 510 1 0 0.9903 0.0043 0.9768 0.9959 ## .3888 509 1 0 0.9883 0.0047 0.9743 0.9947 ## .4298 508 1 0 0.9864 0.0051 0.9717 0.9935 ## .4353 507 0 1 0.9864 0.0051 0.9717 0.9935 ## .4408 506 1 0 0.9845 0.0055 0.9692 0.9922 ## .4846 505 2 0 0.9806 0.0061 0.9642 0.9895 ## .5421 503 0 1 0.9806 0.0061 0.9642 0.9895 ## .6886 502 0 1 0.9806 0.0061 0.9642 0.9895 ## .8378 501 0 1 0.9806 0.0061 0.9642 0.9895 ## .9363 500 0 1 0.9806 0.0061 0.9642 0.9895 ## .9514 499 0 1 0.9806 0.0061 0.9642 0.9895 ## 1.003 498 1 0 0.9786 0.0064 0.9617 0.9881 ## 1.012 497 0 1 0.9786 0.0064 0.9617 0.9881 ## 1.016 496 1 0 0.9766 0.0067 0.9592 0.9867 ## 1.047 495 1 0 0.9746 0.0069 0.9567 0.9852 ## 1.05 494 1 0 0.9727 0.0072 0.9543 0.9837 ## 1.055 493 0 1 0.9727 0.0072 0.9543 0.9837 ## 1.336 492 1 0 0.9707 0.0075 0.9519 0.9822 ## 1.377 491 1 0 0.9687 0.0077 0.9494 0.9807 ## 1.399 490 1 0 0.9667 0.0079 0.9470 0.9792 ## 1.418 489 0 1 0.9667 0.0079 0.9470 0.9792 ## 1.425 488 2 0 0.9628 0.0084 0.9423 0.9761 ## 1.477 486 0 1 0.9628 0.0084 0.9423 0.9761 ## 1.569 485 1 0 0.9608 0.0086 0.9399 0.9745 ## 1.574 484 1 0 0.9588 0.0088 0.9375 0.9729 ## 1.585 483 1 0 0.9568 0.0090 0.9352 0.9714 ## 1.619 482 1 0 0.9548 0.0092 0.9328 0.9698 ## 1.941 481 1 1 0.9528 0.0094 0.9305 0.9681 ## 2.029 479 1 0 0.9509 0.0096 0.9281 0.9665 ## 2.04 478 1 0 0.9489 0.0098 0.9258 0.9649 ## 2.277 477 0 1 0.9489 0.0098 0.9258 0.9649 ## 2.286 476 0 1 0.9489 0.0098 0.9258 0.9649 ## 2.289 475 1 0 0.9469 0.0100 0.9235 0.9633 ## 2.311 474 0 2 0.9469 0.0100 0.9235 0.9633 ## 2.313 472 0 3 0.9469 0.0100 0.9235 0.9633 ## 2.316 469 0 2 0.9469 0.0100 0.9235 0.9633 ## 2.319 467 0 5 0.9469 0.0100 0.9235 0.9633 ## 2.322 462 0 2 0.9469 0.0100 0.9235 0.9633 ## 2.326 460 1 0 0.9448 0.0101 0.9211 0.9616 ## 2.404 459 0 1 0.9448 0.0101 0.9211 0.9616 ## 2.407 458 0 2 0.9448 0.0101 0.9211 0.9616 ## 2.409 456 0 3 0.9448 0.0101 0.9211 0.9616 ## 2.412 453 0 7 0.9448 0.0101 0.9211 0.9616 ## 2.415 446 0 4 0.9448 0.0101 0.9211 0.9616 ## 2.416 442 1 0 0.9427 0.0103 0.9185 0.9598 ## 2.439 441 0 3 0.9427 0.0103 0.9185 0.9598 ## 2.442 438 0 2 0.9427 0.0103 0.9185 0.9598 ## 2.445 436 0 5 0.9427 0.0103 0.9185 0.9598 ## 2.448 431 0 3 0.9427 0.0103 0.9185 0.9598 ## 2.45 428 0 2 0.9427 0.0103 0.9185 0.9598 ## 2.453 426 0 5 0.9427 0.0103 0.9185 0.9598 ## 2.471 421 1 0 0.9404 0.0106 0.9159 0.9580 ## 2.472 420 1 0 0.9382 0.0108 0.9132 0.9561 ## 2.478 419 1 0 0.9360 0.0110 0.9106 0.9543 ## 2.48 418 0 4 0.9360 0.0110 0.9106 0.9543 ## 2.483 414 0 3 0.9360 0.0110 0.9106 0.9543 ## 2.486 411 0 9 0.9360 0.0110 0.9106 0.9543 ## 2.489 402 0 14 0.9360 0.0110 0.9106 0.9543 ## 2.49 388 0 1 0.9360 0.0110 0.9106 0.9543 ## 2.491 387 2 8 0.9311 0.0114 0.9048 0.9503 ## 2.494 377 1 7 0.9287 0.0117 0.9019 0.9483 ## 2.497 369 1 3 0.9261 0.0119 0.8989 0.9462 ## 2.5 365 0 5 0.9261 0.0119 0.8989 0.9462 ## 2.502 360 0 2 0.9261 0.0119 0.8989 0.9462 ## 2.505 358 0 3 0.9261 0.0119 0.8989 0.9462 ## 2.639 355 0 2 0.9261 0.0119 0.8989 0.9462 ## 2.642 353 0 8 0.9261 0.0119 0.8989 0.9462 ## 2.645 345 0 8 0.9261 0.0119 0.8989 0.9462 ## 2.648 337 1 7 0.9234 0.0122 0.8956 0.9440 ## 2.65 329 0 6 0.9234 0.0122 0.8956 0.9440 ## 2.653 323 0 6 0.9234 0.0122 0.8956 0.9440 ## 2.656 317 0 8 0.9234 0.0122 0.8956 0.9440 ## 2.667 309 0 1 0.9234 0.0122 0.8956 0.9440 ## 2.68 308 0 1 0.9234 0.0122 0.8956 0.9440 ## 2.682 307 1 1 0.9204 0.0125 0.8919 0.9416 ## 2.684 305 1 0 0.9174 0.0128 0.8882 0.9392 ## 2.715 304 1 0 0.9143 0.0131 0.8846 0.9367 ## 2.719 303 0 1 0.9143 0.0131 0.8846 0.9367 ## 2.721 302 0 1 0.9143 0.0131 0.8846 0.9367 ## 2.727 301 0 3 0.9143 0.0131 0.8846 0.9367 ## 2.73 298 0 14 0.9143 0.0131 0.8846 0.9367 ## 2.732 284 0 6 0.9143 0.0131 0.8846 0.9367 ## 2.735 278 0 4 0.9143 0.0131 0.8846 0.9367 ## 2.738 274 0 4 0.9143 0.0131 0.8846 0.9367 ## 2.741 270 0 13 0.9143 0.0131 0.8846 0.9367 ## 2.743 257 0 4 0.9143 0.0131 0.8846 0.9367 ## 2.746 253 0 5 0.9143 0.0131 0.8846 0.9367 ## 2.757 248 0 1 0.9143 0.0131 0.8846 0.9367 ## 2.793 247 0 1 0.9143 0.0131 0.8846 0.9367 ## 2.812 246 0 1 0.9143 0.0131 0.8846 0.9367 ## 2.815 245 0 7 0.9143 0.0131 0.8846 0.9367 ## 2.817 238 0 3 0.9143 0.0131 0.8846 0.9367 ## 2.823 235 0 2 0.9143 0.0131 0.8846 0.9367 ## 2.825 233 0 4 0.9143 0.0131 0.8846 0.9367 ## 2.828 229 0 4 0.9143 0.0131 0.8846 0.9367 ## 2.831 225 0 3 0.9143 0.0131 0.8846 0.9367 ## 2.834 222 0 1 0.9143 0.0131 0.8846 0.9367 ## 2.875 221 0 2 0.9143 0.0131 0.8846 0.9367 ## 2.899 219 0 1 0.9143 0.0131 0.8846 0.9367 ## 2.962 218 0 1 0.9143 0.0131 0.8846 0.9367 ## 2.965 217 0 8 0.9143 0.0131 0.8846 0.9367 ## 2.968 209 0 7 0.9143 0.0131 0.8846 0.9367 ## 2.971 202 0 9 0.9143 0.0131 0.8846 0.9367 ## 2.973 193 0 20 0.9143 0.0131 0.8846 0.9367 ## 2.976 173 0 8 0.9143 0.0131 0.8846 0.9367 ## 2.979 165 0 5 0.9143 0.0131 0.8846 0.9367 ## 2.982 160 0 3 0.9143 0.0131 0.8846 0.9367 ## 2.984 157 0 3 0.9143 0.0131 0.8846 0.9367 ## 2.99 154 0 2 0.9143 0.0131 0.8846 0.9367 ## 2.995 152 0 1 0.9143 0.0131 0.8846 0.9367 ## 3.001 151 0 1 0.9143 0.0131 0.8846 0.9367 ## 3.039 150 0 4 0.9143 0.0131 0.8846 0.9367 ## 3.042 146 0 2 0.9143 0.0131 0.8846 0.9367 ## 3.044 144 0 3 0.9143 0.0131 0.8846 0.9367 ## 3.047 141 0 4 0.9143 0.0131 0.8846 0.9367 ## 3.05 137 0 2 0.9143 0.0131 0.8846 0.9367 ## 3.053 135 0 3 0.9143 0.0131 0.8846 0.9367 ## 3.061 132 0 1 0.9143 0.0131 0.8846 0.9367 ## 3.072 131 0 2 0.9143 0.0131 0.8846 0.9367 ## 3.08 129 0 7 0.9143 0.0131 0.8846 0.9367 ## 3.083 122 0 4 0.9143 0.0131 0.8846 0.9367 ## 3.086 118 0 3 0.9143 0.0131 0.8846 0.9367 ## 3.088 115 0 3 0.9143 0.0131 0.8846 0.9367 ## 3.091 112 0 1 0.9143 0.0131 0.8846 0.9367 ## 3.113 111 0 1 0.9143 0.0131 0.8846 0.9367 ## 3.116 110 0 6 0.9143 0.0131 0.8846 0.9367 ## 3.118 104 0 12 0.9143 0.0131 0.8846 0.9367 ## 3.121 92 0 8 0.9143 0.0131 0.8846 0.9367 ## 3.143 84 0 1 0.9143 0.0131 0.8846 0.9367 ## 3.146 83 0 8 0.9143 0.0131 0.8846 0.9367 ## 3.149 75 0 13 0.9143 0.0131 0.8846 0.9367 ## 3.151 62 0 19 0.9143 0.0131 0.8846 0.9367 ## 3.157 43 0 1 0.9143 0.0131 0.8846 0.9367 ## 3.159 42 0 4 0.9143 0.0131 0.8846 0.9367 ## 3.162 38 0 8 0.9143 0.0131 0.8846 0.9367 ## 3.165 30 0 15 0.9143 0.0131 0.8846 0.9367 ## 3.168 15 0 10 0.9143 0.0131 0.8846 0.9367 ## 3.17 5 0 4 0.9143 0.0131 0.8846 0.9367 ## ------------------------------------------------------------------------ ## Note: Net Lost equals the number lost minus the number who entered. ## ## . 117.14 Q15 繪製一張比較有高血壓和無高血壓人羣的 Kaplan Meier 生存曲線。 sts graph, by(hyper) 圖 117.6: sts graph, by(hyper) 117.15 Q16 給這個生存曲線增加 95% 信賴區間示意。 sts graph, by(hyper) ci 圖 117.7: sts graph, by(hyper) ci 117.16 Q17 Kaplan Meier 生存曲線繪製的是累計生存概率，我們再來嘗試繪製累計死亡率， sts graph, by(hyper) ci failure ylabel(0 0.05 0.10 0.15 0.20) 圖 117.8: sts graph, by(hyper) ci failure ylabel(0 0.05 0.10 0.15 0.20) 117.17 Q18 使用 Logrank 檢驗法檢驗有無高血壓之間是否存在統計學上的生存曲線差異。 ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use mortality, clear ## ## . gen hyper = . ## (4,298 missing values generated) ## ## . quietly replace hyper = 0 if systolic &lt; 140 ## ## . quietly replace hyper = 1 if systolic &gt;= 140 &amp; systolic != . ## ## . quietly stset exit, failure(died) enter(enter) origin(enter) id(id) scale(365 ## &gt; .25) ## ## . sts test hyper ## ## failure _d: died ## analysis time _t: (exit-origin)/365.25 ## origin: time enter ## enter on or after: time enter ## id: id ## ## ## Log-rank test for equality of survivor functions ## ------------------------------------------------ ## ## | Events Events ## hyper | observed expected ## ------+------------------------- ## 0 | 94 117.91 ## 1 | 40 16.09 ## ------+------------------------- ## Total | 134 134.00 ## ## chi2(1) = 40.36 ## Pr&gt;chi2 = 0.0000 ## ## . 我們發現數據提供了極強的證據證明有無高血壓人羣之間確實是存在生存曲線的統計學差異。 117.18 Q19 這次我們重新使用 stset 命令來準備生存數據，但是我們不指定時間的起點 origin: ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use mortality, clear ## ## . stset exit, failure(died) enter(enter) id(id) scale(365.25) ## ## id: id ## failure event: died != 0 &amp; died &lt; . ## obs. time interval: (exit[_n-1], exit] ## enter on or after: time enter ## exit on or before: failure ## t for analysis: time/365.25 ## ## ------------------------------------------------------------------------------ ## 4,298 total observations ## 0 exclusions ## ------------------------------------------------------------------------------ ## 4,298 observations remaining, representing ## 4,298 subjects ## 137 failures in single-failure-per-subject data ## 11,457.357 total analysis time at risk and under observation ## at risk from t = 0 ## earliest observed entry t = 28.94182 ## last observed exit t = 32.21355 ## ## . 此時，這個數據中因這一行命令產生的新變量 _t 其實是每個實驗對象從時間點 1960/01/01 到他們各自離開實驗追蹤的時間長度。而 _t0 則是每個實驗對象從時間點 1960/01/01 到他們各自參加這個實驗的時間長度。當我們使用 strate 和 stmh 來評價高血壓和死亡之間的關係的時候會得到和之前相同的分析結果。 ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use mortality, clear ## ## . gen hyper = . ## (4,298 missing values generated) ## ## . quietly replace hyper = 0 if systolic &lt; 140 ## ## . quietly replace hyper = 1 if systolic &gt;= 140 &amp; systolic != . ## ## . quietly stset exit, failure(died) enter(enter) id(id) scale(365.25) ## ## . strate hyper, per(1000) ## ## failure _d: died ## analysis time _t: exit/365.25 ## enter on or after: time enter ## id: id ## ## Estimated failure rates ## Number of records = 4263 ## ## +---------------------------------------------------+ ## | hyper D Y Rate Lower Upper | ## |---------------------------------------------------| ## | 0 94 9.9879 9.4114 7.6888 11.5199 | ## | 1 40 1.3819 28.9456 21.2322 39.4611 | ## +---------------------------------------------------+ ## Notes: Rate = D/Y = failures/person-time (per 1000). ## Lower and Upper are bounds of 95% confidence intervals. ## ## ## . stmh hyper ## ## failure _d: died ## analysis time _t: exit/365.25 ## enter on or after: time enter ## id: id ## ## Mantel-Haenszel estimate of the rate ratio ## comparing hyper==1 vs. hyper==0 ## ## ------------------------------------------------------------------------ ## Rate ratio chi2 P&gt;chi2 [95% Conf. Interval] ## ------------------------------------------------------------------------ ## 3.076 39.30 0.0000 2.124 4.453 ## ------------------------------------------------------------------------ ## ## . 那現在繪製的 Kaplan-Meier 生存曲線會變成什麼樣子呢？ sts graph, by(hyper) 圖 117.9: sts graph, by(hyper) without specifying origin in stset command. 所以，當我們忘記設定實驗的起點時間 origin 時，Stata自動把所有實驗的時間起點設置成 1960/01/01。 "],["無匹配的病例對照研究的分析方法-analysis-of-unmatched-case-control-studies.html", "第 118 章 （無匹配的）病例對照研究的分析方法 analysis of unmatched case-control studies 118.1 Q1 數據讀入 118.2 Q2 計算粗比值比 118.3 Q3 年齡的混雜或者交互 confounding or effect-mnodifier 118.4 Q4 宗教信仰 religion rel 和HIV之間的關係 118.5 Q5 性伴侶人數 118.6 Q6 分析劑量-反應關係 dose-response relationship", " 第 118 章 （無匹配的）病例對照研究的分析方法 analysis of unmatched case-control studies 本次練習使用的數據是在坦桑尼亞實施的病例對照研究，數據名是 mwanza.dta。你可以使用 help mwanza 來進一步瞭解這個研究和數據的各個變量。 118.1 Q1 數據讀入 按照要求生成兩個變量： ed2: 1 = 表示未接受過教育; 2 = 接受過1年以上的正規教育。 age2: 1 = 15-24; 2 = 25-34; 3 = 35+ 歲 ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use mwanza ## ## . ## . * create a new variable for education ## ## . generate ed2 = ed ## ## . recode ed2 3/4 = 2 ## (ed2: 376 changes made) ## ## . label define ed2label 1 &quot;none/adult only&quot; 2 &quot;&gt;=1 years&quot; ## ## . label val ed2 ed2label ## ## . label var ed2 &quot;education&quot; ## ## . ## . * check the recoding worked as wanted ## ## . tabulate ed2 ed ## ## | Education ## education | 1 2 3 4 | Total ## ----------------+--------------------------------------------+---------- ## none/adult only | 312 0 0 0 | 312 ## &gt;=1 years | 0 75 365 11 | 451 ## ----------------+--------------------------------------------+---------- ## Total | 312 75 365 11 | 763 ## ## . ## . ## . * similarly for age ## ## . ## . generate age2 = age1 ## ## . recode age2 2 = 1 3/4 = 2 5/6 = 3 ## (age2: 654 changes made) ## ## . label define age2label 1 &quot;15-24&quot; 2 &quot;25-34&quot; 3 &quot;35+&quot; ## ## . label val age2 age2label ## ## . label var age2 &quot;Age&quot; ## ## . tabulate age2 age1 ## ## | Age group ## Age | 1 2 3 4 5 | Total ## -----------+-------------------------------------------------------+---------- ## 15-24 | 109 165 0 0 0 | 274 ## 25-34 | 0 0 123 118 0 | 241 ## 35+ | 0 0 0 0 137 | 248 ## -----------+-------------------------------------------------------+---------- ## Total | 109 165 123 118 137 | 763 ## ## ## | Age group ## Age | 6 | Total ## -----------+-----------+---------- ## 15-24 | 0 | 274 ## 25-34 | 0 | 241 ## 35+ | 111 | 248 ## -----------+-----------+---------- ## Total | 111 | 763 ## ## . help mwanza Case control study of risk factors for HIV in women, Mwanza Tanzania As part of a prospective study of the impact of STD control on the incidence of HIV infection in Mwanza, Tanzania, a baseline survey of HIV prevalence was carried out in 12 communities. All seropositive women (15 years and above) were revisited and, where possible) interviewed about potential risk factors for HIV infection using a standard questionnaire. In addition to interviewing HIV +ve women, a random sample of HIV -ve women were selected from the population lists prepared during the baseline survey and these women were also revisited and, where possible, interviewed. No matching of controls with cases was performed. idno identity number comp community 1-12 case 1=case; 0=control age1 age group: 1=15-19 2=20-24 3=25-29 4=30-34 5=35-44 6=45-54 ed education: 1=none/adult only 2=1-3 years 3=4-6 years 4=7+ years eth ethnic group: 1=Sukuma 2=Mkara 3=other 9=missing rel religion: 1=Moslem 2=Catholic 3=Protestant 4=other 9=missing msta marital status: 1=currently married 2=divorced/widowed 3=never married 9=missing bld blood transfusion in last 5 years: 1=no 2=yes 9=missing inj injections in past 1 year: 1=none 2=1 3=2-4 4=5-9 5=10+ 9=missing skin skin incisions or tattoos: 1=no 2=yes 9=missing fsex age at first sex: 1=&lt;15 2=15-19 3=20+ 4=never 9=missing npa number of sexual partners ever: 1=0-1 2=2-4 3=5-9 4=10-19 5=20-49 6=50+ 9=missing pa1 sex partners in last year: 1=none 2=1 3=2 4=3-4 9=missing usedc ever used a condom: 1=no 2=yes 9=missing ud genital ulcer or discharge in past year: 1=no 2=yes 9=missing ark perceived risk of HIV/AIDS: 1=none/slight 2=quite likely 3=very likely/already infected 4=don&#39;t know srk perceived risk of STDs: 1=none/slight 2=quite likely 3=very likely/already infected 4=don&#39;t know 118.2 Q2 計算粗比值比 以受教育程度爲預測變量，HIV患病與否作爲結果變量，計算粗比值比 crude odds ratio (OR)。 先獲取這倆個變量之間簡單的 \\(2 \\times 2\\) 表格，對他們可能有的關係有個大概的印象： ## . tabulate case ed2, row ## ## +----------------+ ## | Key | ## |----------------| ## | frequency | ## | row percentage | ## +----------------+ ## ## Case/contr | education ## ol | none/adul &gt;=1 years | Total ## -----------+----------------------+---------- ## 0 | 263 311 | 574 ## | 45.82 54.18 | 100.00 ## -----------+----------------------+---------- ## 1 | 49 140 | 189 ## | 25.93 74.07 | 100.00 ## -----------+----------------------+---------- ## Total | 312 451 | 763 ## | 40.89 59.11 | 100.00 ## 進一步計算 Crude OR，分別計算拿不同的教育水平作爲參照 (baseline) 時獲得的粗比值比： ## . mhodds case ed2, c(1, 2) ## ## Maximum likelihood estimate of the odds ratio ## Comparing ed2==1 vs. ed2==2 ## ## ---------------------------------------------------------------- ## Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ## ---------------------------------------------------------------- ## 0.413878 23.25 0.0000 0.285782 0.599391 ## ---------------------------------------------------------------- ## . mhodds case ed2, c(2, 1) ## ## Maximum likelihood estimate of the odds ratio ## Comparing ed2==2 vs. ed2==1 ## ## ---------------------------------------------------------------- ## Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ## ---------------------------------------------------------------- ## 2.416169 23.25 0.0000 1.668360 3.499168 ## ---------------------------------------------------------------- 計算該表格的卡方值 \\(\\chi^2\\)，並檢驗這兩個二進制型變量之間是否存在相關性： ## . tab case ed2, chi exact ## Case/contr | education ## ol | none/adul &gt;=1 years | Total ## -----------+----------------------+---------- ## 0 | 263 311 | 574 ## 1 | 49 140 | 189 ## -----------+----------------------+---------- ## Total | 312 451 | 763 ## Pearson chi2(1) = 23.2789 Pr = 0.000 ## Fisher&#39;s exact = 0.000 ## 1-sided Fisher&#39;s exact = 0.000 其實這裏我們並不需要用到 Fisher’s Exact 檢驗方法，因爲四個空格裏最小的期望值是 \\(\\frac{312 \\times 189}{763} = 77.3 &gt; 5\\)。所以無論你用哪個檢驗方法都會得出相同的結論，也就是數據給出的證據反對該命題的零假設，也就是兩個二進制變量之間無關。 118.3 Q3 年齡的混雜或者交互 confounding or effect-mnodifier 我們希望分析數據來理解受教育水平和是否患有HIV之間的關係受到年齡怎樣的影響。我們先通過不同年齡階層內，教育和HIV之間的關係來看： ## . bysort age2: tab case ed2, row ## ## --------------------------------------------------------------------------------------------------- ## -&gt; age2 = 15-24 ## ## +----------------+ ## | Key | ## |----------------| ## | frequency | ## | row percentage | ## +----------------+ ## ## Case/contr | education ## ol | none/adul &gt;=1 years | Total ## -----------+----------------------+---------- ## 0 | 37 167 | 204 ## | 18.14 81.86 | 100.00 ## -----------+----------------------+---------- ## 1 | 13 57 | 70 ## | 18.57 81.43 | 100.00 ## -----------+----------------------+---------- ## Total | 50 224 | 274 ## | 18.25 81.75 | 100.00 ## ## --------------------------------------------------------------------------------------------------- ## -&gt; age2 = 25-34 ## ## +----------------+ ## | Key | ## |----------------| ## | frequency | ## | row percentage | ## +----------------+ ## ## Case/contr | education ## ol | none/adul &gt;=1 years | Total ## -----------+----------------------+---------- ## 0 | 79 90 | 169 ## | 46.75 53.25 | 100.00 ## -----------+----------------------+---------- ## 1 | 11 61 | 72 ## | 15.28 84.72 | 100.00 ## -----------+----------------------+---------- ## Total | 90 151 | 241 ## | 37.34 62.66 | 100.00 ## ## --------------------------------------------------------------------------------------------------- ## -&gt; age2 = 35+ ## ## +----------------+ ## | Key | ## |----------------| ## | frequency | ## | row percentage | ## +----------------+ ## ## Case/contr | education ## ol | none/adul &gt;=1 years | Total ## -----------+----------------------+---------- ## 0 | 147 54 | 201 ## | 73.13 26.87 | 100.00 ## -----------+----------------------+---------- ## 1 | 25 22 | 47 ## | 53.19 46.81 | 100.00 ## -----------+----------------------+---------- ## Total | 172 76 | 248 ## | 69.35 30.65 | 100.00 我們可以使用 by(age2) 選項來計算年齡調整之後的比值比，評價受教育水平和是否患有HIV之間的關係： ## . mhodds case ed2, by(age2) ## ## Maximum likelihood estimate of the odds ratio ## Comparing ed2==2 vs. ed2==1 ## by age2 ## ## ------------------------------------------------------------------------------- ## age2 | Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ## ----------+-------------------------------------------------------------------- ## 15-24 | 0.971442 0.01 0.9354 0.48188 1.95837 ## 25-34 | 4.867677 21.28 0.0000 2.31121 10.25188 ## 35+ | 2.395556 7.10 0.0077 1.23412 4.65001 ## ------------------------------------------------------------------------------- ## ## Mantel-Haenszel estimate controlling for age2 ## ---------------------------------------------------------------- ## Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ## ---------------------------------------------------------------- ## 2.330972 19.46 0.0000 1.582460 3.433536 ## ---------------------------------------------------------------- ## ## Test of homogeneity of ORs (approx): chi2(2) = 10.31 ## Pr&gt;chi2 = 0.0058 可以清楚的看見，當調整了年齡之後，比較受過1年以上正規教育的人，未受過教育的人患有HIV的比值比 OR 從 2.42 變成了 2.33 (95%CI: 1.58, 3.43)。也就是說數據支持受教育水平和是否患有HIV之間有很強的相關性。但是我們關注到最後一行進行交互作用檢驗部分給出的結果： ## Test of homogeneity of ORs (approx): chi2(2) = 10.31 ## Pr&gt;chi2 = 0.0058 也就是數據同樣發現的一點是，評價教育水平, HIV之間關係的 OR 在不同的年齡分層之間有顯著的不同 (the association between education and HIV infection varies with age group)。而且分層的 OR 值中我們看見教育和HIV患病之間並無關係。如果你也認爲，年齡對教育水平和HIV之間的關係造成的是交互作用的話，那麼我們就必須摒棄年齡調整之後的OR值，轉而應該報告每個年齡層的OR值。 118.4 Q4 宗教信仰 religion rel 和HIV之間的關係 前面三個問題具體展示了我們應該如何分析並且理解“年齡”對我們關心的“教育水平和HIV患病與否之間的關係”這一命題的影響。接下來我們嘗試用類似的方法來分析“宗教信仰”這一變量。 值得注意的是，宗教信仰 rel 這個變量裏存在編碼成 9 的缺失值 (missing value)。 ## . recode rel 9=. ## (rel: 1 changes made) 這裏再對結果變量和宗教信仰兩個變量之間製作卡方表格： ## . tabulate case rel, chi row ## ## +----------------+ ## | Key | ## |----------------| ## | frequency | ## | row percentage | ## +----------------+ ## ## Case/contr | Religion ## ol | 1 2 3 4 | Total ## -----------+--------------------------------------------+---------- ## 0 | 28 228 150 167 | 573 ## | 4.89 39.79 26.18 29.14 | 100.00 ## -----------+--------------------------------------------+---------- ## 1 | 20 93 55 21 | 189 ## | 10.58 49.21 29.10 11.11 | 100.00 ## -----------+--------------------------------------------+---------- ## Total | 48 321 205 188 | 762 ## | 6.30 42.13 26.90 24.67 | 100.00 ## ## Pearson chi2(3) = 29.4949 Pr = 0.000 初步表格總結發現宗教信仰和是否患有HIV應該是存在關聯性的。在病例中，宗教信仰 rel = 4 也就是其他信仰的人明顯比例較低。 計算不同宗教信仰層級內的比值比和調整了宗教信仰之後的比值比的過程如下： . mhodds case ed2, by(rel) c(2,1) Maximum likelihood estimate of the odds ratio Comparing ed2==2 vs. ed2==1 by rel ------------------------------------------------------------------------------- rel | Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ----------+-------------------------------------------------------------------- 1 | 2.022222 1.29 0.2562 0.58471 6.99382 2 | 2.252252 7.69 0.0056 1.24857 4.06278 3 | 1.393519 0.79 0.3745 0.66775 2.90811 4 | 2.019724 2.15 0.1425 0.77414 5.26941 ------------------------------------------------------------------------------- Mantel-Haenszel estimate controlling for rel ---------------------------------------------------------------- Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ---------------------------------------------------------------- 1.914248 10.89 0.0010 1.292931 2.834138 ---------------------------------------------------------------- Test of homogeneity of ORs (approx): chi2(3) = 1.03 Pr&gt;chi2 = 0.7931 可以看見各個宗教信仰層級內評估受教育水平和是否患有HIV的OR值沒有劇烈的變化，基本都在2左右 (2.02, 2.25, 1.39, 2.02)。而且評價交互作用的檢驗同質性結果的 p 值是 0.7931，也就是並無證據反對無交互作用的零假設，也就是說，這一數據無法提供證據證明受教育水平和是否患有HIV之間的關係會由於宗教信仰而有顯著差別。調整了宗教信仰變量之後的比值比變成 1.91，小於未調整宗教信仰時的比值比 2.42。值得注意的是，在比較比值比計算結果的時候，我們應該確保不同計算過程中使用的人數和病例數是相同的，所以這裏計算粗比值比應該把宗教信仰爲未知的那名對象從數據中排除之後重新計算： . mhodds case ed2 if rel!=., c(2,1) Maximum likelihood estimate of the odds ratio Comparing ed2==2 vs. ed2==1 ---------------------------------------------------------------- Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ---------------------------------------------------------------- 2.423963 23.42 0.0000 1.673565 3.510826 ---------------------------------------------------------------- 這裏我們可以爲這兩個結果做一個總結性的表格： .tg {border-collapse:collapse;border-color:#93a1a1;border-spacing:0;} .tg td{background-color:#fdf6e3;border-color:#93a1a1;border-style:solid;border-width:1px;color:#002b36; font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;} .tg th{background-color:#657b83;border-color:#93a1a1;border-style:solid;border-width:1px;color:#fdf6e3; font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;} .tg .tg-baqh{text-align:center;vertical-align:top} .tg .tg-alz1{background-color:#eee8d5;text-align:left;vertical-align:top} .tg .tg-0lax{text-align:left;vertical-align:top} .tg .tg-i6s1{background-color:#eee8d5;text-align:center;vertical-align:top} Variable Cases Controls Crude OR(95% CI) P Religion adjusted OR (95% CI) P EducationNone/adult only≥1 year 49140 263311 12.42 (1.67, 3.50) &lt;0.001 11.91 (1.29, 2.83) 0.001 然後對這個表格的描述可以簡單表達爲： 在未進行任何變量調整的情況下，該數據的計算結果提供了很強的關於受教育水平和是否患有HIV這二者之間關係的證據 (P &lt; 0.001)。這一相關性有可能可以部分由宗教信仰對這一關係的混雜效應解釋。但是即使是調整了宗教信仰之後，受教育水平依然和是否患有HIV有顯著的相關性。具體地說，接受過一年以上正規教育的人比未曾接受過任何教育或者只有成人教育的人患有HIV的比值 (Odds) 要高將近兩倍 (OR = 1.91)。 118.5 Q5 性伴侶人數 接下來通過分析來理解 “性伴侶人數 npa” 這個變量是否是受教育水平和HIV患病之間的關係的混雜因子 (confounder)。 受教育水平和HIV患病之間的未調整前OR，和調整 npa 之後的 OR 可以通過下面的代碼計算： . recode npa 9=. (npa: 28 changes made) . mhodds case ed2 Maximum likelihood estimate of the odds ratio Comparing ed2==2 vs. ed2==1 ---------------------------------------------------------------- Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ---------------------------------------------------------------- 2.416169 23.25 0.0000 1.668360 3.499168 ---------------------------------------------------------------- . . mhodds case ed2, by(npa) Maximum likelihood estimate of the odds ratio Comparing ed2==2 vs. ed2==1 by npa ------------------------------------------------------------------------------- npa | Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ----------+-------------------------------------------------------------------- 1 | 2.378641 3.28 0.0701 0.90428 6.25683 2 | 2.204661 9.72 0.0018 1.32367 3.67200 3 | 3.111429 6.04 0.0139 1.19822 8.07945 4 | 2.698413 2.39 0.1224 0.72666 10.02046 ------------------------------------------------------------------------------- Mantel-Haenszel estimate controlling for npa ---------------------------------------------------------------- Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ---------------------------------------------------------------- 2.416886 21.08 0.0000 1.637939 3.566272 ---------------------------------------------------------------- Test of homogeneity of ORs (approx): chi2(3) = 0.42 Pr&gt;chi2 = 0.9353 值得注意的是，計算未調整 npa 時的 OR 的過程中，Stata 並未排除掉 npa 裏存在缺失值的對象，所以，我們需要人爲重新把他們排除，再次計算粗比值比。 . mhodds case ed2 if npa!=. Maximum likelihood estimate of the odds ratio Comparing ed2==2 vs. ed2==1 ---------------------------------------------------------------- Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ---------------------------------------------------------------- 2.311262 20.32 0.0000 1.588409 3.363072 ---------------------------------------------------------------- 所以，我們發現，當忘記排除掉含有 npa 缺失值對象時計算的粗比值比 OR = 2.42。如果正確地排除掉含有 npa 缺失值的對象之後，粗比值比 OR = 2.31，調整 npa 之後的比值比 OR = 2.42。所以在比較正確的粗 OR (2.31) 和調整後 OR (2.42)，的時候，我們會做出“npa對教育水平和HIV患病之間的關係有微弱的混雜作用 slight confounding effect by npa” 的結論和判斷。但是如果錯誤地去和未排除缺失值時計算的粗 OR (2.42) 做比較的話，我們可能就會得出 “npa 對教育水平和HIV患病之間的關係一點混雜作用都沒有 there was no confounding effect at all”。所以，進行粗比值比和調整後比值比數值上比較從而理解是否有混雜效應時，需要注意的一點是計算時使用的對象（人數）必須保持一致。 118.6 Q6 分析劑量-反應關係 dose-response relationship 這題我們來嘗試分析 npa (性伴侶人數) 和是否患有 HIV 之間的劑量-反應關係。npa 本身有四個分層等級： 1 (none/1); 2 (2-4); 3 (5-9); 4 (10-19)。我們需要計算生成一個新變量，用上述不同分層等級各自的“中位數”來當作 npa 的連續變量： . recode npa 1=0 2=3 3=7 4=15, gen(npa2) (735 differences between npa and npa2) . . tabodds case npa2, or --------------------------------------------------------------------------- npa2 | Odds Ratio chi2 P&gt;chi2 [95% Conf. Interval] -------------+------------------------------------------------------------- 0 | 1.000000 . . . . 3 | 2.128092 10.23 0.0014 1.324948 3.418077 7 | 3.087907 16.71 0.0000 1.746757 5.458785 15 | 8.093567 38.05 0.0000 3.665130 17.872716 --------------------------------------------------------------------------- Test of homogeneity (equal odds): chi2(3) = 39.64 Pr&gt;chi2 = 0.0000 Score test for trend of odds: chi2(1) = 38.65 Pr&gt;chi2 = 0.0000 這裏計算獲得的 Score test for trend of odds 的 p值 &lt; 0.001，也就是此次數據分析的結果提供證據使我們認爲使用線性關係 (linear trend) 來解釋 npa2 和 HIV 患病與否的對數比值 log-odds (ie. the odds of HIV increasing by a constant factor for each unit increase in npa2) 之間的關係更優於無線性關係 (零假設)。 我們還可以計算 npa2 和 HIV患病與否之間的 \\(\\chi^2\\): . tab case npa2, chi Case/contr | RECODE of npa (Number of sex partners ever) ol | 0 3 7 15 | Total -----------+--------------------------------------------+---------- 0 | 173 277 83 19 | 552 1 | 27 92 40 24 | 183 -----------+--------------------------------------------+---------- Total | 200 369 123 43 | 735 Pearson chi2(3) = 39.6969 Pr = 0.000 然後利用這兩個 \\(\\chi^2\\) 和各自的自由度，我們可以檢驗另一個零假設： “npa2 和HIV患病與否的對數比值 log-odds 之間的關係是線性的。” 方差之差： 39.70 - 38.65 = 1.05，自由度差：3-1 = 2，所以 p 值是： . display chiprob(2, 1.05) .59155536 獲得了一個等於 0.59 的 p 值。所以我們可以認爲無證據拒絕這次的零假設 - 線性關係成立。(There is no evidence of departure from linear trend between the score of npa2 and log-odds of HIV.) "],["似然的概念和圖形理解-likelihood.html", "第 119 章 似然的概念和圖形理解 Likelihood 119.1 Q1 二項分佈似然的圖形 119.2 Q2 修改信賴區間的寬度 119.3 Q3 嘗試繪製一些極端情況下的似然函數圖 119.4 Q4 失敗次數爲 0 會發生什麼 119.5 Q5 泊松分佈參數的似然函數 119.6 Q6 特別少的病例死亡的情況 119.7 Q7 25人中15人選A 119.8 Q8 40人中24人選A 119.9 Q9 60人中36人選A 119.10 Q10 繪製精確 exact 和 近似 approximate 對數似然比函數 119.11 Q11 繼續繪製精確 exact 和近似 approximate 對數似然比函數 119.12 Q12 繼續繪製精確 exact 和 近似 approximate 對數似然比函數 119.13 Q13 2人死亡18人存活的實驗 119.14 Q14 對數比值 logodds 的對數似然比函數 119.15 Q15 繪製泊松分佈的對數似然比函數 119.16 Q16 繪製泊松分佈的對數率的對數似然比函數 119.17 Q17 繪製極端情況下的泊松分佈對數似然比函數 119.18 關鍵點", " 第 119 章 似然的概念和圖形理解 Likelihood 本章的練習，我們主要使用四個計算似然的命令來加深我們對似然這一概念的理解： blik: binomial likelihood （二項分佈的似然） plik: Poisson likelihood （泊松分佈的似然） bloglik: binomial log-likelihood （二項分佈的對數似然） ploglik: Poisson log-likelihood （泊松分佈的對數似然） 119.1 Q1 二項分佈似然的圖形 在R語言中繪製二項分佈參數 \\(\\pi\\) 在不同情況下的似然函數圖： 10次實驗中4次失敗： x &lt;- seq(0,1,by=0.001) y &lt;- (x^4)*((1-x)^6) / (0.4^4*0.6^6) plot(x, y, type = &quot;l&quot;, ylab = &quot;LR(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) abline(v=0.4, lty=2) abline(h=1.0, lty=2) abline(h=0.1466, lty=2, lwd = 2, col = &quot;red&quot;) 圖 119.1: Binomial(10, 4) Likelihood ratio 2，100次實驗中40次失敗： x &lt;- seq(0,1,by=0.001) y &lt;- (x^40)*((1-x)^60) / (0.4^40*0.6^60) plot(x, y, type = &quot;l&quot;, ylab = &quot;LR(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) abline(h=1.0, lty=2) abline(v=0.4, lty=2) abline(h=0.1466, lty=2, lwd = 2, col = &quot;red&quot;) 圖 119.2: Binomial(100, 40) Likelihood ratio 1000 次實驗中 400 次失敗： x &lt;- seq(0,1,by=0.001) y &lt;- (x^400)*((1-x)^600) / (0.4^400*0.6^600) plot(x, y, type = &quot;l&quot;, ylab = &quot;LR(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) abline(v=0.4, lty=2) abline(h=1.0, lty=2) abline(h=0.1466, lty=2, lwd = 2, col = &quot;red&quot;) 圖 119.3: Binomial(1000, 400) Likelihood ratio 三個圖的整體信息告訴我們，數據越多，對參數的估計越精確 (more data more precise estimate)。 119.2 Q2 修改信賴區間的寬度 把紅線刻度從 0.1466 改成 0.2585，會發生怎樣的改變？ x &lt;- seq(0,1,by=0.001) y &lt;- (x^40)*((1-x)^60) / (0.4^40*0.6^60) plot(x, y, type = &quot;l&quot;, ylab = &quot;LR(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) abline(h=1.0, lty=2) abline(v=0.4, lty=2) abline(h=0.2585, lty=2, lwd = 2, col = &quot;red&quot;) 圖 119.4: Binomial(100, 40) Likelihood ratio, with 90% CI. 當改成使用 90% 信賴區間的時候，區間變窄，但其實我們對這個區間的長期重複實驗結果是否包含真實參數值的信心變小了。(less confident about the interval) 119.3 Q3 嘗試繪製一些極端情況下的似然函數圖 假如繪製如 10 次實驗中 1 次失敗的二項分佈參數似然函數圖： x &lt;- seq(0,1,by=0.001) y &lt;- (x^1)*((1-x)^9) / (0.1^1*0.9^9) plot(x, y, type = &quot;l&quot;, ylab = &quot;LR(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) abline(v=0.1, lty=2) abline(h=1.0, lty=2) abline(h=0.1466, lty=2, lwd = 2, col = &quot;red&quot;) 圖 119.5: Binomial(10, 1) Likelihood ratio 假如繪製如 100 次實驗中 1 次失敗的二項分佈參數似然函數圖： x &lt;- seq(0,1,by=0.001) y &lt;- (x^1)*((1-x)^99) / (0.01^1*0.99^99) plot(x, y, type = &quot;l&quot;, ylab = &quot;LR(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) abline(v=0.01, lty=2) abline(h=1.0, lty=2) abline(h=0.1466, lty=2, lwd = 2, col = &quot;red&quot;) 圖 119.6: Binomial(100, 1) Likelihood ratio 當實驗結果或數據較爲極端的時候，我們發現似然比不再和正（常）態分佈近似，也越來越偏向一邊。(no longer symmertrical and bell-shaped with extreme splits) 119.4 Q4 失敗次數爲 0 會發生什麼 當多次實驗中觀察到 0 次失敗，那麼似然函數會變成怎樣？ 10次實驗中0次失敗： 圖 119.7: Binomial(10, 4) Likelihood ratio 2，100次實驗中0次失敗： 圖 119.8: Binomial(100, 40) Likelihood ratio 1000 次實驗中 0 次失敗： 圖 119.9: Binomial(1000, 400) Likelihood ratio 於是我們知道當沒有失敗時，二項分佈數據的參數 \\(\\pi\\) 的似然函數沒有轉折點。(no turning point) 119.5 Q5 泊松分佈參數的似然函數 在R語言中繪製泊松分佈參數 \\(\\lambda\\) 在不同情況下的似然函數圖： 500人年的觀察中發現7人死亡： x &lt;- seq(0, 40, by=0.1)/1000 y &lt;- exp( -500 * x + 7 + 7 * log( x * 500) - 7 * log(7)) plot(x, y, type = &quot;l&quot;, ylab = &quot;LR(\\u03BB)&quot;, xlab = ~lambda) abline(h=1.0, lty=2) abline(h=0.1466, lty=2, lwd = 2, col = &quot;red&quot;) 圖 119.10: Poisson Likelihood ratio for rate parameter D = 7, Y = 500 5000人年的觀察中發現70人死亡： x &lt;- seq(0, 40, by=0.01)/1000 y &lt;- exp( -5000 * x + 70 + 70 * log( x * 5000) - 70 * log(70)) plot(x, y, type = &quot;l&quot;, ylab = &quot;LR(\\u03BB)&quot;, xlab = ~lambda) abline(h=1.0, lty=2) abline(v=0.4, lty=2) abline(h=0.1466, lty=2, lwd = 2, col = &quot;red&quot;) 圖 119.11: Poisson Likelihood ratio for rate parameter D = 70, Y = 5000 50000人年的觀察中發現700人死亡： x &lt;- seq(0, 40, by=0.01)/1000 y &lt;- exp( -50000 * x + 700 + 700 * log( x * 50000) - 700 * log(700)) plot(x, y, type = &quot;l&quot;, ylab = &quot;LR(\\u03BB)&quot;, xlab = ~lambda) abline(v=0.4, lty=2) abline(h=1.0, lty=2) abline(h=0.1466, lty=2, lwd = 2, col = &quot;red&quot;) 圖 119.12: Poisson Likelihood ratio for rate parameter D = 700, Y = 50000 三個圖的整體信息仍然告訴我們，數據越多，對參數的估計越精確 (more data more precise estimate)。 119.6 Q6 特別少的病例死亡的情況 當觀察到特別少， 如 1，或者 0 個病例死亡時，泊松分佈的似然函數圖形會是怎樣的？ 500人年的觀察中發現1人死亡： 圖 119.13: Poisson Likelihood ratio for rate parameter D = 1, Y = 500 500人年的觀察中發現0人死亡 圖 119.14: Poisson Likelihood ratio for rate parameter D = 0, Y = 500 5000人年的觀察中發現10人死亡： 圖 119.15: Poisson Likelihood ratio for rate parameter D = 10, Y = 5000 5000人年的觀察中發現1人死亡： 圖 119.16: Poisson Likelihood ratio for rate parameter D = 1, Y = 5000 和二項分佈時觀察到的結果一樣，當觀察值極端低的話，我們得到的似然函數的曲線就不再是左右對稱的類似正（常）態分佈的曲線了。 119.7 Q7 25人中15人選A 假如令25名受試對象從 A 和 B 兩種方案中選擇一個，他們各自的決定不影響其他人的選擇。觀察到15人選A，10人選B。繪製這個命題的二項分佈似然函數曲線： 10次實驗中4次失敗： x &lt;- seq(0,1,by=0.001) y &lt;- (x^15)*((1-x)^10) / ((15/25)^15*(10/25)^10) plot(x, y, type = &quot;l&quot;, ylab = &quot;LR(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) abline(v=15/25, lty=2) abline(v=0.5, lty=2, lwd = 2, col = &quot;blue&quot;) abline(h=1.0, lty=2) abline(h=0.1466, lty=2, lwd = 2, col = &quot;red&quot;) abline(h=(0.5^15)*((1-0.5)^10) / ((15/25)^15*(10/25)^10), lty=2, lwd = 2, col = &quot;red&quot;) 圖 119.17: Binomial(25, 15) Likelihood ratio 拿這個實驗的結果和我們認爲的零假設 “\\(\\pi = 0.5\\)，選A 和選B 的概率相同” 做假設檢驗會得到怎樣的 P 值？ binom.test(x = 15, n = 25, p = 0.5) ## ## Exact binomial test ## ## data: 15 and 25 ## number of successes = 15, number of trials = 25, p-value = 0.42436 ## alternative hypothesis: true probability of success is not equal to 0.5 ## 95 percent confidence interval: ## 0.38665350 0.78874519 ## sample estimates: ## probability of success ## 0.6 # likelihood ratio for null value (0.5^15)*((1-0.5)^10) / ((15/25)^15*(10/25)^10) ## [1] 0.60447931 119.8 Q8 40人中24人選A x &lt;- seq(0,1,by=0.001) y &lt;- (x^24)*((1-x)^16) / ((24/40)^24*(16/40)^16) plot(x, y, type = &quot;l&quot;, ylab = &quot;LR(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) abline(v=24/40, lty=2) abline(v=0.5, lty=2, lwd = 2, col = &quot;blue&quot;) abline(h=1.0, lty=2) abline(h=0.1466, lty=2, lwd = 2, col = &quot;red&quot;) abline(h=(0.5^24)*((1-0.5)^16) / ((24/40)^24*(16/40)^16), lty=2, lwd = 2, col = &quot;red&quot;) 圖 119.18: Binomial(40, 24) Likelihood ratio 和相同的零假設做檢驗。 binom.test(x = 24, n = 40, p = 0.5) ## ## Exact binomial test ## ## data: 24 and 40 ## number of successes = 24, number of trials = 40, p-value = 0.26819 ## alternative hypothesis: true probability of success is not equal to 0.5 ## 95 percent confidence interval: ## 0.43326705 0.75135001 ## sample estimates: ## probability of success ## 0.6 # likelihood ratio for null value (0.5^24)*((1-0.5)^16) / ((24/40)^24*(16/40)^16) ## [1] 0.44689995 119.9 Q9 60人中36人選A x &lt;- seq(0,1,by=0.001) y &lt;- (x^36)*((1-x)^24) / ((36/60)^36*(24/60)^24) plot(x, y, type = &quot;l&quot;, ylab = &quot;LR(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) abline(v=36/60, lty=2) abline(v=0.5, lty=2, lwd = 2, col = &quot;blue&quot;) abline(h=1.0, lty=2) abline(h=0.1466, lty=2, lwd = 2, col = &quot;red&quot;) abline(h=(0.5^36)*((1-0.5)^24) / ((36/60)^36*(24/60)^24), lty=2, lwd = 2, col = &quot;red&quot;) 圖 119.19: Binomial(25, 15) Likelihood ratio 和相同的零假設做檢驗。 binom.test(x = 36, n = 60, p = 0.5) ## ## Exact binomial test ## ## data: 36 and 60 ## number of successes = 36, number of trials = 60, p-value = 0.155 ## alternative hypothesis: true probability of success is not equal to 0.5 ## 95 percent confidence interval: ## 0.46540544 0.72437842 ## sample estimates: ## probability of success ## 0.6 # likelihood ratio for null value (0.5^36)*((1-0.5)^24) / ((36/60)^36*(24/60)^24) ## [1] 0.29875519 我們發現，當觀察數值的 \\(\\hat{\\pi} = 0.6\\) 保持不變，但數據量越多，p值就變得越小。 119.10 Q10 繪製精確 exact 和 近似 approximate 對數似然比函數 假設10名患者有4人最終死亡，繪製該實驗的精確對數似然比，和近似對數似然比函數圖 par(mai = c(1.2, 0.5, 1, 0.7)) pi &lt;- seq(0.05, 0.9, by=0.001) L &lt;- (pi^4)*((1-pi)^6) Lmax &lt;- rep(max(L), length(pi)) LR &lt;- L/Lmax logLR &lt;- log(LR) # the exact binomial log likelihood ratio plot(pi, logLR, type = &quot;l&quot;, col = &quot;red&quot;, ylim = c(-5, 0), yaxt=&quot;n&quot;, ylab = &quot;logLR(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) # the approximate quadratic binomial log-likelihood ratio quad &lt;- -(pi-0.4)^2/(2*0.024) lines(pi, quad, col=&quot;blue&quot;) grid(NA, 5, lwd = 2) # add some horizontal grid on the background axis(2, at=seq(-5,0,1), las=2) axis(4, at=-1.92, las=2) abline(h=-1.92, lty=1, col=&quot;red&quot;) legend(x=0.15, y= -4.5 ,xpd = TRUE, legend=c(&quot;exact logLR&quot;,&quot;Quadratic approx&quot;), bty = &quot;n&quot;, col=c(&quot;red&quot;,&quot;blue&quot;), lty=c(1,1), horiz = TRUE) 圖 119.20: Log likelihood for risk parameter: D = 4, H = 6 即便是只有10個觀察值的二項分佈數據，使用二次方程近似法給出的結果也較爲接近精確值。 119.11 Q11 繼續繪製精確 exact 和近似 approximate 對數似然比函數 假設另一個實驗有100名受試者，其中40人死亡，繪製該實驗的精確對數似然，和近似對數似然函數圖 par(mai = c(1.2, 0.5, 1, 0.7)) pi &lt;- seq(0.05, 0.9, by=0.001) L &lt;- (pi^40)*((1-pi)^60) Lmax &lt;- rep(max(L), length(pi)) LR &lt;- L/Lmax logLR &lt;- log(LR) # the exact binomial log likelihood ratio plot(pi, logLR, type = &quot;l&quot;, col = &quot;red&quot;, ylim = c(-5, 0), yaxt=&quot;n&quot;, ylab = &quot;logLR(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) # the approximate quadratic binomial log-likelihood ratio quad &lt;- -(pi-0.4)^2/(2*0.0024) lines(pi, quad, col=&quot;blue&quot;) grid(NA, 5, lwd = 2) # add some horizontal grid on the background axis(2, at=seq(-5,0,1), las=2) axis(4, at=-1.92, las=2) abline(h=-1.92, lty=1, col=&quot;red&quot;) legend(x=0.5, y= -0.5 ,xpd = TRUE, legend=c(&quot;exact logLR&quot;,&quot;Quadratic approx&quot;), bty = &quot;n&quot;, col=c(&quot;red&quot;,&quot;blue&quot;),, lty=c(1,1), horiz = TRUE) 圖 119.21: Log likelihood for risk parameter: D = 40, H = 60 可以看見二次方程近似法和精確法計算的對數似然比函數在受試對象達到100人時已經十分接近。 119.12 Q12 繼續繪製精確 exact 和 近似 approximate 對數似然比函數 假設另一個實驗有1000名受試者，其中400人死亡，繪製該實驗的精確對數似然，和近似對數似然函數圖 par(mai = c(1.2, 0.5, 1, 0.7)) pi &lt;- seq(0.05, 0.9, by=0.001) L &lt;- (pi^400)*((1-pi)^600) Lmax &lt;- rep(max(L), length(pi)) LR &lt;- L/Lmax logLR &lt;- log(LR) # the exact binomial log likelihood ratio plot(pi, logLR, type = &quot;l&quot;, col = &quot;red&quot;, ylim = c(-5, 0), yaxt=&quot;n&quot;, ylab = &quot;logLR(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) # the approximate quadratic binomial log-likelihood ratio quad &lt;- -(pi-0.4)^2/(2*0.00024) lines(pi, quad, col=&quot;blue&quot;) grid(NA, 5, lwd = 2) # add some horizontal grid on the background axis(2, at=seq(-5,0,1), las=2) axis(4, at=-1.92, las=2) abline(h=-1.92, lty=1, col=&quot;red&quot;) legend(x=0.5, y= -0.5 ,xpd = TRUE, legend=c(&quot;exact logLR&quot;,&quot;Quadratic approx&quot;), bty = &quot;n&quot;, col=c(&quot;red&quot;,&quot;blue&quot;),, lty=c(1,1), horiz = TRUE) 圖 119.22: Log likelihood for risk parameter: D = 40, H = 60 這裏當實驗受試對象人數爲1000人時，精確法和二次方程近似法給出的對數似然比函數曲線已經接近完美重疊。 119.13 Q13 2人死亡18人存活的實驗 假設此次實驗受試對象有20人，只有2人死亡的結果的時候的二項分佈對數似然比函數（精確法和近似法） par(mai = c(1.2, 0.5, 1, 0.7)) pi &lt;- seq(0, 0.3, by=0.0001) L &lt;- (pi^2)*((1-pi)^18) Lmax &lt;- rep(max(L), length(pi)) LR &lt;- L/Lmax logLR &lt;- log(LR) # the exact binomial log likelihood ratio plot(pi, logLR, type = &quot;l&quot;, col = &quot;red&quot;, ylim = c(-5, 0), yaxt=&quot;n&quot;, ylab = &quot;logLR(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) # the approximate quadratic binomial log-likelihood ratio quad &lt;- -(pi-0.1)^2/(2*(0.1*0.9/20)) lines(pi, quad, col=&quot;blue&quot;) grid(NA, 5, lwd = 2) # add some horizontal grid on the background axis(2, at=seq(-5,0,1), las=2) axis(4, at=-1.92, las=2) abline(h=-1.92, lty=1, col=&quot;red&quot;) legend(x=0.1, y= -4.2 ,xpd = TRUE, legend=c(&quot;exact logLR&quot;,&quot;Quadratic approx&quot;), bty = &quot;n&quot;, col=c(&quot;red&quot;,&quot;blue&quot;), lty=c(1,1), horiz = TRUE) 圖 119.23: Log likelihood for risk parameter: D = 2, H = 18 這裏我們看見20人這一較小的實驗規模中，如果出現了只有2個死亡病例的情況下，近似法和精確法之間的差別很大。而且近似法給出的藍色曲線的95%信賴區間的下限甚至是負的。 假設總人數是200人，觀察到了20人死亡的話，我們再來看看此時的對數似然比函數圖 par(mai = c(1.2, 0.5, 1, 0.7)) pi &lt;- seq(0, 0.3, by=0.0001) L &lt;- (pi^20)*((1-pi)^180) Lmax &lt;- rep(max(L), length(pi)) LR &lt;- L/Lmax logLR &lt;- log(LR) # the exact binomial log likelihood ratio plot(pi, logLR, type = &quot;l&quot;, col = &quot;red&quot;, ylim = c(-5, 0), yaxt=&quot;n&quot;, ylab = &quot;logLR(\\U03C0)&quot;, xlab = &quot;\\U03C0&quot;) # the approximate quadratic binomial log-likelihood ratio quad &lt;- -(pi-0.1)^2/(2*(0.1*0.9/200)) lines(pi, quad, col=&quot;blue&quot;) grid(NA, 5, lwd = 2) # add some horizontal grid on the background axis(2, at=seq(-5,0,1), las=2) axis(4, at=-1.92, las=2) abline(h=-1.92, lty=1, col=&quot;red&quot;) legend(x=0.13, y= 0 ,xpd = TRUE, legend=c(&quot;exact logLR&quot;,&quot;Quadratic approx&quot;), bty = &quot;n&quot;, col=c(&quot;red&quot;,&quot;blue&quot;), lty=c(1,1), horiz = TRUE) 圖 119.24: Log likelihood for risk parameter: D = 20, H = 180 此時由於總體人數增多，雖然產生死亡的病例比例和之前相同，但是此時的二次方程近似法也給出了比之前較爲可以接受的近似曲線。也不會出現負的信賴區間下限的問題。 119.14 Q14 對數比值 logodds 的對數似然比函數 但是如果不是用百分比而是轉而使用對數比值 logodds 的話，我們發現近似法在對數比值尺度上也能避免出現負的信賴區間下限的問題。 . bloglik 2 18, logodds Most likely value for logodds parameter -2.19722 cut-point -1.921 Likelihood based limits for logodds parameter -4.03622 -0.95459 Approx quadratic limits for logodds parameter -3.65820 -0.73625 Back on original risk scale Most likely value for risk parameter 0.10000 Likelihood based limits for risk parameter 0.01736 0.27796 Approx quadratic limits for risk parameter 0.02513 0.32382 圖 119.25: log likelihood ratio for logodds paramter: D=2 H=18 119.15 Q15 繪製泊松分佈的對數似然比函數 假設實驗對象的觀察時間達是 500 人年 (person-year)，觀察到了7人死亡的結果。此時的泊松分佈對數似然比函數是怎樣的？ 泊松分佈的二次方程近似法： $$ \\[\\begin{aligned} \\hat\\lambda = \\frac{d}{p} = M ; S^2 = \\frac{d}{p^2} \\\\ q(\\lambda) = -\\frac{1}{2}(\\frac{\\lambda - M}{S})^2 \\\\ 95\\%\\text{CI for } \\lambda = \\frac{d}{p} \\pm 1.96 \\frac{\\sqrt{d}}{p} \\end{aligned}\\] $$ x &lt;- seq(3, 25, by=0.1)/1000 # exact log likelihood ratio y &lt;- -500 * x + 7 + 7 * log( x * 500) - 7 * log(7) plot(x, y, type = &quot;l&quot;, ylab = &quot;logLR(\\u03BB)&quot;, xlab = ~lambda, yaxt=&quot;n&quot;, col = &quot;red&quot;) # approximate log likelihood ratio quad &lt;- - 0.5 *(x - 7/500)^2 / (7/500^2) lines(x, quad, col=&quot;blue&quot;) grid(NA, 5, lwd = 2) # add some horizontal grid on the background axis(2, at=seq(-5,0,1), las=2) axis(4, at=-1.92, las=2) abline(h=-1.92, lty=2, lwd = 2, col=&quot;red&quot;) legend(x=0.01, y= -4.6 ,xpd = TRUE, legend=c(&quot;exact logLR&quot;,&quot;Quadratic approx&quot;), bty = &quot;n&quot;, col=c(&quot;red&quot;,&quot;blue&quot;), lty=c(1,1), horiz = TRUE) 圖 119.26: Poisson Likelihood ratio for rate parameter D = 7, Y = 500 # approx 95% CI for lambda 7/500 - 1.96 * sqrt(7)/500; ## [1] 0.0036286549 7/500 + 1.96 * sqrt(7)/500; ## [1] 0.024371345 119.16 Q16 繪製泊松分佈的對數率的對數似然比函數 . ploglik 7 500, lograte ALL RATES PER 1000 Most likely value for log rate parameter 2.64 cut-point -1.921 Likelihood based limits for log rate parameter 1.79 3.30 Approx quadratic limits for log rate parameter 1.90 3.38 Back on original rate scale Most likely value for rate parameter 14.00 Likelihood based limits for rate parameter 6.02 27.08 Approx quadratic limits for rate parameter 6.67 29.37 圖 119.27: log likelihood ratio for lograte paramter: D=7 Y=500 可見和比值類似，取對數以後的數值用來進行二次方程近似法給出的可信區間也比原始的率尺度更加接近“精確值”。 119.17 Q17 繪製極端情況下的泊松分佈對數似然比函數 原始的死亡率尺度 . ploglik 1 1000 ALL RATES PER 1000 Most likely value for rate parameter 1.00 cut-point -1.921 Likelihood based limits for rate parameter 0.06 4.40 Approx quadratic limits for rate parameter -0.96 2.96 圖 119.28: log likelihood ratio for rate paramter: D=1 Y=1000 對數死亡率尺度 . ploglik 1 1000, lograte ALL RATES PER 1000 Most likely value for log rate parameter 0.00 cut-point -1.921 Likelihood based limits for log rate parameter -2.86 1.48 Approx quadratic limits for log rate parameter -1.96 1.96 Back on original rate scale Most likely value for rate parameter 1.00 Likelihood based limits for rate parameter 0.06 4.40 Approx quadratic limits for rate parameter 0.14 7.10 圖 119.29: log likelihood ratio for lograte paramter: D=1 Y=1000 對數尺度在泊松分佈的情況下，同樣在近似計算中避免了出現負的信賴區間下限的情況。 119.18 關鍵點 數據樣本量越大，似然（比）函數曲線越狹窄，獲得的參數估計也就會越精確，95%信賴區間的範圍就會越狹窄。 數據樣本量越大，精確的似然（比）函數和近似二次方程法（正常態分佈情況）給出的曲線就越接近，符合中心極限法則。 當觀察值較小較爲極端時，我們會建議使用對數尺度來實施近似法，也會避免負的信賴區間數值。 "],["邏輯回歸模型1---單一暴露變量-logistic-regression-1---effect-of-a-single-exposure.html", "第 120 章 邏輯回歸模型1 - 單一暴露變量 Logistic regression 1 - effect of a single exposure 120.1 Q1-Q2 讀入 mortality.dta 數據 120.2 Q3 結果變量 died 120.3 Q4-5 第一個簡單邏輯回歸模型 120.4 Q6 給出 OR 值 120.5 Q7 彙總成報告用的表格 120.6 Q8 瞭解微小絲蟲傳染病 (microfilarial infection) 和死亡之間的關係 120.7 Q9 使用指示變量 indicator variable 120.8 Q10 計算比值比 120.9 Q11 簡單陳述上述分析的結果 120.10 Q12 似然比檢驗用於模型比較 120.11 Q13 分析年齡組和死亡之間的關係 120.12 分析要點", " 第 120 章 邏輯回歸模型1 - 單一暴露變量 Logistic regression 1 - effect of a single exposure 這裏主要使用 Stata 的命令，tabodds 和 mhodds 來進行橫斷面研究的比值 odds 和比值比 odds ratio, OR 的計算。 另外需要能夠理解並熟悉 logistic 命令和 logit 命令計算並比較不同曝露組之間的 OR 和對應的信賴區間。 學會使用指示性變量 indicator variable 學會使用 lrtest 進行似然比檢驗 120.1 Q1-Q2 讀入 mortality.dta 數據 數據讀入 Stata 系統之後，使用 describe 和 summarize 命令來熟悉這個數據。 ## ## . cd &quot;~/Downloads/LSHTMlearningnote/backupfile/Users/chaoimacmini/Downloads/LSHTMlearningnote/backupfiles ## ## . use mortality ## ## . ## . describe ## ## Contains data from mortality.dta ## obs: 4,298 ## vars: 28 23 Oct 2013 11:45 ## ------------------------------------------------------------------------------- ## storage display value ## variable name type format label variable label ## ------------------------------------------------------------------------------- ## id int %8.0g Individual ID ## area float %9.0g area Area ## district str7 %7s District ## vcode byte %8.0g Village ID ## compound_size float %9.0g Compound size ## age byte %8.0g Age in years ## sex byte %8.0g sex Sex ## ethnic byte %8.0g ethnic Ethnic ## religion byte %11.0g religion Religion ## occupation byte %27.0g occupation ## Occupation ## education byte %22.0g education ## Education ## mfpermg float %9.0g Microfilarial load per mg ## vimp float %17.0g vimp Visually impaired ## died float %9.0g Died ## systolic int %8.0g Systolic BP (mmHg) ## diastolic int %8.0g Diastolic BP (mmHg) ## pulse int %8.0g Pulse rate/minute ## weight int %8.0g Weight (kgs) ## height int %8.0g Height (cms) ## map float %9.0g Mean Arterial Pressure ## bmi float %9.0g BMI ## agegrp float %9.0g agegrp Age group (years) ## mfgrp float %10.0g mfgrp Microfilarial load/mg (grouped) ## mfpos float %9.0g Microfilarial infection ## agebin float %9.0g agebin Age (2 groups) ## bmigrp float %12.0g bmigrp BMI (3 groups) ## enter long %dD_m_Y Date of entry to study ## exit float %dD_m_Y Date of exit from study ## ------------------------------------------------------------------------------- ## Sorted by: id ## ## . summarize ## ## Variable | Obs Mean Std. Dev. Min Max ## -------------+--------------------------------------------------------- ## id | 4,298 5598.28 2643.843 1 9820 ## area | 4,298 .1226152 .3280331 0 1 ## district | 0 ## vcode | 4,298 19.12634 10.61364 1 35 ## compound_s~e | 4,298 14.73872 10.52019 1 55 ## -------------+--------------------------------------------------------- ## age | 4,298 34.48744 14.64162 15 92 ## sex | 4,298 .52792 .499278 0 1 ## ethnic | 4,298 6.352722 3.045664 1 9 ## religion | 4,297 1.985571 .6300043 1 3 ## occupation | 4,289 3.121707 3.927291 1 20 ## -------------+--------------------------------------------------------- ## education | 4,287 2.052718 1.457285 1 6 ## mfpermg | 4,205 10.72746 20.15699 0 198.02 ## vimp | 4,298 .0760819 .26516 0 1 ## died | 4,298 .0318753 .1756885 0 1 ## systolic | 4,263 117.8072 19.26367 68 260 ## -------------+--------------------------------------------------------- ## diastolic | 4,250 72.35247 13.4937 20 156 ## pulse | 4,243 78.34056 12.42703 50 146 ## weight | 4,235 52.88524 8.217265 29 102 ## height | 4,235 159.4012 8.244971 135 188 ## map | 4,250 87.49694 13.90433 40 186.6667 ## -------------+--------------------------------------------------------- ## bmi | 4,235 20.75805 2.442004 14.00511 40.3465 ## agegrp | 4,298 .6140065 .8067433 0 3 ## mfgrp | 4,205 1.030916 .863685 0 3 ## mfpos | 4,205 .6901308 .4624945 0 1 ## agebin | 4,298 .1165658 .3209396 0 1 ## -------------+--------------------------------------------------------- ## bmigrp | 4,235 .8746163 .4304267 0 2 ## enter | 4,298 10709.6 95.48321 10571 10880 ## exit | 4,298 11683.26 159.8555 10750.5 11766 ## ## . 120.2 Q3 結果變量 died 結果變量是死亡 died，編碼爲1 表示受試對象在研究過程中死亡，0則表示對象在研究結束以後仍然存活。用 tab, tabodds 和 mhodds 來簡單分析死亡 died 和 vimp (視力損傷) 之間的關係。 . tab died Died | Freq. Percent Cum. ------------+----------------------------------- 0 | 4,161 96.81 96.81 1 | 137 3.19 100.00 ------------+----------------------------------- Total | 4,298 100.00 . tab vimp Visually impaired | Freq. Percent Cum. ------------------+----------------------------------- Normal | 3,971 92.39 92.39 Visually impaired | 327 7.61 100.00 ------------------+----------------------------------- Total | 4,298 100.00 . tabulate died vimp, col +-------------------+ | Key | |-------------------| | frequency | | column percentage | +-------------------+ | Visually impaired Died | Normal Visually | Total -----------+----------------------+---------- 0 | 3,874 287 | 4,161 | 97.56 87.77 | 96.81 -----------+----------------------+---------- 1 | 97 40 | 137 | 2.44 12.23 | 3.19 -----------+----------------------+---------- Total | 3,971 327 | 4,298 | 100.00 100.00 | 100.00 . tabodds died vimp -------------------------------------------------------------------------- vimp | Cases Controls Odds [95% Conf. Interval] ------------+------------------------------------------------------------- Normal | 97 3874 0.02504 0.02047 0.03063 Visuall~d | 40 287 0.13937 0.10012 0.19402 -------------------------------------------------------------------------- Test of homogeneity (equal odds): chi2(1) = 93.81 Pr&gt;chi2 = 0.0000 Score test for trend of odds: chi2(1) = 93.81 Pr&gt;chi2 = 0.0000 . mhodds died vimp Maximum likelihood estimate of the odds ratio Comparing vimp==1 vs. vimp==0 ---------------------------------------------------------------- Odds Ratio chi2(1) P&gt;chi2 [95% Conf. Interval] ---------------------------------------------------------------- 5.566292 93.81 0.0000 3.762437 8.234984 ---------------------------------------------------------------- 120.3 Q4-5 第一個簡單邏輯回歸模型 用邏輯回歸模型來分析一下 vimp 視覺損傷和 died 死亡之間的關係。 . logit died vimp Iteration 0: log likelihood = -606.88457 Iteration 1: log likelihood = -578.54009 Iteration 2: log likelihood = -577.36856 Iteration 3: log likelihood = -577.36596 Iteration 4: log likelihood = -577.36596 Logistic regression Number of obs = 4,298 LR chi2(1) = 59.04 Prob &gt; chi2 = 0.0000 Log likelihood = -577.36596 Pseudo R2 = 0.0486 ------------------------------------------------------------------------------ died | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- vimp | 1.716729 .1976151 8.69 0.000 1.329411 2.104048 _cons | -3.687332 .1027979 -35.87 0.000 -3.888812 -3.485852 ------------------------------------------------------------------------------ 這裏我們看見 Stata 通過 iteration 迭代法找到極大對數似然 -577.36。右邊的模型信息提示有 4298 名實驗對象，另外模型還進行了一個卡方檢驗 \\(\\chi^2 = 59.04\\) ，這個檢驗的零假設是“模型中沒有任何一個變量和結果變量（死亡）有關聯性 none of the variables in the model are associated with the outcome variable.”。因爲我們只在模型中加入了一個預測變量 vimp 視覺損傷，所以這個零假設也就等同於“視覺損傷與否和死亡之間無相關性。”檢驗的結果很顯然， p&lt;0.0001。Pseudo R2 = 0.0486 其實是一個評價模型擬合度的統計量 goodness of fit statistic，在這裏我們先忽略它。 120.4 Q6 給出 OR 值 . logistic died vimp Logistic regression Number of obs = 4,298 LR chi2(1) = 59.04 Prob &gt; chi2 = 0.0000 Log likelihood = -577.36596 Pseudo R2 = 0.0486 ------------------------------------------------------------------------------ died | Odds Ratio Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- vimp | 5.566292 1.099983 8.69 0.000 3.778816 8.19929 _cons | .0250387 .0025739 -35.87 0.000 .0204696 .0306277 ------------------------------------------------------------------------------ 值得注意的是， 這時候直接給出的比值比 OR 它下面的 _cons 部分其實並不是比值比 OR，而是基線組的比值 (the odds of outcome in the baseline group)。所以，基線比值在本例中的含義其實就是視力沒有受損的人中死亡的比值 (odds of death amongst those visually unimpaired)。 此時給出的標準誤差 (standard error) 只是近似值，可以無視。 z 統計量和使用 logit 命令時計算得出的值完全相同。 信賴區間使用的是對數尺度下計算獲得的信賴區間之後取 exp 獲得的。例如 exp(1.329411) = 3.778816 你還可以用下面代碼獲取相同的結果： . logit died vimp, or Iteration 0: log likelihood = -606.88457 Iteration 1: log likelihood = -578.54009 Iteration 2: log likelihood = -577.36856 Iteration 3: log likelihood = -577.36596 Iteration 4: log likelihood = -577.36596 Logistic regression Number of obs = 4,298 LR chi2(1) = 59.04 Prob &gt; chi2 = 0.0000 Log likelihood = -577.36596 Pseudo R2 = 0.0486 ------------------------------------------------------------------------------ died | Odds Ratio Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- vimp | 5.566292 1.099983 8.69 0.000 3.778816 8.19929 _cons | .0250387 .0025739 -35.87 0.000 .0204696 .0306277 ------------------------------------------------------------------------------ Note: _cons estimates baseline odds. 120.5 Q7 彙總成報告用的表格 把目前爲止分析的結果彙總成研究報告使用的表格： .tg {border-collapse:collapse;border-color:#93a1a1;border-spacing:0;} .tg td{background-color:#fdf6e3;border-color:#93a1a1;border-style:solid;border-width:1px;color:#002b36; font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;} .tg th{background-color:#657b83;border-color:#93a1a1;border-style:solid;border-width:1px;color:#fdf6e3; font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;} .tg .tg-c3ow{border-color:inherit;text-align:center;vertical-align:top} .tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}            n    Died (row %)    OR (95% CI)       P-value       Visually unimpaired   Visually impaired       3971    327    97 (2.4%) 40 (12.2%)    1   5.57 (3.78, 8.20)       &lt;0.0001    描述這一分析結果的段落可以寫作： 分析結果發現，視力損傷和死亡的危險度強烈相關 (p &lt; 0.0001)。視力損傷的研究對象相比視力正常的人死亡的比值要高出快要6倍之多 (OR 5.57; 95%CI: 3.78, 8.20)。 120.6 Q8 瞭解微小絲蟲傳染病 (microfilarial infection) 和死亡之間的關係 當曝露變量在表格中是行 (row) 時，我們推薦用行百分比視角來觀察它和結果變量 (列) 之間的關係： . tab mfgrp died, row +----------------+ | Key | |----------------| | frequency | | row percentage | +----------------+ Microfilar | ial | load/mg | Died (grouped) | 0 1 | Total -----------+----------------------+---------- Uninfected | 1,274 29 | 1,303 | 97.77 2.23 | 100.00 -----------+----------------------+---------- &lt;10 | 1,609 62 | 1,671 | 96.29 3.71 | 100.00 -----------+----------------------+---------- 10-49 | 996 33 | 1,029 | 96.79 3.21 | 100.00 -----------+----------------------+---------- 50+ | 193 9 | 202 | 95.54 4.46 | 100.00 -----------+----------------------+---------- Total | 4,072 133 | 4,205 | 96.84 3.16 | 100.00 於是我們發現，未被此寄生蟲感染的人羣，整個實驗進行的過程中，死亡率是 2.23%，如果感染絲蟲的感染量較輕 &lt; 10 load/mg，那麼死亡率會升高至 3.71%。 120.7 Q9 使用指示變量 indicator variable 在變量 mfgrp 之前加上 i. 等同於告訴計算機程序說，這個 mfgrp 變量應噶被編碼成爲指示變量或者叫啞變量 (dummy)。 . logit died i.mfgrp Iteration 0: log likelihood = -590.21364 Iteration 1: log likelihood = -586.93331 Iteration 2: log likelihood = -586.86511 Iteration 3: log likelihood = -586.86507 Logistic regression Number of obs = 4,205 LR chi2(3) = 6.70 Prob &gt; chi2 = 0.0822 Log likelihood = -586.86507 Pseudo R2 = 0.0057 ------------------------------------------------------------------------------ died | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- mfgrp | &lt;10 | .5263863 .228075 2.31 0.021 .0793676 .973405 10-49 | .3753803 .2580207 1.45 0.146 -.130331 .8810917 50+ | .7171561 .389307 1.84 0.065 -.0458716 1.480184 | _cons | -3.78262 .1877968 -20.14 0.000 -4.150695 -3.414545 ------------------------------------------------------------------------------ 你可以查看這些計算機自動產生的啞變量： . list mfgrp i.mfgrp in 1/25 +--------------------------------------------+ | 0. 1. 2. 3.| | mfgrp mfgrp mfgrp mfgrp mfgrp | |--------------------------------------------| 1. | Uninfected 1 0 0 0 | 2. | &lt;10 0 1 0 0 | 3. | &lt;10 0 1 0 0 | 4. | 10-49 0 0 1 0 | 5. | &lt;10 0 1 0 0 | |--------------------------------------------| 6. | . . . . . | 7. | Uninfected 1 0 0 0 | 8. | . . . . . | 9. | &lt;10 0 1 0 0 | 10. | &lt;10 0 1 0 0 | |--------------------------------------------| 11. | . . . . . | 12. | &lt;10 0 1 0 0 | 13. | &lt;10 0 1 0 0 | 14. | Uninfected 1 0 0 0 | 15. | &lt;10 0 1 0 0 | |--------------------------------------------| 16. | . . . . . | 17. | 10-49 0 0 1 0 | 18. | Uninfected 1 0 0 0 | 19. | 10-49 0 0 1 0 | 20. | Uninfected 1 0 0 0 | |--------------------------------------------| 21. | 10-49 0 0 1 0 | 22. | 50+ 0 0 0 1 | 23. | . . . . . | 24. | &lt;10 0 1 0 0 | 25. | Uninfected 1 0 0 0 | +--------------------------------------------+ 自動產生的啞變量的同時，計算機還自動加上的標籤。 120.8 Q10 計算比值比 . logistic died i.mfgrp, base Logistic regression Number of obs = 4,205 LR chi2(3) = 6.70 Prob &gt; chi2 = 0.0822 Log likelihood = -586.86507 Pseudo R2 = 0.0057 ------------------------------------------------------------------------------ died | Odds Ratio Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- mfgrp | Uninfected | 1 (base) &lt;10 | 1.692804 .3860862 2.31 0.021 1.082602 2.646942 10-49 | 1.455545 .3755608 1.45 0.146 .8778048 2.413533 50+ | 2.048599 .7975339 1.84 0.065 .9551646 4.393753 | _cons | .022763 .0042748 -20.14 0.000 .0157535 .0328914 ------------------------------------------------------------------------------ Note: _cons estimates baseline odds. 在命令行最後添加 , base 選項的話，會在計算結果中提示我們哪個組是基線組 (baseline group)，便於查看結果。 OR = 1.69 表示感染程度爲 &lt;10 load/mg 的人死亡的比值和基線組（未感染）相比的比值。 OR = 1.46 表示感染程度爲 10-49 load/mg 的人的死亡的比值和基線組（未感染）相比的比值。 OR = 2.05 表示感染程度爲 50+ load/mg 的人的死亡的比值和基線組（未感染）相比的比值。 一共有三個 Wald 檢驗，和對應的 P 值。他們檢驗的零假設是每一個感染組和未感染組相比死亡的比值比等於1。 右上角的似然比檢驗 likelihood ratio test 檢驗的是卡方值等於 6.7，自由度是 3 的卡方檢驗，p = 0.0822。這個似然比檢驗的是，同時評價四個關於絲蟲寄生蟲感染程度的啞變量 mfgrp，和結果變量死亡 died 之間的關係。This tests the association between the variable mfgrp and the outcome, death, by simultaneously testing all three parameters in the model. 120.9 Q11 簡單陳述上述分析的結果 數據分析的結果表明，絲蟲寄生蟲感染程度和死亡之間的相關性比較不明顯，證據強度爲弱 (p = 0.08)。在未被感染的人羣中，死亡率是 2.2%，確實比其他組死亡率略低。和未被感染的人羣相比，感染程度是 &lt;10, 10-49, 50+ load/mg 的組的死亡比值比分別是 1.69 (95% CI: 1.08, 2.64), 1.46 (0.88, 2.41), 2.05 (0.96, 4.39)。 120.10 Q12 似然比檢驗用於模型比較 爲了調整正確的比較模型姿勢，我們需要使用相同的人數在兩個模型中，這裏我們打算比較的兩個模型一個是不含有絲蟲感染變量 mfgrp 的模型 (L0)，另一個是含有絲蟲感染變量的模型 (L1)。那麼，我們需要先修改 L0 的人數，再進行二者的比較。 . logistic died if mfgrp!=. . estimates store A . logistic died i.mfgrp . estimates store B . lrtest B A Likelihood-ratio test LR chi2(3) = 6.70 (Assumption: A nested in B) Prob &gt; chi2 = 0.0822 假如你忘記了一開始調整分析的人數的步驟，直接使用似然比檢驗比較兩個模型的話，電腦會因爲人數不同而報錯： . lrtest B A observations differ: 4205 vs. 4298 120.11 Q13 分析年齡組和死亡之間的關係 先在模型中只放年齡組一個變量 . logistic died i.agegrp, base Logistic regression Number of obs = 4,298 LR chi2(3) = 110.78 Prob &gt; chi2 = 0.0000 Log likelihood = -551.49583 Pseudo R2 = 0.0913 ------------------------------------------------------------------------------ died | Odds Ratio Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- agegrp | 15-34 | 1 (base) 35-54 | 2.578425 .6004948 4.07 0.000 1.63349 4.069983 55-64 | 6.933532 1.895136 7.08 0.000 4.057854 11.84712 65+ | 14.80207 3.919374 10.18 0.000 8.809203 24.87186 | _cons | .0133448 .0024127 -23.88 0.000 .009363 .01902 ------------------------------------------------------------------------------ Note: _cons estimates baseline odds. 只有年齡做唯一的解釋變量時，我們發現年齡和死亡呈強烈的正相關。 再往模型裏增加一個變量 (視覺損傷) . logistic died i.vimp i.agegrp, base Logistic regression Number of obs = 4,298 LR chi2(4) = 122.05 Prob &gt; chi2 = 0.0000 Log likelihood = -545.8609 Pseudo R2 = 0.1006 ------------------------------------------------------------------------------------ died | Odds Ratio Std. Err. z P&gt;|z| [95% Conf. Interval] -------------------+---------------------------------------------------------------- vimp | Normal | 1 (base) Visually impaired | 2.202266 .5019659 3.46 0.001 1.408816 3.442592 | agegrp | 15-34 | 1 (base) 35-54 | 2.354987 .5548487 3.64 0.000 1.484023 3.737116 55-64 | 5.415484 1.556832 5.88 0.000 3.082732 9.513469 65+ | 9.901309 2.932372 7.74 0.000 5.54116 17.69231 | _cons | .0131857 .0023851 -23.93 0.000 .0092498 .0187962 ------------------------------------------------------------------------------------ Note: _cons estimates baseline odds. 我們發現，之前獲得的視覺歲上和死亡之間強烈正相關的比值比 5.57 在調整了年齡之後縮水到了 2.20。 120.12 分析要點 在實施邏輯回歸模型的計算之前，我們需要先對解釋變量和結果變量進行列表計算等初步的瞭解。 邏輯回歸模型本身在計算的時候是使用對數比值 log-odds，然後通過數學轉換獲得我們需要的比值比 OR。 每次模型運行時會對每一個變量進行 Wald 檢驗，它檢驗的都是 logOR/SE 然後和標準正（常）態分佈做比較他們是否等於零。 似然比檢驗法比較模型時，實際上比較的是兩個模型之間的對數似然 log-likelihood。它的零假設是“目標變量和結果變量之間無關 no association between the variable of interest and the outcome”。 "],["邏輯回歸模型2---多於一個預測變量的模型-logistic-regression-2---models-with-more-than-one-variable.html", "第 121 章 邏輯回歸模型2 - 多於一個預測變量的模型 Logistic regression 2 - models with more than one variable", " 第 121 章 邏輯回歸模型2 - 多於一個預測變量的模型 Logistic regression 2 - models with more than one variable "],["references.html", "参考文献 以下是我的 R 進程信息", " 参考文献 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
